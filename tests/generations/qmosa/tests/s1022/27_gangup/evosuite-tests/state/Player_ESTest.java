/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:14:09 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-1569), "module.ModuleBrowserDialog$ModuleFilter", 22273);
      player0.setMoney((-1569));
      long long0 = 1L;
      player0.setDead(1L);
      player0.gangStrength();
      player0.getMoney();
      player0.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      pipedInputStream0.mark(1);
      int int0 = (-1664);
      Party party0 = new Party(4103);
      player0.prev = party0;
      try { 
        dataInputStream0.readUTF();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPL#k@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0, "QyyZ$H@;4EQGm+X6", (String) null, 1, 0);
      int int0 = player0.getStrength();
      assertEquals(1, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-94);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-14), ")GO9V.D(S", "l-oPfL#k@", 4, 0);
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals(4, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertEquals(")GO9V.D(S", player0.getIP());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.106858647202989
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.gangStrength();
      player0.gangStrength();
      player0.setDead();
      player0.setX(0.0F);
      Player player1 = new Player();
      player1.unpack(byteArray0);
      player1.setY((-2017.15F));
      player1.id = 1;
      player1.gangStrength();
      player1.getTimeOfDeath();
      player1.pack();
      player1.getY();
      int int0 = player1.gangStrength();
      assertEquals((-2017.15F), player1.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.1F);
      player0.getSubparty();
      player0.setJoinOK(player0, false);
      Party party0 = player0.next;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      player0.setZ(0.0F);
      player0.setX(0.2F);
      player0.isJoinOK(player0, false);
      MockFile mockFile0 = new MockFile((String) null, "");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("module.ModuleBrowserDialog$ModuleFilter");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0293980059486403
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setX((-1));
      Player player1 = new Player((-1), "", "", (short)4919);
      player1.getSubparty();
      player1.setJoinOK(player0, false);
      Player player2 = new Player();
      Party party0 = player1.next;
      player2.setZ((short)4919);
      player0.setX(0.0F);
      player0.isJoinOK(player1, false);
      Player player3 = new Player(1114, "", (short)4919);
      player3.getX();
      player0.getX();
      player1.gangStrength();
      player3.getY();
      System.setCurrentTimeMillis(1392409296320L);
      Player player4 = new Player();
      player4.getX();
      MockFile mockFile0 = new MockFile("", "0.0.0.0");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setX((-1));
      Player player1 = new Player();
      Party party0 = player1.next;
      player1.setZ(236.2512F);
      assertEquals(236.2512F, player1.getZ(), 0.01F);
      
      player0.getX();
      player0.gangStrength();
      player0.getY();
      System.setCurrentTimeMillis(643L);
      Player player2 = new Player(1);
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(16079, (String) null, 0);
      player0.head = (Party) player1;
      assertEquals(0, player1.getPictureId());
      
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getMoney();
      assertEquals(float1, float0, 0.01F);
      assertEquals(0.0F, float1, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      
      int int1 = player0.type();
      assertTrue(player0.isConnected());
      assertEquals(5, int1);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.47201491403373
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.getY();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.gangStrength();
      player0.setDead();
      Player player1 = new Player(0, (String) null, "m<lWRH{tpHR[jYXE~Xj", 1657, (-640));
      player0.isJoinOK(player1, true);
      player0.getStrength();
      Player player2 = new Player((short)4919, (String) null, "};gN$){:.2A_9$[\"Bc ", 1657, 1657);
      player2.getPictureId();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      Party party0 = player2.head;
      Player player3 = new Player(1, "QVxjs:=@N9", "};gN$){:.2A_9$[\"Bc ", 1, (-890));
      player3.isDead();
      player1.getZ();
      player1.getTimeOfDeath();
      player0.pack();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setZ(0.0F);
      Player player1 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 3);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 4919);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player1.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      
      player0.setY(1.0F);
      player0.getX();
      player0.type();
      Player player2 = new Player(5, (String) null, (String) null, (short)4919);
      player2.getIP();
      player1.getTimeOfDeath();
      player0.pack();
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-125);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"/NB6|kx_171u1,I7+<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"/NB6|kx_171u1,I7+<");
      System.setCurrentTimeMillis((byte) (-125));
      Player player0 = new Player(5, "", 1778);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player();
      player0.getY();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.gangStrength();
      Party party0 = player0.head;
      player0.isDead();
      player0.getZ();
      player0.getTimeOfDeath();
      player0.pack();
      assertEquals((-4601L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.1441129584489613
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((-4601), (String) null, (short)4919);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.setDead();
      player0.isJoinOK(player1, true);
      int int0 = Packable.ACTION;
      player0.isJoinOK(player0, true);
      player1.getName();
      Player player2 = new Player();
      player1.getX();
      player0.isDead();
      player0.getZ();
      Player player3 = new Player();
      player0.isJoinOK(player3, false);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      System.setCurrentTimeMillis(541L);
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = Packable.TEXT_MESSAGE;
      Player player0 = new Player((-4601), "", (-4601));
      player0.getName();
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(0.2F);
      Player player1 = new Player(4, (String) null, "", (short)4919);
      player1.getY();
      player0.pack();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-2606), "", "", 1689, 1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player((-256), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "", (-256));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-53);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 2270);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-125);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"/NB6|kx_171u1,I7+<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"/NB6|kx_171u1,I7+<");
      System.setCurrentTimeMillis((byte) (-125));
      Player player0 = new Player(5, "", 1778);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0);
      player0.setDead();
      player0.isDead();
      player0.getX();
      player0.toString();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0, "vo~S{i>WP,vtn#", "6Ow[)XM6n/\"?Th7H", 1530);
      player0.setDead();
      player0.setConnected(true);
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setX((-1));
      Player player1 = new Player((-1), "", "", (short)4919);
      player1.next = (Party) player0;
      player1.next.id = 1114;
      player1.getSubparty();
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.2627848006711537
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.prev = (Party) player1;
      player0.reset(true);
      Player player2 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-1116));
      player2.setZ((short)4919);
      player0.setDead(0L, true);
      player2.reset(true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-36);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)93;
      byteArray0[7] = (byte) (-119);
      byteArray0[8] = (byte)7;
      player1.unpack(byteArray0);
      player0.setJoinOK(player2, true);
      player0.reset(true);
      player2.getSubparty();
      player0.setDead(0L);
      player2.setConnected(false);
      player2.setJoinOK(player0, false);
      player2.getZ();
      player0.setConnected(true);
      player2.setX((-1116));
      boolean boolean0 = player2.isConnected();
      assertEquals((-1116.0F), player2.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919);
      player0.head = (Party) player1;
      player0.setZ(422.88F);
      player0.head = (Party) player1;
      Player player2 = new Player();
      player2.isDead();
      player0.getZ();
      float float0 = Player.TOLERANCE;
      int int0 = player0.type();
      assertEquals(422.88F, player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.334073781369419
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((-4601), (String) null, (short)4919);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.gangStrength();
      player0.setDead();
      player0.isJoinOK(player1, true);
      player0.getStrength();
      int int0 = Packable.ACTION;
      player1.setMoney(0.2F);
      player0.isJoinOK(player1, false);
      player1.getName();
      player0.getSubparty();
      player0.getX();
      player0.getZ();
      player1.isJoinOK(player1, false);
      player1.setZ(0.0F);
      player1.gangStrength();
      player1.getMoney();
      player0.pack();
      player0.gangStrength();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.2F, player1.getMoney(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1280, "", "", (-987), (-987));
      player0.setZ((-779.0F));
      player0.getName();
      player0.getIP();
      assertEquals((-779.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.206255630431021
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-1));
      player0.setX((-1));
      Player player1 = new Player(12, "ngWCz2VCEOIC", "", 12);
      player0.getSubparty();
      player1.setJoinOK(player0, false);
      Player player2 = new Player();
      Party party0 = player1.next;
      player2.setZ(0.1F);
      player1.setX(0.2F);
      player2.isJoinOK(player1, false);
      player0.getX();
      player1.getX();
      player1.gangStrength();
      player2.getY();
      Player player3 = new Player((-2250), "J6|M1Iiw)9", 3);
      player3.getPictureId();
      player1.isJoinOK(player3, false);
      player3.getTimeOfDeath();
      player0.getZ();
      assertEquals((-1.0F), player0.getY(), 0.01F);
      
      player1.gangStrength();
      player3.type();
      player2.isJoinOK(player3, true);
      player2.gangStrength();
      player1.isJoinOK(player2, true);
      int int0 = player2.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0, "", 0);
      Party party0 = new Party();
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.533852530124428
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((-4601), (String) null, (short)4919);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.gangStrength();
      player0.setDead();
      player0.isJoinOK(player1, true);
      player0.getStrength();
      Player player2 = new Player((short)4919, (String) null, "};gN$){:.2A_9$[\"Bc ", 16896, 16896);
      player2.unpack(byteArray0);
      player2.unpack(byteArray0);
      int int0 = Packable.ACTION;
      player2.isJoinOK(player0, true);
      player2.getName();
      Player player3 = new Player();
      player1.getX();
      player0.isDead();
      player0.getZ();
      Player player4 = new Player();
      player0.isJoinOK(player4, false);
      player3.gangStrength();
      player3.getMoney();
      player1.gangStrength();
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.4351234461507145
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player((-4601), (String) null, (short)4919);
      player1.getSubparty();
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.setDead();
      player0.setDead((long) (-4601));
      player0.gangStrength();
      player0.setDead();
      player0.isJoinOK(player1, true);
      player0.getStrength();
      Player player2 = new Player();
      Player player3 = new Player();
      player1.setZ(0.0F);
      Player player4 = new Player((short)4919);
      player4.setX((short)4919);
      Player player5 = new Player(1, (String) null, (String) null, 5, (short)4919);
      int int0 = Packable.ACTION;
      player5.isJoinOK(player1, false);
      player0.getName();
      Player player6 = new Player();
      player3.setY(1.0F);
      player0.getTimeOfDeath();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      int int1 = player5.getStrength();
      assertEquals(4919, int1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.7897645801735327
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(2122);
      Player player1 = new Player(17293, "DPw", 4);
      Player player2 = new Player();
      player2.remove(player0);
      player0.setMoney(0.0F);
      int int0 = Packable.GAME_EVENT;
      player2.remove(player0);
      player1.setZ(0.1F);
      player1.setZ(0.2F);
      Player player3 = new Player();
      player3.getPictureId();
      Player player4 = new Player(16896, "", 1790);
      player0.setY(10.0F);
      assertEquals(10.0F, player0.getY(), 0.01F);
      
      Player player5 = new Player(1790, "0JA=iH$J1SQV\"\"@{", "", 4, (-2094));
      boolean boolean0 = player3.isJoinOK(player5, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iuEEY6P>MJhK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iuEEY6P>MJhK");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iuEEY6P>MJhK");
      Player player0 = new Player(1689, "", "+3wdBV7^HTssvO", (-4539), (-1739));
      System.setCurrentTimeMillis((-4539));
      int int0 = player0.gangStrength();
      assertEquals((-4539), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals((-1739), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-2606), "", "", (-2606), (-2606));
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals((-2606), player0.getPictureId());
      assertEquals((-2606), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(822, "1`J)k}#J>j5&", 1047);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(boolean0);
      assertEquals(1047, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(163, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-2005));
      int int0 = player0.getPictureId();
      assertEquals((-2005), int0);
      
      Player player1 = new Player((-2005));
      assertFalse(player1.isDead());
      assertEquals("Player-2005", player1.getName());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      System.setCurrentTimeMillis(879L);
      System.setCurrentTimeMillis(879L);
      Player player0 = new Player((-1669));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      dataInputStream0.available();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("Player-1669", player0.getName());
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-2606), "", "", 1689, 1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, (short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(1689, player0.getPictureId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-2606), "", "", 1689, 1);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.1F);
      player0.getSubparty();
      player0.setJoinOK(player0, true);
      Party party0 = player0.next;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      player0.setZ(0.0F);
      player0.setX(0.2F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile((String) null, "");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("module.ModuleBrowserDialog$ModuleFilter");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.1F);
      player0.getSubparty();
      Player player1 = new Player((short)4919, "", "", (short)4919, (-1));
      player1.reset(true);
      Party party0 = player1.next;
      player0.setZ(0.0F);
      player0.setX(0.2F);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0.1F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-94);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-14), ")GO9V.D(S", "l-oPfL#k@", 4, 0);
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(4, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(")GO9V.D(S", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getStrength());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = (-179);
      int int1 = 1369;
      Player player0 = new Player((-179), "", 1369);
      Party party0 = player0.boss;
      player0.remove((Party) null);
      player0.setY(1369);
      player0.toString();
      player0.getIP();
      Player player1 = new Player((short)4919, (String) null, "", 1369);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1149);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player();
      player0.add((Party) null);
      player0.next = null;
      player0.boss = null;
      player0.setZ((-971.5191F));
      player0.toString();
      player0.getY();
      player0.setX(3044.2207F);
      assertEquals(3044.2207F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(0, "]6ci'e{.P ", "", 0);
      player0.setDead(47L, false);
      assertEquals(47L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player();
      player0.setConnected(true);
      player0.getName();
      player0.setZ((-993.18F));
      player0.getZ();
      player0.isConnected();
      player0.setDead((-577L));
      player0.setDead((-577L), true);
      Party party0 = new Party((short)4919);
      player0.boss = party0;
      player0.getName();
      player0.setZ((-577L));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-48);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals((-577L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-23932));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte) (-47);
      byteArray0[3] = (byte) (-112);
      byteArray0[4] = (byte) (-61);
      byteArray0[5] = (byte) (-10);
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)55;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1, ".*[.]class$", "state.Player$JoinInfo", 0, 947);
      player0.getName();
      assertEquals(947, player0.getStrength());
      assertEquals(".*[.]class$", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.1F);
      player0.getSubparty();
      player0.setJoinOK(player0, false);
      Player player1 = new Player((-1), "", 1114);
      Party party0 = player1.next;
      player0.isConnected();
      player0.setZ(0.0F);
      player0.setX(0.2F);
      MockFile mockFile0 = new MockFile((String) null, "");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("module.ModuleBrowserDialog$ModuleFilter");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile1, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
          FileSystemHandling.createFolder((EvoSuiteFile) null);
          FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
          FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
          FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
          FileSystemHandling.createFolder((EvoSuiteFile) null);
          FileSystemHandling.createFolder((EvoSuiteFile) null);
          FileSystemHandling.shouldAllThrowIOExceptions();
          FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
          FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
          FileSystemHandling.createFolder((EvoSuiteFile) null);
          FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
          byte[] byteArray0 = new byte[0];
          FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
          int int0 = 1689;
          Player player0 = new Player((-2606), "", "", 1689, 1);
          player0.unpack(byteArray0);
          PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileOutputStream mockFileOutputStream0 = null;
          try {
            mockFileOutputStream0 = new MockFileOutputStream(fileDescriptor0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"writeFileDescriptor\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:954)
             // java.io.FileOutputStream.<init>(FileOutputStream.java:245)
             // org.evosuite.runtime.mock.java.io.MockFileOutputStream.<init>(MockFileOutputStream.java:114)
             // sun.reflect.GeneratedConstructorAccessor92.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2090394390658616
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(0.0F);
      player0.setX((-1));
      Player player1 = new Player((-1), "", "", (short)4919);
      player1.next = (Party) player0;
      player1.next.id = 1114;
      player1.getSubparty();
      player0.head = player1.next;
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      Party party0 = player2.next;
      player1.next.boss = null;
      player1.setZ(0.0F);
      player1.setX(236.2512F);
      player0.isJoinOK(player1, true);
      player2.isJoinOK(player1, true);
      Player player3 = new Player((short)4919);
      player3.getName();
      Player player4 = new Player();
      player1.setMoney((short)4919);
      player2.setY(1114);
      player0.getTimeOfDeath();
      player2.getZ();
      player0.getX();
      assertEquals((-1.0F), player0.getX(), 0.01F);
      
      player3.getY();
      String string0 = player4.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=uM!Lh.6+Pv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l-oPfL#k@");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=uM!Lh.6+Pv");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(4919, "xRgRz", "", 4, 613);
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(613, int0);
      assertEquals(4, player0.getPictureId());
      assertEquals("xRgRz", player0.getIP());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.add(party0);
      player0.boss = party0;
      Player player1 = new Player(5, "", "module.ModuleBrowserDialog$ModuleFilter", 5, 5);
      party0.prev = (Party) player1;
      player0.setX((-2625.627F));
      player0.setDead(2050L);
      player0.getName();
      party0.id = 784;
      player0.setY(2050L);
      player0.getY();
      player0.type();
      float float0 = player0.getY();
      assertEquals(2050L, player0.getTimeOfDeath());
      assertEquals(2050.0F, float0, 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-200), (String) null, "module.ModuleBrowserDialog$ModuleFilter", 4919);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(1, "\"I)y+osa3@{m.", "$)U_NlPz", (-2736), (-1879));
      player0.setConnected(true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1879), player0.getStrength());
      assertEquals((-2736), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("\"I)y+osa3@{m.", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(0);
      player0.reset(false);
      player0.reset(false);
      float float0 = Player.MOVE_DISTANCE;
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player((-1088), (String) null, (String) null, (-1088));
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-1088), player0.getPictureId());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)25;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)50;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
  }
}
