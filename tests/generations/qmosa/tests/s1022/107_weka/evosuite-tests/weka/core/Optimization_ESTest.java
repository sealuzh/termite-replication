/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 03:47:34 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0369008852318826
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(0);
      double[][] doubleArray0 = new double[2][2];
      double[] doubleArray1 = new double[4];
      optimization_DynamicIntArray0.addElement(0);
      doubleArray1[3] = (-468.59162144);
      optimization_DynamicIntArray0.addElement(1371);
      doubleArray1[2] = (double) 0;
      optimization_DynamicIntArray0.removeElementAt(0);
      doubleArray1[3] = (double) 0;
      doubleArray0[0] = doubleArray1;
      weka.core.matrix.Matrix.random(0, 0);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(41, 41);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 41;
      boolean[] booleanArray0 = new boolean[2];
      char[] charArray0 = new char[1];
      charArray0[0] = 'c';
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.lookupTag(linkedList0, set0);
      Object object0 = new Object();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add(locale0);
      Locale.lookup(linkedList1, linkedList2);
      double[] doubleArray1 = new double[0];
      Optimization.solveTriangle(matrix0, doubleArray1, false, booleanArray0);
      Random.setNextRandom(41);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[][] doubleArray0 = new double[6][3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 858, (-999));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      boolean[] booleanArray0 = new boolean[6];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      booleanArray0[4] = true;
      booleanArray0[1] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      matrix0.normF();
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) (byte)83;
      Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
      Random.setNextRandom((-230));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 41;
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(41, 41);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.lookupTag(linkedList0, (Collection<String>) null);
      Object object0 = new Object();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add(locale0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList3, linkedList2);
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = false;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, (double[]) null, true, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(41, 41);
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      StringWriter stringWriter0 = new StringWriter(940);
      stringWriter0.close();
      stringWriter0.write(2274);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      stringWriter0.flush();
      stringWriter0.close();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter0);
      mockPrintWriter1.print(3835);
      PrintWriter printWriter0 = mockPrintWriter1.append('N');
      char[] charArray0 = new char[3];
      mockPrintWriter1.print('a');
      printWriter0.println((Object) "");
      mockPrintWriter1.print("");
      mockPrintWriter1.write(2274);
      printWriter0.write(charArray0);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 940;
      doubleArray0[1] = (double) 'N';
      doubleArray0[2] = (double) 940;
      doubleArray0[3] = (double) 3835;
      doubleArray0[4] = 9.223372036854776E18;
      doubleArray0[5] = (double) 940;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(41, 41);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 41;
      doubleArray0[1] = (double) 41;
      doubleArray0[2] = (double) 41;
      matrix0.transpose();
      double[][] doubleArray1 = new double[2][6];
      weka.core.matrix.Matrix matrix1 = new weka.core.matrix.Matrix(doubleArray1, (-1), (-1));
      boolean[] booleanArray0 = new boolean[8];
      matrix0.setMatrix(1429, 140, 4, 1429, matrix1);
      booleanArray0[2] = true;
      booleanArray0[3] = true;
      booleanArray0[4] = true;
      booleanArray0[5] = true;
      booleanArray0[6] = true;
      double[] doubleArray2 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, 0.0, 0.0, 0.0, 0.0, 0.0, Double.NaN}, doubleArray2, 0.01);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(41, 41);
      double[] doubleArray0 = new double[1];
      boolean[] booleanArray0 = new boolean[1];
      StringWriter stringWriter0 = new StringWriter(41);
      stringWriter0.close();
      stringWriter0.write(2274);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      stringWriter0.flush();
      stringWriter0.close();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter0);
      mockPrintWriter0.checkError();
      mockPrintWriter1.print(3835);
      PrintWriter printWriter0 = mockPrintWriter1.append('N');
      char[] charArray0 = new char[3];
      printWriter0.println((Object) "");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stringWriter0;
      objectArray0[1] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) mockPrintWriter1;
      PrintWriter printWriter1 = mockPrintWriter0.format("", objectArray0);
      stringWriter0.write("");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter1, false);
      Locale locale0 = Locale.CHINESE;
      mockPrintWriter0.format(locale0, "^Rl)", objectArray0);
      mockPrintWriter2.print("Q>'y+3JHuknj^XGy%:");
      mockPrintWriter0.printf("", objectArray0);
      printWriter1.write(3835);
      StringWriter stringWriter1 = new StringWriter(41);
      printWriter0.write(charArray0);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertEquals(1, doubleArray1.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(4332);
      optimization_DynamicIntArray0.addElement(2);
      assertEquals(1, optimization_DynamicIntArray0.size());
      
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.elementAt(3798);
      assertEquals(0, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(41, 41);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-0.5);
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      StringWriter stringWriter0 = new StringWriter(940);
      stringWriter0.close();
      stringWriter0.write(2274);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      stringWriter0.flush();
      stringWriter0.close();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter0);
      mockPrintWriter1.print(3835);
      PrintWriter printWriter0 = mockPrintWriter1.append('N');
      char[] charArray0 = new char[3];
      mockPrintWriter0.println((Object) stringWriter0);
      mockPrintWriter0.print("");
      mockPrintWriter0.write(1344);
      StringWriter stringWriter1 = new StringWriter(516);
      printWriter0.write(charArray0);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertArrayEquals(new double[] {0.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(4332);
      optimization_DynamicIntArray0.addElement(4332);
      optimization_DynamicIntArray0.addElement(4332);
      optimization_DynamicIntArray0.removeAllElements();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.elementAt(4332);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4332
         //
         verifyException("weka.core.Optimization$DynamicIntArray", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2350475846462445
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(1);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(1);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.removeAllElements();
      Optimization.DynamicIntArray optimization_DynamicIntArray1 = (Optimization.DynamicIntArray)optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray1.addElement(0);
      optimization_DynamicIntArray0.addElement(26);
      optimization_DynamicIntArray1.removeAllElements();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.copy();
      Random.setNextRandom(26);
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt((-2401));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeElementAt(0);
      int int0 = 200;
      StringReader stringReader0 = new StringReader("");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 200);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      int int1 = 18;
      BufferedReader bufferedReader2 = new BufferedReader(bufferedReader1, 18);
      BufferedReader bufferedReader3 = new BufferedReader(bufferedReader2);
      BufferedReader bufferedReader4 = new BufferedReader(bufferedReader0);
      BufferedReader bufferedReader5 = null;
      try {
        bufferedReader5 = new BufferedReader(bufferedReader3, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(0);
      double[] doubleArray0 = new double[4];
      doubleArray0[1] = (-468.59162144);
      doubleArray0[2] = (double) 0;
      optimization_DynamicIntArray0.removeElementAt(0);
      doubleArray0[3] = (double) 0;
      int int0 = 200;
      StringReader stringReader0 = new StringReader("");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0, 200);
      BufferedReader bufferedReader1 = new BufferedReader(bufferedReader0);
      int int1 = 18;
      BufferedReader bufferedReader2 = new BufferedReader(bufferedReader1, 18);
      BufferedReader bufferedReader3 = new BufferedReader(bufferedReader2);
      BufferedReader bufferedReader4 = new BufferedReader(bufferedReader0);
      BufferedReader bufferedReader5 = null;
      try {
        bufferedReader5 = new BufferedReader(bufferedReader3, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(1508);
      int int0 = optimization_DynamicIntArray0.size();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(41, 41);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-0.5);
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      StringWriter stringWriter0 = new StringWriter(940);
      stringWriter0.close();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      stringWriter0.flush();
      stringWriter0.close();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter0);
      mockPrintWriter1.print(1121);
      PrintWriter printWriter0 = mockPrintWriter1.append('N');
      char[] charArray0 = new char[3];
      printWriter0.println((Object) "");
      mockPrintWriter1.print("- V\n");
      mockPrintWriter1.write(2274);
      StringWriter stringWriter1 = new StringWriter(41);
      printWriter0.write(charArray0);
      Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(228);
      optimization_DynamicIntArray0.addElement((-3216));
      assertEquals(1, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      double[][] doubleArray0 = new double[5][2];
      double[] doubleArray1 = new double[4];
      doubleArray1[1] = (-468.59162144);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.lookupTag(linkedList1, (Collection<String>) null);
      Object object0 = new Object();
      Locale locale0 = Locale.ITALY;
      locale0.stripExtensions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      linkedList4.add(locale0);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      linkedList5.add(locale0);
      Locale.lookup(linkedList2, linkedList4);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray1, true, (boolean[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double[][] doubleArray0 = new double[6][3];
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(doubleArray0, 862, (-999));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[sQbG;@-~~(h)b)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[sQbG;@-~~(h)b)");
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[0] = true;
      booleanArray0[1] = false;
      booleanArray0[2] = false;
      booleanArray0[3] = false;
      booleanArray0[4] = false;
      booleanArray0[5] = true;
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = (double) (-999);
      doubleArray1[1] = (double) (-999);
      Optimization.solveTriangle(matrix0, doubleArray1, true, booleanArray0);
      Random.setNextRandom((-999));
  }
}
