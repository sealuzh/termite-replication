/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 04:52:32 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.ContainerListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.AffineTransformOp;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.Proxy;
import java.text.AttributedCharacterIterator;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.Action;
import javax.swing.DebugGraphics;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.TextAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2058101920165822
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getListDataListeners();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stack0.trimToSize();
      Boolean.valueOf(false);
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 9999;
      stack0.removeElement((Object) null);
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      visualListModel0.getElements();
      visualListModel0.removeElements(0, 0, false);
      visualListModel1.addAllElements(9999, (Collection<VisualPageListItem>) arrayDeque0);
      visualListModel1.data = null;
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      int int0 = (-1959);
      intArray0[0] = (-1959);
      intArray0[1] = 14;
      int int1 = 91;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "B0;hXksfEC*N?ZmYv<", (ParameterBlock) null, (RenderingHints) null, false);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"B0;hXksfEC*N?ZmYv<\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,@xg?1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      vector0.trimToSize();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "KWX!,@xg?1");
      Integer.divideUnsigned((-382), (-382));
      linkedList0.listIterator();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[7];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.SOCKS;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.SOCKS;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.SOCKS;
      proxy_TypeArray0[4] = proxy_Type4;
      Proxy.Type proxy_Type5 = Proxy.Type.HTTP;
      proxy_TypeArray0[5] = proxy_Type5;
      Proxy.Type proxy_Type6 = Proxy.Type.DIRECT;
      proxy_TypeArray0[6] = proxy_Type6;
      linkedList1.toArray(proxy_TypeArray0);
      linkedList1.add(integer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      vector0.setSize(1775);
      visualListModel0.getElements();
      visualListModel0.subList((int) (byte)67, 549, false);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6492377541392287
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      predicate3.negate();
      predicate0.and(predicate3);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      predicate5.test(predicate3);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      predicate5.test(integer0);
      vector0.removeIf(predicate5);
      vector0.setSize(49986);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndex(18);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 335;
      boolean boolean0 = false;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", (ParameterBlock) null, (RenderingHints) null, true);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"renderableCollection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Object[] objectArray0 = new Object[7];
      objectArray0[1] = (Object) sunHints_Key0;
      objectArray0[3] = (Object) sunHints_Key1;
      objectArray0[4] = (Object) sunHints_Key1;
      objectArray0[1] = (Object) sunHints_Key0;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.setSize(1779);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1739, 1779, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "d$xd{uy@ZTW2E$gD");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = new Integer((-1378));
      integerArray0[2] = integer0;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong((int) integerArray0[3]);
      Integer.toUnsignedString(1807);
      integerArray0[4] = integer4;
      Integer.sum((int) integerArray0[1], 15);
      Integer.sum((-3822), (-1500));
      Integer.compareUnsigned((-594), 110);
      Integer.toUnsignedString(15);
      Integer.toUnsignedString(3683);
      vector0.setSize(4627);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      intArray0[0] = (-1378);
      intArray0[1] = (int) integerArray0[0];
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(4627, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.setSize(1779);
      visualListModel0.moveUpIndex(1779);
      VisualListModel visualListModel1 = new VisualListModel();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      assertFalse(pipedInputStream1.equals((Object)pipedInputStream0));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7652906599749274
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getListDataListeners();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stack0.trimToSize();
      Boolean.valueOf(false);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel1.getElements();
      visualListModel0.removeElements(0, 0, false);
      visualListModel1.addAllElements(9999, (Collection<VisualPageListItem>) arrayDeque0);
      stack0.add((VisualPageListItem) null);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.getValidElements();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      int[] intArray0 = new int[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      linkedList0.add(integer0);
      ListIterator<Integer> listIterator0 = linkedList0.listIterator();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = new Integer(1874);
      linkedList0.push(integer2);
      Integer.divideUnsigned(680, (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Predicate.isEqual((Object) listIterator0);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[1] = (byte)124;
      byteArray0[4] = (byte)47;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "B0;hXksfEC*N?ZmYv<");
      byteArray0[5] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      vector0.setSize(1775);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      // Undeclared exception!
      try { 
        renderingHints0.put(sunHints_Key1, defaultEditorKit_PasteAction1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // javax.swing.text.DefaultEditorKit$PasteAction@433332e3 incompatible with Global rendering quality key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      intArray0[1] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      Object[][] objectArray0 = new Object[1][9];
      Object[] objectArray1 = new Object[2];
      objectArray1[0] = (Object) 1033;
      objectArray1[1] = (Object) 0;
      objectArray0[0] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1033) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.clearData();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Finished configuring.");
      visualListModel0.addElement((VisualPageListItem) null);
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[1];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(proxy_TypeArray0);
      jComboBox0.repaint((-37), 91, (-37), 91);
      jComboBox0.enableInputMethods(false);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndex((-1996));
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction2.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteAction2.isEnabled();
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.ensureCapacity(4648);
      vector0.setSize(1);
      int[] intArray0 = new int[1];
      intArray0[0] = 84;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 84
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Object[][] objectArray0 = new Object[1][8];
      Object[] objectArray1 = new Object[7];
      objectArray1[1] = (Object) sunHints_Key0;
      objectArray1[3] = (Object) sunHints_Key1;
      objectArray1[4] = (Object) sunHints_Key1;
      objectArray1[1] = (Object) sunHints_Key0;
      objectArray0[0] = objectArray1;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1739, (Collection<VisualPageListItem>) vector0);
      vector0.setSize(1779);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key2, sunHints_Key1);
      renderingHints0.add(renderingHints1);
      RescaleOp rescaleOp0 = new RescaleOp((-1340.47F), 1739, renderingHints1);
      visualListModel0.removeElementAt(1739, true);
      assertEquals(1778, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[8];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.moveDownIndex(0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[17];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      predicate3.test(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      predicate4.or(predicate2);
      predicate1.test(predicate0);
      predicate3.test((Object) null);
      predicate0.and(predicate2);
      predicate1.or(predicate0);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate5.and(predicate2);
      Predicate<Object> predicate6 = predicate0.negate();
      Predicate<Object> predicate7 = predicate5.negate();
      predicate0.negate();
      predicate7.test(predicate6);
      predicate7.negate();
      Predicate.isEqual((Object) predicate6);
      vector0.setSize(49986);
      visualListModel0.reverseElements(intArray0);
      assertEquals(49986, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6550675376280366
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getListDataListeners();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stack0.trimToSize();
      Boolean.valueOf(false);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(false);
      VisualListModel visualListModel1 = new VisualListModel();
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel1.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction1 = new DefaultEditorKit.BeepAction();
      defaultEditorKit_PasteAction3.isEnabled();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.ensureCapacity(4648);
      vector0.setSize(1814);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 84;
      intArray0[2] = 1099;
      intArray0[3] = 1814;
      intArray0[4] = 84;
      intArray0[5] = 1814;
      intArray0[6] = 84;
      intArray0[7] = 84;
      intArray0[8] = 84;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      predicate3.test(predicate0);
      predicate2.or(predicate1);
      predicate1.test(predicate0);
      predicate3.test((Object) null);
      predicate0.and(predicate2);
      predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      predicate4.and(predicate2);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate4.negate();
      predicate0.negate();
      predicate6.test(predicate5);
      predicate6.negate();
      Predicate.isEqual((Object) predicate5);
      vector0.setSize(49986);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(49986, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.reverseElements(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      VisualListModel visualListModel1 = new VisualListModel();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)32;
      byteArray0[5] = (byte)58;
      byteArray0[6] = (byte)82;
      byteArray0[7] = (byte)25;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      predicate3.negate();
      predicate3.test(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate1);
      predicate1.test(predicate0);
      predicate3.negate();
      predicate4.and(predicate5);
      predicate2.test(predicate5);
      predicate4.or(predicate0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4837467836283142
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 10049);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      boolean boolean1 = new Boolean(true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getSize();
      int[] intArray0 = new int[6];
      intArray0[0] = 10049;
      intArray0[1] = 1026;
      intArray0[2] = 0;
      intArray0[3] = 1026;
      intArray0[4] = 1026;
      intArray0[5] = 10049;
      vector0.add((VisualPageListItem) null);
      visualListModel0.removeElements(0, 0, true);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      vector0.add(visualPageListItemArray0[1]);
      vector0.add(visualPageListItemArray0[2]);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.updateElementAt(13, (VisualPageListItem) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-44);
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      vector0.setSize(1316);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction4;
      defaultEditorKit_PasteActionArray0[5] = defaultEditorKit_PasteAction2;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      intArray0[1] = 1033;
      intArray0[2] = 1033;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements(1033, (Collection<VisualPageListItem>) vector0);
      visualListModel0.addElement((VisualPageListItem) null);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("8Yn!:=HdrQ7gpL", (Integer) 1033);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer2;
      integerArray0[1] = integer3;
      integerArray0[2] = integer1;
      integerArray0[3] = (Integer) 1033;
      integerArray0[4] = integer4;
      integerArray0[5] = integer5;
      integerArray0[6] = (Integer) 1033;
      integerArray0[7] = (Integer) 1033;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.clearData();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      predicate3.test(predicate0);
      predicate1.test(predicate0);
      predicate3.test((Object) null);
      Predicate.isEqual((Object) predicate0);
      predicate0.and(predicate2);
      predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      predicate4.and(predicate2);
      predicate0.negate();
      predicate4.negate();
      predicate0.negate();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)124;
      byteArray0[2] = (byte)124;
      byteArray0[3] = (byte)124;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-92);
      byteArray0[6] = (byte) (-92);
      byteArray0[7] = (byte) (-92);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      vector0.setSize(1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction3;
      defaultEditorKit_BeepAction0.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction5.putValue("", defaultEditorKit_PasteAction3);
      defaultEditorKit_PasteAction5.getKeys();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction5;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction6 = new DefaultEditorKit.PasteAction();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      Integer.remainderUnsigned(811, (-3875));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.setSize(52);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      System.setCurrentTimeMillis(1424L);
      int[] intArray0 = new int[2];
      intArray0[0] = 699;
      intArray0[1] = 811;
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 812
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      Action[] actionArray0 = new Action[4];
      actionArray0[0] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.ensureCapacity(40000);
      vector0.setSize(296);
      int[] intArray0 = new int[6];
      intArray0[0] = 1026;
      intArray0[1] = 40000;
      intArray0[2] = 1026;
      intArray0[3] = 1026;
      intArray0[4] = 40000;
      intArray0[5] = 296;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1026
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 180;
      intArray0[1] = (int) (byte)46;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 180
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,@xg?1");
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.setSize(4627);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseMotionListener0, mouseMotionListener0);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowListener0, windowListener0);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      defaultCaret1.setLocation((-3036), 3527);
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret1, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseListener0, mouseListener0);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData(vector0);
      assertEquals(0, vector0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      boolean boolean0 = new Boolean(true);
      visualListModel0.moveDownIndexes(intArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      // Undeclared exception!
      try { 
        renderingHints0.put(sunHints_Key1, defaultEditorKit_PasteAction1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // javax.swing.text.DefaultEditorKit$PasteAction@5eff1861 incompatible with Global rendering quality key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "d$xd{uy@ZTW2E$gD");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = new Integer(2);
      integerArray0[2] = integer0;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong((int) integerArray0[3]);
      Integer.toUnsignedString(1807);
      integerArray0[4] = integer4;
      Integer.sum((int) integerArray0[1], 15);
      Integer.sum((-3822), (-1500));
      Integer.compareUnsigned((-594), 110);
      Integer.toUnsignedString(15);
      Integer.toUnsignedString(3683);
      vector0.setSize(4627);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      visualListModel0.prependAllElements(vector0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      predicate3.test(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      predicate1.test(predicate0);
      predicate3.test((Object) null);
      predicate0.and(predicate2);
      predicate0.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate2);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate5.negate();
      predicate0.negate();
      predicate8.or(predicate0);
      predicate7.negate();
      predicate8.test(predicate7);
      predicate8.negate();
      Predicate.isEqual((Object) predicate7);
      vector0.setSize(927);
      int[] intArray0 = new int[9];
      intArray0[0] = 49986;
      intArray0[1] = 49986;
      intArray0[2] = 49986;
      intArray0[3] = 49986;
      intArray0[4] = 49986;
      intArray0[5] = 49986;
      intArray0[6] = 10000;
      intArray0[7] = 927;
      intArray0[8] = 927;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 49986
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.remainderUnsigned(1854, 1854);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      vector0.setSize(1854);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "log4j.appender.");
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(1854);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 1854;
      intArray0[2] = 1854;
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(3, intArray0.length);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.setSize(3527);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-38);
      intArray0[1] = 1794;
      intArray0[2] = (int) (byte) (-38);
      intArray0[3] = 3527;
      intArray0[4] = 3527;
      intArray0[5] = 1794;
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3527
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9487605215810104
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.addAll((Collection<? extends VisualPageListItem>) priorityQueue0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector2 = visualListModel1.data;
      vector1.add((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel2.setData(vector1);
      Object object0 = new Object();
      VisualListModel visualListModel3 = new VisualListModel();
      Vector<VisualPageListItem> vector3 = visualListModel3.data;
      // Undeclared exception!
      try { 
        visualListModel2.addAllElements((Collection<VisualPageListItem>) vector1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.274842682442605
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 6);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector1.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      vector1.add((VisualPageListItem) null);
      visualListModel1.updateElementAt(6, (VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[20];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[16] = null;
      visualListModel1.setData(visualPageListItemArray0);
      Object object0 = new Object();
      VisualListModel visualListModel2 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel3 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = 6;
      intArray0[1] = 6;
      intArray0[2] = 6;
      intArray0[3] = 6;
      intArray0[4] = 6;
      intArray0[6] = 6;
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      vector0.stream();
      VisualPageListItem visualPageListItem1 = null;
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      int int0 = 92;
      visualListModel1.addElementAt((VisualPageListItem) null, 92);
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      vector1.addAll((Collection<? extends VisualPageListItem>) vector0);
      boolean boolean0 = new Boolean(true);
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      priorityQueue0.parallelStream();
      visualPageListItemArray0[0] = null;
      VisualPageListItem visualPageListItem2 = null;
      try {
        visualPageListItem2 = new VisualPageListItem(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.reverseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,Hxg?1");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "J,> ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,Hxg?1");
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer integer2 = new Integer(3527);
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      vector0.setSize(3527);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,@xg?1");
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = (-2359);
      intArray0[2] = 3527;
      intArray0[3] = 2;
      intArray0[4] = 3527;
      intArray0[5] = 4627;
      intArray0[6] = (int) (byte) (-38);
      intArray0[7] = 4627;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3527
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "d$xd{uy@ZTW2E?$gD");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(2);
      integerArray0[2] = integer2;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedString(1807);
      integerArray0[4] = integer4;
      Integer.sum((int) integerArray0[1], 15);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      vector0.setSize(4627);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,@xg?1");
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = (int) integerArray0[0];
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {2, 0}, intArray0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer0;
      Integer integer2 = new Integer(2);
      Integer.min((int) integerArray0[0], 2);
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.min((int) integerArray0[0], 1483);
      Integer.compare(5, 1144);
      Integer.toUnsignedLong((int) integerArray0[3]);
      Integer.min(2, 725);
      Integer.toUnsignedString(4627);
      integerArray0[4] = integer4;
      Integer.sum((int) integerArray0[1], 15);
      Integer.sum((-3830), (-1500));
      Integer.compareUnsigned((-594), 110);
      Integer.toUnsignedString(15);
      Integer.toUnsignedString(3683);
      vector0.setSize(4627);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(2, intArray0.length);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      predicate3.test(predicate0);
      predicate1.test(predicate0);
      predicate3.test((Object) null);
      predicate0.and(predicate2);
      predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      predicate4.and(predicate2);
      Predicate<Object> predicate5 = predicate0.negate();
      predicate4.negate();
      predicate0.negate();
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate.isEqual((Object) predicate5);
      vector0.removeIf(predicate6);
      vector0.setSize(49979);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[4];
      intArray0[0] = 49979;
      intArray0[1] = 5;
      intArray0[2] = 49979;
      intArray0[3] = 49979;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 49979
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      predicate3.test(predicate0);
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate2.or(predicate5);
      Predicate<Object> predicate7 = predicate6.or(predicate2);
      predicate1.test(predicate0);
      predicate1.test((Object) null);
      predicate3.test((Object) null);
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate.isEqual((Object) predicate9);
      Predicate<Object> predicate10 = predicate8.or(predicate1);
      Predicate<Object> predicate11 = predicate10.negate();
      predicate7.negate();
      Predicate<Object> predicate12 = predicate9.negate();
      Predicate<Object> predicate13 = predicate4.and(predicate10);
      predicate12.negate();
      predicate13.negate();
      predicate12.and(predicate11);
      Object object0 = new Object();
      predicate11.test(object0);
      predicate11.test(predicate10);
      predicate6.negate();
      Predicate<Object> predicate14 = Predicate.isEqual((Object) predicate5);
      vector0.removeIf(predicate14);
      vector0.setSize(49979);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster5);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Integer integer0 = new Integer(0);
      defaultCaret0.setLocation((-1652), 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster10, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster8, (MouseMotionListener) null);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster13);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster14);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster13);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster5);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Integer integer0 = new Integer(0);
      defaultCaret0.setLocation((-1652), 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster10, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster8, (MouseMotionListener) null);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster13);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster14);
      AWTEventMulticaster aWTEventMulticaster15 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster15);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster14);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) aWTEventMulticaster0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      System.setCurrentTimeMillis(28L);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.169371224807919
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      Boolean.valueOf(false);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 487);
      vector0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      visualListModel1.getElements();
      visualListModel1.removeElements(0, 0, false);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      predicate5.test(attributedCharacterIterator_Attribute0);
      predicate0.and(predicate3);
      predicate0.negate();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.max((-1216), (-1216));
      predicate5.and(predicate4);
      predicate5.test(integer0);
      vector0.removeIf(predicate5);
      vector0.setSize(49986);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(49986, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate.isEqual((Object) vector0);
      Predicate.isEqual((Object) null);
      Integer.min(1, 30000);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.toUnsignedString(39);
      Integer.remainderUnsigned(39, 1854);
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      vector0.setSize(1);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Ignoring configuration file [");
      System.setCurrentTimeMillis(30000);
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-2017));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2017)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      Vector<Proxy.Type> vector0 = new Vector<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      jComboBox0.firePropertyChange(".", 'h', 'h');
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Color color0 = Color.LIGHT_GRAY;
      ICC_ColorSpace iCC_ColorSpace0 = null;
      try {
        iCC_ColorSpace0 = new ICC_ColorSpace((ICC_Profile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.color.ICC_ColorSpace", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction1;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction1;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction0;
      defaultEditorKit_BeepAction0.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction4;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction5.getPropertyChangeListeners();
      defaultEditorKit_PasteAction3.putValue("Y][Ir[>`v|5", defaultEditorKit_PasteAction5);
      defaultEditorKit_PasteAction3.setEnabled(false);
      defaultEditorKit_BeepAction0.getKeys();
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction2;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction1;
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction4;
      defaultEditorKit_PasteActionArray0[7] = defaultEditorKit_PasteAction0;
      defaultEditorKit_PasteActionArray0[8] = defaultEditorKit_PasteAction3;
      priorityQueue0.toArray(defaultEditorKit_PasteActionArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[5];
      Proxy.Type proxy_Type0 = Proxy.Type.DIRECT;
      proxy_TypeArray0[0] = proxy_Type0;
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.setSize(2108);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "5J");
      System.setCurrentTimeMillis((-208L));
      int[] intArray0 = new int[1];
      intArray0[0] = 2108;
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2108
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      linkedList0.add(integer0);
      ListIterator<Integer> listIterator0 = linkedList0.listIterator();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = new Integer(1874);
      linkedList0.push(integer2);
      Integer.divideUnsigned(680, 9);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Predicate.isEqual((Object) listIterator0);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[1] = (byte)124;
      byteArray0[4] = (byte)47;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      byteArray0[5] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      vector0.setSize(1775);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "y)q42vx|");
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Object[] objectArray0 = new Object[7];
      objectArray0[1] = (Object) sunHints_Key0;
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowListener0, windowListener0);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)110;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.setSize((byte)67);
      int[] intArray0 = new int[3];
      intArray0[0] = 1775;
      intArray0[1] = (int) (byte)47;
      intArray0[2] = 1775;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1775
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.listIterator();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = new Integer(1874);
      linkedList0.push(integer2);
      Integer.divideUnsigned(680, 9);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B0;hXksfEC*N?ZmYv<");
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "B0;hXksfEC*N?ZmYv<");
      vector0.setSize(1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KWX!,Hxg?1");
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KWX!,Hxg?1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-44);
      byteArray0[5] = (byte)57;
      byteArray0[6] = (byte)102;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-69);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)124;
      byteArray1[2] = (byte)124;
      byteArray1[2] = (byte) (-92);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      vector0.setSize(1775);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster4);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getBlinkRate();
      defaultCaret0.setLocation((-1652), 0);
      defaultCaret0.add((double) (-1652), (double) 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster9, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster7, (MouseMotionListener) null);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      JOptionPane jOptionPane0 = new JOptionPane();
      jComboBox0.remove((Component) jOptionPane0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      jComboBox0.add((Component) jOptionPane0, (Object) pdfGraphics2D_HyperLinkKey0);
      jComboBox0.repaint((-3051), (-3051), (-3051), (-57));
      jComboBox0.enableInputMethods(false);
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseListener) null, (MouseListener) defaultCaret0);
      MouseListener mouseListener0 = AWTEventMulticaster.remove((MouseListener) defaultCaret1, (MouseListener) null);
      AWTEventMulticaster.add(mouseListener0, (MouseListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate.isEqual((Object) integer0);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster4);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getBlinkRate();
      defaultCaret0.setLocation((-1652), 0);
      defaultCaret0.add((double) (-1652), (double) 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster9, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2829, 1921, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, (Object) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements((-2480), (Collection<VisualPageListItem>) arrayList0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_BeepAction0.setEnabled(true);
      actionArray0[2] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction1;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction3.isEnabled();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction1;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction0;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      actionArray0[2] = (Action) defaultEditorKit_PasteAction4;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction2.getPropertyChangeListeners();
      defaultEditorKit_PasteAction3.putValue("INFO", actionArray0[1]);
      defaultEditorKit_PasteAction5.setEnabled(false);
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction1 = new DefaultEditorKit.BeepAction();
      defaultEditorKit_BeepAction1.getPropertyChangeListeners();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseMotionListener0, mouseMotionListener0);
      WindowListener windowListener0 = mock(WindowListener.class, new ViolatedAssumptionAnswer());
      WindowListener windowListener1 = AWTEventMulticaster.add(windowListener0, windowListener0);
      AWTEventMulticaster.remove(windowListener1, windowListener1);
      AWTEventMulticaster.remove((WindowListener) null, windowListener1);
      WindowListener windowListener2 = AWTEventMulticaster.add(windowListener1, windowListener1);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "L'm0l^/j?[7ni$Wv*");
      WindowListener windowListener3 = AWTEventMulticaster.add(windowListener1, windowListener2);
      WindowListener windowListener4 = AWTEventMulticaster.add((WindowListener) null, windowListener3);
      WindowListener windowListener5 = AWTEventMulticaster.remove(windowListener2, windowListener3);
      AWTEventMulticaster.add(windowListener5, windowListener4);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      visualListModel0.removeElements(intArray0, true);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster1, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster1, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster7);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster4, (MouseListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster4, (MouseListener) aWTEventMulticaster1);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      jComboBox0.removeInputMethodListener(aWTEventMulticaster4);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(301, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 301
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 1033;
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[3];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.SOCKS;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction1;
      defaultEditorKit_BeepAction0.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction4;
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray1 = new DefaultEditorKit.PasteAction[5];
      defaultEditorKit_PasteActionArray1[0] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray1[1] = defaultEditorKit_PasteAction1;
      defaultEditorKit_PasteActionArray1[2] = defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray1[3] = defaultEditorKit_PasteAction0;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray1[4] = defaultEditorKit_PasteAction5;
      priorityQueue0.toArray(defaultEditorKit_PasteActionArray1);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements(priorityQueue0);
      System.setCurrentTimeMillis(504L);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction1;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(75);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(75, (-1), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(75) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 270;
      // Undeclared exception!
      try { 
        visualListModel0.subList(270, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(270) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction1;
      defaultEditorKit_BeepAction0.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction5;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction6 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction6.getPropertyChangeListeners();
      defaultEditorKit_PasteAction4.putValue("Y][Ir[>`v|5", defaultEditorKit_PasteAction6);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 3730, false);
      Stack<Proxy.Type> stack0 = new Stack<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(stack0);
      jComboBox0.enableInputMethods(false);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) null);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener3);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener5, inputMethodListener4);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener3);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveUpIndex((-360));
      VisualListModel visualListModel2 = new VisualListModel();
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.rotateClockwiseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster5);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Integer integer0 = new Integer(0);
      defaultCaret0.setLocation((-1638), 0);
      defaultCaret0.add((double) (-1638), (double) 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster10, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster8, (MouseMotionListener) null);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster13);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster14);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster13);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel1.setData(vector0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster1, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster8);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster4);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      DefaultCaret defaultCaret2 = new DefaultCaret();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(2527, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Object[][] objectArray0 = new Object[1][8];
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) sunHints_Key0;
      objectArray1[2] = (Object) sunHints_Key1;
      objectArray1[3] = (Object) sunHints_Key1;
      objectArray1[4] = (Object) sunHints_Key1;
      objectArray1[5] = (Object) sunHints_Key0;
      objectArray1[6] = (Object) visualListModel0;
      objectArray0[0] = objectArray1;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      visualListModel0.addListDataListener(jComboBox0);
      visualListModel0.moveDownIndex((-562));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[5];
      Proxy.Type proxy_Type0 = Proxy.Type.SOCKS;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.DIRECT;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[3] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.SOCKS;
      proxy_TypeArray0[1] = proxy_Type3;
      JTextField jTextField0 = new JTextField("g7:1&b5vW|YnnFn9=v", 1065);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(2398);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) null);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener3);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener5, inputMethodListener4);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener3);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener5);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener3);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, pdfGraphics2D_HyperLinkKey1);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-4823);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements((-4823), (-600), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[5];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type1;
      proxy_TypeArray0[2] = proxy_Type0;
      Proxy.Type proxy_Type2 = Proxy.Type.HTTP;
      proxy_TypeArray0[3] = proxy_Type2;
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[5];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      proxy_TypeArray0[2] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[3] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.HTTP;
      proxy_TypeArray0[4] = proxy_Type2;
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayList0);
      VisualListModel visualListModel1 = new VisualListModel();
      List<VisualPageListItem> list0 = new Stack<VisualPageListItem>();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[21];
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, visualListModel0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "org.pdfsam.guiclient.commons.models.VisualListModel", parameterBlock0, renderingHints0, true);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"org.pdfsam.guiclient.commons.models.VisualListModel\" is registered under mode \"renderableCollection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Proxy.Type[] proxy_TypeArray0 = new Proxy.Type[5];
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      proxy_TypeArray0[0] = proxy_Type0;
      Proxy.Type proxy_Type1 = Proxy.Type.HTTP;
      proxy_TypeArray0[1] = proxy_Type1;
      Proxy.Type proxy_Type2 = Proxy.Type.DIRECT;
      proxy_TypeArray0[2] = proxy_Type2;
      Proxy.Type proxy_Type3 = Proxy.Type.HTTP;
      proxy_TypeArray0[3] = proxy_Type3;
      Proxy.Type proxy_Type4 = Proxy.Type.HTTP;
      proxy_TypeArray0[4] = proxy_Type4;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-3822), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster4);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Integer integer0 = new Integer(0);
      defaultCaret0.setLocation((-1652), 0);
      defaultCaret0.add((double) (-1652), (double) 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster9, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster7, (MouseMotionListener) null);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster12);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, false);
      Stack<Proxy.Type> stack0 = new Stack<Proxy.Type>();
      Vector<Proxy.Type> vector0 = new Vector<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(vector0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      defaultEditorKit_PasteActionArray0[0] = defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction0;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction5;
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[5] = defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[6] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[7] = defaultEditorKit_PasteAction4;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster1, (MouseListener) aWTEventMulticaster0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster2);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(5, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 5
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster1, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster1, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster6);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster4, (MouseListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster4, (MouseListener) aWTEventMulticaster1);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      jComboBox0.removeInputMethodListener(aWTEventMulticaster4);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(301, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 301
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add(inputMethodListener0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster10, (MouseListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster6);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-4168), (-4168), false);
      Stack<Proxy.Type> stack0 = new Stack<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(stack0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster8, (MouseMotionListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster13);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) aWTEventMulticaster8);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(46, 46, true);
      Stack<Proxy.Type> stack0 = new Stack<Proxy.Type>();
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>(stack0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-2219), 585);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0, 1.0, (-2263.348385955829));
      JComboBox<Proxy.Type> jComboBox0 = new JComboBox<Proxy.Type>();
      Point point0 = jComboBox0.getLocation();
      affineTransform0.inverseTransform((Point2D) point0, (Point2D) point0);
      AffineTransformOp affineTransformOp0 = null;
      try {
        affineTransformOp0 = new AffineTransformOp(affineTransform0, (-620));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown interpolation type: -620
         //
         verifyException("java.awt.image.AffineTransformOp", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(357);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction0;
      defaultEditorKit_BeepAction0.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction5.setEnabled(true);
      defaultEditorKit_PasteAction5.getKeys();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction5;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction6 = new DefaultEditorKit.PasteAction();
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[6];
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[0] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction3;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction1;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction2;
      TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[10];
      actionArray0[1] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction3;
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction1;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction5;
      defaultEditorKit_PasteAction4.setEnabled(false);
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction3;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction2;
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction5;
      defaultEditorKit_PasteActionArray0[7] = defaultEditorKit_PasteAction1;
      defaultEditorKit_PasteActionArray0[8] = defaultEditorKit_PasteAction4;
      priorityQueue0.toArray(defaultEditorKit_PasteActionArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 1099;
      intArray0[1] = 3;
      intArray0[2] = 1099;
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {1099, 3, 1099}, intArray0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(357);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.3809682098476945
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.elementsChanged();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, sunHints_Key0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      renderingHints1.add(renderingHints0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)46;
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, defaultEditorKit_PasteAction0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, pdfGraphics2D_HyperLinkKey0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt((byte)0);
      // Undeclared exception!
      try { 
        renderingHints0.put((Object) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      HashMap<RenderingHints.Key, Proxy.Type> hashMap0 = new HashMap<RenderingHints.Key, Proxy.Type>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 46;
      visualListModel0.getElementAt(46);
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2549));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster6, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster4, (WindowListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) aWTEventMulticaster4);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getBlinkRate();
      defaultCaret0.setLocation((-1652), 0);
      defaultCaret0.add((double) (-1652), (double) 0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster9, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster7, (MouseMotionListener) null);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster6, (WindowListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowListener) aWTEventMulticaster7, (WindowListener) aWTEventMulticaster10);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster5, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(3272, (Collection<VisualPageListItem>) null);
  }
}
