/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 03:58:11 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0702961042843624
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      User user1 = new User();
      user1.setPassword("");
      user1.setPassword("d:pA@");
      User user2 = new User("Yu;.{hm.;I0?;~zr[", "N6E1<UCE{#");
      user0.setFirstName("t{pw'bvG~B2ut\"JXq");
      User user3 = new User();
      User user4 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      User user5 = new User("4#eLY7]G6Z-NPasA", "N6E1<UCE{#");
      derivedVariable0.setAlias("pup)rK`m1HSD8d<[");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      Variable.detectFieldChanges(user2, rawVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getAlias();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      derivedVariable1.getSourceVariables();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9942941809381205
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      String string0 = rawVariable0.getColumnStart();
      assertNull(string0);
      
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.getForm();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel((String) null);
      user0.setStatus("");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      String string1 = derivedVariable0.getCategory();
      assertEquals("Unknown", string1);
      
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList1.isEmpty());
      
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.removeSourceVariables(arrayList2);
      rawVariable0.getYear();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.185037007226065
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-1968526675));
      derivedVariable1.getAlias();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      User user0 = new User("", "},q>d#Y.Ks!,U89A9C7");
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable2, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      rawVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable3.updateOntologyTerm(ontologyTerm2);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable3);
      assertEquals((-1968526675), derivedVariable1.getIdentifier());
      
      derivedVariable3.getAlternativeVariable();
      assertFalse(derivedVariable3.isCleaned());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0421258918826033
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("");
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User("UNABLE_TO_DELETE_SUPPORTING_DOCUMENT", "UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable2);
      assertEquals(1, arrayList1.size());
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setName((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      User user1 = new User("", "");
      String string0 = rawVariable0.getName();
      assertNull(string0);
      
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      derivedVariable2.getAvailability();
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.860343093758577
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("m/`");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.clone();
      rawVariable1.addSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable1.setIdentifier((-4498));
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.getAlias();
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.setCodeBookNumber("N2b");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setCleaningDescription("m/`");
      derivedVariable0.getYear();
      derivedVariable0.form = "m/`";
      rawVariable1.getCodeBookNumber();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList2);
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable1.getYear();
      rawVariable1.getDisplayItemIdentifier();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable1.getYear();
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8623417620344114
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "variable.isCoded.label";
      derivedVariable0.setQuestionNumber((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("variable.isCoded.label");
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.createVariableSummary();
      derivedVariable0.getQuestionNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("a2KmeLH+w%Nchd@)M");
      supportingDocument0.setDocumentCode("MISSING_DISPLAY_LIST_SELECTOR");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      rawVariable0.setIsNewRecord(false);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("Yu;.{hm.;I0?;~zr[");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList3 = new LinkedList<SupportingDocument>();
      linkedList3.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList4 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      linkedList2.add(supportingDocument5);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("ik:'B}w5EI[D.Ah?]#");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber("*EJS!");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      User user0 = new User((String) null, "variable.cleaningDescription.label");
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("*EJS!", rawVariable1.getQuestionNumber());
      assertEquals(2, arrayList2.size());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.650982112304295
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      linkedList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      supportingDocument0.getDisplayName();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument1);
      supportingDocument0.setTitle("Yu;.{hm.;I0?;~zr[");
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("}");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getName();
      assertEquals("}", rawVariable1.getName());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.862885772479412
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      Predicate<Object> predicate1 = predicate0.negate();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setLabel("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES");
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      linkedList0.removeIf(predicate3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel("general.fieldValue.blank");
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("W1~M");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      User user1 = new User("variable.alternativeVariable.label", "variable.alternativeVariable.label");
      Variable.detectFieldChanges(user1, derivedVariable2, rawVariable0);
      assertEquals("general.fieldValue.blank", derivedVariable2.getLabel());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      linkedList1.add(supportingDocument0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList4 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertTrue(arrayList4.isEmpty());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3473508904222826
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      User user3 = new User("Dt", "Dt");
      User user4 = new User("variable.notes.label", (String) null);
      user4.setFirstName("");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user1.setPassword("variable.notes.label");
      User user7 = new User("general.error.blankField", "Dt");
      user0.setPassword("NbJHKct#v2;");
      user1.setPhone("h|8TMt]");
      User user8 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8338701669589295
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      rawVariable1.getDisplayName();
      Variable.validateFields(rawVariable0);
      derivedVariable0.setAlias("{SnZhaHX{/%;");
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(rawVariable1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9683797903408977
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlias("ULz~I6BJA7_sYSA");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setLabel("ULz~I6BJA7_sYSA");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      User user0 = new User("", "variable.category.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.removeSourceVariable((Variable) null);
      User user1 = new User("variable.alternativeVariable.label", "");
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.581687993791636
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("Z");
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.getCleaningDescription();
      assertEquals("Z", rawVariable0.getCleaningDescription());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.8632491115656142
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("variable.availability.label", "variable.availability.label");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel("general.fieldValue.blank");
      ArrayList<RawVariable> arrayList2 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      arrayList3.add((Variable) derivedVariable1);
      derivedVariable1.addSourceVariables(arrayList3);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable2.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setLabel("variable.category.label");
      derivedVariable3.setCodeBookNumber("variable.availability.label");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.getCleaningDescription();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable3);
      derivedVariable4.getLabel();
      derivedVariable3.removeSourceVariable(derivedVariable1);
      assertEquals("variable.category.label", derivedVariable3.getLabel());
      
      User user1 = new User("UNABLE_TO_CREATE_VALUE_LABELS", "UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      derivedVariable0.getValueLabels();
      derivedVariable1.hasSameDisplayName(rawVariable0);
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace((String) null);
      ontologyTerm4.setIdentifier(2129);
      ontologyTerm5.setOntologyName("g`dPVO{(5Ac~c.-w");
      ontologyTerm4.setTerm(",+Uld{yiAOf>nUm|y");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setNameSpace("UNABLE_TO_CHECK_USER_DUPLICATE");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm4.setNameSpace("(;JF:%?X-~tr@");
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm10.setIdentifier((-1078));
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm10);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8972231997398774
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("[ba");
      supportingDocument0.setFileName("Yu;.{hm.;I0?;~zr[");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      linkedList1.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Yu;.{hm.;I0?;~zr[");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("Z");
      derivedVariable1.setCleaningStatus("Z");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getCleaningDescription();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      derivedVariable1.getLabel();
      User user1 = new User("DUPLICATE_AVAILABILITY_STATE", "DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.140016795854641
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-2708));
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User((String) null, (String) null);
      user0.setPassword("N6E1<U~CVE{#");
      User user3 = new User("N6E1<U~CVE{#", "UNABLE_TO_COMMIT_CHANGES");
      user2.setFirstName("UNABLE_TO_INITIALISE_CONNECTION");
      User user4 = new User();
      User user5 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user2.setPassword((String) null);
      User user6 = new User("blank", "blank");
      user2.setPhone("K^?,}?H#(FE");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      rawVariable1.getColumnEnd();
      assertEquals("-2708", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.05569358184064
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(3250);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.listIterator();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      user0.setLastName("q3B+e");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "A~V+H!b";
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.981386531227478
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.setCategory("Dt");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User((String) null, "3");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("Dt", rawVariable0.getCategory());
      
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.7471887452860035
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setFirstName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("", "variable.saveChanges.valueChanged");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_UPDATE_RAW_VARIABLE");
      ArrayList<RawVariable> arrayList0 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>(arrayList0);
      derivedVariable2.addSourceVariables(arrayList1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.setCoded(true);
      derivedVariable3.getCleaningDescription();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      assertTrue(derivedVariable1.isCoded());
      
      derivedVariable3.getLabel();
      assertEquals("Unknown", derivedVariable3.getAvailability());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setForm(")H");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getFilePath();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals(")H", derivedVariable0.getForm());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.949995971613195
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user0.setPassword("N6E1<UCE{#");
      user0.setPassword("N6E1<UCE{#");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel((String) null);
      ArrayList<RawVariable> arrayList0 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable1.addSourceVariables(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel((ValueLabel) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel("R%v<Ic#FcwO");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.getCleaningDescription();
      DerivedVariable.detectFieldChanges(user1, derivedVariable2, derivedVariable3);
      derivedVariable1.setCoded(true);
      derivedVariable1.getLabel();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      User user3 = new User("N6E1<UCE{#", "UNABLE_TO_CREATE_VALUE_LABELS");
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.862885772479412
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user0.setPassword("N6E1<U~CVE{#");
      User user3 = new User("N6E1<U~CVE{#", "UNABLE_TO_COMMIT_CHANGES");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("bSBDg~l]1PH[<YH\"");
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList3);
      derivedVariable0.setLabel("blank");
      derivedVariable0.getCleaningDescription();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "UNABLE_TO_COMMIT_CHANGES";
      DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable1);
      derivedVariable1.getLabel();
      assertEquals("UNABLE_TO_COMMIT_CHANGES", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.clone();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel4 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel4);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      arrayList1.add((Variable) rawVariable0);
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabel5.setValue("-");
      derivedVariable0.removeSourceVariables(arrayList1);
      rawVariable0.getColumnEnd();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.000193217147124
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(42);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable1.setName("");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("a N#");
      rawVariable2.createVariableSummary();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("UNABLE_TO_ASSOCIATE_DOCUMENT", "-LHA");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("a N#", rawVariable0.getAvailability());
      
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.6645506402554955
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      System.setCurrentTimeMillis((-11L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCategory("|vnetHIF};P\"TC");
      derivedVariable0.setColumnStart("|vnetHIF};P\"TC");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      User user0 = new User("|vnetHIF};P\"TC", "|vnetHIF};P\"TC");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList1 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      arrayList2.containsAll(arrayList1);
      derivedVariable0.removeSourceVariables(arrayList2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable3);
      assertEquals("|vnetHIF};P\"TC", derivedVariable3.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.9001072623954727
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(16);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setName((String) null);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean1 == boolean0);
      
      User user0 = new User("N}", "U$KoBvQG");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("general.error.blankField", "mXO");
      ArrayList<MacawChangeEvent> arrayList3 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertTrue(arrayList3.isEmpty());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.855853663657527
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      Variable variable0 = null;
      derivedVariable0.addSourceVariable((Variable) null);
      derivedVariable0.setColumnStart("variable.codeBookNumber.label");
      derivedVariable0.getFilePath();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setAlias("");
      derivedVariable0.getAlias();
      derivedVariable0.getColumnStart();
      derivedVariable0.clone();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.isNewRecord();
      derivedVariable0.getAvailability();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getQuestionNumber();
      User user0 = new User();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.842324604726158
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      user2.setAffiliation((String) null);
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<KUCE{#");
      user0.setStatus("Dt");
      user0.setFirstName("UNABLE_TO_GET_USER_IDENTIFIER");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("FEtF2w!%B");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user7 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9856273850337063
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("bSBDg~l]1PH[<YH\"");
      ontologyTerm0.setTerm("bSBDg~l]1PH[<YH\"");
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.addOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(rawVariable1);
      derivedVariable1.getDisplayName();
      derivedVariable0.form = "bSBDg~l]1PH[<YH\"";
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User("Dt", (String) null);
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      ontologyTerm1.setOntologyName("supportingDocument.title.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.removeOntologyTerm(ontologyTerm2);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("bSBDg~l]1PH[<YH\"", derivedVariable0.getForm());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1390740212066337
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.addOntologyTerms(arrayList0);
      Variable variable0 = null;
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getLabel();
      derivedVariable0.getAlias();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.isCleaned();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("TIOL$t0;=!H");
      ontologyTerm0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setCleaned(false);
      ArrayList<OntologyTerm> arrayList1 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setFirstName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      String string0 = rawVariable0.getFilePath();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      rawVariable2.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user4 = new User("<5cW//J[_ZKx;IP_ad6", "@dXJ");
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      assertEquals("UNABLE_TO_DELETE_ALIAS_FILE_PATH", rawVariable0.getDisplayName());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.862514934912831
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setAlternativeVariable((Variable) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.setLabel("general.fieldValue.blank");
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable3.setLabel("}g");
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable2.getCleaningDescription();
      DerivedVariable.detectFieldChanges(user0, derivedVariable4, derivedVariable0);
      DerivedVariable derivedVariable6 = new DerivedVariable();
      derivedVariable6.getLabel();
      derivedVariable4.removeSourceVariable((Variable) null);
      User user1 = new User("variable.category.label", "}g");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.987058374325709
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable variable0 = null;
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlias("P$");
      derivedVariable0.createVariableSummary();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.8175494978445785
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setAlternativeVariable((Variable) null);
      String string0 = derivedVariable0.columnEnd;
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      derivedVariable1.createVariableSummary();
      derivedVariable0.cloneAttributes(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.7223725469497313
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      
      rawVariable0.getFilePath();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.isCleaned();
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.20571469225704
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm4);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm5.setNameSpace("+wZ-&");
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm13);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.8908198977944366
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-229));
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable1.createVariableSummary();
      derivedVariable1.addOntologyTerms(arrayList0);
      rawVariable1.setCodeBookNumber("3}}s{cyoa7");
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("/{.Gh39Sp=lX");
      rawVariable0.setColumnEnd("5");
      rawVariable0.setYear("5");
      rawVariable0.getNotes();
      rawVariable0.getCleaningDescription();
      rawVariable0.getCleaningStatus();
      rawVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9953985285806737
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      rawVariable0.setColumnEnd("");
      derivedVariable0.setAvailability("");
      derivedVariable0.setCategory("");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      derivedVariable1.addSourceVariable(derivedVariable0);
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable0);
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6838592285916105
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName(")Gexm5iYh");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(boolean0);
      
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "j0@fw5^_cC `XrE7:ZS";
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.getFilePath();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.6431732616449644
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("bSBDg~l]1PH[<YH\"");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("bSBDg~l]1PH[<YH\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User("Dt", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setLabel("Dt");
      derivedVariable1.setLabel("bSBDg~l]1PH[<YH\"");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable2);
      derivedVariable0.getCleaningDescription();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      derivedVariable2.getLabel();
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable1.removeSourceVariable(rawVariable1);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("bSBDg~l]1PH[<YH\"", derivedVariable1.getLabel());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("kj}gYYHx1(@z$6xD.[+");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      linkedList2.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User("UbgUm ", "kj}gYYHx1(@z$6xD.[+");
      user0.setPassword("ALIAS_FILE_PATH");
      User user1 = new User("l+eyg%", "l+eyg%");
      User user2 = new User();
      user2.setPhone("UbgUm ");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user1, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7031449629767956
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.setTitle("GI>=");
      rawVariable1.setColumnEnd("ot");
      rawVariable0.setName("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.clone();
      assertEquals("ot", rawVariable1.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getFilePath();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.isCleaned();
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      String string0 = "N6E1<UCE{#";
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      String string1 = "Oba:Zh/Myhp";
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<UCE{#");
      user4.setFirstName("N6E1<UCE{#");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user6.setPostCode("Ooz]},c'|k6gd:pr");
      String string2 = ">?j|ST3lg";
      user6.setPassword(">?j|ST3lg");
      // Undeclared exception!
      try { 
        rawVariable1.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6852794136909153
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("g1I@?9");
      valueLabel0.getDisplayName();
      valueLabel0.setLabel("UNABLE_TO_GET_CLEANING_STATES");
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setForm("UNABLE_TO_GET_CLEANING_STATES");
      rawVariable0.clone();
      rawVariable0.setForm("UNABLE_TO_GET_CLEANING_STATES");
      String string0 = "general.fieldValue.blank";
      rawVariable0.setNotes("a)5qahpX|D+6*'D");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.842433123445637
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("[ba");
      supportingDocument0.setFileName("Yu;.{hm.;I0?;~zr[");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("Yu;.{hm.;I0?;~zr[");
      linkedList1.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("Z");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      derivedVariable1.getLabel();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("k");
      supportingDocument0.setFileName("Yu;.{hm.;I0?;~zr[");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDescription("k");
      linkedList2.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("variable.columnEnd.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("variable.columnEnd.label", derivedVariable0.getLabel());
      
      derivedVariable2.getLabel();
      derivedVariable1.setSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.728810287573018
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      rawVariable1.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable2);
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(rawVariable2);
      derivedVariable0.getAlternativeVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.6384041189708594
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("8<ZR#E", "8<ZR#E");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      User user2 = new User();
      user0.setPassword("6na0t$Wx^jOTH;1R7HM");
      user0.setPassword("6na0t$Wx^jOTH;1R7HM");
      User user3 = new User("Oba:Zh/Myhp", ";3xJ.4N]p&|%.Sy8");
      User user4 = new User(";3xJ.4N]p&|%.Sy8", (String) null);
      user4.setCity("6na0t$Wx^jOTH;1R7HM");
      user4.setFirstName("variable.alternativeVariable.label");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      user2.setPassword("6na0t$Wx^jOTH;1R7HM");
      User user7 = new User("variable.alternativeVariable.label", "Fb6kB");
      user3.setPassword("Oba:Zh/Myhp");
      User user8 = new User("rWnkRD", "INVALID_ALIAS_FILE_PATH");
      user2.setPhone("variable.alternativeVariable.label");
      User user9 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9456645463488123
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      linkedList0.add(supportingDocument0);
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(167);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.createVariableSummary();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM", "");
      assertEquals("", user0.getPostCode());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setIdentifier(471);
      String string0 = "(}.)6;VZ-6't9w,@-(X";
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      valueLabel0.setLabel("(}.)6;VZ-6't9w,@-(X");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.7854049743964673
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel0);
      Predicate<Object> predicate1 = predicate0.negate();
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setLabel("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES");
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      linkedList0.removeIf(predicate3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setLabel("general.fieldValue.blank");
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) derivedVariable1);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable2.addValueLabel(valueLabel1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.cloneAttributes(rawVariable0);
      derivedVariable1.getDisplayName();
      derivedVariable2.createVariableSummary();
      derivedVariable2.cloneAttributes(derivedVariable0);
      assertEquals("general.fieldValue.blank", derivedVariable0.getLabel());
      
      derivedVariable1.getAlternativeVariable();
      derivedVariable1.getColumnStart();
      derivedVariable2.getQuestionNumber();
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.773561370792463
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      arrayList1.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.702928653221226
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlias("ULz~I6BJA7_sYSA");
      derivedVariable0.setCategory("ULz~I6BJA7_sYSA");
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("#`XFT8n c-c]/@");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("M6fW");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm16);
      rawVariable0.getAlias();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("");
      rawVariable0.getFilePath();
      rawVariable0.setColumnStart("|q>$>");
      rawVariable0.setIdentifier(2147483645);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(false);
      rawVariable0.getForm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnStart("#2Sm]>5!VkYqp");
      assertEquals(2147483645, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      User user2 = new User();
      user2.setPassword("Dt");
      User user3 = new User("blank", "UNABLE_TO_COMMIT_CHANGES");
      user0.setFirstName("blank");
      User.checkValidUserIDField("blank");
      User user4 = new User("UNABLE_TO_CHECK_USER_DUPLICATE", "");
      User user5 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      User user6 = new User("", "");
      user1.setPhone("UNABLE_TO_COMMIT_CHANGES");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setColumnEnd("ot");
      rawVariable0.setName("N}");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("user.email.label", "macaw.businessLayer.User");
      user0.setCounty("macaw.businessLayer.User");
      user0.setCounty("ozyD8vXyj<2Q");
      rawVariable0.createVariableSummary();
      assertEquals("ot", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setFirstName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = null;
      arrayList0.add((OntologyTerm) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setNameSpace((String) null);
      ontologyTerm6.setOntologyName((String) null);
      ontologyTerm0.setTerm(",+Uld{yiAOf>nUm|y");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("D'.x|5V5lO[8h^:^{7");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("%E3");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm7.setNameSpace((String) null);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNewRecord(true);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.6951692573444634
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlias("ULz~I6BJA7_sYSA");
      derivedVariable0.createVariableSummary();
      derivedVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("bSBDg~l]1PH[<YH\"", "'");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getLabel();
      derivedVariable0.removeSourceVariable((Variable) null);
      User user1 = new User("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<KUCE{#");
      user0.setFirstName("UNABLE_TO_GET_USER_IDENTIFIER");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user3.setPassword("FEtF2w!%B");
      User user7 = new User("Y'}S~`(gwM", ">?j|ST3lg");
      user1.setPassword(">?j|ST3lg");
      User user8 = new User("Y'}S~`(gwM", ":\"#U&bZP)!-ujbN");
      user2.setPhone("N6E1<KUCE{#");
      User user9 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.3196998305427026
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      rawVariable0.setColumnEnd("");
      rawVariable0.getColumnEnd();
      rawVariable0.getAvailability();
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCoded(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setIdentifier(0);
      supportingDocument0.setIdentifier(0);
      supportingDocument0.setDescription("");
      supportingDocument0.setIsNewRecord(false);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setForm("eKMGmz,?;");
      rawVariable0.setCoded(false);
      rawVariable0.setCleaned(false);
      rawVariable0.getForm();
      rawVariable0.notes = "IQd}|]-{yW` ;\"";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getCleaningDescription();
      rawVariable0.setColumnStart("gwC97b,vg");
      assertEquals("eKMGmz,?;", rawVariable0.getForm());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("Yu;.{hm.;I0?;~zr[");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      linkedList1.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList3 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      linkedList3.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription(" hY3~BJUI/c|?}U");
      rawVariable0.setName("N}");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("},q>d#Y.Ks!,U89A9C7", "DUPLICATE_CLEANING_STATE");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("N}", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("|p$");
      derivedVariable0.getDisplayItemIdentifier();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.listIterator();
      arrayList0.spliterator();
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.form = "-.RPztO(N-86BAh5%";
      User user0 = new User("0", "|p$");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getCleaningDescription();
      rawVariable0.createVariableSummary();
      rawVariable0.getYear();
      assertEquals("-.RPztO(N-86BAh5%", rawVariable0.getForm());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.714962816301555
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("user.phone.saveChanges");
      User user0 = new User();
      user0.setCounty("macaw.businessLayer.ValueLabel");
      user0.setEmail((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setNotes("rR,QN/R9");
      derivedVariable0.setYear("0*ICd!OhBV");
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAlias();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable1.getOntologyTerms();
      assertEquals("user.phone.saveChanges", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.0302764907906683
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      valueLabel1.setLabel((String) null);
      valueLabel1.getDisplayName();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setValue("RH&Y%-p$&'R\"E1.bYU");
      valueLabel0.setValue((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      rawVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.questionNumber = "";
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.getCategory();
      rawVariable0.getCleaningDescription();
      rawVariable0.getLabel();
      rawVariable0.setYear("6Ow[)XM6n/\"?Th7H");
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isCoded();
      derivedVariable0.notes = "Rn+*`&{";
      User user0 = new User("Rn+*`&{", "Rn+*`&{");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      user0.setPassword((String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      assertEquals("Rn+*`&{", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8058632507364383
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setAffiliation("Rx4F");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_CHECK_DATABASE_EXISTS");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("UNABLE_TO_CREATE_ALIAS_FILE_PATH");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm0.setNameSpace("C ");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.9108636168082933
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      Variable variable0 = null;
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.setAlias("P$");
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<KUCE{#");
      user0.setFirstName("UNABLE_TO_GET_USER_IDENTIFIER");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user3.setPassword("FEtF2w!%B");
      User user7 = new User("Y'}S~`(gwM", ">?j|ST3lg");
      user1.setPassword(">?j|ST3lg");
      rawVariable1.notes = ">?j|ST3lg";
      User user8 = new User("Y'}S~`(gwM", ":\"#U&bZP)!-ujbN");
      user2.setPhone("N6E1<KUCE{#");
      User user9 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable0, rawVariable1);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.7941820653816287
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable variable0 = null;
      derivedVariable0.setAlternativeVariable((Variable) null);
      derivedVariable0.setName("variable.columnStart.label");
      derivedVariable0.getDisplayName();
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setAlias("P$");
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.498075862058163
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setOntologyName("Dt");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.574729047527649
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      linkedList0.pollLast();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("`WP'V'1j`");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      rawVariable1.getCodeBookNumber();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.3199044298479494
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("7");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm2);
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.9971515848932915
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      User user3 = new User("Dt", (String) null);
      user0.setFirstName("general.fieldValue.unknown");
      User user4 = new User();
      User user5 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user4.setPassword("32O?&jdE");
      User user6 = new User((String) null, "variable.saveChanges.valueChanged");
      user3.setPassword("Z");
      User user7 = new User((String) null, (String) null);
      user6.setPhone((String) null);
      User user8 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user5, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      derivedVariable0.setYear((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setNotes("UNABLE_TO_GET_SOURCE_VARIABLES");
      rawVariable0.getNotes();
      assertEquals("UNABLE_TO_GET_SOURCE_VARIABLES", rawVariable0.getNotes());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getName();
      rawVariable1.setName("");
      rawVariable0.setIdentifier((-1));
      rawVariable0.setCodeBookNumber("");
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-1", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setOntologyName("UNABLE_TO_CREATE_ALIAS_FILE_PATH");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm4.setNameSpace("(;JF:%?X-~tr@");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.5360329531302677
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.setTitle("ot");
      User user0 = new User("]-|}$Gom\"c\"vB[/_", "ot");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<KUCE{#");
      user0.setFirstName("UNABLE_TO_GET_USER_IDENTIFIER");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user3.setPassword("FEtF2w!%B");
      rawVariable0.setLabel("Dt");
      User user7 = new User("Y'}S~`(gwM", ">?j|ST3lg");
      user1.setPassword(">?j|ST3lg");
      rawVariable1.columnEnd = "Dt";
      User user8 = new User("Y'}S~`(gwM", ":\"#U&bZP)!-ujbN");
      user2.setPhone("N6E1<KUCE{#");
      User user9 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable0, rawVariable1);
      assertEquals("Dt", rawVariable0.getLabel());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      rawVariable0.setCleaningDescription((String) null);
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      String string0 = "Oba:Zh/Myhp";
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<KUCE{#");
      user4.setFirstName("N6E1<KUCE{#");
      User user5 = new User();
      User user6 = new User();
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user5, user0, user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm11.setNameSpace("M6fW");
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      ontologyTerm16.setTerm("M6fW");
      rawVariable0.removeOntologyTerm(ontologyTerm16);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1 == boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setNameSpace("variable.isCleaned.saveChanges.changedToNotClean");
      ontologyTerm1.setOntologyName("");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.6321973813118107
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setFirstName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.setColumnStart("variable.notes.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.cloneAttributes(rawVariable2);
      rawVariable1.createVariableSummary();
      assertEquals("variable.notes.label", rawVariable1.getColumnStart());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList3 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList4 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      linkedList2.add(supportingDocument0);
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList5 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      linkedList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Yu;.{hm.;I0?;~zr[");
      rawVariable0.createVariableSummary();
      assertEquals("Yu;.{hm.;I0?;~zr[", rawVariable0.getDisplayName());
      
      SupportingDocument supportingDocument5 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Yu;.{hm.;I0?;~zr[", "$u:MDaW@q-){*Qe");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getName();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setNameSpace("!_sur2pr`'JRuG`");
      ontologyTerm4.setOntologyName("/UxCO|");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.0672877847391904
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList3 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList4 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      linkedList2.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList5 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      linkedList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList3);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setFirstName((String) null);
      user0.setFirstName((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("kD:wsn1L$Gm{$'HCe");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setIdentifier(182);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getIdentifier();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAvailability("Unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      assertEquals(182, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6043635327842365
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setDescription("");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("Gy!QNeT8jmRn2 ");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.6043635327842365
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setDescription("p");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("v e1dGh]f");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertEquals("v e1dGh]f", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.5360485526400156
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      user0.setFirstName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setQuestionNumber((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.817492102447689
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.setAlternativeVariable((Variable) null);
      String string0 = derivedVariable0.columnEnd;
      derivedVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      derivedVariable1.createVariableSummary();
      derivedVariable0.cloneAttributes(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable1.isCleaned();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setNameSpace((String) null);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setOntologyName("macaw.util.ValidationUtility");
      ontologyTerm1.setOntologyName("l(QB39=z9");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm8);
      derivedVariable0.getValueLabels();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.8972231997398774
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("6gT#;voz ~H90O&K@");
      ArrayList<RawVariable> arrayList1 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setLabel("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.getCleaningDescription();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      derivedVariable2.setFilePath("");
      derivedVariable1.getLabel();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      User user1 = new User("general.fieldValue.blank", "variable.name.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.6198787278292057
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals(1, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.663496277301592
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setFileName("Yu;.{hm.;I0?;~zr[");
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      linkedList1.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList3 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      linkedList3.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("N}");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("},q>d#Y.Ks!,U89A9C7", "DUPLICATE_CLEANING_STATE");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      derivedVariable0.addSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("N}", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.834118413716206
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.createVariableSummary();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      rawVariable0.getDisplayName();
      Variable.validateFields(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias("variable.category.label");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.cloneAttributes(derivedVariable0);
      derivedVariable2.getDisplayName();
      derivedVariable2.setCleaned(true);
      derivedVariable1.codeBookNumber = "variable.category.label";
      derivedVariable1.createVariableSummary();
      derivedVariable1.cloneAttributes(derivedVariable2);
      assertFalse(derivedVariable2.isCleaned());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getAlternativeVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("~'4zEr}.##");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals("~'4zEr}.##", rawVariable0.getFilePath());
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.setColumnEnd((String) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm6);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setPassword((String) null);
      user0.setPassword("Dt");
      rawVariable1.setColumnEnd("SFl;-tX;H;>`'n@|\"");
      User user3 = new User("Ooz]},c'|k6gd:pr", "Oba:Zh/Myhp");
      User user4 = new User((String) null, "N6E1<KUCE{#");
      user0.setFirstName("UNABLE_TO_GET_USER_IDENTIFIER");
      User user5 = new User();
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user3.setPassword("FEtF2w!%B");
      User user7 = new User("Y'}S~`(gwM", ">?j|ST3lg");
      user1.setPassword(">?j|ST3lg");
      User user8 = new User("Y'}S~`(gwM", "Y'}S~`(gwM");
      User user9 = new User("%Ivm@mhI-{2pZ3;Ei", "UNABLE_TO_FILTER_SUMMARIES");
      Variable.detectFieldChanges(user8, rawVariable0, rawVariable1);
      assertEquals("SFl;-tX;H;>`'n@|\"", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getYear());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.7863345296200324
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User("sldVG$_", "variable.availability.label");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("sldVG$_");
      ArrayList<RawVariable> arrayList0 = new ArrayList<RawVariable>();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable1.addSourceVariables(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setLabel(".|(M :uB+)`f*");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable3, derivedVariable2);
      derivedVariable1.getLabel();
      derivedVariable0.removeSourceVariable(rawVariable1);
      User user2 = new User("A-C", "OGkh9aNPLgxG/1&");
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.2194649300685314
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      LinkedList<SupportingDocument> linkedList1 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList2 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList3 = new LinkedList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList4 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      linkedList2.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList5 = new LinkedList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      linkedList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Yu;.{hm.;I0?;~zr[");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("Yu;.{hm.;I0?;~zr[", rawVariable0.getDisplayName());
      
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.isCoded();
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.6297127203366895
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm1);
      derivedVariable1.removeOntologyTerms(arrayList1);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.6166581159129416
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setCleaningStatus("CB7'7");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm1));
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.7604483390136956
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = "{0";
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.clone();
      derivedVariable0.setColumnEnd("Dt");
      Variable.validateFields(derivedVariable1);
      derivedVariable0.setCoded(true);
      derivedVariable0.isNewRecord();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setForm("Dt");
      Variable.validateFields(derivedVariable2);
      derivedVariable0.getNotes();
      assertEquals("Dt", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.625071549495739
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "z,2";
      rawVariable0.questionNumber = "z,2";
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("", rawVariable0.getNotes());
      assertEquals("", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("A'M`{|y");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "A'M`{|y";
      rawVariable0.setColumnStart("ANx)=%");
      derivedVariable0.removeSourceVariable(rawVariable0);
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getColumnStart();
      rawVariable0.codeBookNumber = "$Tf[";
      User user0 = new User();
      user0.setEmail("t2");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("A'M`{|y", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.6855983590263937
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("UNABLE_TO_UPDATE_CLEANING_STATE");
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setOntologyName("UNABLE_TO_CREATE_ALIAS_FILE_PATH");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("UNABLE_TO_UPDATE_CLEANING_STATE");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm9);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
