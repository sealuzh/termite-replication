/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 04:12:42 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis((-1145L));
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-380L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(910L);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 3329);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1037));
      Services.testPOP3("", 3329);
      System.setCurrentTimeMillis((-1193L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://220:10");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "5`7#rY#6v");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://220:10");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "");
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)94;
      byteArray0[5] = (byte)94;
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)74;
      byteArray1[3] = (byte)94;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)94;
      byteArray1[6] = (byte)94;
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      Services.testHTTP("220", 10);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis((-1145L));
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1037));
      System.setCurrentTimeMillis((-1198L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(2949L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(3329);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2188L));
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:3329");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "aw3j@\"6\"=3X#d$D");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 3329);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(16, services_HTTP_Result0.page_weight);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", (-1037));
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0L, services_HTTP_Result1.time);
      assertFalse(services_HTTP_Result1.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis((-1145L));
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1037));
      System.setCurrentTimeMillis((-1193L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(2949L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(3329);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2188L));
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://:3329");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "aw3j@\"6\"=3X#d$D");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 3329);
      assertEquals(16, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("", (-1037));
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0L, services_HTTP_Result1.time);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1546856420984069
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("200.42.42.1", 3491);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "**R\u00E9ponse du serveur incorrect**");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.testSMTP("**R\u00E9ponse du serveur incorrect**", (byte) (-1));
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-1);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("8'-ifFEK~", 3491);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://Wi\\iO:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "uylZ5mCSpimW4=a");
      Services.testHTTPS("WiiO", 0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1172L));
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-369L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-1037));
      System.setCurrentTimeMillis((-1193L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(910L);
      Services.testSMTP("", 3329);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1172L));
      System.setCurrentTimeMillis(3505L);
      System.setCurrentTimeMillis(3329);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.page_weight = 238;
      services_HTTP_Result0.toString();
      System.setCurrentTimeMillis(910L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", (-784));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis((-1145L));
      System.setCurrentTimeMillis(910L);
      System.setCurrentTimeMillis(708L);
      System.setCurrentTimeMillis((-380L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(376L);
      System.setCurrentTimeMillis((-1037));
      System.setCurrentTimeMillis((-380L));
      System.setCurrentTimeMillis((-1145L));
      System.setCurrentTimeMillis(708L);
      Services.testPOP3("", (-1037));
      System.setCurrentTimeMillis(3329);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2052L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2052L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      System.setCurrentTimeMillis((-2261L));
      System.setCurrentTimeMillis(910L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 949);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.Error = "";
      String string0 = services_SIMPLE_Result1.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 1);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "**** Resultat : \n** Fonctionnement : ");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "**** Resultat : \n** Fonctionnement : ");
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3(" 3", 2568);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-95);
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-72);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      byteArray0[5] = (byte) (-55);
      byteArray0[6] = (byte)0;
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.Error = "";
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("$'IyUJ/|@OYJr#%^3", (-1));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-36));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("{qV>o`c#0my9@]+4i?&", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Services services0 = new Services();
  }
}
