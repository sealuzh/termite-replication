/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 09:58:10 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.AWTEventMulticaster;
import java.awt.HeadlessException;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLTransactionRollbackException;
import java.sql.SQLWarning;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.text.DefaultCaret;
import messages.global.GlobalChatMsg;
import messages.global.GlobalStateMsg;
import messages.global.MapInfo;
import messages.global.SessionDetailsMsg;
import messages.round.RoundStateMsg;
import messages.round.TileHitPlayerMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      Vector<MapInfo> vector1 = new Vector<MapInfo>();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      Stack<MapInfo> stack1 = new Stack<MapInfo>();
      Vector<MapInfo> vector2 = new Vector<MapInfo>();
      Stack<MapInfo> stack2 = new Stack<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Vector<MapInfo> vector3 = new Vector<MapInfo>();
      Vector<MapInfo> vector4 = new Vector<MapInfo>();
      Stack<MapInfo> stack3 = new Stack<MapInfo>();
      Vector<MapInfo> vector5 = new Vector<MapInfo>();
      Stack<MapInfo> stack4 = new Stack<MapInfo>();
      Stack<MapInfo> stack5 = new Stack<MapInfo>();
      Vector<MapInfo> vector6 = new Vector<MapInfo>();
      Stack<MapInfo> stack6 = new Stack<MapInfo>();
      MockThread.interrupted();
      Stack<MapInfo> stack7 = new Stack<MapInfo>();
      Vector<MapInfo> vector7 = new Vector<MapInfo>();
      Stack<MapInfo> stack8 = new Stack<MapInfo>();
      MockThread.interrupted();
      Stack<MapInfo> stack9 = new Stack<MapInfo>();
      MockThread.getDefaultUncaughtExceptionHandler();
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Box.createVerticalBox();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("C0<", false);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener1);
      AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener2);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.remove(hierarchyListener2, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, hierarchyListener3);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, hierarchyListener3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jCheckBoxMenuItem0.addMouseMotionListener(defaultCaret0);
      HierarchyListener hierarchyListener4 = AWTEventMulticaster.add((HierarchyListener) null, hierarchyListener3);
      AWTEventMulticaster.remove(hierarchyListener4, hierarchyListener2);
      AWTEventMulticaster.remove(hierarchyListener4, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      HierarchyListener hierarchyListener5 = AWTEventMulticaster.remove(hierarchyListener2, (HierarchyListener) null);
      HierarchyListener hierarchyListener6 = AWTEventMulticaster.add(hierarchyListener5, hierarchyListener5);
      AWTEventMulticaster.add(hierarchyListener2, hierarchyListener6);
      jCheckBoxMenuItem0.removeHierarchyListener((HierarchyListener) null);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(2985);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      Vector<MapInfo> vector1 = new Vector<MapInfo>();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      Stack<MapInfo> stack1 = new Stack<MapInfo>();
      Vector<MapInfo> vector2 = new Vector<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Vector<MapInfo> vector3 = new Vector<MapInfo>();
      Vector<MapInfo> vector4 = new Vector<MapInfo>();
      Stack<MapInfo> stack2 = new Stack<MapInfo>();
      Stack<MapInfo> stack3 = new Stack<MapInfo>();
      Stack<MapInfo> stack4 = new Stack<MapInfo>();
      Vector<MapInfo> vector5 = new Vector<MapInfo>();
      Stack<MapInfo> stack5 = new Stack<MapInfo>();
      MockThread.interrupted();
      Stack<MapInfo> stack6 = new Stack<MapInfo>();
      Vector<MapInfo> vector6 = new Vector<MapInfo>();
      Stack<MapInfo> stack7 = new Stack<MapInfo>();
      MockThread.interrupted();
      Stack<MapInfo> stack8 = new Stack<MapInfo>();
      MockThread.getDefaultUncaughtExceptionHandler();
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ServerGameSession -> leaving", 45);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      RoundStateMsg roundStateMsg0 = new RoundStateMsg(15);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread.getAllStackTraces();
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(2);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) linkedList0, locale_FilteringMode0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)40;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, (String) null);
      linkedList0.add("File fubarman_properties.xml could not be copied to user directory. Properties disabled.");
      linkedList0.offer((String) null);
      SessionDetailsMsg sessionDetailsMsg0 = new SessionDetailsMsg("", linkedList0, imageIcon0, 1, (byte)1, 234);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(tileHitPlayerMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      Stack<MapInfo> stack1 = new Stack<MapInfo>();
      Stack<MapInfo> stack2 = new Stack<MapInfo>();
      Stack<MapInfo> stack3 = new Stack<MapInfo>();
      Stack<MapInfo> stack4 = new Stack<MapInfo>();
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      Stack<MapInfo> stack5 = new Stack<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Vector<MapInfo> vector1 = new Vector<MapInfo>();
      Vector<MapInfo> vector2 = new Vector<MapInfo>();
      Stack<MapInfo> stack6 = new Stack<MapInfo>();
      Stack<MapInfo> stack7 = new Stack<MapInfo>();
      Stack<MapInfo> stack8 = new Stack<MapInfo>();
      Vector<MapInfo> vector3 = new Vector<MapInfo>();
      Thread[] threadArray0 = new Thread[1];
      threadArray0[0] = (Thread) clientMsgReceiver0;
      MockThread.enumerate(threadArray0);
      Stack<MapInfo> stack9 = new Stack<MapInfo>();
      MockThread.interrupted();
      Stack<MapInfo> stack10 = new Stack<MapInfo>();
      MockThread.getAllStackTraces();
      Vector<Locale.LanguageRange> vector4 = new Vector<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MockThread.interrupted();
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      batchUpdateException0.getUpdateCounts();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      batchUpdateException0.forEach(consumer0);
      int[] intArray0 = new int[3];
      intArray0[0] = 3594;
      intArray0[1] = 3594;
      intArray0[2] = (-1);
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("LjB#Aa05b5?v", "");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.GlobalChatMsg", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      SQLWarning sQLWarning0 = new SQLWarning("");
      SQLWarning sQLWarning1 = new SQLWarning("g6~hyphN.o<*3L");
      sQLWarning1.getStackTrace();
      SQLWarning sQLWarning2 = new SQLWarning();
      Throwable throwable0 = sQLWarning2.initCause(sQLWarning1);
      throwable0.getLocalizedMessage();
      sQLWarning2.setNextWarning(sQLWarning1);
      SQLWarning sQLWarning3 = new SQLWarning("", "\"LN)aE>pvzD_:", throwable0);
      sQLWarning1.getLocalizedMessage();
      SQLWarning sQLWarning4 = new SQLWarning("g6~hyphN.o<*3L", "Sv{Qse\"!H!hD.tBm", (-1030), throwable0);
      sQLWarning0.setNextWarning(sQLWarning4);
      sQLWarning0.setNextWarning(sQLWarning0);
      SQLWarning sQLWarning5 = new SQLWarning();
      mockSocket0.close();
      SQLWarning sQLWarning6 = new SQLWarning((String) null, "Sv{Qse\"!H!hD.tBm", sQLWarning1);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException();
      batchUpdateException0.getLocalizedMessage();
      batchUpdateException0.addSuppressed(sQLWarning0);
      batchUpdateException0.setNextException(sQLWarning2);
      MockThread.getAllStackTraces();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1030);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning1.forEach(consumer0);
      intArray0[1] = (-1030);
      GlobalStateMsg globalStateMsg0 = new GlobalStateMsg(1);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalStateMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ServerGameSession -> leaving", 45);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      RoundStateMsg roundStateMsg0 = new RoundStateMsg(1);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      MockThread.getAllStackTraces();
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(1);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) linkedList0, locale_FilteringMode0);
      byte[] byteArray0 = new byte[0];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, (String) null);
      SessionDetailsMsg sessionDetailsMsg0 = new SessionDetailsMsg((String) null, list0, imageIcon0, 535, 1, 300);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionDetailsMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Socket socket0 = null;
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(socket0, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Vector<MapInfo> vector0 = new Vector<MapInfo>();
      Stack<MapInfo> stack0 = new Stack<MapInfo>();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      int[] intArray0 = new int[0];
      SQLWarning sQLWarning0 = new SQLWarning("");
      SQLWarning sQLWarning1 = new SQLWarning("k");
      SQLWarning sQLWarning2 = new SQLWarning();
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((String) null, "\"L?)a1D>pvzD_:", 0, intArray0, sQLWarning0);
      SQLWarning sQLWarning3 = new SQLWarning((String) null, "\"L?)a1D>pvzD_:", sQLWarning0);
      batchUpdateException0.setNextException(sQLWarning3);
      System.setCurrentTimeMillis((byte)0);
      sQLWarning3.getLocalizedMessage();
      sQLWarning0.setNextWarning(sQLWarning3);
      sQLWarning2.setNextWarning(sQLWarning3);
      SQLWarning sQLWarning4 = new SQLWarning((String) null);
      SQLWarning sQLWarning5 = new SQLWarning("", "nlYoVQPR:t8V", sQLWarning2);
      BatchUpdateException batchUpdateException1 = new BatchUpdateException();
      batchUpdateException0.setNextException(sQLWarning4);
      MockThread.getAllStackTraces();
      BatchUpdateException batchUpdateException2 = new BatchUpdateException("", "", 0, intArray0, batchUpdateException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(batchUpdateException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis((-1030L));
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      Box.createVerticalBox();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("C0<", false);
      Box.createVerticalBox();
      JCheckBoxMenuItem jCheckBoxMenuItem1 = new JCheckBoxMenuItem("C0<", true);
      JCheckBoxMenuItem jCheckBoxMenuItem2 = new JCheckBoxMenuItem("C0<", true);
      jCheckBoxMenuItem2.getKeyListeners();
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener1);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.add(hierarchyListener2, hierarchyListener2);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyListener3, hierarchyListener2);
      HierarchyListener hierarchyListener4 = AWTEventMulticaster.remove(hierarchyListener3, hierarchyListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove(hierarchyListener4, hierarchyListener4);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyListener3, (HierarchyListener) null);
      HierarchyListener hierarchyListener5 = AWTEventMulticaster.remove(hierarchyListener2, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove(hierarchyListener4, hierarchyListener2);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyListener) null, hierarchyListener5);
      jCheckBoxMenuItem1.repaint();
      jCheckBoxMenuItem0.removeHierarchyListener(hierarchyListener3);
      System.setCurrentTimeMillis((-1030L));
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      Proxy proxy0 = Proxy.NO_PROXY;
      Proxy proxy1 = Proxy.NO_PROXY;
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      mockSocket0.getKeepAlive();
      StackTraceElement stackTraceElement0 = new StackTraceElement("-X1xhL)V47Jzhw", "", "r0+", (-1663));
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "-X1xhL)V47Jzhw", "DB Error: ", 15);
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement1;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[4] = stackTraceElement1;
      sQLTransactionRollbackException0.setStackTrace(stackTraceElementArray0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("", "", (-1663));
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLIntegrityConstraintViolationException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
