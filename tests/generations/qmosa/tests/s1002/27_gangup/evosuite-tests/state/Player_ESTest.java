/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 07:48:02 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player((byte)0, "", "", 234);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((byte)0);
      Player player1 = new Player((-667), "=$,.\"m/+", "[*-{Z", (-667), 234);
      player1.toString();
      player1.pack();
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1204494348206366
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player((-1224), "", "", 2197, 2197);
      Player player1 = new Player((-1224), "", "", (-1224));
      player0.setJoinOK(player1, true);
      player0.setDead((-824L), true);
      player0.getTimeOfDeath();
      player1.getStrength();
      player1.getTimeOfDeath();
      player1.getTimeOfDeath();
      player1.getStrength();
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      player1.getX();
      player0.isJoinOK(player1, false);
      player0.pack();
      assertEquals((-824L), player0.getTimeOfDeath());
      
      player1.gangStrength();
      Player player2 = new Player((short)4919, "", 1);
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7567169975450474
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = (Player)player0.gangBoss();
      player0.next = (Party) player1;
      player0.isJoinOK(player0, true);
      player1.setMoney((-1870.502F));
      player0.getTimeOfDeath();
      player1.id = 810;
      player0.getMoney();
      System.setCurrentTimeMillis(4631L);
      player1.type();
      player0.gangStrength();
      System.setCurrentTimeMillis((-1121));
      player0.isJoinOK(player0, false);
      Player player2 = new Player(5, "i/OLI", "6", (short)4919);
      player2.boss = (Party) player1;
      player0.head = (Party) player2;
      player2.prev = (Party) player1;
      player0.isJoinOK(player2, false);
      player0.getMoney();
      player0.gangStrength();
      int int0 = player0.type();
      assertEquals((-1870.502F), player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-1757), (String) null, "gui.Module>rowserDialog$ModuleFilter", 2745, 2745);
      Party party0 = player0.next;
      player0.prev = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      player0.setY((-1322.59F));
      player0.getStrength();
      player0.getTimeOfDeath();
      Player player1 = new Player(0);
      player1.isJoinOK(player0, false);
      player0.getX();
      player0.isJoinOK(player1, true);
      player1.pack();
      player0.getIP();
      assertEquals((-1322.59F), player0.getY(), 0.01F);
      
      int int0 = player1.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-4201), "AQ|]2z[VKi{", (-334));
      player0.setZ((-4201));
      player0.getIP();
      byte[] byteArray0 = new byte[6];
      player0.gangStrength();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DB.");
      byteArray0[1] = (byte) (-22);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      player0.getZ();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(0, "`", "fqta&l^+v3.|K;<.Q6", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("`", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.0523132038287963
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player((-1224), "", "", 2197, 2197);
      player0.setJoinOK(player0, false);
      player0.setZ(0.0F);
      player0.getTimeOfDeath();
      player0.getStrength();
      player0.getTimeOfDeath();
      player0.isJoinOK(player0, true);
      player0.getX();
      Player player1 = new Player();
      player1.getZ();
      player0.getY();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1767), (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player((short)4919, (String) null, (String) null, (short)4919, (short)4919);
      player0.head = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals(4920, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.06799676663183
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-4201), "AQ|]2zO[VKi{", (-312));
      player0.setZ((-4201));
      player0.getIP();
      byte[] byteArray0 = new byte[6];
      player0.gangStrength();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DB.");
      byteArray0[1] = (byte) (-22);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(1, "JGhp@", "Vj(d{!hj", 1804, 3638);
      player1.setJoinOK(player0, true);
      player0.setZ((byte) (-22));
      player0.getTimeOfDeath();
      player0.setY(279.5F);
      player1.getStrength();
      player0.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      player1.isJoinOK(player0, false);
      player0.getZ();
      player0.getY();
      assertEquals((-22.0F), player0.getZ(), 0.01F);
      
      int int0 = player1.gangStrength();
      assertEquals(3638, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.140386753449457
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(416);
      player0.setMoney(416);
      player0.gangStrength();
      player0.getIP();
      Player player1 = new Player((-17152), "nnF", "", (-17152), 2093);
      player0.setJoinOK(player1, false);
      player1.next = (Party) player0;
      player1.pack();
      Player player2 = new Player((-17152), "0.0.0.0", "nnF", 3638, (-17152));
      Player player3 = new Player((short)4919);
      player1.add(player3);
      player1.setJoinOK(player3, false);
      player3.setMoney(1288.5F);
      player1.setZ((-1.0F));
      player2.getTimeOfDeath();
      player2.getTimeOfDeath();
      player0.isJoinOK(player1, true);
      player2.getX();
      player3.isJoinOK(player0, false);
      player0.getX();
      float float0 = player3.getMoney();
      assertEquals(1288.5F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 2745;
      Player player0 = new Player((-1757), "", (String) null, 630, (-1757));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.943159814531569
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(2552, "", 2552);
      Player player1 = new Player(2552, "", "Player.unpack(): *** WARNING *** data is not of proper type!", (-2526));
      player0.setZ(0.0F);
      player0.setZ(0.0F);
      player0.add(player1);
      player0.setJoinOK(player1, true);
      player0.setDead((-2922L), false);
      player0.getName();
      assertEquals((-2922L), player0.getTimeOfDeath());
      
      Player player2 = new Player(2552);
      player2.gangStrength();
      player2.setMoney(0.0F);
      player1.isJoinOK(player2, true);
      long long0 = player2.getTimeOfDeath();
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.647826624623992
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(907, "", 9216);
      player0.gangStrength();
      Player player1 = new Player(9216);
      player0.setY(9216);
      System.setCurrentTimeMillis(1);
      player0.gangStrength();
      byte[] byteArray0 = player1.pack();
      System.setCurrentTimeMillis(1L);
      player0.getX();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.gangStrength();
      player1.gangStrength();
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3068);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player((-4752), "pOxns-I8Df-", (-4752));
      Party party0 = new Party();
      player0.boss = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = player0.pack();
      player0.unpack(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.260960815263037
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player((-618), "", "JGhp@", 2147340491, 0);
      Player player1 = new Player((-1));
      player0.setJoinOK(player1, false);
      Player player2 = new Player((-1), "T~@LITS:q:NiD^MR", (-22784));
      player1.setX(0.1F);
      player2.setZ(0.0F);
      player0.getTimeOfDeath();
      player1.setY((-1935.3073F));
      player0.getStrength();
      player0.getTimeOfDeath();
      player1.isJoinOK(player2, true);
      player0.getX();
      player1.isJoinOK(player0, false);
      player1.pack();
      System.setCurrentTimeMillis((-570L));
      int int0 = player1.type();
      assertEquals((-1935.3073F), player1.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 2197;
      Player player0 = new Player((-1224), "bhLA&q", "bhLA&q", 2197, 2197);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bhLA&q");
      player0.isDead();
      float float0 = Player.MOVE_DISTANCE;
      player0.isBoss();
      player0.getZ();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(1369, "", 1369);
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.getY();
      player0.setMoney(0.0F);
      player0.type();
      player0.reset(false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte)24;
      player0.setJoinOK(player0, true);
      player0.setZ(0.0F);
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-22784), (String) null, (String) null, (-4201));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      player0.setX((-22784));
      Player player1 = new Player((-514), "=$,.\"m/+", "", 5, (-23388));
      player0.setY(0);
      player0.toString();
      assertEquals((-22784.0F), player0.getX(), 0.01F);
      
      player1.pack();
      assertEquals(5, player1.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.073534414489406
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player((-1224), "", "", 2197, 2197);
      Player player1 = new Player((-1224), "", "", (-1224));
      player0.setDead((long) 2197, true);
      player0.setJoinOK(player1, true);
      player0.getTimeOfDeath();
      player1.getStrength();
      player1.getTimeOfDeath();
      player1.getTimeOfDeath();
      Player player2 = new Player((-1224));
      player2.setJoinOK(player0, false);
      player0.setZ((-1088.0F));
      player2.setY((-1.0F));
      player0.getStrength();
      player0.pack();
      player1.getTimeOfDeath();
      player1.isJoinOK(player0, false);
      player2.getX();
      player0.isJoinOK(player1, true);
      assertEquals(2197L, player0.getTimeOfDeath());
      
      player2.pack();
      assertEquals(1, player2.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)3;
      MockPrintStream mockPrintStream0 = new MockPrintStream("module.ModuleBrowserDialog$ModuleFilter");
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "module.ModuleBrowserDialog$ModuleFilter");
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)10;
      Player player1 = new Player((byte)3, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 234);
      player0.isJoinOK(player1, false);
      player0.getIP();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-3599));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      int int0 = 4919;
      Player player0 = new Player(4919, "t*00.5Ca-eEj(9_`[u", "t*00.5Ca-eEj(9_`[u", 4919, 1323);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(4, "gwUT\"-", "gwUT\"-", 5, 5);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)3;
      player0.setX((-377.0842F));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player1 = new Player((byte)0, "", "", (byte)3, (-43));
      player1.getSubparty();
      player1.setY((byte)0);
      player1.setY((-2390.1F));
      player1.toString();
      float float0 = player0.getX();
      assertEquals((-377.0842F), float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 2197;
      Player player0 = new Player((-1224), "bhLA&q", "bhLA&q", 2197, 2197);
      player0.setJoinOK(player0, false);
      player0.setZ(0.1F);
      player0.isJoinOK(player0, true);
      player0.getX();
      player0.isConnected();
      player0.getZ();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.reset(false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      System.setCurrentTimeMillis((-708L));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.toString();
      int int0 = player0.getPictureId();
      assertEquals(0, int0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Party");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(objectOutputStream0);
      player0.pack(dataOutputStream0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.3812808488052557
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "8k=", "", 4919);
      player0.getSubparty();
      player0.setX(4919);
      player0.setDead(1392409281320L);
      player0.reset(false);
      player0.type();
      Player player1 = new Player(0, "state.Player.JoinInfo", 4919);
      Player player2 = new Player(3146, ".*[.]class$", (short)4919);
      player2.isJoinOK(player0, false);
      Player player3 = new Player((-2019), ".*[.]class$", "", 5, 16896);
      player2.prev = (Party) player1;
      player1.add(player3);
      player3.getPictureId();
      player1.pack();
      player3.pack();
      player2.getTimeOfDeath();
      player1.setJoinOK(player3, false);
      player1.setZ((short)4919);
      boolean boolean0 = player0.isConnected();
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3592809961036476
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(95, "r/G]OBDN<S)", ".*[.]class$", (-1887));
      player0.setX((-1887));
      player0.setDead((long) 95);
      player0.reset(true);
      player0.type();
      Player player1 = new Player((-2019), "r/G]OBDN<S)", (-2019));
      player0.isJoinOK(player1, false);
      player1.add(player0);
      player1.getPictureId();
      player0.pack();
      player1.getTimeOfDeath();
      player1.setJoinOK(player0, true);
      player0.setZ((-713.0F));
      player1.isConnected();
      int int0 = player0.gangStrength();
      assertEquals((-1887.0F), player0.getX(), 0.01F);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0257505895352663
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player((-15935));
      player0.setZ(735.49F);
      Player player1 = new Player((short)4919, "yy [q`*cj;</%QUNL", "yy [q`*cj;</%QUNL", (-15935), (-15935));
      player1.getTimeOfDeath();
      player1.getStrength();
      player0.getTimeOfDeath();
      player1.isJoinOK(player0, false);
      player0.getX();
      assertEquals(735.49F, player0.getZ(), 0.01F);
      
      Player player2 = new Player();
      player2.isJoinOK(player1, false);
      player2.getZ();
      player2.getY();
      int int0 = player1.gangStrength();
      assertEquals((-15935), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1224), "bhLA&q", (-1224));
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)31;
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.8901268971014358
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player((-1224), "", "", 2197, 2197);
      Player player1 = new Player((-1224), "", "", (-1224));
      player0.setJoinOK(player1, false);
      player0.setZ(0.0F);
      player0.getTimeOfDeath();
      player1.getStrength();
      player1.getTimeOfDeath();
      player0.isJoinOK(player1, false);
      player0.getX();
      Player player2 = new Player();
      // Undeclared exception!
      try { 
        player2.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(768, "4!Jzu'5jw=AD|xRE>s", (String) null, 768, (-1));
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-1), player0.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals(768, player0.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.2405555058204056
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(2567, "AT42", 2567);
      player0.setX((-2526));
      Player player1 = new Player(2567, "", "", 2567, (short)4919);
      player0.setConnected(false);
      player0.setZ(0.0F);
      player0.add(player1);
      player0.setJoinOK(player1, true);
      player0.setDead((-2922L), false);
      player0.getName();
      Player player2 = new Player(2567);
      player2.gangStrength();
      player2.setJoinOK(player1, true);
      player1.add(player0);
      player2.setDead();
      player2.setMoney((short)4919);
      boolean boolean0 = player2.isDead();
      assertEquals(1392409281320L, player2.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      int int0 = 4919;
      Player player0 = new Player(4919, "t*00.5Ca-eEj(9_`[u", "t*00.5Ca-eEj(9_`[u", 4919, 1323);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(2515, "1Q 6", (String) null, 2515);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getName();
      assertEquals(2515, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-22784), (String) null, (String) null, (-4201));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-2226));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream1);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(boolean0);
      assertEquals("Player-2226", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)10;
      byteArray0[2] = (byte) (-40);
      byteArray0[2] = (byte)31;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-40);
      byteArray0[5] = (byte) (-71);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(5);
      player0.getIP();
      player0.gangStrength();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player((-4201), "`", 792);
      player0.reset(true);
      player0.setMoney(0.0F);
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(792, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player(30362, "", "", 30362, 3380);
      player0.getIP();
      assertEquals(30362, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(3380, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      byteArray0[2] = (byte) (-10);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-10);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis(1392409281320L);
      Player player0 = new Player(4919, "t*00.5Ca-eEj(9_`[u", "t*00.5Ca-eEj(9_`[u", 4919, 1323);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)32;
      byteArray0[6] = (byte) (-21);
      byteArray0[7] = (byte)85;
      byteArray0[8] = (byte) (-116);
      player0.unpack(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        dataInputStream1.skip(4919);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FilterInputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      byteArray0[2] = (byte)4;
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.readShort();
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis((byte) (-71));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(2078, "", 272);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(272, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gui.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DB.");
      byteArray0[1] = (byte) (-22);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-334), "AQ|]2zO[VKi{", "gui.ModuleBrowserDialog$ModuleFilter", (-4201), (-156));
      int int0 = player0.gangStrength();
      assertEquals((-4201), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("AQ|]2zO[VKi{", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-156), int0);
  }
}
