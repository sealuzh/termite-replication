/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 08:40:11 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.media.jai.codec.SeekableStream;
import java.awt.AWTEventMulticaster;
import java.awt.AWTKeyStroke;
import java.awt.ComponentOrientation;
import java.awt.RenderingHints;
import java.awt.event.ItemListener;
import java.awt.image.RenderedImage;
import java.awt.image.ShortLookupTable;
import java.awt.image.renderable.ParameterBlock;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.time.Month;
import java.time.temporal.Temporal;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.media.jai.AttributedImage;
import javax.media.jai.ImageLayout;
import javax.media.jai.NullCRIF;
import javax.media.jai.NullOpImage;
import javax.media.jai.PlanarImage;
import javax.media.jai.RenderedOp;
import javax.media.jai.TiledImage;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.media.jai.operator.JPEGDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputVerifier;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      Float float0 = new Float((double) (byte)8);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      Integer.max((byte)8, 1303);
      hashMap0.put((RenderingHints.Key) null, integer1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = new Integer(1303);
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      HashMap<RenderingHints.Key, Object> hashMap2 = new HashMap<RenderingHints.Key, Object>((byte)8, (byte)8);
      RenderingHints renderingHints1 = new RenderingHints(hashMap2);
      hashMap1.put(sunHints_Key0, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.log4j.Appender");
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer7 = new Integer(1303);
      HashMap<RenderingHints.Key, String> hashMap3 = new HashMap<RenderingHints.Key, String>();
      RenderingHints renderingHints2 = new RenderingHints(hashMap2);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      RenderingHints renderingHints3 = new RenderingHints(hashMap1);
      Float float1 = new Float((float) (byte)8);
      int[] intArray0 = new int[3];
      intArray0[0] = 1303;
      intArray0[1] = (int) (byte)8;
      intArray0[2] = 1303;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1302
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "jkp(!85k]:2H+T:D");
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[2] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      visualListModel1.removeElements((-2235), (-404), false);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to org.pdfsam.guiclient.dto.VisualPageListItem
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      intArray0[3] = (-23);
      intArray0[2] = 1;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "jkp(!85k]:2H+T:D");
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[2] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to org.pdfsam.guiclient.dto.VisualPageListItem
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[7];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      intArray1[3] = (-23);
      intArray1[2] = (-1723);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      intArray1[5] = 378;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "jkp(!85k]:2H+T:D");
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[2] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      defaultTableModelArray0[3] = defaultTableModel3;
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(defaultTableModelArray0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel1.removeListDataListener(jComboBox0);
      visualListModel1.rotateClockwiseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to org.pdfsam.guiclient.dto.VisualPageListItem
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.772533376913604
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.removeFirstOccurrence((Object) null);
      linkedList0.pollLast();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.rotateClockwiseElements(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      visualListModel2.removeElements(0, 0, true);
      int[] intArray1 = new int[5];
      intArray1[1] = 1;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "or");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "V");
      int[] intArray0 = new int[8];
      intArray0[0] = (-31);
      intArray0[1] = (-346);
      intArray0[3] = (-31);
      intArray0[6] = (-31);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      intArray0[7] = (-31);
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Boolean boolean0 = new Boolean(false);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector0.trimToSize();
      vector0.add((VisualPageListItem) null);
      int[] intArray1 = new int[1];
      intArray1[0] = (-31);
      visualListModel0.moveUpIndexes(intArray1);
      int int0 = visualListModel0.getSize();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ":W]`1v~@M@g");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ":W]`1v~@M@g");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "xfwePwa\"9sdU a_dCN");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "PI\"$$1v1=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1270);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1270
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.reverseElements(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = new Boolean(true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      visualListModel0.elementChanged((VisualPageListItem) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      int int0 = (-1780);
      int int1 = (-160);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate1.and(predicate2);
      predicate1.or(predicate2);
      predicate1.negate();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      predicate2.test(defaultTableModel0);
      LinkedList<VisualPageListItem> linkedList1 = new LinkedList<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getElements();
        fail("Expecting exception: ArrayStoreException");
      
      } catch(ArrayStoreException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<0I,`tN/8N!?}$dPW");
      visualListModel0.data = null;
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<0I,`tN/8N!?}$dPW");
      visualListModel0.moveUpIndex(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(0, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<0I,`tN/8N!?}$dPW");
      visualListModel0.data = null;
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getSize();
      visualListModel0.getElements();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<0I,`tN/8N!?}$dPW");
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6982543669034142
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.pollLast();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(2, (Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel2.addAllElements((Collection<VisualPageListItem>) null);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel3.setData(visualPageListItemArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.834867619459955
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.removeFirstOccurrence((Object) null);
      VisualPageListItem visualPageListItem0 = linkedList0.pollLast();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel2.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel3.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItem0);
      visualListModel2.setData((Vector<VisualPageListItem>) stack0);
      visualListModel2.removeElements(0, 0, false);
      int[] intArray1 = new int[3];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.removeFirstOccurrence((Object) null);
      VisualPageListItem visualPageListItem0 = linkedList0.pollLast();
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      linkedList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.moveUpIndexes(intArray0);
      visualPageListItemArray0[5] = null;
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add(visualPageListItem0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      Float float0 = new Float((-1.0F));
      assertEquals((-1.0F), (float)float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.removeFirstOccurrence((Object) null);
      VisualPageListItem visualPageListItem0 = linkedList0.pollLast();
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      linkedList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.moveUpIndexes(intArray0);
      visualPageListItemArray0[5] = null;
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel1.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add(visualPageListItem0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.removeElements(0, 0, true);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      visualListModel1.setData((Vector<VisualPageListItem>) stack2);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7242986702781118
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[10];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "V");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray1[3] = 22;
      intArray1[2] = (-1723);
      intArray1[3] = (-31);
      intArray1[4] = (-31);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "V");
      visualListModel0.reverseElements(intArray1);
      intArray1[6] = 378;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Boolean boolean0 = new Boolean(false);
      vector0.add((VisualPageListItem) null);
      vector0.trimToSize();
      vector0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[7];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      intArray0[0] = (-23);
      intArray1[2] = (-1723);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      intArray1[5] = 381;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "jkp(!85k]:2H+T:D");
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(vector0, vector0);
      defaultTableModelArray0[2] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      defaultTableModelArray0[3] = defaultTableModel3;
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(defaultTableModelArray0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel1.removeListDataListener(jComboBox0);
      visualListModel1.rotateClockwiseElements(intArray1);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -23
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.139640673586039
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.undeleteElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((VisualPageListItem) null);
      vector0.ensureCapacity((-3115));
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = (-1073);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.950927259326989
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      boolean boolean0 = new Boolean(true);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.moveUpIndexes(intArray0);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel3.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      VisualListModel visualListModel4 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      VisualListModel visualListModel5 = new VisualListModel();
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel6.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[0]);
      visualListModel5.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel5.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      Boolean.valueOf(true);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      predicate2.test(predicate1);
      Month month0 = Month.MARCH;
      month0.firstDayOfYear(true);
      Predicate.isEqual((Object) month0);
      predicate1.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      predicate3.or(predicate1);
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      Predicate.isEqual((Object) defaultEditorKit_InsertTabAction0);
      predicate0.or(predicate3);
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedString(61);
      Integer.toUnsignedLong(61);
      Float.valueOf(96.76655F);
      VisualListModel visualListModel1 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      Float float0 = new Float((double) (byte)8);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer.max((byte)8, 1303);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      HashMap<RenderingHints.Key, String> hashMap2 = new HashMap<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = new Integer(1303);
      hashMap1.put(sunHints_Key0, integer5);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      RenderingHints renderingHints1 = new RenderingHints(hashMap2);
      Float float1 = new Float(1413.11F);
      visualListModel0.clearData();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[5];
      intArray0[0] = (-1958);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      hashMap1.put(sunHints_Key1, "|c[Q1s(dPd -~$,g?a");
      RenderingHints renderingHints1 = new RenderingHints(hashMap1);
      RenderingHints renderingHints2 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap2 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      hashMap0.put(sunHints_Key2, integer5);
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.put(sunHints_Key7, integer4);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable1 = new Hashtable<RenderingHints.Key, DefaultTableModel>();
      NullCRIF.getSourcelessImage();
      Float float0 = new Float((float) (-1958));
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "] using context classloader ");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.pdfsam.guiclient.dto.VisualPageListItem");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.data = vector0;
      VisualPageListItem visualPageListItem0 = null;
      int int0 = 2506;
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      linkedList0.remove();
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.data = null;
      int int0 = 4613;
      visualListModel0.getSize();
      visualListModel0.getValidElements();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndex(4613);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0168805991642629
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CJj$9Uq3f~g&a9:");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CJj$9Uq3f~g&a9:");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.data = null;
      List<VisualPageListItem> list0 = visualListModel2.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8922468981883958
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator0);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      String string0 = "@'3.vwe";
      int int0 = (-1073);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1073), "74iOvK>T;eFq", "@'3.vwe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7292646326265153
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[15];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, false);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.getElementAt(9999);
      int[] intArray1 = new int[4];
      intArray1[0] = 9999;
      intArray1[1] = 9999;
      intArray1[2] = 9999;
      intArray1[3] = 0;
      visualListModel0.removeElements(intArray1, false);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndex(0);
      visualListModel2.addAllElements(9999, (Collection<VisualPageListItem>) linkedList0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel2.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel2.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.8452040138947132
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      linkedList0.add((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements(intArray0, false);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel1.getElementAt(9999);
      int[] intArray1 = new int[4];
      intArray1[0] = 9999;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) visualListModel1;
      objectArray0[1] = (Object) visualListModel1;
      visualListModel3.getElementAt(1960);
      objectArray0[2] = null;
      objectArray0[3] = (Object) visualListModel3;
      objectArray0[4] = (Object) visualListModel3;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) visualListModel1;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      visualListModel1.addListDataListener(jComboBox0);
      intArray1[1] = 9999;
      intArray1[2] = 9999;
      intArray1[3] = 0;
      visualListModel2.rotateAnticlockwiseElements(intArray1);
      visualListModel1.undeleteElements(intArray1);
      visualListModel0.moveDownIndex(0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualPageListItemArray0[0] = null;
      visualListModel2.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel2.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.data.add((VisualPageListItem) null);
      stack0.containsAll(visualListModel0.data);
      Object object0 = new Object();
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[0];
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction2 = new DefaultEditorKit.InsertTabAction();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap1.put(sunHints_Key7, "b");
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HashMap<RenderingHints.Key, Integer> hashMap2 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key10 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key7, integer0);
      SunHints.Key sunHints_Key11 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key7, (Integer) null);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key12 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key13 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashtable0.put(sunHints_Key13, "b");
      Float float0 = new Float(927.5668F);
      assertEquals(927.5668F, (float)float0, 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.278797798387514
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      vector0.replaceAll(unaryOperator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector0.ensureCapacity((-3115));
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndexes(intArray0);
      int int0 = (-1073);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "C,F[aDYt3$DS#n&m");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "`d)dOq:!#P$6i#g*L");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "470");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "\u0004pcBF|zf=\"M8$n");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.parallelStream();
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "nNXcvFl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "`d)dO:q:!#P$6i#g*L");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "470");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "\u0004pcBF|zf=\"M8$n");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.clear();
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3423901693012243
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.stream();
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      visualListModel0.addAllElements(8, (Collection<VisualPageListItem>) linkedList0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.8931472567999292
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel3.setData(visualPageListItemArray0);
      assertEquals(6, visualListModel3.getSize());
      
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel4 = new VisualListModel();
      VisualListModel visualListModel5 = new VisualListModel();
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel6.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[0]);
      visualListModel5.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel5.getSize());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "~E6?&=U");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "root");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`d)dO:q:!#P$6i#l2*n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~E6?&=U");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Boolean boolean0 = new Boolean(false);
      vector0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7479816138546416
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.removeFirstOccurrence((Object) null);
      VisualPageListItem visualPageListItem0 = linkedList0.pollLast();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      Boolean boolean0 = new Boolean(false);
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel1.undeleteElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) null);
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.push(visualPageListItem0);
      stack0.add(visualPageListItem0);
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray1 = new int[5];
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.4459311899497576
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Stack<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = Boolean.TRUE;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate1);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) boolean0);
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      predicate4.and(predicate6);
      predicate0.or(predicate4);
      Predicate<Object> predicate7 = predicate0.and(predicate2);
      Predicate.isEqual((Object) predicate3);
      predicate7.test(predicate1);
      linkedList0.removeIf(predicate7);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      visualListModel0.setData(vector0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      vector0.setSize(1222);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      NullCRIF.getSourcelessImage();
      Float float0 = new Float(1916.9369F);
      visualListModel0.setData(vector0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "C,F[aDYt3$DS#n&m");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "p7x$#;J");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.data = null;
      int int0 = 2786;
      String string0 = "";
      String string1 = "";
      // Undeclared exception!
      try { 
        visualListModel0.addElement((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = object0;
      objectArray0[2] = object0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      jComboBox0.getInputVerifier();
      jComboBox0.getInputVerifier();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      jComboBox1.isRequestFocusEnabled();
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate2.test(predicate1);
      Month month0 = Month.MARCH;
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate<Object> predicate6 = predicate1.and(predicate3);
      predicate2.and(predicate1);
      Predicate.isEqual((Object) month0);
      month0.firstMonthOfQuarter();
      predicate6.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate7 = predicate0.and(predicate1);
      Predicate.isEqual((Object) predicate4);
      predicate6.negate();
      predicate0.or(predicate7);
      Predicate<Object> predicate8 = predicate0.and(predicate2);
      predicate8.or(predicate3);
      Predicate.isEqual((Object) predicate5);
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      vector0.add((VisualPageListItem) null);
      Boolean.valueOf(true);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate2.test(predicate1);
      Month month0 = Month.MARCH;
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      predicate3.and(predicate4);
      predicate1.and(predicate3);
      predicate2.and(predicate1);
      Predicate.isEqual((Object) month0);
      Predicate<Object> predicate5 = predicate1.negate();
      month0.firstMonthOfQuarter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate6 = predicate0.and(predicate1);
      predicate6.and(predicate0);
      predicate0.or(predicate6);
      Predicate<Object> predicate7 = predicate0.and(predicate2);
      predicate7.or(predicate3);
      Predicate.isEqual((Object) predicate5);
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String string0 = "";
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      // Undeclared exception!
      try { 
        visualListModel0.subList(887, (-742), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(887) > toIndex(-742)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CJj$9Uq3f~g&a9:");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      System.setCurrentTimeMillis(4905L);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "nNcFl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nNcFl");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " &}>)");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(false);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "nNcFl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nNcFl");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " &}>)");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Boolean boolean0 = new Boolean(false);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      int int0 = (-1);
      intArray0[0] = (-1);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "nNXcvFl");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nNXcvFl");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " &}>)");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Boolean boolean0 = new Boolean(false);
      vector0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[2] = (-5146);
      visualListModel0.subList(0, 0, true);
      intArray0[4] = (-5146);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      BiFunction<Object, Integer, Integer> biFunction0 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.remove((Object) null);
      Integer.getInteger("", 0);
      BiFunction<Object, Object, Integer> biFunction1 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction1);
      hashMap0.putAll(hashMap0);
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("`$oleF+7/");
      hashMap0.put(sunHints_Key0, integer5);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      Float.valueOf((float) (-5146));
      visualListModel0.getValidElements();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = (-2331);
      boolean boolean0 = false;
      RenderedImage renderedImage0 = null;
      Hashtable<Month, InputStream> hashtable0 = new Hashtable<Month, InputStream>();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-2331));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2331
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.2344281389559963
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate2.test(predicate1);
      Month month0 = Month.MARCH;
      predicate2.and(predicate1);
      Month month1 = Month.DECEMBER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      predicate3.and(predicate0);
      predicate0.or(predicate3);
      Predicate<Object> predicate4 = predicate0.and(predicate2);
      predicate4.or(predicate0);
      predicate4.negate();
      Predicate.isEqual((Object) predicate2);
      Boolean boolean0 = new Boolean(false);
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 1;
      // Undeclared exception!
      try { 
        visualListModel0.subList(522, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(522) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "~az~}$~{ks^W/*");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-1), (-1), false);
      Hashtable<Month, InputStream> hashtable0 = new Hashtable<Month, InputStream>();
      int int0 = (-523);
      HashMap<Integer, Month> hashMap0 = new HashMap<Integer, Month>();
      Month month0 = Month.MAY;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      hashtable0.put(month0, pipedInputStream0);
      Month month1 = Month.APRIL;
      // Undeclared exception!
      try { 
        hashtable0.put(month1, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[6];
      intArray0[0] = (-1958);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-7L));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      pipedInputStream0.markSupported();
      pipedInputStream0.close();
      pipedInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      sequenceInputStream0.available();
      visualListModel0.addAllElements((-1958), (Collection<VisualPageListItem>) null);
      pushbackInputStream0.mark(1);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Boolean boolean0 = new Boolean(false);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "pjtPU[tr~r{;@c");
      vector0.add((VisualPageListItem) null);
      HashMap<RenderingHints.Key, Temporal> hashMap0 = new HashMap<RenderingHints.Key, Temporal>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      NullCRIF.getSourcelessImage();
      Float float0 = new Float(479.07F);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      Float float0 = new Float((float) (byte) (-101));
      Float float1 = new Float((double) (byte) (-101));
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      hashMap0.put((RenderingHints.Key) null, (Integer) null);
      Integer integer0 = new Integer((byte) (-101));
      hashMap0.put((RenderingHints.Key) null, (Integer) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      hashMap0.put(sunHints_Key3, integer2);
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      hashMap1.put((RenderingHints.Key) null, (String) null);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer4 = IIPResolutionDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put((RenderingHints.Key) null, (Integer) null);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, FilterInputStream> hashtable1 = new Hashtable<RenderingHints.Key, FilterInputStream>();
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      NullCRIF.getSourcelessImage();
      Float float2 = new Float((-1130.0F));
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-78);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte)65;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      vector0.add((VisualPageListItem) null);
      Boolean.valueOf(true);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate2.test(predicate1);
      Month month0 = Month.MARCH;
      predicate2.and(predicate1);
      Predicate.isEqual((Object) month0);
      Predicate<Object> predicate4 = predicate1.negate();
      Month month1 = Month.DECEMBER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate5 = predicate0.and(predicate1);
      predicate5.and(predicate0);
      predicate0.or(predicate5);
      Predicate<Object> predicate6 = predicate0.and(predicate2);
      predicate6.or(predicate3);
      predicate6.negate();
      Predicate.isEqual((Object) predicate4);
      Boolean boolean0 = new Boolean(false);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int[] intArray0 = new int[0];
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = object0;
      objectArray0[2] = object0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      jComboBox0.getInputVerifier();
      jComboBox0.getInputVerifier();
      jComboBox0.setInputVerifier((InputVerifier) null);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      ItemListener itemListener0 = mock(ItemListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(itemListener0, itemListener0);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      jComboBox1.removeItemListener((ItemListener) null);
      jComboBox1.isRequestFocusEnabled();
      Float.valueOf((-2805.021F));
      VisualListModel visualListModel0 = new VisualListModel();
      Object object1 = visualListModel0.getElementAt(3);
      assertNull(object1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-14), true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "~E6?&=U");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      visualListModel0.getElements();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "~E6?&=U");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, ";V-MGlUHSyT*?3I;");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CJj$9Uq3f~g&a9:");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "AuY.~IZ3lqK");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Vector<String> vector2 = new Vector<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) vector2, locale_FilteringMode0);
      vector0.removeAll(list0);
      vector0.sort(comparator1);
      vector0.sort(comparator0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Float float0 = new Float((-810.0F));
      assertEquals((-810.0F), (float)float0, 0.01F);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[2] = 0;
      boolean boolean0 = false;
      visualListModel0.subList(0, 0, false);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      BiFunction<Object, Integer, Integer> biFunction0 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer0 = Integer.getInteger("", 0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      hashMap0.put(sunHints_Key0, integer1);
      BiFunction<Object, Object, Integer> biFunction1 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction1).apply(any() , any());
      hashMap0.replaceAll(biFunction1);
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      AttributedImage attributedImage0 = null;
      try {
        attributedImage0 = new AttributedImage((PlanarImage) null, integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The input argument(s) may not be null.
         //
         verifyException("javax.media.jai.RenderedImageAdapter", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction2 = new DefaultEditorKit.InsertTabAction();
      System.setCurrentTimeMillis(60000L);
      visualListModel0.moveUpIndex(450);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-2319);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2319), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2319
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-2319);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2319), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(3302, 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      HashMap<RenderingHints.Key, String> hashMap2 = new HashMap<RenderingHints.Key, String>();
      BiFunction<Object, Object, Integer> biFunction0 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.replaceAll(biFunction0);
      hashMap2.put(sunHints_Key3, "");
      RenderingHints renderingHints0 = new RenderingHints(hashMap2);
      RenderingHints renderingHints1 = new RenderingHints(hashMap2);
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer2 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key10 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      RenderingHints renderingHints2 = new RenderingHints(hashMap0);
      Float float0 = new Float(1.0F);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-1747), 4954, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = new Integer(515);
      Integer.min((-4674), 23);
      int int0 = new Integer(23);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Integer integer7 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer8 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer11 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedString(255);
      Integer.toUnsignedLong(2445);
      Float.valueOf((float) (-4674));
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(23);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(hashSet0);
      System.setCurrentTimeMillis(1L);
      visualListModel0.moveUpIndex((-1060));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedString((-224));
      Integer.toUnsignedLong((-224));
      Integer.getInteger("4294967072");
      Float.valueOf((float) 4294967072L);
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      intArray0[2] = Integer.MIN_VALUE;
      boolean boolean0 = true;
      visualListModel0.subList(0, 45, true);
      intArray0[4] = Integer.MIN_VALUE;
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      BiFunction<Object, Integer, Integer> biFunction0 = (BiFunction<Object, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap0.remove((Object) null);
      Integer.getInteger("", 45);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashMap0.put(sunHints_Key0, integer0);
      BiFunction<Object, Object, Integer> biFunction1 = (BiFunction<Object, Object, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction1).apply(any() , any());
      hashMap0.replaceAll(biFunction1);
      hashMap0.putAll(hashMap0);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer6 = JLayeredPane.FRAME_CONTENT_LAYER;
      PlanarImage planarImage0 = null;
      AttributedImage attributedImage0 = null;
      try {
        attributedImage0 = new AttributedImage((PlanarImage) null, integer5);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The input argument(s) may not be null.
         //
         verifyException("javax.media.jai.RenderedImageAdapter", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[2] = 0;
      visualListModel0.subList(0, 0, true);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      hashMap1.put(sunHints_Key2, "org.apache.log4j.ProvisionNode");
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HashMap<RenderingHints.Key, Integer> hashMap2 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      hashMap3.put(sunHints_Key3, integer0);
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key2, (Integer) 0);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      hashtable1.put(sunHints_Key5, "org.apache.log4j.ProvisionNode");
      Float float0 = new Float((float) Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1024, Integer.MIN_VALUE, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1024) > toIndex(-2147483648)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.051681985465941
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.reverseElements(intArray0);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      stack0.push(defaultTableModel0);
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>(stack0);
      stack0.remove(0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel1.moveDownIndex(0);
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-5101));
      visualListModel0.moveUpIndex((-5101));
      short[][] shortArray0 = new short[1][6];
      short[] shortArray1 = new short[0];
      shortArray0[0] = shortArray1;
      ShortLookupTable shortLookupTable0 = new ShortLookupTable(1, shortArray0);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      SeekableStream seekableStream0 = mock(SeekableStream.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(seekableStream0).canSeekBackwards();
      doReturn(false, false).when(seekableStream0).markSupported();
      doReturn(0).when(seekableStream0).read(any(byte[].class) , anyInt() , anyInt());
      RenderedOp renderedOp0 = JPEGDescriptor.create(seekableStream0, renderingHints0);
      renderedOp0.getCurrentRendering();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      hashMap0.put(sunHints_Key0, integer0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      hashMap0.put(sunHints_Key1, integer2);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      TiledImage tiledImage0 = null;
      try {
        tiledImage0 = new TiledImage(renderedOp0, 1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // - Unable to render RenderedOp for this operation.
         //
         verifyException("javax.media.jai.RenderedOp", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-3216), (-3216));
      RenderedImage renderedImage0 = null;
      Hashtable<Month, InputStream> hashtable0 = new Hashtable<Month, InputStream>();
      ImageLayout imageLayout0 = null;
      try {
        imageLayout0 = new ImageLayout((-2319), 2155, (-2319), (-2319));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The specified dimensional parameter is non-positive.
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-2319);
      RenderedImage renderedImage0 = null;
      Hashtable<Month, InputStream> hashtable0 = new Hashtable<Month, InputStream>();
      visualListModel0.removeElements(0, 1, true);
      ImageLayout imageLayout0 = null;
      try {
        imageLayout0 = new ImageLayout((-2319), 2155, (-2319), (-2319));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The specified dimensional parameter is non-positive.
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      int[] intArray0 = new int[1];
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) defaultEditorKit_InsertTabAction0;
      objectArray0[1] = (Object) defaultEditorKit_InsertTabAction0;
      objectArray0[3] = (Object) defaultEditorKit_InsertTabAction0;
      objectArray0[4] = (Object) defaultEditorKit_InsertTabAction0;
      objectArray0[5] = (Object) defaultEditorKit_InsertTabAction0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      vector1.add((Object) null);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector1);
      jComboBox1.getInputVerifier();
      jComboBox1.getInputVerifier();
      JComboBox<Object> jComboBox2 = new JComboBox<Object>();
      jComboBox2.firePropertyChange(",>$CxXov", 0L, 0L);
      Locale locale0 = Locale.TAIWAN;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      HashSet<Locale> hashSet0 = new HashSet<Locale>();
      Locale.lookup(stack0, hashSet0);
      locale0.hasExtensions();
      ComponentOrientation componentOrientation0 = ComponentOrientation.getOrientation(locale0);
      Locale locale1 = Locale.GERMAN;
      locale0.getDisplayLanguage(locale1);
      ComponentOrientation.getOrientation(locale0);
      ComponentOrientation.getOrientation(locale0);
      jComboBox2.applyComponentOrientation(componentOrientation0);
      jComboBox2.isRequestFocusEnabled();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(20000, 3735, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      int[] intArray0 = new int[0];
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction1 = new DefaultEditorKit.InsertTabAction();
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)72;
      byteArray0[2] = (byte) (-2);
      VisualListModel visualListModel0 = new VisualListModel();
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      visualListModel0.removeElements((int) (byte)72, (int) (byte) (-2), true);
      objectArray0[0] = object0;
      objectArray0[1] = (Object) visualListModel0;
      objectArray0[2] = (Object) (byte)72;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.removeElements(intArray0, true);
      Float float0 = Float.valueOf((float) (byte)0);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Hashtable<RenderingHints.Key, AWTKeyStroke> hashtable0 = new Hashtable<RenderingHints.Key, AWTKeyStroke>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      SunHints.Key sunHints_Key10 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key11 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key12 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key12, integer0);
      SunHints.Key sunHints_Key13 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key3, integer0);
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key14 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key15 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      // Undeclared exception!
      try { 
        hashtable1.put(sunHints_Key15, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int0 = 8;
      int int1 = 13;
      ImageLayout imageLayout0 = new ImageLayout(8, 8, 13, 13);
      ImageLayout imageLayout1 = imageLayout0.setHeight(8);
      Hashtable<Month, InputStream> hashtable0 = new Hashtable<Month, InputStream>();
      imageLayout1.getTileWidth((RenderedImage) null);
      imageLayout1.getValidMask();
      Hashtable<Month, Month> hashtable1 = new Hashtable<Month, Month>();
      NullOpImage nullOpImage0 = null;
      try {
        nullOpImage0 = new NullOpImage((RenderedImage) null, imageLayout1, hashtable1, (byte)28);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The input argument(s) may not be null.
         //
         verifyException("javax.media.jai.PlanarImage", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((-224), (Collection<VisualPageListItem>) linkedList0);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      hashMap0.put(sunHints_Key0, integer2);
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = hashMap0.put(sunHints_Key0, integer4);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      HashMap<RenderingHints.Key, String> hashMap2 = new HashMap<RenderingHints.Key, String>();
      hashMap2.replace((RenderingHints.Key) sunHints_Key4, "");
      hashMap2.put(sunHints_Key3, "@}{0");
      Hashtable<RenderingHints.Key, FilterInputStream> hashtable0 = new Hashtable<RenderingHints.Key, FilterInputStream>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable1 = new Hashtable<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints1 = new RenderingHints(hashtable1);
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer8 = FPXDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap1.put(sunHints_Key2, integer5);
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, FilterInputStream> hashtable3 = new Hashtable<RenderingHints.Key, FilterInputStream>();
      RenderingHints renderingHints2 = new RenderingHints(hashMap0);
      NullCRIF.getSourcelessImage();
      Float float0 = new Float(1.0F);
      assertEquals(1.0F, (float)float0, 0.01F);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = object0;
      objectArray0[2] = object0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      jComboBox0.requestFocus();
      jComboBox0.getInputVerifier();
      jComboBox0.getInputVerifier();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      jComboBox1.isRequestFocusEnabled();
      visualListModel0.removeElements(50, 50, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      short[][] shortArray0 = new short[1][5];
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-2130), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer.min(23, (-1060));
      Integer.compare(1188, 4682);
      HashMap<String, Integer> hashMap0 = new HashMap<String, Integer>();
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      Integer integer8 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer10 = JLayeredPane.DRAG_LAYER;
      Integer.toUnsignedString((-1));
      Integer.toUnsignedLong((-1060));
      Float.valueOf((float) 0);
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.appendAllElements(hashSet0);
      hashSet0.iterator();
      visualListModel0.prependAllElements(hashSet0);
      Float float0 = new Float(1703.155F);
      assertEquals(1703.155F, (float)float0, 0.01F);
  }
}
