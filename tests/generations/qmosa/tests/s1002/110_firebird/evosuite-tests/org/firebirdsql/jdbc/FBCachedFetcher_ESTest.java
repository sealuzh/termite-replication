/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 07:35:45 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.SyncFailedException;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBBlob;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBClob;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.551865459667511
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[2][6];
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)127;
      byteArray2[1] = (byte)127;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)127;
      byteArray2[5] = (byte)127;
      byteArray2[6] = (byte)0;
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)127;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte) (-38);
      byteArray3[4] = (byte)0;
      byteArray1[1] = byteArray3;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList2);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList2.add((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      fBCachedFetcher0.setFetchSize((-1));
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.getFetchSize();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals((-1), fBCachedFetcher0.getFetchSize());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][4];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)36;
      byteArray2[1] = (byte)39;
      byteArray2[2] = (byte) (-37);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)36;
      byteArray3[1] = (byte)36;
      byteArray3[2] = (byte)36;
      byteArray3[3] = (byte)36;
      byteArray3[4] = (byte)39;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-37);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte) (-113);
      byteArray5[1] = (byte)39;
      byteArray5[2] = (byte)36;
      byteArray5[3] = (byte)36;
      byteArray5[4] = (byte)36;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte)36;
      byteArray6[1] = (byte) (-37);
      byteArray6[2] = (byte) (-113);
      byteArray6[3] = (byte)119;
      byteArray6[4] = (byte) (-37);
      byteArray6[5] = (byte)39;
      byteArray6[6] = (byte)36;
      byteArray6[7] = (byte)36;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte) (-37);
      byteArray7[1] = (byte)39;
      byteArray7[2] = (byte)39;
      byteArray7[3] = (byte)39;
      byteArray7[4] = (byte)36;
      byteArray7[5] = (byte)119;
      byteArray7[6] = (byte)36;
      byteArray7[7] = (byte) (-90);
      byteArray7[8] = (byte)119;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte)119;
      byteArray8[1] = (byte) (-90);
      byteArray8[2] = (byte)36;
      byteArray8[3] = (byte) (-37);
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(Integer.MIN_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.772309434734675
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[15][6];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_tr_handle_impl1.forgetResultSets();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.absolute(2);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.relative(0);
      fBCachedFetcher0.deleteRow();
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.3229759102283163
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.offerFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet1);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.absolute(335544694);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.first();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(16384, 1373);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.327928215748768
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[9][6];
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)127;
      byteArray2[1] = (byte)127;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)127;
      byteArray2[6] = (byte)0;
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)0;
      byteArray2[4] = (byte)127;
      byteArray3[3] = (byte) (-38);
      byteArray3[4] = (byte)0;
      byteArray1[1] = byteArray3;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      linkedList0.add(byteArray1);
      linkedList1.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList1.add(byteArray0);
      fBCachedFetcher0.isBeforeFirst();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow(byteArray1);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7721623645264466
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setUpdateCount(1);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getTransaction();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.getDbHandle();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.absolute((-1681));
      assertTrue(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.357646900718293
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[9][6];
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)127;
      byteArray2[3] = (byte)127;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)127;
      byteArray2[4] = (byte)127;
      byteArray2[5] = (byte)127;
      byteArray2[6] = (byte)0;
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)0;
      byteArray2[4] = (byte)127;
      byteArray3[3] = (byte) (-38);
      byteArray3[4] = (byte)0;
      byteArray1[1] = byteArray3;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      linkedList0.add(byteArray1);
      linkedList1.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      linkedList1.add(byteArray0);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow(byteArray1);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2097744150372596
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      linkedList1.add(byteArray0);
      linkedList0.offerFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      int int0 = 336003083;
      fBCachedFetcher0.absolute(336003083);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.absolute(336003083);
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      String string0 = "OYb%lMTBpyP$CTcdHX";
      FBClob fBClob0 = new FBClob((FBBlob) null);
      // Undeclared exception!
      try { 
        fBClob0.getCharacterStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBClob", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5002923803388333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_stmt_handle_impl0.setUpdateCount(5);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.registerStatementWithTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.839381388185844
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.offerFirst(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      linkedList0.remove((Object) fBResultSet0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Object object0 = new Object();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate1.or(predicate0);
      linkedList0.removeIf(predicate0);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow(byteArray0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher1.isLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      boolean boolean0 = fBCachedFetcher1.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.944330415206685
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      fBCachedFetcher0.next();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)100;
      byteArray1[2] = (byte)59;
      byteArray1[3] = (byte)27;
      byteArray1[4] = (byte) (-109);
      byteArray1[5] = (byte)114;
      byteArray1[6] = (byte) (-55);
      byteArray1[7] = (byte)100;
      byteArray1[8] = (byte) (-3);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-3);
      byteArray2[1] = (byte)60;
      byteArray2[2] = (byte) (-3);
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte) (-3);
      byteArray2[5] = (byte)40;
      byteArray2[6] = (byte) (-109);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte) (-55);
      byteArray3[1] = (byte) (-55);
      byteArray3[2] = (byte) (-109);
      byteArray3[3] = (byte)114;
      byteArray3[4] = (byte) (-2);
      byteArray3[5] = (byte)59;
      byteArray3[6] = (byte)27;
      byteArray3[7] = (byte) (-3);
      byteArray3[8] = (byte)60;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte)40;
      byteArray4[1] = (byte)100;
      byteArray4[2] = (byte)100;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)73;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[15][6];
      linkedList0.add(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl0.setUpdateCount(4);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(5);
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl3.setExecutionPlan((String) null);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_tr_handle_impl3.forgetResultSets();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.491110345839146
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[15][6];
      linkedList0.add(byteArray0);
      byte[][] byteArray1 = new byte[6][6];
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)127;
      byteArray2[3] = (byte)0;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)127;
      byteArray2[5] = (byte)127;
      LinkedHashSet<FBLongVarCharField> linkedHashSet0 = new LinkedHashSet<FBLongVarCharField>();
      linkedList0.removeAll(linkedHashSet0);
      byteArray2[6] = (byte)0;
      byteArray1[0] = byteArray2;
      byteArray2[4] = (byte)127;
      byteArray1[1] = byteArray2;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.toArray();
      linkedList1.forEach(consumer1);
      linkedList1.offerLast(byteArray0);
      linkedList0.add(byteArray1);
      linkedList1.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow(byteArray1);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][7];
      byte[] byteArray1 = new byte[4];
      linkedList0.add(byteArray0);
      byteArray1[1] = (byte) (-112);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[15][6];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl0.unregisterTransaction();
      isc_stmt_handle_impl1.setUpdateCount(0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.clearRows();
      isc_stmt_handle_impl2.setExecutionPlan((String) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setSelectCount(0);
      isc_stmt_handle_impl0.setRsr_id(5);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl3.setRsr_rdb(isc_db_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_tr_handle_impl2.forgetResultSets();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl4.forgetResultSets();
      isc_stmt_handle_impl3.unregisterTransaction();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      fBCachedFetcher0.setFetchSize(738);
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3484725946551923
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Integer integer0 = new Integer((-4038));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      predicate4.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate4.and(predicate1);
      predicate3.test((Object) null);
      predicate5.and(predicate6);
      predicate2.or(predicate5);
      predicate0.negate();
      Object object0 = new Object();
      predicate3.or(predicate4);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet1);
      linkedList1.add((byte[][]) null);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet1);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.next();
      assertTrue(fBCachedFetcher1.isLast());
      
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.next();
      fBCachedFetcher2.updateRow((byte[][]) null);
      assertEquals(0, fBResultSet0.getRow());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative((-2475));
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl0.createDatabaseParameterBuffer();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl1.getType();
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      GDSType.getType("password");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBuffer0.deepCopy();
      GDSType.getType((String) null);
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setUpdateCount(1);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getTransaction();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl1.getDbHandle();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, 1180, 5, isc_stmt_handle_impl0, fBResultSet0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.149308838833727
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte[][] byteArray1 = new byte[9][5];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      linkedList0.add(byteArray1);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isFirst();
      try { 
        fBResultSet0.wasNull();
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Look at a column before testing null.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t2#(8");
      byteArray0[1] = (byte) (-112);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][] byteArray1 = new byte[6][3];
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-112);
      linkedList0.add((byte[][]) null);
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3440435797520256
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.add(byteArray0);
      LinkedHashSet<FBLongVarCharField> linkedHashSet0 = new LinkedHashSet<FBLongVarCharField>();
      linkedList0.removeAll(linkedHashSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.toArray();
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer1);
      linkedList2.offerLast(byteArray0);
      linkedList1.add((byte[][]) null);
      linkedList2.add(byteArray0);
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      fBCachedFetcher0.insertRow(byteArray0);
      linkedList1.add(fBResultSet0.row);
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Integer integer0 = new Integer((-4038));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate0.or(predicate3);
      Predicate<Object> predicate7 = predicate1.or(predicate2);
      Predicate<Object> predicate8 = predicate6.negate();
      predicate4.negate();
      Predicate<Object> predicate9 = predicate1.negate();
      Predicate<Object> predicate10 = predicate5.and(predicate0);
      predicate4.test(predicate0);
      Predicate<Object> predicate11 = predicate5.negate();
      Predicate<Object> predicate12 = predicate11.and(predicate0);
      Predicate<Object> predicate13 = predicate1.or(predicate7);
      Predicate<Object> predicate14 = predicate9.and(predicate2);
      Predicate<Object> predicate15 = predicate0.negate();
      Predicate.isEqual((Object) predicate12);
      Predicate<Object> predicate16 = predicate5.negate();
      predicate14.and(predicate16);
      Predicate<Object> predicate17 = predicate2.and(predicate13);
      predicate17.and(predicate11);
      predicate8.and(predicate7);
      Predicate<Object> predicate18 = predicate0.and(predicate12);
      predicate18.or(predicate10);
      predicate14.or(predicate5);
      predicate7.or(predicate2);
      Predicate<Object> predicate19 = predicate13.negate();
      Predicate<Object> predicate20 = predicate15.negate();
      predicate20.and(predicate5);
      predicate19.negate();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isEmpty();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      Integer integer0 = new Integer((-4038));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate<Object> predicate4 = predicate3.and(predicate1);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate0.or(predicate3);
      Predicate<Object> predicate7 = predicate1.or(predicate2);
      predicate6.negate();
      predicate4.negate();
      Predicate<Object> predicate8 = predicate6.and(predicate6);
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate5.and(predicate0);
      predicate4.test(predicate0);
      Predicate<Object> predicate11 = predicate5.negate();
      Predicate.isEqual((Object) predicate2);
      Predicate<Object> predicate12 = predicate1.or(predicate7);
      Predicate<Object> predicate13 = predicate9.and(predicate2);
      Predicate<Object> predicate14 = predicate0.negate();
      Predicate.isEqual((Object) predicate9);
      Predicate<Object> predicate15 = predicate13.negate();
      predicate13.and(predicate15);
      Predicate<Object> predicate16 = predicate2.and(predicate12);
      predicate16.and(predicate11);
      predicate8.and(predicate7);
      Predicate<Object> predicate17 = predicate0.and(predicate10);
      predicate17.or(predicate10);
      predicate8.test(predicate1);
      Predicate.isEqual((Object) predicate4);
      predicate13.or(predicate5);
      predicate7.or(predicate2);
      predicate14.negate();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl1.setUpdateCount(0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setSelectCount(0);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl0.setRsr_id(5);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl3.setRsr_rdb(isc_db_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.forgetResultSets();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl4.registerStatementWithTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.getRowNum();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(3398);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[2][6];
      linkedList0.add(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      Integer.sum((-1061), (-1061));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-4866);
      fBCachedFetcher0.absolute((-4866));
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][6];
      linkedList0.add(byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)127;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Object object0 = new Object();
      Predicate<JMXPrincipal> predicate2 = Predicate.isEqual(object0);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      predicate0.test(predicate2);
      Predicate<Object> predicate4 = predicate0.and(predicate1);
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate3.or(predicate1);
      Predicate<Object> predicate8 = predicate6.or(predicate5);
      predicate7.or(predicate8);
      Predicate<Object> predicate9 = predicate0.negate();
      Predicate<Object> predicate10 = predicate3.and(predicate8);
      Predicate<Object> predicate11 = predicate1.and(predicate5);
      predicate6.or(predicate8);
      Predicate<Object> predicate12 = predicate8.and(predicate11);
      predicate0.negate();
      Predicate.isEqual((Object) predicate8);
      predicate0.and(predicate5);
      predicate9.and(predicate12);
      predicate3.and(predicate10);
      predicate6.or(predicate9);
      Predicate<Object> predicate13 = predicate11.negate();
      predicate13.and(predicate10);
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.352733737349506
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      assertTrue(fBCachedFetcher0.isEmpty());
      
      fBCachedFetcher0.absolute(3398);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-112);
      fBCachedFetcher0.absolute(3398);
      byte[][] byteArray1 = new byte[6][3];
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-112);
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      boolean boolean0 = fBCachedFetcher0.last();
      linkedList0.add(byteArray1);
      linkedList0.add(byteArray1);
      byte[] byteArray3 = new byte[1];
      byteArray1[4] = byteArray3;
      byteArray1[5] = byteArray0;
      fBCachedFetcher0.isAfterLast();
      boolean boolean1 = fBCachedFetcher0.isFirst();
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = fBCachedFetcher0.isAfterLast();
      boolean boolean3 = fBCachedFetcher0.isLast();
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[9][5];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][] byteArray0 = new byte[2][6];
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Object object0 = new Object();
      Predicate<JMXPrincipal> predicate2 = Predicate.isEqual(object0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      predicate0.test(predicate2);
      Predicate<Object> predicate4 = predicate0.and(predicate1);
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate3.or(predicate1);
      Predicate<Object> predicate8 = predicate6.or(predicate5);
      Predicate<Object> predicate9 = predicate7.or(predicate8);
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate<Object> predicate11 = predicate3.and(predicate8);
      predicate9.negate();
      Predicate<Object> predicate12 = predicate1.and(predicate5);
      predicate6.or(predicate8);
      Predicate<Object> predicate13 = predicate8.and(predicate12);
      predicate0.negate();
      Predicate.isEqual((Object) predicate8);
      predicate0.and(predicate5);
      predicate10.and(predicate13);
      predicate3.and(predicate11);
      predicate6.or(predicate10);
      predicate3.or(predicate9);
      Predicate<Object> predicate14 = predicate12.negate();
      predicate14.and(predicate11);
      predicate14.and(predicate6);
      linkedList0.offerFirst(byteArray0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5732552414504064
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[15][6];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl1.setUpdateCount(4);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      isc_stmt_handle_impl2.statement = "";
      fBCachedFetcher0.close();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      fBCachedFetcher0.previous();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.866247691875803
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[l!R;iu+O-");
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setUpdateCount(5);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.forgetResultSets();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isEmpty());
      
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[15][6];
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      Integer.sum(400, 651);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setInsertCount(2);
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl0.setUpdateCount(5);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KG z4BEs|Aq");
      linkedList0.offerFirst(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      delayQueue1.poll((-5L), timeUnit0);
      delayQueue1.poll();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-10);
      byteArray2[1] = (byte)36;
      byteArray2[2] = (byte) (-1);
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte)100;
      byteArray2[5] = (byte) (-69);
      byteArray2[6] = (byte)50;
      byteArray2[7] = (byte)28;
      byteArray2[8] = (byte)80;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)36;
      byteArray3[1] = (byte) (-2);
      byteArray3[2] = (byte) (-81);
      byteArray3[3] = (byte)100;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-107);
      byteArray4[1] = (byte)28;
      byteArray4[2] = (byte)50;
      byteArray4[3] = (byte)36;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-10);
      byteArray5[1] = (byte) (-79);
      byteArray5[2] = (byte) (-10);
      byteArray5[3] = (byte) (-69);
      byteArray5[4] = (byte)50;
      byteArray5[5] = (byte)28;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      Integer.sum((-1061), 638);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.absolute((-1061));
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.sum((-1061), 638);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.absolute((-1061));
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }
}
