/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 08:42:44 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.765642137714348
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      User user0 = new User();
      derivedVariable0.setIdentifier(3745);
      user0.clone();
      user0.setCity("");
      derivedVariable0.setForm("");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(false);
      derivedVariable0.getFilePath();
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayItemIdentifier();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.clone();
      derivedVariable0.getCodeBookNumber();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath(")s{LeLR<t*PcN^(3P");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getForm();
      derivedVariable0.getColumnStart();
      derivedVariable0.getQuestionNumber();
      assertEquals(3745, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.clear();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.forEach(consumer0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.6346830647620045
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnStart = "";
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setFilePath("");
      derivedVariable0.addSourceVariable(derivedVariable2);
      derivedVariable1.getCodeBookNumber();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setFilePath("macaw.businessLayer.Variable");
      User user0 = new User(",[x3nukX`[~&h", "");
      user0.setIdentifier(146);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      derivedVariable0.getColumnEnd();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getNotes();
      derivedVariable0.getNotes();
      derivedVariable1.createVariableSummary();
      derivedVariable2.isCoded();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable1.removeSourceVariables(arrayList0);
      rawVariable0.getCleaningDescription();
      derivedVariable2.getColumnEnd();
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "J";
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User();
      rawVariable0.setForm("supportingDocument.description.saveChanges");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getFilePath();
      assertEquals("supportingDocument.description.saveChanges", rawVariable0.getForm());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.9823233709736554
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setIdentifier(77);
      rawVariable0.getCleaningDescription();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setQuestionNumber("&k%.>Dtw5#{]");
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setFilePath("");
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      arrayList1.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getCleaningStatus();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getColumnStart();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.add((Variable) rawVariable0);
      derivedVariable0.questionNumber = "";
      arrayList2.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getFilePath();
      rawVariable0.getIdentifier();
      assertEquals("77", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.getForm();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setYear("3p5R");
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setForm("  p:z9U");
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("variable.availability.label");
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges((User) null, supportingDocument1, supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8420932571263893
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("vE8");
      User user0 = new User();
      user0.setPassword("yGZ3%xsO!");
      User user1 = new User();
      user0.setPassword("macaw.system.MacawErrorType");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      User user2 = new User("yGZ3%xsO!", "|9<;uR}Y{gSD");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("|9<;uR}Y{gSD");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      User user3 = new User(")_^zR.X!>2$.Y2xdBF", (String) null);
      User user4 = new User();
      user0.setUserID("%~%oP");
      User user5 = new User();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, (Variable) null);
      User user6 = new User();
      User user7 = new User("yGZ3%xsO!", (String) null);
      derivedVariable0.getName();
      assertEquals("vE8", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6183972463477247
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable1.addOntologyTerms(arrayList1);
      rawVariable1.setLabel("yGZ3%xsO!");
      assertEquals("yGZ3%xsO!", rawVariable1.getLabel());
      
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("yGZ3%xsO!");
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList2.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DerivedVariable> function0 = (Function<Object, DerivedVariable>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, DerivedVariable> function1 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function0);
      unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function1);
      rawVariable1.setLabel((String) null);
      unaryOperator0.andThen((Function<? super ValueLabel, ? extends DerivedVariable>) function1);
      Function.identity();
      arrayList2.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList2.add(valueLabel1);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-1L));
      User user0 = new User((String) null, "kt7[&)@Btw})X");
      rawVariable1.getLabel();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8935147911123837
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword("variable.saveChanges.valueChanged");
      User user1 = new User();
      User user2 = new User("UNABLE_TO_VALIDATE_USER", "UNABLE_TO_VALIDATE_USER");
      user2.setPassword("variable.saveChanges.valueChanged");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      User user3 = new User("macaw.system.MacawErrorType", "variable.saveChanges.valueChanged");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("OiGIIcxu{bt-f9NbL7");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDocumentCode("c_r0+4");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-2525));
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, derivedVariable0);
      User user4 = new User();
      User user5 = new User("variable.alternativeVariable.label", "hB4");
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("-2525", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList2.clear();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ArrayList<ValueLabel> arrayList4 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList4.add(valueLabel0);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      arrayList4.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      // Undeclared exception!
      try { 
        rawVariable0.removeValueLabel(valueLabel2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "| wV";
      rawVariable0.codeBookNumber = "\"Edg\"Y";
      rawVariable0.getColumnStart();
      rawVariable0.getLabel();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("DUPLICATE_VALUE_LABELS_WITHIN_LIST");
      ontologyTerm0.setDescription("DUPLICATE_VALUE_LABELS_WITHIN_LIST");
      derivedVariable0.setCodeBookNumber("DUPLICATE_VALUE_LABELS_WITHIN_LIST");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      ontologyTerm0.setNameSpace("DUPLICATE_VALUE_LABELS_WITHIN_LIST");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setAlias("LIST_CHOICE");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      assertFalse(derivedVariable0.isNewRecord());
      
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.isNewRecord();
      derivedVariable0.createVariableSummary();
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0498114577141346
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("S@");
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList2);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList2.add(valueLabel2);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList4 = rawVariable0.getValueLabels();
      arrayList4.add(valueLabel1);
      ArrayList<ValueLabel> arrayList5 = derivedVariable0.getValueLabels();
      arrayList5.replaceAll(unaryOperator0);
      rawVariable0.setCleaningStatus("S@");
      ValueLabel valueLabel3 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      arrayList4.add(valueLabel0);
      Variable.validateFields(derivedVariable0);
      System.setCurrentTimeMillis((-4530L));
      User user0 = new User("S@", "S@");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("S@", rawVariable0.getCleaningStatus());
      
      rawVariable1.getLabel();
      String string0 = rawVariable1.getCategory();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      arrayList2.clear();
      arrayList1.add(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList4);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(1171);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm6.setNewRecord(true);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm11);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm11);
      assertTrue(boolean1 == boolean0);
      
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm16);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.935074116180796
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAvailability("\"mM:}?2<TA%C,-");
      rawVariable1.setLabel("yGZ3%xsO!");
      rawVariable1.setCleaned(true);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList1.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel2);
      Variable.validateFields(rawVariable1);
      System.setCurrentTimeMillis(0L);
      User user0 = new User("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("yGZ3%xsO!", rawVariable1.getLabel());
      assertEquals(3, arrayList2.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8255933463365914
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("yGZ3%xsO!");
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList2.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList2.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList2.add((ValueLabel) null);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-1448L));
      User user0 = new User("yGZ3%xsO!", "general.fieldValue.blank");
      ArrayList<MacawChangeEvent> arrayList3 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("yGZ3%xsO!", rawVariable1.getLabel());
      assertEquals(2, arrayList3.size());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8129402247536746
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("yGZ3%xsO!");
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("yGZ3%xsO!");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DerivedVariable> function0 = (Function<Object, DerivedVariable>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, DerivedVariable> function1 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function0);
      unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function1);
      unaryOperator0.andThen((Function<? super ValueLabel, ? extends DerivedVariable>) function1);
      Function.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel1);
      Variable.validateFields(rawVariable0);
      User user0 = new User((String) null, "G&QVj4H&VuW?Rw3");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable1.getLabel();
      assertEquals("yGZ3%xsO!", rawVariable1.getLabel());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.6100874836686314
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.isNewRecord();
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("~ ~s2#6X67WP@%?0NK");
      derivedVariable0.getFilePath();
      assertEquals("~ ~s2#6X67WP@%?0NK", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0497288062553367
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("J");
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList3.add(valueLabel1);
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList5 = derivedVariable0.getValueLabels();
      arrayList4.add(valueLabel2);
      rawVariable0.getValueLabels();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel4);
      arrayList5.add(valueLabel0);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-4530L));
      User user0 = new User("J", "J");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setColumnStart("J");
      Variable.detectFieldChanges(user0, derivedVariable2, rawVariable0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      User user1 = new User("J", "J");
      assertEquals("", user1.getPhone());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.821130325493228
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("H5V]]{^|~|@}+{Zk=");
      rawVariable1.setCleaned(true);
      ArrayList<ValueLabel> arrayList2 = rawVariable1.getValueLabels();
      rawVariable1.setValueLabels(arrayList2);
      rawVariable1.createVariableSummary();
      Variable.validateFields(rawVariable1);
      User user0 = new User("UNABLE_TO_GET_STUDY_YEARS", "UNABLE_TO_GET_STUDY_YEARS");
      rawVariable0.getFilePath();
      boolean boolean0 = rawVariable1.isCleaned();
      assertEquals("H5V]]{^|~|@}+{Zk=", rawVariable1.getLabel());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.007723510833443
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("O2WB~@Ups");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("T]i<r20~\"{");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList2);
      arrayList2.stream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      arrayList3.add(ontologyTerm0);
      derivedVariable0.getNotes();
      derivedVariable1.removeOntologyTerms(arrayList1);
      User user0 = new User("", "");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      User user1 = new User((String) null, "T]i<r20~\"{");
      derivedVariable0.getAlias();
      assertEquals("T]i<r20~\"{", derivedVariable0.getAlias());
      
      derivedVariable2.getColumnEnd();
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.689469326768329
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.setSupportingDocuments(arrayList0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(3496);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.setMissingValue(true);
      ArrayList<OntologyTerm> arrayList4 = rawVariable1.getOntologyTerms();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(arrayList4.equals((Object)arrayList2));
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList2.clear();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      ontologyTerm10.setOntologyName("#k}gV][@r(");
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      ontologyTerm12.setIdentifier(3298);
      ontologyTerm3.setDescription("q");
      derivedVariable0.updateOntologyTerm(ontologyTerm12);
      System.setCurrentTimeMillis((-1356L));
      derivedVariable0.getDisplayName();
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.6636093674910186
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setLabel("|9<;uR}Y{gSD");
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("|9<;uR}Y{gSD");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      User user1 = new User("m<rR}@Z{&%0", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.questionNumber = "m<rR}@Z{&%0";
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("m<rR}@Z{&%0", derivedVariable1.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0789341084926365
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      arrayList1.clear();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ontologyTerm2.setNameSpace(";C2");
      arrayList3.add(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList2);
      arrayList2.add(ontologyTerm2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user0 = new User("YA/'fgIUp", "Y[O]Z1#vr");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setCategory("variable.alias.label");
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("variable.alias.label", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.6956558371922905
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("O2WB~@Ups");
      supportingDocument0.setDescription("O2WB~@Ups");
      derivedVariable0.setYear("O2WB~@Ups");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      supportingDocument0.setIdentifier((-1612543461));
      supportingDocument0.setTitle("Nh,]>XzZK@yk}?.L");
      derivedVariable0.setIdentifier((-1612543461));
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setFilePath("");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      arrayList1.add((Variable) rawVariable0);
      arrayList1.clear();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getForm();
      derivedVariable0.getAlias();
      derivedVariable0.getName();
      System.setCurrentTimeMillis(0L);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.clone();
      derivedVariable0.clone();
      rawVariable0.clone();
      derivedVariable0.createVariableSummary();
      assertEquals("O2WB~@Ups", derivedVariable0.getYear());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setLastName("user.city.label");
      user0.setAffiliation("O2WB~@U(Wps");
      user0.setLastName("O2WB~@U(Wps");
      User user1 = new User("variable.questionNumber.label", "variable.questionNumber.label");
      user0.setAffiliation("$VALES");
      user0.setLastName("user.city.label");
      user0.setAffiliation("R?S&sd*'U:YaN");
      rawVariable0.setQuestionNumber("variable.name.label");
      User user2 = new User("macaw.systemMacawMesages", "UNABLE_TO_UPDATE_VALUE_LABELS");
      user0.setPostCode((String) null);
      user1.setPassword("general.erro<.blankFieMd");
      rawVariable0.createVariableSummary();
      User user3 = new User("user.city.label", "");
      user3.setCity("$VALES");
      User user4 = new User();
      user3.setUserID("F)QNFw");
      User user5 = new User();
      Variable.detectChangesInAlternativeVariable(user5, rawVariable0, rawVariable0);
      User user6 = new User();
      User user7 = new User("*8{$wC#/", "ql");
      assertEquals("", user7.getCounty());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(79);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("k<d{?fX<^BmA");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "+QgxryOkc`M(>~";
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = derivedVariable0.getName();
      assertEquals("", string1);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9494499710671946
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("yroxsO");
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("yroxsO");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      UnaryOperator.identity();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel4.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList1.add(valueLabel0);
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList2.add(valueLabel4);
      ArrayList<ValueLabel> arrayList3 = rawVariable1.getValueLabels();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      rawVariable1.removeValueLabel(valueLabel4);
      arrayList3.add(valueLabel2);
      Variable.validateFields(rawVariable1);
      System.setCurrentTimeMillis(0L);
      User user0 = new User("yroxsO", "yroxsO");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      assertEquals("yroxsO", rawVariable1.getLabel());
      
      rawVariable2.getLabel();
      assertEquals("Unknown", rawVariable2.getAvailability());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.91744264088867
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("macaw.businessLayer.ValueLabel$EditingOperationType");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      derivedVariable1.getOntologyTerms();
      derivedVariable1.getNotes();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>(arrayList2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList1);
      User user0 = new User("T]i<r20~\"{", "");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable3, derivedVariable0);
      OntologyTerm ontologyTerm1 = null;
      User user1 = new User();
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges(user1, ontologyTerm0, (OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.86257310963418
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("J");
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList4.retainAll(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList3.add(valueLabel1);
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList5 = new ArrayList<ValueLabel>();
      arrayList4.add(valueLabel2);
      rawVariable0.getValueLabels();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel4);
      arrayList5.add(valueLabel0);
      System.setCurrentTimeMillis((-4530L));
      User user1 = new User("J", "J");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      assertEquals("J", rawVariable0.getLabel());
      
      rawVariable1.getLabel();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.7638018578001406
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "Y]ZE<pZvII";
      rawVariable0.setColumnEnd("Y]ZE<pZvII");
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      rawVariable0.notes = "";
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setColumnStart("R?S&sd*'U:YaN");
      derivedVariable1.columnStart = null;
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.notes = "Y]ZE<pZvII";
      Variable.validateFields(rawVariable0);
      derivedVariable0.setCleaningDescription("Y]ZE<pZvII");
      derivedVariable1.getCategory();
      derivedVariable0.getFilePath();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.addOntologyTerms(arrayList1);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.cloneAttributes(rawVariable0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.notes = "|9<;uR}Y{gSD";
      derivedVariable0.addSourceVariable(derivedVariable1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("|9<;uR}Y{gSD", rawVariable0.getNotes());
      assertFalse(arrayList2.equals((Object)arrayList0));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.8399571922670512
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("_nuoFpdFFvwnp>jDz");
      rawVariable0.setNotes("_nuoFpdFFvwnp>jDz");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addSupportingDocument((SupportingDocument) null);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable2);
      rawVariable1.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("_nuoFpdFFvwnp>jDz");
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable3.getValueLabels();
      rawVariable0.getIdentifier();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable1.createVariableSummary();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      assertEquals("_nuoFpdFFvwnp>jDz", rawVariable0.getNotes());
      
      rawVariable1.setIdentifier(0);
      rawVariable3.getDisplayItemIdentifier();
      rawVariable5.getDisplayItemIdentifier();
      rawVariable1.getAlternativeVariable();
      rawVariable3.cloneAttributes(rawVariable5);
      assertEquals(0, rawVariable5.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.742085155353616
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setLabel("|9<;uR}Y{gSD");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("|9<;uR}Y{gSD");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList3);
      arrayList3.stream();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setQuestionNumber("|9<;uR}Y{gSD");
      derivedVariable0.getNotes();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      rawVariable0.getQuestionNumber();
      assertEquals("|9<;uR}Y{gSD", rawVariable0.getLabel());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = null;
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      String string0 = derivedVariable0.getFilePath();
      assertNotNull(string0);
      
      String string1 = derivedVariable0.getColumnEnd();
      assertNotNull(string1);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(60);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.813785410672403
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList1.clear();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm10.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm6);
      derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList1.clear();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList2.clear();
      arrayList1.add(ontologyTerm4);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.6715783101550863
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("3Oa)64Lp8,>qVNropN");
      derivedVariable0.setAvailability("3Oa)64Lp8,>qVNropN");
      derivedVariable0.columnEnd = "3Oa)64Lp8,>qVNropN";
      ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear((String) null);
      rawVariable0.clone();
      derivedVariable0.getOntologyTerms();
      rawVariable0.clone();
      rawVariable0.setCodeBookNumber((String) null);
      ontologyTerm0.clone();
      derivedVariable0.getOntologyTerms();
      ArrayList<Variable> arrayList0 = null;
      ontologyTerm0.setNameSpace("variable.form.label");
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("o+EdJ`1wymQdZ[J`yZK");
      rawVariable0.setIdentifier((-536));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setNotes("_nuoFpdFFvwnp>jDz");
      rawVariable1.setNotes("o+EdJ`1wymQdZ[J`yZK");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable2);
      User user0 = new User("o+EdJ`1wymQdZ[J`yZK", "o+EdJ`1wymQdZ[J`yZK");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable1.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("+&Cc");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user1 = new User((String) null, "\"s(?*VXt^e");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable2);
      rawVariable1.getNotes();
      assertEquals("o+EdJ`1wymQdZ[J`yZK", rawVariable1.getNotes());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.isCleaned.saveChanges.changedToNotClean";
      derivedVariable0.questionNumber = "variable.isCleaned.saveChanges.changedToNotClean";
      Variable.validateFields(derivedVariable0);
      System.setCurrentTimeMillis((-1780L));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear("T]i<r20~\"{");
      rawVariable1.setLabel("H5V]]{^|~|@}+{Zk=");
      rawVariable1.setCleaned(true);
      rawVariable1.createVariableSummary();
      Variable.validateFields(rawVariable1);
      System.setCurrentTimeMillis((-4530L));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.7048489620387994
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.setCleaningDescription("&2ZcKJ1$m;uH(");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      rawVariable1.setQuestionNumber("&2ZcKJ1$m;uH(");
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable1.isCoded();
      rawVariable0.isCoded();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.497768532766253
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(137);
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList2);
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList2);
      arrayList2.stream();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      rawVariable0.getSupportingDocuments();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      assertTrue(arrayList4.isEmpty());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.949549981068195
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("J");
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList3.add(valueLabel1);
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList5 = new ArrayList<ValueLabel>();
      arrayList4.add(valueLabel2);
      rawVariable0.getValueLabels();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel4);
      arrayList5.add(valueLabel0);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-4530L));
      User user1 = new User("J", "J");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      assertEquals("J", rawVariable0.getLabel());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add("ontologyTerm.nameSpace.label");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.trimToSize();
      arrayList2.add(supportingDocument0);
      arrayList2.containsAll(arrayList0);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.623952200643869
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList1.clear();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm11);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm8);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(60);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("k<d{?fX<^BmA");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(118);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      arrayList1.replaceAll(unaryOperator0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("bi@GH`5/NZr,>Kf");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      arrayList2.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      arrayList2.add(supportingDocument5);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      User user0 = new User("variable.name.label", "\"s(?*VXt^e");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9173385067639175
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("supportingDocument.description.saveChanges", "NH<Ijx-zr");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setFilePath("3Oa)64Lp8,>qVNropN");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      User user1 = new User();
      derivedVariable0.setColumnEnd("3Oa)64Lp8,>qVNropN");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("yH~x0^+");
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable1);
      derivedVariable1.setQuestionNumber("variable.isCoded.label");
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getLabel();
      assertEquals("yH~x0^+", derivedVariable1.getForm());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0498911834575773
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("o+EdJ`1wymQdZ[J`yZK");
      rawVariable0.setNotes("_nuoFpdFFvwnp>jDz");
      rawVariable0.setNotes("o+EdJ`1wymQdZ[J`yZK");
      rawVariable0.setLabel("5-0::OS|Q|1rp5_N");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList2.add(valueLabel0);
      UnaryOperator.identity();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      arrayList2.add(valueLabel1);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel3);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis(686L);
      User user0 = new User("vE8", "Z%`DXIxl");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getLabel();
      assertEquals("5-0::OS|Q|1rp5_N", rawVariable0.getLabel());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.096859959447161
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.setIdentifier(109);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("S@");
      rawVariable0.setLabel("S@");
      rawVariable0.setCleaned(true);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList2.add((ValueLabel) null);
      rawVariable0.setValueLabels(arrayList2);
      ArrayList<ValueLabel> arrayList3 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList3.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      arrayList3.add(valueLabel1);
      arrayList3.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      rawVariable0.removeValueLabel((ValueLabel) null);
      arrayList3.add((ValueLabel) null);
      Variable.validateFields(derivedVariable0);
      System.setCurrentTimeMillis((-4530L));
      User user0 = new User((String) null, "+&Cc");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getLabel();
      assertEquals("S@", rawVariable0.getAlias());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(60);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      User user0 = new User("O2WB~@Ups", "\"s(?*VXt^e");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("O2WB~@Ups");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("O2WB~@Ups", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.0499681361316826
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("o+EdJ`1wymQdZ[J`yZK");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setNotes("_nuoFpdFFvwnp>jDz");
      rawVariable1.setNotes("o+EdJ`1wymQdZ[J`yZK");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable2);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable2.setValueLabels(arrayList1);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList1.add(valueLabel0);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList3 = rawVariable0.getValueLabels();
      arrayList3.add(valueLabel2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      arrayList3.replaceAll(unaryOperator0);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel4);
      arrayList3.add(valueLabel4);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis(0L);
      User user0 = new User("o+EdJ`1wymQdZ[J`yZK", "+&Cc");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("o+EdJ`1wymQdZ[J`yZK", rawVariable0.getDisplayName());
      
      rawVariable2.getLabel();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.8814374294634812
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("yGZ3%xsO!");
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("yGZ3%xsO!");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DerivedVariable> function0 = (Function<Object, DerivedVariable>) mock(Function.class, new ViolatedAssumptionAnswer());
      rawVariable0.setYear("UNABLE_TO_UPDATE_USER");
      Function<Object, DerivedVariable> function1 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function0);
      unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function1);
      unaryOperator0.andThen((Function<? super ValueLabel, ? extends DerivedVariable>) function1);
      Function.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel1);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-1L));
      User user0 = new User((String) null, "kt7[&)@Btw})X");
      rawVariable1.getLabel();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("UNABLE_TO_UPDATE_USER", rawVariable0.getYear());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.3729499867192074
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("O2WB~@U(Wps");
      user0.setLastName("O2WB~@U(Wps");
      User user1 = new User("O2WB~@U(Wps", "m<rR}@Z{&%0");
      user1.setLastName((String) null);
      User user2 = new User("UNABLE_TO_UPDATE_VALUE_LABELS", "UNABLE_TO_UPDATE_VALUE_LABELS");
      user0.setPostCode("UNABLE_TO_UPDATE_VALUE_LABELS");
      user2.setPassword("UNABLE_TO_GET_COMPLETE_VARIABLE_DATA");
      User user3 = new User("F)QNFw", (String) null);
      User user4 = new User();
      User user5 = new User();
      Variable.detectChangesInAlternativeVariable(user5, rawVariable0, rawVariable0);
      User user6 = new User();
      User user7 = new User("UNABLE_TO_CREATE_CATEGORY", "EMPTY_LIST_CHOICE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "EMPTY_LIST_CHOICE";
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      derivedVariable0.setIdentifier(2147483645);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        arrayList1.add(1215, (Variable) derivedVariable1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1215, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList0.parallelStream();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList2);
      derivedVariable1.columnStart = "BSAjc\"y1";
      derivedVariable1.getFilePath();
      derivedVariable1.getColumnStart();
      assertEquals("BSAjc\"y1", derivedVariable1.getColumnStart());
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.4960054686834225
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList2.clear();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList2.add(ontologyTerm9);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      ontologyTerm12.setNewRecord(true);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      ontologyTerm11.setNewRecord(true);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm9);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm17 = new OntologyTerm();
      OntologyTerm ontologyTerm18 = new OntologyTerm();
      OntologyTerm ontologyTerm19 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm19);
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCleaningStatus();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(3496);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("U/*mpgH");
      rawVariable0.getFilePath();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      assertEquals("U/*mpgH", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList2.clear();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      derivedVariable0.setFilePath("nlAjU%I.&oaMm{");
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("nlAjU%I.&oaMm{", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList3 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList3);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      ontologyTerm6.setNewRecord(true);
      ontologyTerm6.setNewRecord(false);
      ontologyTerm5.setNewRecord(false);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm16);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm17 = new OntologyTerm();
      OntologyTerm ontologyTerm18 = new OntologyTerm();
      OntologyTerm ontologyTerm19 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      String string0 = derivedVariable0.getCategory();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.3448446247581223
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("!IzX");
      User user0 = new User();
      user0.setLastName("O2WB~@Ups");
      user0.setPostCode("!IzX");
      user0.setPassword(" Pxd]/[@mGqu");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User((String) null, "O2WB~@Ups");
      rawVariable0.getColumnEnd();
      rawVariable0.createVariableSummary();
      assertEquals("!IzX", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getYear();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.20571469225704
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      arrayList3.clear();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList3.add(ontologyTerm1);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm7.setNewRecord(true);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm11);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm10);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm12);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.6656801458058395
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      User user0 = new User("\"s(?*VXt^e", "O2WB~@Ups");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "+&Cc";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5010693989799204
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      arrayList1.clear();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ontologyTerm2.setNameSpace(";C2");
      derivedVariable0.removeOntologyTerms(arrayList2);
      arrayList2.add(ontologyTerm2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm11);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm8);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.364957654223296
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      arrayList1.clear();
      arrayList2.add(ontologyTerm2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm6);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAvailability("\"mM:}?2<TA%C,-");
      rawVariable1.setLabel("yGZ3%xsO!");
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList1.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel2);
      Variable.validateFields(rawVariable1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.7248554783121244
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.columnEnd = "tXK{VeNkk3";
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.setLabel("tXK{VeNkk3");
      assertEquals("tXK{VeNkk3", rawVariable0.getLabel());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.stream();
      arrayList0.clear();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("tQ:lvtmwRPKHB]S`5)E");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.7321323361189505
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("o+EdJ`1wymQdZ[J`yZK");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setNotes("_nuoFpdFFvwnp>jDz");
      rawVariable1.setNotes("o+EdJ`1wymQdZ[J`yZK");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable2);
      User user0 = new User("o+EdJ`1wymQdZ[J`yZK", "o+EdJ`1wymQdZ[J`yZK");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      rawVariable1.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("+&Cc");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user1 = new User((String) null, "\"s(?*VXt^e");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable2);
      rawVariable0.clone();
      assertEquals("o+EdJ`1wymQdZ[J`yZK", rawVariable0.getName());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.7163652509834257
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("J");
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList4.retainAll(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList3.add(valueLabel1);
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList5 = new ArrayList<ValueLabel>();
      arrayList4.add(valueLabel2);
      rawVariable0.getValueLabels();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel4);
      User user1 = new User("user.affiliation.label", "dYv;CyjNX+Pqg\u0006");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("J", rawVariable0.getLabel());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.7377934487017592
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("+7");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user1 = new User("variable.cleaningStatus.label", "MISSING_DISPLAY_LIST_SELECTOR");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      rawVariable1.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("dYv;CyjNX+Pqg\u0006");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user2 = new User((String) null, "S)e&wD{qZ<p^bJ");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      assertEquals("+7", derivedVariable0.getName());
      
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("+&Cc");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("o+EdJ`1wymQdZ[J`yZK");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.clear();
      assertEquals("+&Cc", rawVariable0.getName());
      
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm3);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList3.add(ontologyTerm4);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm6.setNewRecord(true);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.9448189437408714
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setNotes("");
      rawVariable1.setNotes("`L[2eCgA/1");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setAlternativeVariable(rawVariable3);
      User user0 = new User("#!=L1", "}k~^]Ax,-@LD|");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, derivedVariable0);
      rawVariable1.createVariableSummary();
      assertEquals("`L[2eCgA/1", rawVariable1.getNotes());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("S@");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user1 = new User("S@", "`L[2eCgA/1");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList3 = Variable.detectFieldChanges(user0, rawVariable3, rawVariable2);
      assertTrue(arrayList3.isEmpty());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("H5V]]{^|~|@}+{Zk=");
      rawVariable1.createVariableSummary();
      Variable.validateFields(rawVariable1);
      System.setCurrentTimeMillis((-4530L));
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("vE8");
      User user0 = new User();
      user0.setPassword("yGZ3%xsO!");
      User user1 = new User();
      user0.setPassword("macaw.system.MacawErrorType");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable1);
      User user2 = new User("yGZ3%xsO!", "|9<;uR}Y{gSD");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("macaw.system.MacawErrorType");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      derivedVariable0.createVariableSummary();
      User user3 = new User((String) null, (String) null);
      User user4 = new User();
      user3.setUserID("");
      User user5 = new User();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user3, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      arrayList2.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList3.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setNewRecord(true);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      derivedVariable0.setQuestionNumber(";GFE>");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm12);
      assertEquals(";GFE>", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList1.clear();
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      ontologyTerm2.setNewRecord(false);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      ontologyTerm9.setNewRecord(true);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm10);
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm14);
      OntologyTerm ontologyTerm17 = new OntologyTerm();
      OntologyTerm ontologyTerm18 = new OntologyTerm();
      OntologyTerm ontologyTerm19 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable1.setOntologyTerms(arrayList2);
      rawVariable1.setLabel("yGZ3%xsO!");
      assertEquals("yGZ3%xsO!", rawVariable1.getLabel());
      
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("yGZ3%xsO!");
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      arrayList3.add(valueLabel1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      arrayList4.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.6984064074485046
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList2.clear();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList2.add(ontologyTerm9);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      ontologyTerm12.setNewRecord(true);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      ontologyTerm11.setNewRecord(true);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm9);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm17 = new OntologyTerm();
      OntologyTerm ontologyTerm18 = new OntologyTerm();
      OntologyTerm ontologyTerm19 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm19);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.786558993842524
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setLastName("user.city.label");
      user0.setAffiliation("O2WB~@U(Wps");
      user0.setLastName("O2WB~@U(Wps");
      User user1 = new User("O2WB~@U(Wps", "m<rR}@Z{&%0");
      user1.setLastName((String) null);
      User user2 = new User("UNABLE_TO_UPDATE_VALUE_LABELS", "UNABLE_TO_UPDATE_VALUE_LABELS");
      user2.setFirstName((String) null);
      user0.setPostCode("UNABLE_TO_UPDATE_VALUE_LABELS");
      user2.setPassword("UNABLE_TO_GET_COMPLETE_VARIABLE_DATA");
      User user3 = new User("F)QNFw", (String) null);
      User user4 = new User();
      user0.setUserID("user.city.label");
      User user5 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user5, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      User user6 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user5, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.isNewRecord();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setColumnStart("3VJm[b%MvxrQdQ}a");
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.clear();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList2);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      derivedVariable0.containsOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertEquals("3VJm[b%MvxrQdQ}a", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setForm((String) null);
      rawVariable2.addOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setMissingValue(false);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.0003893532655903
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("jIptm-");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("J");
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList4.retainAll(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      rawVariable0.addOntologyTerms(arrayList1);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList3.add(valueLabel1);
      UnaryOperator.identity();
      ArrayList<ValueLabel> arrayList5 = new ArrayList<ValueLabel>();
      arrayList4.add(valueLabel2);
      rawVariable0.getValueLabels();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel4);
      arrayList5.add(valueLabel0);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-4530L));
      User user1 = new User("J", "J");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("J", rawVariable0.getLabel());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningDescription("Unknown");
      rawVariable1.setLabel("y;Z3%xsO7");
      assertEquals("Unknown", rawVariable1.getCleaningDescription());
      
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("y;Z3%xsO7");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) arrayList1;
      objectArray0[1] = (Object) valueLabel0;
      objectArray0[2] = (Object) "y;Z3%xsO7";
      objectArray0[3] = (Object) "Unknown";
      objectArray0[4] = (Object) valueLabel0;
      objectArray0[5] = (Object) rawVariable1;
      objectArray0[6] = (Object) valueLabel1;
      arrayList1.toArray(objectArray0);
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DerivedVariable> function0 = (Function<Object, DerivedVariable>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, DerivedVariable> function1 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function0);
      Function<Object, DerivedVariable> function2 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function1);
      Function<Object, DerivedVariable> function3 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function2);
      unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function3);
      UnaryOperator<ValueLabel> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.andThen((Function<? super ValueLabel, ? extends DerivedVariable>) function2);
      Function.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel3 = new ValueLabel();
      arrayList2.add(valueLabel3);
      Variable.validateFields(rawVariable0);
      User user0 = new User(">#O]qR#`X<s`DndS", "DcJr'b,kOE|2G\"I&LU");
      rawVariable0.getLabel();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.8156443917359213
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList2.clear();
      arrayList2.add(ontologyTerm1);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.columnStart = null;
      ontologyTerm5.setNewRecord(true);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm4);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm7);
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.clear();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setTerm("]-R9Tig\"9B$km");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setOntologyName("");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
      
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      derivedVariable0.getSourceVariables();
      derivedVariable1.getNotes();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.89425613647302
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setLastName("user.city.label");
      user0.setAffiliation("O2WB~@U(Wps");
      user0.setLastName("O2WB~@U(Wps");
      User user1 = new User("variabe.questionNumber.l\"bel", "variabe.questionNumber.l\"bel");
      user0.setAffiliation("$VALES");
      user0.setLastName("user.city.label");
      user1.setAffiliation("R?S&sd*'U:YaN");
      User user2 = new User("macaw.systemMacawMesages", "UNABLE_TO_UPDATE_VALUE_LABELS");
      user0.setPostCode((String) null);
      user1.setPassword("general.erro<.blankFieMd");
      User user3 = new User("user.city.label", "");
      User user4 = new User();
      user3.setUserID("F)8QNFw");
      User user5 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user5, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      User user6 = new User();
      User user7 = new User("U=e<", "ql");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList3.add(ontologyTerm5);
      arrayList1.clear();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList1.add(ontologyTerm9);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      ontologyTerm2.setOntologyName("E?f!Dv;N@e#@W$");
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      ontologyTerm4.setDescription("general.fieldValue.blank");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      System.setCurrentTimeMillis((-1356L));
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      int int0 = derivedVariable0.getIdentifier();
      assertEquals(0, int0);
      
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.clear();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm8);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm10);
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3126328398468408
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      rawVariable1.getOntologyTerms();
      rawVariable2.removeOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList2.clear();
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      boolean boolean1 = derivedVariable0.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean1 == boolean0);
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm4);
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.357285019952196
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList1.clear();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      arrayList2.add(ontologyTerm2);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      ontologyTerm10.setNewRecord(false);
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm10);
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      derivedVariable0.setColumnEnd("UNABLE_TO_CHECK_USER_EXISTS");
      derivedVariable0.containsOntologyTerm(ontologyTerm14);
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm7);
      assertEquals("UNABLE_TO_CHECK_USER_EXISTS", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setOntologyName((String) null);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      System.setCurrentTimeMillis((-492L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "M~ja?h&B{E#A";
      String string0 = derivedVariable0.getDisplayName();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.811064628486783
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setNotes((String) null);
      rawVariable2.setNotes("[r]BQw7|EL`t-(KF");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User();
      user0.setStatus("[r]BQw7|EL`t-(KF");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable3, rawVariable2);
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_UPDATE_USER");
      RawVariable rawVariable4 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.getValueLabels();
      rawVariable0.getIdentifier();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable4.createVariableSummary();
      RawVariable rawVariable6 = new RawVariable();
      rawVariable1.getSupportingDocuments();
      rawVariable4.setIdentifier((-391));
      rawVariable3.cloneAttributes(rawVariable0);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable7 = new RawVariable();
      rawVariable1.getDisplayItemIdentifier();
      rawVariable7.getDisplayItemIdentifier();
      rawVariable3.getAlternativeVariable();
      // Undeclared exception!
      try { 
        rawVariable1.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.3539190349214616
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable2 = new RawVariable();
      arrayList1.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setAlternativeVariable(derivedVariable0);
      rawVariable3.setCoded(true);
      User user0 = new User("u|?v$5/tMH\"PE$[$Vf_", "macaw.system.MacawErrorType");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable3);
      rawVariable3.createVariableSummary();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument2.setTitle("supportingDocument.description.saveChanges");
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      arrayList1.add(supportingDocument3);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      User user1 = new User("supportingDocument.fileName.saveChanges", "macaw.system.MacawErrorType");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User("elpbQg}5g", "macaw.system.MacawErrorType");
      assertEquals("", user2.getAddressLine2());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.setCleaningStatus("tXK{VeNkk3");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getSourceVariables();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("tXK{VeNkk3", derivedVariable0.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("y;Z3%xsO7");
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel2);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DerivedVariable> function0 = (Function<Object, DerivedVariable>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, DerivedVariable> function1 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function0);
      Function<Object, DerivedVariable> function2 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function1);
      Function<Object, DerivedVariable> function3 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function2);
      Function<Object, DerivedVariable> function4 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function3);
      Function<Object, Integer> function5 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      function4.andThen((Function<? super DerivedVariable, ? extends Integer>) function5);
      unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function4);
      UnaryOperator<ValueLabel> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.andThen((Function<? super ValueLabel, ? extends DerivedVariable>) function4);
      Function.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel3 = new ValueLabel();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      rawVariable1.addValueLabel(valueLabel3);
      ValueLabel valueLabel4 = new ValueLabel();
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      arrayList3.add(valueLabel3);
      Variable.validateFields(rawVariable1);
      User user0 = new User();
      rawVariable1.getLabel();
      assertEquals("y;Z3%xsO7", rawVariable1.getLabel());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      // Undeclared exception!
      try { 
        arrayList1.add((-19), (Variable) derivedVariable0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -19, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.357285019952196
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      arrayList1.clear();
      arrayList1.add(ontologyTerm3);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      arrayList2.add(ontologyTerm4);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      ontologyTerm12.setNewRecord(true);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList3);
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm14 = new OntologyTerm();
      OntologyTerm ontologyTerm15 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm15);
      OntologyTerm ontologyTerm16 = new OntologyTerm();
      OntologyTerm ontologyTerm17 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm7);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm18 = new OntologyTerm();
      OntologyTerm ontologyTerm19 = new OntologyTerm();
      OntologyTerm ontologyTerm20 = new OntologyTerm();
      OntologyTerm ontologyTerm21 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm21);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("yGZ3%xsO!");
      rawVariable0.setCleaned(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("yGZ3%xsO!");
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable1.setCategory("!;^EGf<&^v_3M");
      arrayList1.add(valueLabel1);
      UnaryOperator<ValueLabel> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, DerivedVariable> function0 = (Function<Object, DerivedVariable>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, DerivedVariable> function1 = unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function0);
      unaryOperator1.andThen((Function<? super Object, ? extends DerivedVariable>) function1);
      unaryOperator0.andThen((Function<? super ValueLabel, ? extends DerivedVariable>) function1);
      Function.identity();
      arrayList1.replaceAll(unaryOperator0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel1);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis((-1L));
      User user0 = new User((String) null, "kt7[&)@Btw})X");
      rawVariable1.getLabel();
      assertEquals("!;^EGf<&^v_3M", rawVariable1.getCategory());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setYear("X>QzPbtw");
      derivedVariable0.setCodeBookNumber("X>QzPbtw");
      derivedVariable0.getYear();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      arrayList0.stream();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getIdentifier();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList2.clear();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.add(ontologyTerm4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable1.updateOntologyTerm(ontologyTerm4);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      boolean boolean1 = derivedVariable0.isCoded();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.4728278948924696
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "e^w;x-G_U";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setIsNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user1 = new User();
      String string0 = derivedVariable0.getFilePath();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getName());
      
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.8837933019568496
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPassword("|9<;uR}Y{gSD");
      User user1 = new User();
      user1.setPassword("|9<;uR}Y{gSD");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      User user2 = new User("variable.cleaningDescription.label", "|9<;uR}Y{gSD");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm4);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.containsOntologyTerm(ontologyTerm2);
      derivedVariable3.removeOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      User user3 = new User("i&a\"t3<Mjkk1", "5-0::OS|Q|1rp5_N");
      derivedVariable3.codeBookNumber = "5-0::OS|Q|1rp5_N";
      User user4 = new User("nnWb", "|9<;uR}Y{gSD");
      Variable.detectFieldChanges(user3, derivedVariable3, rawVariable0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.8411381539506984
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      derivedVariable0.getSourceVariables();
      User user0 = new User("x/y", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("variable.codeBookNumber.label", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_AVAILABILITY_STATE", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("O2WB~@Ups");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "O2WB~@Ups";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      System.setCurrentTimeMillis((-3665L));
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.6806822757725426
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "blank";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.5762105290091304
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      arrayList2.add(ontologyTerm0);
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ontologyTerm1.setTerm("");
      derivedVariable0.setIsNewRecord(true);
      ontologyTerm0.setNameSpace((String) null);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.4960054686834225
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("M]'");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setAlias("T]i<r20~\"{");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.clear();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertEquals("T]i<r20~\"{", derivedVariable0.getAlias());
  }
}
