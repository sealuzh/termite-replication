/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 04:16:47 GMT 2020
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.util.Locale;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[1] = ".zip";
      stringArray0[2] = "";
      stringArray0[3] = "";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.excludes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("critial.question.quit", "critial.question.quit");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "critial.question.quit";
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "critial.question.quit";
      stringArray1[1] = "MfAR";
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "critial.question.quit");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = ".zip";
      stringArray0[2] = "";
      stringArray0[3] = "";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.filesNotIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      archiveScanner0.setExcludes(stringArray0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("s`z^)JH8", "s`z^)JH8");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "s`z^)JH8";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[1] = "s`z^)JH8";
      stringArray0[2] = "s`z^)JH8";
      stringArray0[3] = "inp";
      stringArray0[4] = "s`z^)JH8";
      stringArray0[5] = "com.lts.io.ArchiveScanner";
      stringArray0[6] = "s`z^)JH8";
      stringArray0[7] = "inp";
      stringArray0[8] = "s`z^)JH8";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processFile("inp");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4c?F)V!d";
      stringArray0[1] = "r?{EDw},irN'_Dp";
      stringArray0[2] = "r?{EDw},irN'_Dp";
      stringArray0[3] = "b+HE)+'by${7?%,8";
      archiveScanner0.scan();
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processFile("");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("*");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.haveSlowResults = true;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwufirN'_Dp";
      stringArray0[1] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/*/tempdir0";
      stringArray0[2] = "r?{EDwufirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "n}h_}- <;4d3K&oW;D1.n}h_}- <;4d3K&oW;D.jar", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/*
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".WAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".WAR";
      stringArray0[1] = ".WAR";
      stringArray0[2] = ".WAR";
      stringArray0[3] = ".WAR";
      stringArray0[4] = ".WAR";
      stringArray0[5] = ".WAR";
      stringArray0[6] = ".WAR";
      stringArray0[7] = ".WAR";
      stringArray0[8] = ".WAR";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".WAR", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/.WAR
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", before creating temp directory with prefix ", ", before creating temp directory with prefix ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "o/!q", true);
      assertEquals(0L, improvedFile0.length());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5126056838520427
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "!";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector1;
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/!/tempdir0");
      improvedFile1.createNewFile();
      archiveScanner0.processDirectory(improvedFile0, "n}_}- <;4d3K&W;D1un}h_a<;43'&oW;D.jar", false);
      assertFalse(improvedFile0.isFile());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processFile("");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "4c?F)V!d";
      stringArray0[2] = "4c?F)V!d";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.scan();
      archiveScanner0.processArchive(improvedFile0, "9`GV`ph");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", before creating temp directory with prefix ", ", before creating temp directory with prefix ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "c9\u0001%IBIsW", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/, before creating temp directory with prefix /, before creating temp directory with prefix 
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", before creating temp directory with prefix ", ", before creating temp directory with prefix ");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "D<CgT.ar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("&a", "D|xFg^R#0''))");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("D|xFg^R#0''))", "&a", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(mockFile0, "==>Z^X~8CX");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/replication/scripts/projects/78_caloriecount/&a/D|xFg^R#0''))
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("$*>dh=+~mC", "$*>dh=+~mC");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "$*>dh=+~mC");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "!";
      stringArray0[1] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      stringArray0[2] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      archiveScanner0.setIncludes(stringArray0);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/!");
      improvedFile1.createTempDir(">xYL#o281320.!X~8CX", "vV%RiV}lk92/ S^wU");
      // Undeclared exception!
      archiveScanner0.processDirectory(improvedFile0, "n}_}- <;4d3K&W;D1un}h_a<;43'&oW;D.jar", false);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6083949200545278
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "!";
      stringArray0[1] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      stringArray0[2] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      archiveScanner0.setIncludes(stringArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!/tempdir0/narc1");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/!");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "n}_}- <;4d3K&W;D1un}h_a<;43'&oW;D.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4c?F)V!d";
      stringArray0[1] = "r?{EDw},irN'_Dp";
      stringArray0[2] = "r?{EDw},irN'_Dp";
      stringArray0[3] = "b+HE)+'by${7?%,8";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFile mockFile0 = new MockFile("&a", "D|xFg^R#0''))");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("D|xFg^R#0''))", "&a", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) mockFile0;
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "D|xFg^R#0''))", true);
      assertEquals(0L, improvedFile0.getTotalSpace());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0042424730540764
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      File file0 = ImprovedFile.createTempFileName(">xYL#o", "Q0(8?^RPL", improvedFile0);
      int int0 = archiveScanner0.toFileType(file0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5118965585343875
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MockFile mockFile0 = new MockFile("&a", "D|xFg^R#0''))");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("D|xFg^R#0''))", "&a", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) mockFile0;
      archiveScanner0.scan();
      try { 
        archiveScanner0.processArchive(improvedFile0, "D|xFg^R#0''))");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/replication/scripts/projects/78_caloriecount/&a/D|xFg^R#0''))/D|xFg^R#0''))0&a
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(", before creating temp directory with prefix ", ", before creating temp directory with prefix ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "%w`%FhE#R]";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processDirectory(improvedFile0, "Y)|[c", true);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "r?{EDwnfirN'_Dp";
      stringArray0[1] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      stringArray0[2] = "r?{EDwnfirN'_Dp";
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/!
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0832550105185086
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MockFile mockFile0 = new MockFile("&a", "D|xFg^R#0''))");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("D|xFg^R#0''))", "&a", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) mockFile0;
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile0, "D|xFg^R#0''))", false);
      assertEquals(0L, improvedFile0.length());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6179507056527689
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "!";
      stringArray0[1] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      stringArray0[2] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/!";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!/tempdir0/home/ubuntu/replication/scripts/projects/78_caloriecount/!/tempdir0/home");
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/!");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "n}_}- <;4d3K&W;D1un}h_a<;43'&oW;D.jar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }
}
