/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 10:12:08 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverPropertyInfo;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.UnaryOperator;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JTextPane;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicDesktopPaneUI;
import javax.swing.plaf.metal.MetalLabelUI;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.CaseInsensitiveString;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoUpdateListener;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.springframework.scheduling.concurrent.CustomizableThreadFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(36);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("JcTK0Qbs2JUG-go)V", (Icon) imageIcon0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("JcTK0Qbs2JUG-go)V", true, false);
      jInternalFrame0.reshape(36, 36, (-679), 36);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("JcTK0Qbs2JUG-go)V", "JcTK0Qbs2JUG-go)V", "'5}$D;<\u0001M9$Hg^", "JcTK0Qbs2JUG-go)V", (-1309), "org.jfree.data.general.Series", (-679), 36, 36, 36, "cSW\".%]f", "10JY+E", (-1664), 1220, "'5}$D;<\u0001M9$Hg^");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType(")l~stpf:SeH-", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("!", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "(iD", "GFhxi]W^zO\")7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.getLastStatement();
      PipedWriter pipedWriter0 = new PipedWriter();
      int int0 = (-3242);
      PipedWriter pipedWriter1 = new PipedWriter();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, (-3242));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = true;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "-", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("j]selxsH~rgHs.Yk|Le", "j]selxsH~rgHs.Yk|Le", "vZHQtRt+K.cIQ/[", "!>Y5R%:a3*VT0i\"", 50, "vZHQtRt+K.cIQ/[", 50, 50, 50, 1150, "vZHQtRt+K.cIQ/[", "vZHQtRt+K.cIQ/[", 365, 365, "is\"l*");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("*-<Vsfg%q");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("FtiV<B#O[L{");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("FtiV<B#O[L{");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("TqTVGZ$s2Vyo#");
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.DATABASE_TYPE_DBO;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType.createNewDatabaseObjectType("JahpL-OvRvKL+?2,F+h", (Icon) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.unload();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ActionCollection.createActionError");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1@80[6;");
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "aPTsAvMUeE~sZho%");
      FileWrapper fileWrapper1 = applicationFileWrappersImpl0.getWelcomeFile();
      fileWrapperImpl0.getAbsolutePath();
      FileWrapperImpl.listRoots();
      fileWrapperImpl0.renameTo(fileWrapper1);
      fileWrapperImpl0.setReadOnly();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("native-laf");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean1 = DBUtil.typesAreEquivalent((byte)2, (-1326));
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "#oD";
      ImageIcon imageIcon0 = new ImageIcon("#oD");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Gp(mL~s2", "#oD");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener1, keyListener1);
      AWTEventMulticaster.remove(keyListener2, keyListener1);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("9]PF41bI3_d", "9]PF41bI3_d");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.unload();
      dBCopyPlugin1.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin2.getDestSession();
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "dr:@s,FhSzu*", " schema=");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      int int0 = (-2581);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z;", "z;", " schema=", "Q", (-3462), "G%WSmxUBk_IbAh@&mA4", 4809, (-3462), (-2581), (-2581), "Ui6", "G%WSmxUBk_IbAh@&mA4", (-3462), (-1169), "Cg<&|");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType((-3462), tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add(keyListener1, keyListener1);
      AWTEventMulticaster.remove(keyListener2, keyListener1);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("9]PF41bI3_d");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.unload();
      dBCopyPlugin1.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin2.getDestSession();
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = (-2589);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "C3{|&eUDU.uY", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      fileWrapper0.deleteOnExit();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      String string0 = "(Dv1#Mq.";
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "(Dv1#Mq.");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent(16, 16);
      dBCopyPlugin0.getSourceSession();
      String string1 = "T|g\"5jcguv6@OuyYn y";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "T|g\"5jcguv6@OuyYn y", 1632, "GCEYP[#Xm=(@#]Q;", 9, 1632, 547, 9, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "cast(?1 as varchar)", 16, 16, "(Dv1#Mq.");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "(Dv1#Mq.", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "d<:@sl%hSzu*", " scqema=");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "d<:@sl%hSzu*";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "d<:@sl%hSzu*", " scqema=");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getFwJarFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(fileWrapper0, "Xor!#'3?W%]atifD'E'");
      fileWrapperImpl0.setReadOnly();
      fileWrapperImpl0.setLastModified(0L);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("Xor!#'3?W%]atifD'E'");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-2105376123));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("T");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.removeNotify();
      defaultListCellRenderer_UIResource0.setToolTipText("T");
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      defaultListCellRenderer_UIResource0.setFont((Font) null);
      Locale locale0 = Locale.ITALIAN;
      ComponentOrientation componentOrientation1 = ComponentOrientation.getOrientation(locale0);
      defaultListCellRenderer_UIResource1.getDisabledIcon();
      ComponentOrientation componentOrientation2 = ComponentOrientation.UNKNOWN;
      defaultListCellRenderer_UIResource1.setComponentOrientation(componentOrientation1);
      defaultListCellRenderer_UIResource0.firePropertyChange("T", '*', '0');
      ImageIcon imageIcon1 = new ImageIcon();
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = "constraintName";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "constraintName", " CSCADE");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-1639));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-20);
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-18);
      byteArray0[7] = (byte)42;
      byteArray0[8] = (byte)28;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", (String) null, "", ")YvYux4V(bR~tw", (-2), "Edzb*J<h-^Rv9}z", (-1179), 5, 3179, 5, "toLevel", "#QRk0uM@J", 2001, (-1), (String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SYNONYM;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "W^-U Eg1^\"Dd#,IKuu", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("T");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[6];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringArray0[0] = "";
      String string0 = "p<!_?@Rg!wZD";
      stringArray0[1] = "p<!_?@Rg!wZD";
      stringArray0[2] = "U%[@:";
      stringArray0[3] = "h-Y]W:).`k?&-~>8oS+";
      stringArray0[4] = "SJ$:!C.h2tLQ X";
      stringArray0[5] = "";
      ISession iSession0 = null;
      DBUtil.fixCase((ISession) null, "");
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      fileWrapperImpl0.getPrintWriter();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      String string0 = "r/G]OBDN<S)";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String string1 = "DBUtsl.inZf=xecutequery";
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)applicationFileWrappersImpl2.getFAQFile();
      fileWrapperFactoryImpl0.createTempFile("r/G]OBDN<S)", (String) null, (FileWrapper) fileWrapperImpl2);
      String string2 = "";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("r/G]OBDN<S)", "r/G]OBDN<S)", "r/G]OBDN<S)", "DBUtsl.inZf=xecutequery", 1109, "DBUtsl.inZf=xecutequery", 418, 3162, 1096, 1096, "", "r/G]OBDN<S)", 3162, 1096, "R5c=~j0i93Hls_NwY");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("doc/faq.html/r/G]OBDN<S)0.tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      dBCopyPlugin1.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceDistinctDataType(1109, tableColumnInfo0, (ISession) null);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "", "DBUtsl.inZf=xecutequery", "CVH{biN?w<,`M ;", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[8];
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "|?ju&k8{g]|-CEx9~CM", "##", "f<n/v]7yAa8R][7iP", 0, "slDC^|#]", 868, 1007, 365, 868, "DBUtil.error.missingtable", "*-<Vsfg%q", 3179, 1007, "H)Mm_2K}>'0>@Cpq");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.unload();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(1007, tableColumnInfo0, (ISession) null);
      int int1 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      applicationFileWrappersImpl0.getChangeLogFile();
      fileWrapperImpl0.deleteOnExit();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("DBUtil.error.nocolumns");
      fileWrapperImpl2.setLastModified(1000L);
      fileWrapperImpl2.getPrintWriter();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("DBUtil.error.nocolumns");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("mu&.(G", "DBUtil.error.nocolumns", "mu&.(G", "X:", 1889, "DBUtil.info.bindbloblength", 418, 3162, 3162, 2001, "DBUtil.info.=xecutequery", "", 887, 418, ")Ld*H<");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      ImageIcon imageIcon0 = new ImageIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("}Oj>", "}Oj>", "vZHQtRt+K.cIQ/[", "!>Y5R%:a3*VT0i\"", 50, "vZHQtRt+K.cIQ/[", 50, 50, 50, 1150, "vZHQtRt+K.cIQ/[", "vZHQtRt+K.cIQ/[", 365, 365, "is\"l*");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("*-<Vsfg%q");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SYNONYM;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("FtiV<B#O[L{");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("TqTVGZ$s2Vyo#");
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.DATABASE_TYPE_DBO;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType.createNewDatabaseObjectType("JahpL-OvRvKL+?2,F+h", (Icon) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.unload();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.add(keyListener1, keyListener1);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(162);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.parallelStream();
      DBUtil.convertObjectToTableList(linkedList0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("ebFlO_1h", "", "+x}jcphQ");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      LinkedList<ITableInfo> linkedList1 = new LinkedList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(linkedList1);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      KeyListener keyListener1 = AWTEventMulticaster.remove(keyListener0, (KeyListener) null);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.add(keyListener1, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "kM^", "kM^");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 53);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      String string0 = "7%W;3qL#p\"8$X9";
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("7%W;3qL#p\"8$X9", "7%W;3qL#p\"8$X9", (String) null);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      String string1 = "Missing icon for mainframe";
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[18];
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("DBUtil.error.missingtable", "v6||S_G,6mg?5>Ua=aN");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      GapContent gapContent0 = new GapContent((-2031));
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(gapContent0, styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument1);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("_'s9{{3u3l", styleContext_NamedStyle1);
      Style style0 = jTextPane0.addStyle(") - table ", styleContext_NamedStyle2);
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(304, threadPoolExecutor_DiscardPolicy0);
      CustomizableThreadFactory customizableThreadFactory0 = new CustomizableThreadFactory("CRHATE TABLE ");
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0, "s\"*");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0, "X$)(PF$OH-");
      Thread thread1 = customizableThreadFactory0.newThread(mockThread1);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule((Runnable) thread1, (long) (-2031), timeUnit0);
      ((StyleContext.NamedStyle) style0).removeAttribute(scheduledFuture0);
      Font font0 = defaultStyledDocument0.getFont(style0);
      defaultListCellRenderer_UIResource1.setFont(font0);
      Locale locale0 = Locale.ITALIAN;
      ComponentOrientation componentOrientation1 = ComponentOrientation.getOrientation(locale0);
      ComponentOrientation.getOrientation(locale0);
      locale0.getDisplayName();
      ComponentOrientation.getOrientation(locale0);
      defaultListCellRenderer_UIResource1.setComponentOrientation(componentOrientation1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("DatabaseObjectType.catalog", "DBUtil.error.missingtable", "s\"*", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "zX;=v4P3fn", "ABL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Integer integer0 = new Integer((-1244));
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ckWj");
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("j]selxsH~rgHs.Yk|Le", "j]selxsH~rgHs.Yk|Le", "1@80[6;", "!>Y5R%:a3*VT0i\"", 2444, "1@80[6;", 50, 2444, 50, 1150, "1@80[6;", "vZHQtRt+K.cIQ/[", 365, 2000, "is\"l*");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("j]selxsH~rgHs.Yk|Le");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("TqTVGZ$s2Vyo#");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType.createNewDatabaseObjectType("Q<bvU>wx");
      DatabaseObjectType.createNewDatabaseObjectType("TqTVGZ$s2Vyo#");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("select ");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType7);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2444, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      KeyListener keyListener3 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove(keyListener1, keyListener2);
      AWTEventMulticaster.remove((KeyListener) null, keyListener3);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.remove(keyListener1, (KeyListener) null);
      ComponentOrientation componentOrientation0 = ComponentOrientation.LEFT_TO_RIGHT;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis(0L);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "Y4\"#a", "JYfAxp+C", "1bDI*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("x|=", "", "u=j7hI'asn-]VqU", ".", 2233, "length", 2233, 2233, 254, 38, "x|=", "7;ema k ", 2233, 12, "");
      UnaryOperator<IDatabaseObjectInfo> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      stack0.add((IDatabaseObjectInfo) tableColumnInfo0);
      stack0.add((IDatabaseObjectInfo) null);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("7%;3qL#p\"8$X9", "1@80[6;", "ActionCollection.createActionError", "aPTsAvMUeE~sZho%", 2000, "ActionCollection.createActionError", (-321), 2980, (-1326), (-321), "9]PF41bI3cd", "1@80[6;", (-2147483642), (-1326), "9]PF41bI3cd");
      JInternalFrame jInternalFrame0 = new JInternalFrame("N]x<@7D&");
      Icon icon0 = jInternalFrame0.getFrameIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("aPTsAvMUeE~sZho%", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("null ISQLAlias passed", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("#L");
      DatabaseObjectType.createNewDatabaseObjectType("bQzU`QyL'qfm");
      DatabaseObjectType.createNewDatabaseObjectType("aPTsAvMUeE~sZho%");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SESSION;
      jInternalFrame0.reshape((-1326), 8192, 2665, (-1326));
      DatabaseObjectType.createNewDatabaseObjectType((String) null, icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("9]PF41bI3cd", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("bQzU`QyL'qfm", icon0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("aPTsAvMUeE~sZho%, aPTsAvMUeE~sZho%", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)applicationFileWrappersImpl0.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl.createTempFile("insert into ", (String) null, fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("CREATE TABLE ", "insert into ", fileWrapperImpl0);
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      fileWrapperImpl2.getFileReader();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl("insert into ", "insert into ");
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      FileWrapperImpl.createTempFile("insert into ", "insert into ", fileWrapperImpl1);
      applicationFileWrappersImpl0.getLicenceFile();
      fileWrapperImpl2.getFileReader();
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl2);
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis((-1L));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("c%7Hv)Th.v", (String) null, "insert into ", "insert into ", 2530, "insert into ", 674, 2530, 674, 2530, "1@80[0d", "1@80[0d", (-920), 674, "");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(2530, tableColumnInfo0, (ISession) null);
      assertEquals(2530, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("3)22!X`D(/iq{l38YC", "DBUtil.info.bindbloblength", "Error during default initialization", (String) null, 2004, "Error during default initialization", 1002, (-4493), 400, 91, "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "DatabaseObjectType.column", 29, 2883, "EDITWHERECOL_PREFERENCES");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("DBUtil.error.missingtable", "v6||S_G,6mg?5>Ua=aN");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      StyleContext styleContext0 = new StyleContext();
      GapContent gapContent0 = new GapContent((-2031));
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      styleContext_NamedStyle0.toString();
      styleContext_NamedStyle0.toString();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      ComponentOrientation componentOrientation1 = ComponentOrientation.UNKNOWN;
      Integer integer0 = new Integer((-1419));
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.poll();
      LinkedList<IDatabaseObjectInfo> linkedList1 = new LinkedList<IDatabaseObjectInfo>();
      linkedList1.offer((IDatabaseObjectInfo) null);
      linkedList1.add((IDatabaseObjectInfo) null);
      linkedList1.parallelStream();
      linkedList1.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList1);
      DBUtil.convertTableToObjectList(list0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[7];
      iDatabaseObjectInfoArray0[0] = null;
      iDatabaseObjectInfoArray0[1] = null;
      iDatabaseObjectInfoArray0[2] = null;
      iDatabaseObjectInfoArray0[3] = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = true;
      boolean boolean1 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "-", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("DBUtil.error.missingtable", "v6||S_G,6mg?5>Ua=aN");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      GapContent gapContent0 = new GapContent((-2031));
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(gapContent0, styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      styleContext_NamedStyle0.toString();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      ComponentOrientation componentOrientation1 = ComponentOrientation.UNKNOWN;
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(1111, 1111);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("N]x<@7D&");
      Icon icon0 = jInternalFrame0.getFrameIcon();
      DatabaseObjectType.createNewDatabaseObjectType("aPTsAvMUeE~sZho%", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("NOID");
      DatabaseObjectType.createNewDatabaseObjectType("1@80[6;", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("#L");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("aPTsAvMUeE~sZho%");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SESSION;
      int int0 = 8192;
      jInternalFrame0.reshape((-1326), 8192, 2665, (-1326));
      DatabaseObjectType.createNewDatabaseObjectType((String) null, icon0);
      jInternalFrame0.setClosed(false);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("9]PF41bI3_d", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("aPTsAvMUeE~sZho%", icon0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "|?ju&k8{g]|-CEx9~CM", "##", "f<n/v]7yAa8R][7iP", 0, "slDC^|#]", 868, 0, 365, 868, "DBUtil.error.missingtable", "*-<Vsfg%q", 3179, 0, "H)Mm_2K}>'0>@Cpq");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.unload();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Connection connection0 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("u:Y-'m@j", "u:Y-'m@j", "u:Y-'m@j", "u:Y-'m@j", (-2580), "DBUtil.info.bindblobfile", (-2580), (-194), (-4), (-499), "", "u:Y-'m@j", (-2580), 1111, "J:{D!I#apW");
      DBUtil.replaceDistinctDataType((-3289), tableColumnInfo0, (ISession) null);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setDelayBetweenObjects(true);
      dBCopyPreferenceBean0.setPromptForDialect(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.getApplication();
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      dBCopyPlugin0.getSourceSession();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      assertNull(connectionWrapper0.getResourceFactoryName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      SessionInfoProvider sessionInfoProvider0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "o>8jl!>", "o>8jl!>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Integer integer0 = new Integer((-1829));
      boolean boolean0 = DBUtil.typesAreEquivalent((-1829), 23502);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DBUtil.typesAreEquivalent(2964, 0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      assertNull(sQLDriver0.getUrl());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBUtil.setLastStatementValues("WVS");
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("DBUtil.error.missingtable", "v6||S_G,6mg?5>Ua=aN");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      GapContent gapContent0 = new GapContent((-2031));
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(gapContent0, styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("_'s9{{3u3l", styleContext_NamedStyle1);
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(304, threadPoolExecutor_DiscardPolicy0);
      CustomizableThreadFactory customizableThreadFactory0 = new CustomizableThreadFactory("CRHATE TABLE ");
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0, "s\"*");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, mockThread0, "CRHATE TABLE ");
      Thread thread1 = customizableThreadFactory0.newThread(mockThread1);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) thread1, (long) (-2031), timeUnit0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "v6||S_G,6mg?5>Ua=aN");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DBUtil.getLastStatementValues();
      PipedReader pipedReader0 = new PipedReader();
      char[] charArray0 = new char[9];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '.';
      charArray0[3] = '.';
      charArray0[4] = '.';
      charArray0[5] = '.';
      charArray0[7] = '.';
      charArray0[8] = '.';
      try { 
        pipedReader0.read(charArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.removeAll();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      BasicDesktopPaneUI basicDesktopPaneUI0 = new BasicDesktopPaneUI();
      Dimension dimension0 = basicDesktopPaneUI0.getMinimumSize(defaultListCellRenderer_UIResource1);
      defaultListCellRenderer_UIResource1.setSize(dimension0);
      DBUtil.getLastStatementValues();
      ImageIcon imageIcon0 = new ImageIcon("B/ckE", ".&SrypN|w>*N@ESmIHw");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      defaultTreeCellRenderer0.removePropertyChangeListener("*-<Vsfg%q", (PropertyChangeListener) metalLabelUI0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      assertEquals(300, (int)integer0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DBUtil.setLastStatement("r/G]OB^_N<S)");
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Integer integer0 = new Integer((-1244));
      ImageIcon imageIcon0 = new ImageIcon();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "HXF8s3X'O.~qGW&$!s", "Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      ImageIcon imageIcon0 = new ImageIcon();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("M!W`H-cK/", "M!W`H-cK/", ".j5;],e4qHYT", (ISession) null, true, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      GapContent gapContent0 = new GapContent((-2031));
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("ol0'u:)4fZfet<azg1", styleContext_NamedStyle1);
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2, threadPoolExecutor_DiscardPolicy0);
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread0 = new MockThread(thread0, ") - table ");
      MockThread mockThread1 = new MockThread((ThreadGroup) null, thread0, "autoLogon");
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      scheduledThreadPoolExecutor0.schedule((Runnable) mockThread0, (long) 304, timeUnit0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Integer integer0 = new Integer((-1244));
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("|12.%[*h", "c(", "|12.%[*h");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "D9iEW", "Fg+(0|IQ}Z");
      int int0 = (-195);
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "W#DNHx)pc?_.AO'8", (ITableInfo) null, (-195));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo[] foreignKeyInfoArray0 = new ForeignKeyInfo[6];
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      foreignKeyInfoArray0[0] = foreignKeyInfo0;
      foreignKeyInfoArray0[1] = foreignKeyInfo0;
      foreignKeyInfoArray0[2] = foreignKeyInfo0;
      foreignKeyInfoArray0[3] = foreignKeyInfo0;
      foreignKeyInfoArray0[4] = foreignKeyInfo0;
      foreignKeyInfoArray0[5] = foreignKeyInfo0;
      ForeignKeyInfo[] foreignKeyInfoArray1 = new ForeignKeyInfo[8];
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      foreignKeyInfoArray1[0] = foreignKeyInfo1;
      foreignKeyInfoArray1[1] = foreignKeyInfo1;
      foreignKeyInfoArray1[2] = foreignKeyInfo1;
      foreignKeyInfoArray1[3] = foreignKeyInfo1;
      foreignKeyInfoArray1[4] = foreignKeyInfo0;
      foreignKeyInfoArray1[5] = foreignKeyInfo0;
      foreignKeyInfoArray1[6] = foreignKeyInfo0;
      foreignKeyInfoArray1[7] = foreignKeyInfo0;
      System.setCurrentTimeMillis((-685L));
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(foreignKeyInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$791868021 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("D", "vRHQtRc+K.cIQ/[");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      ComponentOrientation componentOrientation0 = ComponentOrientation.UNKNOWN;
      defaultListCellRenderer_UIResource0.setFont((Font) null);
      Locale locale0 = Locale.ITALIAN;
      ComponentOrientation componentOrientation1 = ComponentOrientation.getOrientation(locale0);
      ComponentOrientation.getOrientation(locale0);
      locale0.getDisplayName();
      ComponentOrientation.getOrientation(locale0);
      defaultListCellRenderer_UIResource1.setComponentOrientation(componentOrientation1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.fest.swing.applet.BasicAppletStub", "T=Y", (String) null, "Se22!<}c'Ph ", (-2867), "^", (-2867), (-2867), (-317), 366, "org.fest.swing.applet.BasicAppletStub", "=_1,1+fe4c\"GU2", 9, 1, "t.NoO$tD}U9DbZOozs");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getSquirrelHomeDir();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "{F`bK ~0A", (String) null, "\"{`xz&n0", (-3), (String) null, (-3), 2606, 2606, 32700, "", (String) null, (-1251), 2606, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DB4:Ua,roB]YjT");
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "", "{.(gDsaldb");
      DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[8];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("", "'lNE?tHUN\"N*OB9");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("{.(gDsaldb", "'lNE?tHUN\"N*OB9");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("~9vP1`F:Yl#a", "'lNE?tHUN\"N*OB9");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("'lNE?tHUN\"N*OB9", "DB4:Ua,roB]YjT");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("T", (String) null);
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("@cIP_8Br", (String) null);
      driverPropertyInfoArray0[5] = driverPropertyInfo5;
      DriverPropertyInfo driverPropertyInfo6 = new DriverPropertyInfo(")47.?hG", "{.(gDsaldb");
      driverPropertyInfoArray0[6] = driverPropertyInfo6;
      DriverPropertyInfo driverPropertyInfo7 = new DriverPropertyInfo("DBUtil.info.bindbloblength", "r/G]OBDN<S)");
      driverPropertyInfoArray0[7] = driverPropertyInfo7;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection0, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("aPTsAvMUeE~sZho%");
      jInternalFrame0.getAlignmentX();
      jInternalFrame0.getFrameIcon();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("+>3J+=%7Q})7/;Pv/", "+>3J+=%7Q})7/;Pv/", "aPTsAvMUeE~sZho%");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("9]PF41bI3cd", "!2Rli?");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("L{ NnH|", "g`+HWlwH<Rhp$");
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("Y*Fl!w/1,\"7]=8lk]", "!2Rli?");
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("L{ NnH|", "L{ NnH|");
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo((String) null, "TRUNCATE TABLE ");
      driverPropertyInfo3.required = false;
      DriverPropertyInfo driverPropertyInfo5 = new DriverPropertyInfo("n\"5%-a~rN-n", (String) null);
      DriverPropertyInfo driverPropertyInfo6 = new DriverPropertyInfo("T", "g`+HWlwH<Rhp$");
      DriverPropertyInfo driverPropertyInfo7 = new DriverPropertyInfo("L{ NnH|", "9]PF41bI3cd");
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[3];
      driverPropertyInfoArray0[0] = driverPropertyInfo3;
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriver sQLDriver0 = new SQLDriver();
      assertNull(sQLDriver0.toString());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "org.apache.log4j.helpers.PatternParser$DatePatternConverter", (String) null, 2006, "/7&Do$]DdIC}", (-9), (-932), 400, (-4050), (String) null, "org.apache.log4j.helpers.DateTimeDateFormat", (-4933), 259, "mod");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      KeyListener keyListener3 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove(keyListener1, keyListener2);
      AWTEventMulticaster.remove((KeyListener) null, keyListener3);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.remove(keyListener1, (KeyListener) null);
      System.setCurrentTimeMillis(0L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "={L/L~RFnM%$|E", ".r+LTp", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
