/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 07:50:59 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.975102728219374
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setPadText(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      int int0 = 2;
      outputFormat1.getAttributeQuoteCharacter();
      String[] stringArray0 = null;
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setNewlines(false);
      OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, (-1461685252));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",S9", true, (String) null);
      String string0 = outputFormat0.getEncoding();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(",S9", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertNull(string0);
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.030495400303718
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-trimTeot";
      stringArray0[1] = "-indent";
      stringArray0[2] = "s4q5w@Fkn(K}vlB^A";
      stringArray0[3] = "-trimTeot";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(3, int0);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("s4q5w@Fkn(K}vlB^A", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3385438781983585
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-3785));
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("Hoq]Lj");
      outputFormat0.setIndentSize((-3785));
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat1.setIndent(false);
      outputFormat0.setLineSeparator("");
      outputFormat1.setXHTML(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setXHTML(false);
      outputFormat1.setIndentSize((-3785));
      outputFormat1.getIndent();
      outputFormat1.setTrimText(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.getIndent();
      outputFormat1.setNewLineAfterNTags((-3785));
      outputFormat1.setIndent("l7lHgmt@Qi");
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 1077);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-trimText";
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.964532478280498
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("vjTXvX");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "tyimxt";
      stringArray0[0] = "-padText";
      stringArray0[3] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.227913693645981
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setAttributeQuoteCharacter('\'');
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-ineSepQrat,r";
      stringArray0[1] = "-xhtml?jO2e}7e:EF";
      stringArray0[2] = "!30@ejePLsE";
      stringArray0[3] = "!30@ejePLsE";
      stringArray0[4] = "?jO2e}57e:EF";
      stringArray0[5] = "-xhtml?jO2e}7e:EF";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      int int0 = outputFormat1.parseOptions(stringArray0, 1);
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(462);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "dhZlQhkfQQc9|Y`O";
      outputFormat0.getNewLineAfterNTags();
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(462, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0366739742537465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-lineSeparator";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 6);
      outputFormat0.parseOptions(stringArray0, 6);
      outputFormat0.parseOptions(stringArray0, 6);
      assertEquals("-lineSeparator", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7862471159089246
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "Xh%Q";
      boolean boolean0 = false;
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndentSize(470);
      outputFormat0.setIndentSize((-1326));
      String string1 = "Tencoding";
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-ine_epQatr");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "";
      stringArray0[3] = "3>G^]'9(;qWAiRpkiq3";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9517607579688783
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines", true, "-newlines");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "-newlines";
      stringArray0[5] = "";
      stringArray0[6] = "-newlines";
      stringArray0[7] = "";
      stringArray0[8] = "-newlines";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("-newlines", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("-newlines", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(5, int0);
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.180066384203239
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("h@M@^u7Ste*oc<P'-", true, " ");
      String[] stringArray0 = new String[16];
      stringArray0[0] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[1] = "-expandEmptyInvaWid attr";
      stringArray0[3] = "8iv-.O&\"*?s6!a r2<";
      stringArray0[4] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[5] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[6] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-ine_epQatr");
      assertEquals("-ine_epQatr", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(boolean0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("", outputFormat0.getEncoding());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.0894980055311674
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      outputFormat0.setNewLineAfterNTags((-135950621));
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "4fNCD(y3|f4uM<\u0005s";
      stringArray0[3] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 924);
      outputFormat0.setXHTML(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent("4fNCD(y3|f4uM<\u0005s");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setEncoding("4fNCD(y3|f4uM<\u0005s");
      outputFormat0.getNewLineAfterNTags();
      assertEquals("4fNCD(y3|f4uM<\u0005s", outputFormat0.getEncoding());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2914710034221666
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setIndentSize(836);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isTrimText();
      outputFormat0.setIndent(" ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[4] = "wDe(i2QX(q,7c";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat1.setPadText(true);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setPadText(true);
      outputFormat0.isXHTML();
      assertEquals(" ", outputFormat0.getIndent());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1996175113));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1996175113
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.053778405293998
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("V");
      outputFormat0.setEncoding("noR]%xod");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("S^U2UNc^uaN");
      outputFormat0.isPadText();
      outputFormat0.setIndent("S^U2UNc^uaN");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "pfMVaRWpI";
      stringArray0[2] = "S^U2UNc^uaN";
      stringArray0[3] = "noR]%xod";
      stringArray0[4] = "V";
      stringArray0[5] = "S^U2UNc^uaN";
      stringArray0[2] = "noR]%xod";
      stringArray0[7] = "";
      stringArray0[8] = "U}Ar\"$SX~;?";
      outputFormat0.parseOptions(stringArray0, 196);
      outputFormat0.setNewLineAfterDeclaration(false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", true, "");
      String string0 = outputFormat0.getEncoding();
      assertEquals("Xh%Q", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("", string0);
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.041041881042495
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Xh%Q", false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("Xh%Q");
      outputFormat0.setTrimText(false);
      outputFormat0.setIndentSize(490);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent(",7U=W!+4r$o");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.isSuppressDeclaration();
      assertEquals(",7U=W!+4r$o", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      outputFormat0.setPadText(true);
      outputFormat0.isTrimText();
      OutputFormat outputFormat1 = new OutputFormat("");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "4fNCD(jy3|f4u/M<\u0005s";
      stringArray0[1] = "";
      stringArray0[2] = "Xh%a";
      stringArray0[3] = "4fNCD(jy3|f4u/M<\u0005s";
      stringArray0[4] = "ctN3K1b?}'N1 XXw?";
      stringArray0[5] = "4fNCD(jy3|f4u/M<\u0005s";
      stringArray0[6] = "Xh%a";
      stringArray0[7] = "-suppressDeclaration";
      stringArray0[8] = "ctN3K1b?}'N1 XXw?";
      boolean boolean0 = outputFormat0.isXHTML();
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(outputFormat0.isTrimText());
      assertFalse(boolean0);
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("h@M@^u7Ste*oc<P'-", true, " ");
      String[] stringArray0 = new String[16];
      stringArray0[0] = "h@M@^u7Ste*oc<P'-";
      stringArray0[2] = "trimext";
      stringArray0[12] = "8iv-.O&\"*?s6!a r2<";
      stringArray0[4] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[5] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[6] = "{0Ov@";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("h@M@^u7Ste*oc<P'-", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(" ", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.054403796163291
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getEncoding();
      outputFormat0.setTrimText(false);
      outputFormat0.setIndent("UTF-8");
      outputFormat0.setIndentSize((-133));
      outputFormat0.setEncoding("UTF-8");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize((-1500522721));
      outputFormat0.isTrimText();
      outputFormat0.isTrimText();
      outputFormat0.isTrimText();
      outputFormat0.setPadText(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getEncoding();
      outputFormat0.isPadText();
      outputFormat0.setIndent("CPF<e");
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("CPF<e", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "BS[4e'";
      stringArray0[1] = "-xhtml-ine_epQatr";
      stringArray0[2] = "-xhtml-ine_epQatr";
      stringArray0[3] = "-xhtml-ine_epQatr";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2883091753106406
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(false);
      outputFormat0.setEncoding("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isTrimText();
      outputFormat0.setIndent(" ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "wDe(i2QX(q,7c";
      stringArray0[5] = "";
      stringArray0[6] = "";
      stringArray0[7] = "";
      outputFormat1.parseOptions(stringArray0, 1306);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.setPadText(true);
      outputFormat0.isXHTML();
      assertEquals(" ", outputFormat0.getIndent());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isPadText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.053778405293998
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("V");
      outputFormat0.setEncoding("noR]%xod");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("S^U2UNc^uaN");
      outputFormat0.isPadText();
      outputFormat0.setIndent("S^U2UNc^uaN");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewlines(false);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "pfMVaRWpI";
      stringArray0[2] = "S^U2UNc^uaN";
      stringArray0[3] = "noR]%xod";
      stringArray0[4] = "V";
      stringArray0[5] = "S^U2UNc^uaN";
      stringArray0[2] = "aH,u/&{j";
      stringArray0[7] = "";
      stringArray0[8] = "U}Ar\"$SX~;?";
      outputFormat0.parseOptions(stringArray0, 196);
      outputFormat0.setNewLineAfterDeclaration(false);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isNewlines());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.7118640950892862
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "-ine_epQratr";
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "-ine_epQratr";
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = 34;
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[9];
      int int1 = (-1943);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1943));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1943
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("+CL62\"kbP", false, "R#sp L9zMeNN|WAQ!^");
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("R#sp L9zMeNN|WAQ!^", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("+CL62\"kbP", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.733857589601352
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent("C_3JXG{;'6?{!Q?4'0");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[1] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[2] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[3] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[4] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[5] = "C_3JXG{;'6?{!Q?4'0";
      stringArray0[6] = "C_3JXG{;'6?{!Q?4'0";
      outputFormat0.setPadText(false);
      outputFormat0.isXHTML();
      outputFormat0.getIndent();
      outputFormat0.setIndent("C_3JXG{;'6?{!Q?4'0");
      assertEquals("C_3JXG{;'6?{!Q?4'0", outputFormat0.getIndent());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("`D8t^bb3^+#pByZfQ:>Q", true, "`D8t^bb3^+#pByZfQ:>Q");
      String string0 = outputFormat0.getEncoding();
      assertEquals("`D8t^bb3^+#pByZfQ:>Q", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("`D8t^bb3^+#pByZfQ:>Q", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[3] = "-indeTtSize";
      stringArray0[4] = "-indeTtSize";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "";
      OutputFormat outputFormat0 = new OutputFormat("3FC*GP");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.538844044458164
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding((String) null);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertTrue(outputFormat2.isTrimText());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isPadText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isNewlines());
      assertEquals("  ", outputFormat2.getIndent());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1073474675039723
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-encoding";
      stringArray0[4] = "";
      stringArray0[3] = "j";
      stringArray0[4] = "vjTXvX";
      stringArray0[3] = "lBi~e";
      stringArray0[6] = "POVn:dtGJP";
      stringArray0[7] = "-indent";
      outputFormat0.parseOptions(stringArray0, 445);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = "vjTXvX";
      stringArray1[2] = "lBi~e";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "j";
      stringArray1[5] = "-encoding";
      stringArray1[6] = "";
      stringArray1[7] = "-indent";
      outputFormat0.parseOptions(stringArray1, 445);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray1, 3);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1969529290));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1969529290
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5375738930170306
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      
      outputFormat0.setNewlines(true);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.929538535746656
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("h@M@^u7Ste*oc<P'-", false, " ");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[16];
      stringArray0[0] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[1] = "-expandEmptyInvaWid attr";
      stringArray0[2] = "trimext";
      stringArray0[3] = "8iv-.O&\"*?s6!a r2<";
      stringArray0[4] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[5] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[6] = "{0Ov@";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[1] = "-ecodi[ng";
      stringArray0[4] = "-ecodi[ng";
      stringArray0[5] = "Xh%Q";
      OutputFormat outputFormat0 = new OutputFormat(",=$BZ{84wIyy/R", false, "X2`:`,9;+(ud/8");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(",=$BZ{84wIyy/R", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("X2`:`,9;+(ud/8", outputFormat0.getEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^lvDV3,|,S5>ZAR+", false, "");
      boolean boolean0 = outputFormat0.isNewlines();
      assertFalse(boolean0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("^lvDV3,|,S5>ZAR+", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.3947559363940085
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize((-3785));
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setIndent("lHgmt@Qi");
      outputFormat0.setIndent("Hoq]Lj");
      assertEquals("Hoq]Lj", outputFormat0.getIndent());
      
      outputFormat0.setIndentSize((-3785));
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat1.setIndent(false);
      outputFormat0.setLineSeparator("");
      outputFormat1.setXHTML(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat1.setXHTML(true);
      outputFormat1.setIndentSize((-3785));
      outputFormat1.getIndent();
      outputFormat1.setTrimText(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setOmitEncoding(false);
      outputFormat2.getIndent();
      outputFormat1.setNewLineAfterNTags((-3785));
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize((-44));
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-ine_epQatr");
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "BS[4e'";
      stringArray0[1] = "-xhtml-ine_epQatr";
      stringArray0[2] = "*riTeoSXGt";
      stringArray0[3] = "3>G^]'9(;qWAiRpkiq3";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.521586834652811
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":i>e_epQat");
      String[] stringArray0 = new String[11];
      outputFormat0.setIndent(true);
      stringArray0[0] = "-trimTeot";
      stringArray0[1] = ":i>e_epQat";
      stringArray0[3] = "-expandEmptyInvaWid attr";
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent(":i>e_epQat");
      outputFormat0.setIndent("B+63OV:$6Eq |Gv%xC");
      assertEquals("B+63OV:$6Eq |Gv%xC", outputFormat0.getIndent());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Xh%Q";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-encoding";
      stringArray0[4] = "Xh%Q";
      stringArray0[5] = "Xh%Q";
      stringArray0[2] = "Xh%Q";
      OutputFormat outputFormat0 = new OutputFormat("ss[Ck;VP@");
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertTrue(boolean0);
      
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("ss[Ck;VP@", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.1265386804514934
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("trimext");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "iNuCPb_x)y %bv\"b]";
      stringArray0[1] = "-expandEmpty`D8t^bb3^+#pEyZfQ:NQ";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "vjTXvX";
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("8iv-.O&\"*?s6!a r2<");
      outputFormat0.setLineSeparator("8iv-.O&\"*?s6!a r2<");
      String[] stringArray0 = new String[24];
      stringArray0[0] = "8iv-.O&\"*?s6!a r2<";
      stringArray0[2] = "8iv-.O&\"*?s6!a r2<";
      stringArray0[3] = "trimext";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "trimext";
      stringArray0[21] = "8iv-.O&\"*?s6!a r2<";
  }
}
