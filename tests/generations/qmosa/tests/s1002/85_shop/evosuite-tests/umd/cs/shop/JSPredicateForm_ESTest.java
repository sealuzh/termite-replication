/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 09:19:21 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4^7cZ^EuJAd~d~$c!_p=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.whitespaceChars((-4), (-4));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.nextToken();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer1.pushBack();
      streamTokenizer1.ordinaryChars(94, (-2));
      streamTokenizer0.parseNumbers();
      streamTokenizer0.nval = (double) (-4);
      streamTokenizer1.wordChars((-4), (-2));
      streamTokenizer1.resetSyntax();
      streamTokenizer1.nextToken();
      streamTokenizer1.quoteChar(90);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer0 = new Integer(90);
      Integer integer1 = new Integer(94);
      UnaryOperator.identity();
      StringReader stringReader1 = new StringReader("4^7cZ^EuJAd~d~$c!_p=");
      StringReader stringReader2 = new StringReader("()peiq i~");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader2);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer2);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("kSt");
      linkedList0.add((String) null);
      LinkedList linkedList1 = new LinkedList<Integer>();
      linkedList0.offer((String) null);
      linkedList0.addAll((Collection<? extends String>) jSTerm0);
      linkedList0.descendingIterator();
      linkedList0.add("kSt");
      linkedList0.removeLast();
      linkedList0.add("! ");
      linkedList0.add("kSt");
      linkedList0.add("kSt");
      linkedList0.add("kst");
      linkedList0.add("kSt");
      jSTerm0.containsAll(linkedList0);
      jSTerm0.add((Object) "kSt");
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Integer integer0 = new Integer(42);
      jSPredicateForm0.addElement(integer0);
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8919849873978585
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("peiq");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("Pk");
      StringReader stringReader0 = new StringReader("(Peiq i~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("Pk");
      SystemInUtil.addInputLine("+&TxEd6");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("(Peiq i~");
      SystemInUtil.addInputLine("Pk");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine(").7y(^CJtuOCYw;)");
      SystemInUtil.addInputLine("*KOV_$3");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("=?c[/9KeDd xWg& ,");
      SystemInUtil.addInputLine("(peiq ~");
      SystemInUtil.addInputLine("(Peiq ~");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4358532144078109
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("UGW;k{HhtrtXKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      SystemInUtil.addInputLine((String) null);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSJshopVars.slash = (-1);
      streamTokenizer0.nval = (double) (-1);
      StringReader stringReader1 = new StringReader("UGW;k{HhtrtXKI(\"");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader1.ready();
      jSTerm0.isEmpty();
      jSTerm0.add((Object) jSTerm0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      stringReader1.reset();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      System.setCurrentTimeMillis(33);
      JSTerm jSTerm1 = new JSTerm();
      jSPredicateForm0.toStr();
      // Undeclared exception!
      try { 
        jSTerm1.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      jSTerm0.add((Object) null);
      linkedList0.offer((String) null);
      linkedList0.descendingIterator();
      linkedList0.add("kSt");
      linkedList0.removeLast();
      linkedList0.add("kSt");
      linkedList0.add("kSt");
      linkedList0.add("kst");
      linkedList0.add("kSt");
      jSTerm0.containsAll(linkedList0);
      jSTerm0.makeEval(true);
      jSTerm0.add((Object) "kSt");
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SystemInUtil.addInputLine("iP],;WTy?p^");
      JSTerm jSTerm0 = new JSTerm();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSTerm0.containsAll(linkedList0);
      jSTerm0.iterator();
      jSTerm0.listIterator();
      jSTerm0.makeEval(true);
      StringReader stringReader0 = new StringReader("3.0");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm1.makeConstant();
      jSTerm0.trimToSize();
      Object object0 = jSTerm1.clone();
      jSTerm0.remove(object0);
      jSTerm1.makeConstant();
      jSTerm0.add((Object) "3.0");
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.258208282048926
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.toStr();
      jSTerm1.add((Object) "GoW;k{Hht;rt XKI(\"");
      Integer integer0 = new Integer(2413);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm2.add((Object) jSTerm1);
      UnaryOperator.identity();
      Integer integer1 = new Integer(1283);
      jSTerm0.addElement(streamTokenizer0);
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSPredicateForm jSPredicateForm0 = jSTerm2.standarizerPredicateForm();
      jSTerm0.print();
      SystemInUtil.addInputLine("call");
      jSPredicateForm0.clonePF();
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = jSTerm1.clonePF();
      jSPredicateForm0.equals((JSPredicateForm) jSTerm2);
      jSPredicateForm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSSubstitution0.removeAllElements();
      jSTerm1.matches(jSPredicateForm0, jSSubstitution0);
      // Undeclared exception!
      try { 
        jSPredicateForm2.set(1283, integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1283
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.315352224393084
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("GoW;k{Hht;rt XKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.iterator();
      jSTerm1.add((Object) "GoW;k{Hht;rt XKI(\"");
      Integer integer0 = new Integer(2413);
      JSTerm jSTerm2 = new JSTerm(streamTokenizer0);
      jSTerm2.add((Object) jSTerm1);
      UnaryOperator.identity();
      Integer integer1 = new Integer(1283);
      jSTerm2.add((Object) null);
      jSTerm0.toStr();
      jSTerm2.add((Object) stringReader0);
      Integer integer2 = new Integer((-1883517502));
      Integer integer3 = new Integer(1283);
      UnaryOperator.identity();
      System.setCurrentTimeMillis(2198L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm2.equals((JSPredicateForm) jSTerm2);
      JSTerm jSTerm3 = null;
      try {
        jSTerm3 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3145127355809594
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.makeConstant();
      jSTerm0.add((Object) "kSt");
      Integer integer0 = new Integer((-13));
      Integer integer1 = new Integer((-13));
      Integer integer2 = new Integer((-13));
      Integer integer3 = new Integer((-13));
      Integer integer4 = new Integer((-13));
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      linkedList0.add((String) null);
      linkedList0.add("a,=PSDJ?AHY5kO{kk3");
      linkedList0.add("2G#9r!4Ljv[HE");
      jSTerm0.containsAll(linkedList0);
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.190041283682085
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4^7cZ^EuJAd~d~$c!_p=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.addElement(jSTerm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution1);
      jSTerm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSPredicateForm0.equals(jSPredicateForm2);
      jSPredicateForm1.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm0.clonePF();
      jSPredicateForm4.equals(jSPredicateForm0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm5 = jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm5.ensureCapacity((-2));
      Object object0 = jSPredicateForm5.clone();
      jSSubstitution0.add(object0);
      JSPredicateForm jSPredicateForm6 = new JSPredicateForm((String) null);
      jSPredicateForm0.applySubstitutionPF(jSSubstitution1);
      jSPredicateForm1.standarizerPredicateForm();
      assertEquals("[[4.0]]", jSSubstitution0.toString());
      assertTrue(jSPredicateForm0.equals((Object)jSPredicateForm1));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("(Pk} ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      jSTerm0.add((Object) "kSt");
      linkedList0.add((String) null);
      linkedList0.offer((String) null);
      linkedList0.descendingIterator();
      linkedList0.add("kSt");
      linkedList0.removeLast();
      linkedList0.add("kSt");
      linkedList0.add("kSt");
      jSTerm0.containsAll(linkedList0);
      jSTerm0.iterator();
      jSTerm0.makeEval(true);
      jSTerm0.trimToSize();
      jSTerm0.add((Object) "kSt");
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      linkedList0.offer((String) null);
      linkedList0.removeFirst();
      linkedList0.descendingIterator();
      linkedList0.add("kSt");
      linkedList0.removeLast();
      linkedList0.add("kSt");
      linkedList0.add("K#/5]G_B8%,y[9\"OTC");
      linkedList0.add("kSt");
      linkedList0.add("*WAaQA");
      linkedList0.add("v");
      jSTerm0.containsAll(linkedList0);
      jSTerm0.add((Object) linkedList0);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.LinkedList cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("(Pk} ");
      StringReader stringReader0 = new StringReader("(Pk} ");
      stringReader0.ready();
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4804329492445527
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("UGW;k{HhtrtXKI(\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSJshopVars.slash = (-1);
      streamTokenizer0.nval = (double) (-1);
      StringReader stringReader1 = new StringReader("UGW;k{HhtrtXKI(\"");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader1.ready();
      jSTerm0.isEmpty();
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.clonePF();
      stringReader1.reset();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      System.setCurrentTimeMillis(33);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SystemInUtil.addInputLine("peiq");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine((String) null);
      StringReader stringReader0 = new StringReader("(qxPeiq i~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("(Peiq ~x");
      SystemInUtil.addInputLine("Pk");
      SystemInUtil.addInputLine("peiq");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("(qxPeiq i~");
      SystemInUtil.addInputLine("Pk");
      SystemInUtil.addInputLine("Nf)I&BJ");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine(").7y(^CJtuOCYw;)");
      streamTokenizer0.resetSyntax();
      SystemInUtil.addInputLine("fAm|*|_oA|6gaW");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("=?c[/9KeDd xWg& ,");
      SystemInUtil.addInputLine("(peiq ~");
      SystemInUtil.addInputLine("(Peiq ~");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0730116670092564
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("( ");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      System.setCurrentTimeMillis(3184L);
      System.setCurrentTimeMillis(3184L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1106L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2977L);
      System.setCurrentTimeMillis((-3194L));
      System.setCurrentTimeMillis(2977L);
      System.setCurrentTimeMillis(3184L);
      System.setCurrentTimeMillis(3184L);
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // umd.cs.shop.JSTerm cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9549478780836425
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4^7cZ^EuJAd~d~$c!_p=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.nextToken();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm1);
      streamTokenizer1.pushBack();
      streamTokenizer1.ordinaryChars(94, (-2));
      streamTokenizer0.parseNumbers();
      streamTokenizer1.wordChars(104, 34);
      streamTokenizer1.resetSyntax();
      streamTokenizer1.nextToken();
      streamTokenizer1.lowerCaseMode(false);
      streamTokenizer1.slashSlashComments(false);
      streamTokenizer1.quoteChar(34);
      streamTokenizer1.eolIsSignificant(false);
      streamTokenizer0.lowerCaseMode(false);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.applySubstitutionT(jSSubstitution0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      streamTokenizer2.ordinaryChars(90, 94);
      streamTokenizer2.ordinaryChars((-2), 104);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer2.commentChar(94);
      streamTokenizer1.parseNumbers();
      streamTokenizer2.parseNumbers();
      streamTokenizer3.ordinaryChars((-4), (-2));
      streamTokenizer3.commentChar((-3));
      streamTokenizer3.parseNumbers();
      streamTokenizer3.sval = "Pk";
      streamTokenizer0.lowerCaseMode(false);
      jSTerm0.add((Object) streamTokenizer0);
      boolean boolean1 = jSTerm1.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9995789198276486
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringReader stringReader1 = new StringReader("o++");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.iterator();
      jSPredicateForm0.setSize(32);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSPredicateForm3.clone();
      jSPredicateForm0.equals(jSPredicateForm2);
      jSPredicateForm2.standarizerPredicateForm();
      jSPredicateForm1.print();
      jSPredicateForm2.clonePF();
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      long long0 = (-2L);
      System.setCurrentTimeMillis((-2L));
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis(396L);
      System.setCurrentTimeMillis((-2L));
      System.setCurrentTimeMillis((-2L));
      System.setCurrentTimeMillis(396L);
      System.setCurrentTimeMillis(1183L);
      jSPredicateForm0.addElement("kMt");
      long long1 = (-1L);
      System.setCurrentTimeMillis(396L);
      long long2 = 0L;
      System.setCurrentTimeMillis(0L);
      long long3 = 1168L;
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.addElement("kMt");
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("RUIYg7!ls:~&@AG");
      JSTerm jSTerm0 = new JSTerm();
      Predicate<String> predicate0 = Predicate.isEqual((Object) "RUIYg7!ls:~&@AG");
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<String> predicate2 = predicate0.and(predicate1);
      predicate2.test("3o9ps;-p-+:tz1");
      Predicate<String> predicate3 = predicate0.negate();
      predicate0.test("RUIYg7!ls:~&@AG");
      predicate3.or(predicate2);
      Predicate<String> predicate4 = predicate2.negate();
      jSTerm0.removeIf(predicate4);
      jSTerm0.iterator();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSTerm0.add((Object) "kwt");
      jSTerm0.add((Object) null);
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSTerm0.forEach(consumer0);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "kSt");
      jSTerm0.add((Object) "n-ri");
      jSTerm0.trimToSize();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("c++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      streamTokenizer0.whitespaceChars(593, 593);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "c++");
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("c++");
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) "c++");
      stringReader0.read(charBuffer1);
      stringReader1.close();
      jSTerm0.setSize(32);
      stringReader0.close();
      stringReader0.close();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      StringReader stringReader0 = new StringReader("c++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      streamTokenizer0.whitespaceChars(593, 593);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "c++");
      stringReader0.read(charBuffer0);
      streamTokenizer0.lowerCaseMode(true);
      stringReader0.close();
      jSTerm0.setSize(32);
      stringReader0.close();
      stringReader0.close();
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      objectArray0[1] = (Object) "(\"kwn>";
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSSubstitution0.forEach(consumer1);
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "(\"kwn>");
      jSTerm0.add(objectArray0[1]);
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SystemInUtil.addInputLine("(Zw<To");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("(Zw<To");
      SystemInUtil.addInputLine("TDHh>Xi/8");
      SystemInUtil.addInputLine(">h>?C8-y?5");
      SystemInUtil.addInputLine(">h>?C8-y?5");
      SystemInUtil.addInputLine("TDHh>Xi/8");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("u`.9GD,:");
      SystemInUtil.addInputLine("xn3pfgob;~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("(Zw<To");
      SystemInUtil.addInputLine("nI\"uD)UYEtW");
      SystemInUtil.addInputLine(">h>?C8-y?5");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("(Zw<To");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) null);
      jSPredicateForm0.add((Object) "(Zw<To");
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.455848709151796
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "o++";
      StringReader stringReader0 = new StringReader("o++");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("o++");
      streamTokenizer0.slashSlashComments(true);
      jSPredicateForm0.setSize(32);
      stringReader0.ready();
      jSTerm0.spliterator();
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("2hh>EBJ{Zw]s");
      jSPredicateForm0.add((Object) "XN3QFgoB;~");
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SystemInUtil.addInputLine("(kwT>");
      SystemInUtil.addInputLine("");
      long long0 = 20L;
      System.setCurrentTimeMillis(20L);
      System.setCurrentTimeMillis(20L);
      System.setCurrentTimeMillis((-1778L));
      System.setCurrentTimeMillis((-938L));
      long long1 = 18L;
      long long2 = (-4061L);
      System.setCurrentTimeMillis((-4061L));
      System.setCurrentTimeMillis(18L);
      System.setCurrentTimeMillis(3155L);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(kwT>");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0910596228402674
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4^7cZ^EuJAd~d~$c!_p=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.whitespaceChars((-4), (-4));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.nextToken();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer2);
      streamTokenizer1.pushBack();
      stringReader0.ready();
      streamTokenizer0.ordinaryChars((-4), 1);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer1.parseNumbers();
      streamTokenizer1.wordChars(94, 586);
      streamTokenizer3.resetSyntax();
      streamTokenizer1.nextToken();
      streamTokenizer3.quoteChar((-3));
      UnaryOperator.identity();
      jSTerm0.standardizerTerm();
      streamTokenizer1.wordChars(0, 0);
      streamTokenizer0.whitespaceChars((-4), (-4));
      jSTerm0.makeEval(true);
      Integer integer0 = new Integer(94);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.trimToSize();
      jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(stringReader0);
      streamTokenizer4.ordinaryChar((-2));
      JSTerm jSTerm2 = new JSTerm(streamTokenizer4);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.2629783068404796
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("4^7cZ^EuJAd~d~$c!_p=");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.whitespaceChars((-4), (-4));
      JSTerm jSTerm0 = new JSTerm(streamTokenizer1);
      streamTokenizer0.parseNumbers();
      streamTokenizer1.nextToken();
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer1.pushBack();
      stringReader0.ready();
      streamTokenizer1.ordinaryChars(1, (-2));
      streamTokenizer2.lowerCaseMode(true);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(stringReader0);
      streamTokenizer3.parseNumbers();
      streamTokenizer1.wordChars(586, 94);
      streamTokenizer3.nextToken();
      streamTokenizer2.resetSyntax();
      streamTokenizer1.nextToken();
      streamTokenizer3.quoteChar(1);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer0 = new Integer((-1));
      Integer integer1 = new Integer((-359853002));
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm1.trimToSize();
      jSTerm1.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm1);
      assertTrue(jSSubstitution1.fail());
      
      JSSubstitution jSSubstitution2 = jSTerm0.matches((JSPredicateForm) jSTerm0);
      assertFalse(jSSubstitution2.fail());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SystemInUtil.addInputLine("peiq");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("Pk");
      StringReader stringReader0 = new StringReader("(Peiq ~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("Pk");
      SystemInUtil.addInputLine("+&TxEd6");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("(Peiq ~");
      SystemInUtil.addInputLine("Pk");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine(").7y(^CJtuOCYw;)");
      SystemInUtil.addInputLine("*KOV_$3");
      SystemInUtil.addInputLine("c:ct");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("=?c[/9KeDd xWg& ,");
      SystemInUtil.addInputLine("(peiq ~");
      SystemInUtil.addInputLine("(Peiq ~");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("bb");
      SystemInUtil.addInputLine("2hh>EB{Z#]s");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("oo0hs");
      SystemInUtil.addInputLine("xn3qfgsb;~");
      SystemInUtil.addInputLine("xn3qfgsb;~");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("pFbvy0f<`mF>I");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("xn3pfgob;:~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("2hhebj{zw]s");
      SystemInUtil.addInputLine("xn3pfgob;:~");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(0, stringBuffer0.length());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("bb");
      SystemInUtil.addInputLine("2hh>EB{Z#]s");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("hh>EB{Zw]");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("oo0hs");
      SystemInUtil.addInputLine("xn3qfgsb;~");
      SystemInUtil.addInputLine("xn3qfgsb;~");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("QTD");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("hh>EB{Zw]");
      SystemInUtil.addInputLine("pFbvy0f<`mF>I");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("xn3pfgob;:~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("2hhe,j{zw]s");
      SystemInUtil.addInputLine("xn3pfgob;:~");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(0, stringBuffer0.length());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(3184L);
      System.setCurrentTimeMillis(3184L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1106L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2977L);
      System.setCurrentTimeMillis((-3194L));
      System.setCurrentTimeMillis(2977L);
      System.setCurrentTimeMillis(3184L);
      System.setCurrentTimeMillis(3184L);
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System.setCurrentTimeMillis((-2L));
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(26L);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Integer integer0 = new Integer((-173));
      Integer integer1 = new Integer((-173));
      unaryOperator2.apply(integer1);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator3.andThen((Function<? super Object, ?>) function0);
      unaryOperator2.andThen((Function<? super Integer, ?>) unaryOperator1);
      UnaryOperator<Integer> unaryOperator4 = UnaryOperator.identity();
      unaryOperator2.compose((Function<? super Integer, ? extends Integer>) unaryOperator0);
      UnaryOperator.identity();
      unaryOperator4.andThen((Function<? super Integer, ?>) unaryOperator1);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer2 = new Integer((-173));
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer3 = new Integer((-1));
      UnaryOperator.identity();
      Integer integer4 = new Integer(1308);
      unaryOperator0.apply(integer4);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(function0).apply(any());
      Function<Integer, Integer> function1 = unaryOperator0.andThen((Function<? super Integer, ? extends Integer>) function0);
      Function<Object, Integer> function2 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      function1.compose((Function<? super String, ? extends Integer>) function2);
      function1.andThen((Function<? super Integer, ?>) unaryOperator0);
      Function<Object, Integer> function3 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function4 = unaryOperator0.compose((Function<? super Object, ? extends Integer>) function3);
      Integer integer0 = new Integer((-1435754015));
      function1.apply(integer0);
      Function.identity();
      function1.compose((Function<? super Object, ? extends Integer>) function4);
      function1.andThen((Function<? super Integer, ?>) function4);
      Integer integer1 = new Integer(41);
      function1.apply(integer1);
      Integer integer2 = new Integer(41);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer3 = new Integer(3950);
      Integer integer4 = new Integer(3950);
      Function.identity();
      Integer integer5 = new Integer(3950);
      Integer integer6 = new Integer(3950);
      Integer integer7 = new Integer(41);
      StringReader stringReader0 = new StringReader("WU]'=-Az}-J{1R[-i");
      StringReader stringReader1 = new StringReader("hdAMc4:,mF'YH!t^9");
      Integer integer8 = new Integer(3950);
      JSTerm jSTerm0 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1106L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1106L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SystemInUtil.addInputLine("(kwT>");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("(kwT>");
      SystemInUtil.addInputLine("TDHh>Xi/8");
      SystemInUtil.addInputLine(">h>?C8-y?5");
      SystemInUtil.addInputLine(">h>?C8-y?5");
      SystemInUtil.addInputLine("TDHh>Xi/8");
      StringReader stringReader0 = new StringReader("(kwT>");
      SystemInUtil.addInputLine("z`xYnXhxB=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("u`.9GD,:");
      SystemInUtil.addInputLine("(kwT>");
      SystemInUtil.addInputLine("xn3pfgob;~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("(kwT>");
      SystemInUtil.addInputLine("nI\"uD)UYEtW");
      SystemInUtil.addInputLine(">h>?C8-y?5");
      SystemInUtil.addInputLine("*PlJvgoQe4hM=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("(kwT>");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "(kwT>");
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(7, stringBuffer0.length());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("XN3OQFgoB;~");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("50Ne!GIDPZV5");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("50Ne!GIDPZV5");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("iAel?");
      SystemInUtil.addInputLine("50Ne!GIDPZV5");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "2hh>EBJ{Zw]s");
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("XN3OQFgoB;~");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("iAel?");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "2hh>EBJ{Zw]s");
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("kSt");
      linkedList0.add((String) null);
      linkedList0.clone();
      linkedList0.offer((String) null);
      linkedList0.addAll((Collection<? extends String>) jSTerm0);
      linkedList0.descendingIterator();
      linkedList0.add("kSt");
      linkedList0.removeLast();
      linkedList0.add("! ");
      linkedList0.add("kSt");
      linkedList0.add("kSt");
      linkedList0.add("kst");
      linkedList0.add("kSt");
      jSTerm0.containsAll(linkedList0);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(\"'NI>");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.commentChar((-4));
      streamTokenizer0.parseNumbers();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nval = (double) (-4);
      streamTokenizer1.wordChars((-4), (-4));
      stringReader0.close();
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.resetSyntax();
      streamTokenizer1.resetSyntax();
      streamTokenizer0.resetSyntax();
      streamTokenizer1.pushBack();
      streamTokenizer1.wordChars((-4), (-4));
      streamTokenizer1.quoteChar((-4));
      streamTokenizer1.ttype = streamTokenizer1.ttype;
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.wordChars((-4), (-4));
      streamTokenizer0.ttype = (-4);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.ttype = (-4);
      streamTokenizer1.eolIsSignificant(true);
      streamTokenizer1.lowerCaseMode(false);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer0.quoteChar((-4));
      streamTokenizer0.sval = null;
      streamTokenizer1.ordinaryChars((-4), (-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer0.eolIsSignificant(false);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.commentChar((-4));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer1);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(kwT>");
      JSTerm jSTerm0 = new JSTerm();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      jSTerm0.replaceAll(unaryOperator0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator.identity();
      UnaryOperator.identity();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1106L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(2977L);
      System.setCurrentTimeMillis((-3194L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      JSTerm jSTerm0 = new JSTerm();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) jSTerm1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.listIterator();
      jSTerm0.makeEval(true);
      jSTerm0.makeConstant();
      jSTerm0.add((Object) "kSt");
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer((-1432813318));
      Integer integer2 = new Integer(2497);
      UnaryOperator.identity();
      Integer integer3 = new Integer((-4392));
      Integer integer4 = new Integer(1);
      Integer integer5 = new Integer((-4392));
      Integer integer6 = new Integer(46);
      UnaryOperator.identity();
      Integer integer7 = new Integer((-1018));
      UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer8 = new Integer((-1432813318));
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer9 = new Integer(2147483645);
      Integer integer10 = new Integer((-1432813318));
      unaryOperator0.apply(integer10);
      UnaryOperator.identity();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = jSTerm0.matches((JSPredicateForm) jSTerm1);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis(33L);
      System.setCurrentTimeMillis(33L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-1577L));
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1577L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(33L);
      System.setCurrentTimeMillis((-1454L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1454L));
      System.setCurrentTimeMillis((-1454L));
      System.setCurrentTimeMillis((-1454L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      System.setCurrentTimeMillis((-1462L));
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, Integer> function1 = unaryOperator0.andThen((Function<? super Integer, ? extends Integer>) function0);
      UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator3 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator4 = UnaryOperator.identity();
      Function<Integer, Integer> function2 = unaryOperator4.compose((Function<? super Integer, ? extends Integer>) function1);
      unaryOperator3.andThen((Function<? super Integer, ? extends Integer>) unaryOperator1);
      unaryOperator3.andThen((Function<? super Integer, ?>) function2);
      UnaryOperator.identity();
      unaryOperator3.compose((Function<? super Integer, ? extends Integer>) function1);
      UnaryOperator.identity();
      Integer integer0 = new Integer((-2699));
      Integer integer1 = unaryOperator4.apply(integer0);
      Integer integer2 = new Integer(921);
      UnaryOperator.identity();
      unaryOperator2.apply(integer1);
      UnaryOperator.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.030495400303718
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      UnaryOperator.identity();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSSubstitution2.forEach(consumer0);
      JSSubstitution jSSubstitution5 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(peiq ~");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.backquote = 1;
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("2hh>EBJ{Zw]s");
      SystemInUtil.addInputLine("XN3OQFgoB;~");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("b>h>MC8-y?5");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("*PlgrJvgoQe4hM=");
      SystemInUtil.addInputLine("z`xYnXB=");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("ER2V=P~Ifb<.KP");
      SystemInUtil.addInputLine("xn3pfg)ob;~");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("2hh>EBJ{Zw]s");
      jSPredicateForm0.add((Object) "XN3OQFgoB;~");
      StringReader stringReader0 = new StringReader("WfI{f_@");
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.478006498651262
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis(52L);
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis((-2235L));
      System.setCurrentTimeMillis((-2235L));
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis((-2235L));
      System.setCurrentTimeMillis((-2235L));
      jSPredicateForm0.print();
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis((-2235L));
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis((-1450L));
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis((-1450L));
      System.setCurrentTimeMillis((-1450L));
      System.setCurrentTimeMillis((-1450L));
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis(52L);
      System.setCurrentTimeMillis((-1450L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2235L));
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm("(!A&");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SystemInUtil.addInputLine("x^{gI~'_.'<:Nx}w");
      SystemInUtil.addInputLine("[O% C>CccO:WLW|");
      SystemInUtil.addInputLine("[O% C>CccO:WLW|");
      SystemInUtil.addInputLine("x^{gI~'_.'<:Nx}w");
      SystemInUtil.addInputLine("hh>EB{Zw]");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("oo0hs");
      SystemInUtil.addInputLine("xn3qfgsb;~");
      SystemInUtil.addInputLine("xn3qfgsb;~");
      SystemInUtil.addInputLine("x^{gI~'_.'<:Nx}w");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("hh>EB{Zw]");
      SystemInUtil.addInputLine("x^{gI~'_.'<:Nx}w");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("L4hto!<X~|;tTl");
      SystemInUtil.addInputLine("hh>EB{Zw]");
      SystemInUtil.addInputLine("pFbvy0f<`mF>I");
      SystemInUtil.addInputLine("TDHh>$G/8");
      SystemInUtil.addInputLine("x^{gI~'_.'<:Nx}w");
      SystemInUtil.addInputLine("xn3pfgob;:~");
      SystemInUtil.addInputLine("XN3QFgoB;~");
      SystemInUtil.addInputLine("2hhe,j{zw]s");
      SystemInUtil.addInputLine("xn3pfgob;:~");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("hh>EB{Zw]");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(\"kwn>");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChar((-4));
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.nval = (-3353.171);
      streamTokenizer0.resetSyntax();
      streamTokenizer1.resetSyntax();
      stringReader0.skip((-4));
      streamTokenizer1.quoteChar(49);
      streamTokenizer0.ordinaryChars(49, (-199));
      streamTokenizer0.wordChars(4918, 4918);
      streamTokenizer0.ttype = (-4);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.nval = (double) (-4);
      streamTokenizer1.eolIsSignificant(false);
      streamTokenizer1.lowerCaseMode(false);
      streamTokenizer0.ordinaryChars((-4), (-4));
      streamTokenizer1.parseNumbers();
      streamTokenizer1.parseNumbers();
      streamTokenizer1.parseNumbers();
      streamTokenizer0.lowerCaseMode(false);
      streamTokenizer1.commentChar((-4));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
