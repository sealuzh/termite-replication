/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 08:20:20 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.BufferedReader;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StreamTokenizer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.swing.DropMode;
import javax.swing.JApplet;
import javax.swing.JLayeredPane;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JSpinner;
import javax.swing.KeyStroke;
import javax.swing.SpinnerListModel;
import javax.swing.plaf.basic.BasicRootPaneUI;
import javax.swing.plaf.basic.BasicTableUI;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnaryOperator.identity();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "defproblem");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<0Pwc[");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      JSJshop jSJshop0 = new JSJshop();
      SystemInUtil.addInputLine((String) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "S");
      streamTokenizer0.quoteChar((byte)7);
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.slashStarComments(false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "+ ");
      streamTokenizer0.quoteChar(91);
      jSJshop0.testParser();
      System.setCurrentTimeMillis((byte) (-65));
      System.setCurrentTimeMillis((byte)7);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0817862167270786
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      boolean boolean0 = JSJshop.corbaToHicap;
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      String string0 = "0";
      jSJshop0.getAddList();
      jSJshop0.getBufferedReader("0", "0", (JApplet) null);
      UnaryOperator.identity();
      MockThread.currentThread();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0";
      stringArray0[1] = "all";
      stringArray0[2] = "0";
      stringArray0[3] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "gISa6T>{dJu Tju");
      PipedReader pipedReader1 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader1);
      JSJshop jSJshop0 = new JSJshop();
      SystemInUtil.addInputLine(":d!nu`iLaE7MH[hqBQ");
      JSJshopVars.leftBrac = 1266;
      streamTokenizer0.quoteChar(59);
      streamTokenizer0.slashSlashComments(true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "j@$iuu*1a`oo8.gdfo");
      streamTokenizer0.quoteChar(37);
      jSJshop0.testParser();
      System.setCurrentTimeMillis(442L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "e8iNr!$=#q(]!QIO N");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "W^;y+");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[3] = (byte)10;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean0 = JSJshop.corbaToHicap;
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ordinaryChar((byte)10);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.interrogation = (-954);
      streamTokenizer0.quoteChar((byte)10);
      SystemInUtil.addInputLine("W^;y+");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      JSJshopVars.colon = 8;
      streamTokenizer1.quoteChar((byte)10);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[`vn4A>^I1T(/gmyL");
      streamTokenizer0.quoteChar((-4));
      jSJshop0.testParser();
      System.setCurrentTimeMillis(1610L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "defproblem");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      pipedReader0.close();
      streamTokenizer0.parseNumbers();
      streamTokenizer0.ordinaryChar((byte)7);
      JSJshop jSJshop0 = new JSJshop();
      SystemInUtil.addInputLine("<0mw[");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "JSJshop>>processToken");
      streamTokenizer0.quoteChar(4);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader1 = new PipedReader(pipedWriter0, (byte)7);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader1);
      streamTokenizer0.parseNumbers();
      streamTokenizer1.eolIsSignificant(true);
      streamTokenizer1.slashSlashComments(true);
      streamTokenizer1.slashStarComments(true);
      streamTokenizer0.commentChar(42);
      streamTokenizer1.slashStarComments(true);
      FileSystemHandling.createFolder(evoSuiteFile0);
      streamTokenizer0.quoteChar(91);
      System.setCurrentTimeMillis((-15L));
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "z");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "&mstw'1yscd|");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "nD:aCz");
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UnaryOperator.identity();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "defprolem");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<0Pwc[");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      JSJshop jSJshop0 = new JSJshop();
      SystemInUtil.addInputLine((String) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ",");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "+ ");
      JSJshopVars.lessT = (-1);
      jSJshop0.testParser();
      System.setCurrentTimeMillis((byte) (-65));
      System.setCurrentTimeMillis((byte)7);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.117456111453701
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("6}jl1hwWv0jb5|j");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)59;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte) (-13);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, JSPairPlanTSListNodes> function2 = (Function<Integer, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, JSPairPlanTSListNodes> function3 = unaryOperator0.andThen((Function<? super Integer, ? extends JSPairPlanTSListNodes>) function2);
      Function<Object, Integer> function4 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<DropMode, Integer> function5 = unaryOperator0.compose((Function<? super DropMode, ? extends Integer>) function4);
      function3.compose((Function<? super DropMode, ? extends Integer>) function5);
      SystemInUtil.addInputLine((String) null);
      Function.identity();
      jSTaskAtom0.listIterator();
      Integer integer0 = new Integer((byte)0);
      unaryOperator0.compose((Function<? super DefaultTableModel, ? extends Integer>) function1);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function6 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function7 = unaryOperator1.compose((Function<? super Object, ? extends String>) function6);
      Function<String, JSPairPlanTSListNodes> function8 = (Function<String, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      function7.compose((Function<? super Integer, ?>) function3);
      function7.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function8);
      unaryOperator1.compose((Function<? super JSPlanningProblem, ? extends String>) function7);
      Function<Object, JSPairPlanTSListNodes> function9 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = jSTaskAtom0.add((Object) unaryOperator0);
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function9);
      Function<Object, JSPairPlanTSListNodes> function10 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function10);
      JSJshop jSJshop0 = new JSJshop("6}jl1hwWv0jb5|j", "6}jl1hwWv0jb5|j");
      System.setCurrentTimeMillis((byte) (-13));
      boolean boolean1 = jSJshop0.parserFile("6}jl1hwWv0jb5|j");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "z");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Returning successfully from find-plan : No more tasks to plan");
      PipedReader pipedReader1 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      jSJshop0.testParser();
      System.setCurrentTimeMillis((-1164L));
      System.setCurrentTimeMillis((byte) (-44));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "z");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "y P]#_]6y|kQ6rv;j");
      PipedReader pipedReader1 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader1);
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "failed substitution");
      jSJshop0.testParser();
      System.setCurrentTimeMillis((byte) (-44));
      System.setCurrentTimeMillis(2000L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UnaryOperator.identity();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ul");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)16;
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte) (-44);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "= ");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      JSJshop jSJshop0 = new JSJshop();
      SystemInUtil.addInputLine("+s@B<qG>&f.");
      streamTokenizer0.quoteChar((byte)7);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Expecting method's IfThenElse list");
      jSJshop0.testParser();
      System.setCurrentTimeMillis((byte)16);
      System.setCurrentTimeMillis((-2687L));
      System.setCurrentTimeMillis((byte) (-44));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5461447460085638
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "e8iNr!$=#q(]!QIO N");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "W^;y+");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[3] = (byte)10;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "umd.cs.shop.JSReduction");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer0.quoteChar((byte)10);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "nD:aCz");
      streamTokenizer0.quoteChar((-1077899595));
      jSJshop0.testParser();
      System.setCurrentTimeMillis((-4));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0046024109418776
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)107;
      byteArray0[3] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "Error in readFile() : ";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Error in readFile() : ");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.interrogation = (int) (byte)41;
      JSJshopVars.dot = (-1333);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      jSJshop0.testParser();
      jSJshop0.sol();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("Util.getBufferedReader() error: cannot get URL", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.parseNumbers();
      streamTokenizer0.ordinaryChar((byte)7);
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "_CGz:;`");
      streamTokenizer0.ttype = (-3693);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader1 = new PipedReader(pipedWriter0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader1);
      pipedWriter0.append((CharSequence) null);
      streamTokenizer1.lowerCaseMode(true);
      streamTokenizer1.commentChar((-3693));
      streamTokenizer0.eolIsSignificant(true);
      streamTokenizer1.slashStarComments(true);
      SystemInUtil.addInputLine("igDQEX+6[q5");
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.commentChar((-3693));
      pipedWriter0.flush();
      streamTokenizer2.commentChar((byte)7);
      streamTokenizer0.slashStarComments(true);
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader1);
      streamTokenizer3.quoteChar((-3693));
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "z");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-65);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Error in readFile() : ");
      PipedReader pipedReader1 = new PipedReader();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer0.quoteChar(5521);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Error in readFile() : ");
      streamTokenizer0.quoteChar(2185);
      jSJshop0.testParser();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("6}jl1hwWv0jb5|j");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)35;
      byteArray0[2] = (byte) (-72);
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte) (-13);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends Integer>) function0);
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super JSJshopNode, ? extends Integer>) function1);
      Function.identity();
      Function<Integer, JSPairPlanTSListNodes> function2 = (Function<Integer, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Integer, ? extends JSPairPlanTSListNodes>) function2);
      Function.identity();
      jSTaskAtom0.listIterator();
      Integer integer0 = new Integer((byte)0);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      Function<Integer, String> function3 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Integer, ? extends String>) function3);
      Integer.compare((byte) (-72), (-893));
      Integer.getInteger("n!t|Za:9xWrWl4'(4", (int) (byte) (-13));
      unaryOperator0.apply(integer2);
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, JSPairPlanTSListNodes> function4 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function4);
      Function<Object, JSPairPlanTSListNodes> function5 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSTaskAtom0.replaceAll(unaryOperator1);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("6}jl1hwWv0jb5|j", "6}jl1hwWv0jb5|j");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("6}jl1hwWv0jb5|j");
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-13);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends Integer>) function0);
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, JSPairPlanTSListNodes> function2 = (Function<Integer, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Integer, ? extends JSPairPlanTSListNodes>) function2);
      Function.identity();
      jSTaskAtom0.listIterator();
      Integer integer0 = new Integer((byte)0);
      unaryOperator0.compose((Function<? super DefaultTableModel, ? extends Integer>) function1);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function3 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function4 = unaryOperator1.compose((Function<? super Object, ? extends String>) function3);
      Function<String, JSPairPlanTSListNodes> function5 = (Function<String, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.compose((Function<? super JSPlanningProblem, ? extends String>) function4);
      Function<Object, JSPairPlanTSListNodes> function6 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      jSTaskAtom0.add((Object) unaryOperator0);
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function6);
      Function<Object, JSPairPlanTSListNodes> function7 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function7);
      String string0 = "6}jl1hwWv0jb5|j";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("6}jl1hwWv0jb5|j", "6}jl1hwWv0jb5|j");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.117456111453701
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("6}jl1hwWv0jb5|j");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)59;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte) (-13);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends Integer>) function0);
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, JSPairPlanTSListNodes> function2 = (Function<Integer, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super Integer, ? extends JSPairPlanTSListNodes>) function2);
      Function.identity();
      jSTaskAtom0.listIterator();
      Integer integer0 = new Integer((byte)0);
      unaryOperator0.compose((Function<? super DefaultTableModel, ? extends Integer>) function1);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function3 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      KeyStroke.getKeyStroke("method");
      Function<Object, String> function4 = unaryOperator1.compose((Function<? super Object, ? extends String>) function3);
      Function<String, JSPairPlanTSListNodes> function5 = (Function<String, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      function4.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function5);
      unaryOperator1.compose((Function<? super JSPlanningProblem, ? extends String>) function4);
      Function<Object, JSPairPlanTSListNodes> function6 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = jSTaskAtom0.add((Object) unaryOperator0);
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function6);
      Function<Object, JSPairPlanTSListNodes> function7 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function7);
      JSJshop jSJshop0 = new JSJshop("6}jl1hwWv0jb5|j", "6}jl1hwWv0jb5|j");
      System.setCurrentTimeMillis((byte) (-13));
      boolean boolean1 = jSJshop0.parserFile("6}jl1hwWv0jb5|j");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshop.corbaToHicap = false;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "RdQ";
      stringArray0[1] = "SOLUTION FOUND";
      stringArray0[2] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DropMode dropMode0 = DropMode.USE_SELECTION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Error in readFile() : ";
      stringArray0[1] = " Goal does not match any atom.";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0, ">&p%?\"");
      MockThread.reset();
      MockThread mockThread2 = new MockThread((ThreadGroup) null, mockThread1, "list", 1362L);
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread0);
      mockThread1.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread4 = new MockThread((ThreadGroup) null, ">&p%?\"");
      Thread[] threadArray0 = new Thread[9];
      MockThread mockThread5 = new MockThread();
      threadArray0[0] = (Thread) mockThread5;
      threadArray0[1] = (Thread) mockThread3;
      threadArray0[2] = (Thread) mockThread0;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread2;
      threadArray0[5] = (Thread) mockThread4;
      threadArray0[6] = (Thread) mockThread2;
      threadArray0[7] = (Thread) mockThread3;
      threadArray0[8] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      MockThread mockThread6 = new MockThread();
      mockThread5.getContextClassLoader();
      JApplet jApplet0 = JSJshop.applet;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL((String) null, (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0516819854659416
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0/0");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "all");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      jSJshop0.getAddList();
      jSJshop0.getBufferedReader("0", "0", (JApplet) null);
      UnaryOperator.identity();
      Thread thread0 = MockThread.currentThread();
      jSJshop0.getTree();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      MockThread mockThread0 = new MockThread((ThreadGroup) null, thread0);
      classLoader1.setDefaultAssertionStatus(false);
      MockThread mockThread1 = new MockThread();
      MockThread mockThread2 = new MockThread(mockThread1);
      MockThread.reset();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread2);
      MockThread mockThread4 = new MockThread((ThreadGroup) null, mockThread0, "0");
      MockThread mockThread5 = new MockThread(mockThread4, "Error 2 in Util.getBufferedReader : ");
      mockThread5.setContextClassLoader(classLoader1);
      MockThread mockThread6 = new MockThread(mockThread5, "ZKS,)T^zWFw");
      mockThread6.getContextClassLoader();
      Clipboard clipboard0 = new Clipboard("ZKS,)T^zWFw");
      UnaryOperator.identity();
      jSJshop0.tree();
      jSJshop0.tree();
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("j@$iuu*1a`oo8.gdfo", (String) null, (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.dom();
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      DataFlavor dataFlavor1 = DataFlavor.stringFlavor;
      dataFlavor1.match(dataFlavor0);
      String string0 = null;
      StringSelection stringSelection0 = new StringSelection((String) null);
      try { 
        stringSelection0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      
      } catch(UnsupportedFlavorException e) {
         //
         // cPQIu9c**CU#?N>]
         //
         verifyException("java.awt.datatransfer.StringSelection", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JSJshop jSJshop0 = new JSJshop();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      int int0 = 41;
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JSJshop jSJshop0 = new JSJshop();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      int int0 = 41;
      streamTokenizer0.ttype = 41;
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UnaryOperator.identity();
      FileSystemHandling.shouldAllThrowIOExceptions();
      UnaryOperator.identity();
      String[] stringArray0 = new String[4];
      stringArray0[3] = " Goal does not match any atom.";
      stringArray0[2] = "all";
      JSJshop.main(stringArray0);
      StringSelection stringSelection0 = new StringSelection(stringArray0[0]);
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      try { 
        stringSelection0.getTransferData(dataFlavor0);
        fail("Expecting exception: UnsupportedFlavorException");
      
      } catch(UnsupportedFlavorException e) {
         //
         // 
         //
         verifyException("java.awt.datatransfer.StringSelection", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "all";
      stringArray0[1] = "all";
      stringArray0[2] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("]S!(|) U- Rv&:Ux}", "]S!(|) U- Rv&:Ux}");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      MockThread mockThread0 = new MockThread();
      MockThread.reset();
      Thread[] threadArray0 = new Thread[6];
      MockThread mockThread1 = new MockThread(threadArray0[1], "*Q|~M|#M%Y;@:)!");
      threadArray0[3] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      MockThread mockThread2 = new MockThread();
      mockThread2.getContextClassLoader();
      JApplet jApplet0 = JSJshop.applet;
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("0", "( ", (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0, "&i%?:\"");
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread mockThread2 = new MockThread((ThreadGroup) null, mockThread0, "list", 1362L);
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread2);
      mockThread3.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      Thread[] threadArray0 = new Thread[6];
      mockThread2.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[2] = (Thread) mockThread3;
      MockThread mockThread4 = new MockThread(threadArray0[1], "*Q|~M|#M%Y;@:)!");
      threadArray0[3] = (Thread) mockThread4;
      threadArray0[4] = (Thread) mockThread3;
      threadArray0[5] = (Thread) mockThread3;
      MockThread.enumerate(threadArray0);
      MockThread mockThread5 = new MockThread();
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop((String) null, "z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.117456111453701
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("6}jl1hwWv0jb5|j");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)59;
      byteArray0[3] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, JSPairPlanTSListNodes> function2 = (Function<Integer, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, JSPairPlanTSListNodes> function3 = unaryOperator0.andThen((Function<? super Integer, ? extends JSPairPlanTSListNodes>) function2);
      Function<Object, Integer> function4 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<DropMode, Integer> function5 = unaryOperator0.compose((Function<? super DropMode, ? extends Integer>) function4);
      function3.compose((Function<? super DropMode, ? extends Integer>) function5);
      SystemInUtil.addInputLine((String) null);
      Function.identity();
      jSTaskAtom0.listIterator();
      Function.identity();
      Integer integer0 = new Integer((byte)0);
      unaryOperator0.compose((Function<? super DefaultTableModel, ? extends Integer>) function1);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function6 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function.identity();
      Function<Object, String> function7 = unaryOperator1.compose((Function<? super Object, ? extends String>) function6);
      Function<String, JSPairPlanTSListNodes> function8 = (Function<String, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      function7.compose((Function<? super Integer, ?>) function3);
      function7.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function8);
      unaryOperator1.compose((Function<? super JSPlanningProblem, ? extends String>) function7);
      Function<Object, JSPairPlanTSListNodes> function9 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      jSTaskAtom0.add((Object) unaryOperator0);
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function9);
      Function<Object, JSPairPlanTSListNodes> function10 = (Function<Object, JSPairPlanTSListNodes>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.andThen((Function<? super String, ? extends JSPairPlanTSListNodes>) function10);
      JSJshop jSJshop0 = new JSJshop("6}jl1hwWv0jb5|j", "6}jl1hwWv0jb5|j");
      boolean boolean0 = jSJshop0.parserFile("6}jl1hwWv0jb5|j");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DropMode dropMode0 = DropMode.USE_SELECTION;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ltt`");
      PipedReader pipedReader0 = new PipedReader();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      JSJshop jSJshop0 = new JSJshop();
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.quoteChar((-4));
      streamTokenizer1.quoteChar(1725);
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "all";
      stringArray0[1] = "all";
      stringArray0[2] = "all";
      stringArray0[3] = "all";
      stringArray0[4] = "all";
      stringArray0[5] = "all";
      JSJshop.main(stringArray0);
      SpinnerListModel spinnerListModel0 = new SpinnerListModel(stringArray0);
      JSpinner jSpinner0 = new JSpinner(spinnerListModel0);
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerDateModel
         //
         verifyException("javax.swing.JSpinner$DateEditor", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSJshop.main(stringArray0);
      SpinnerListModel spinnerListModel0 = new SpinnerListModel(stringArray0);
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.getAncestorListeners();
      spinnerListModel0.getNextValue();
      jSpinner0.getUIClassID();
      BasicTableUI basicTableUI0 = new BasicTableUI();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      basicTableUI0.getAccessibleChildrenCount(jSpinner0);
      JMenu jMenu0 = new JMenu((String) null);
      jMenu0.getItem(687);
      // Undeclared exception!
      try { 
        jPopupMenu0.add((JMenuItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Container", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JSJshop jSJshop0 = new JSJshop();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ttype = 41;
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPlanningProblem jSPlanningProblem0 = jSJshop0.prob();
      assertNull(jSPlanningProblem0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "all";
      stringArray0[1] = "all";
      int int0 = 1718;
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0, "&i%?:\"");
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread mockThread2 = new MockThread((ThreadGroup) null, mockThread0, "-", 1362L);
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread2);
      mockThread3.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      Thread[] threadArray0 = new Thread[6];
      mockThread2.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[2] = (Thread) mockThread3;
      MockThread mockThread4 = new MockThread(threadArray0[1], "*Q|~M|#M%Y;@:)!");
      threadArray0[3] = (Thread) mockThread4;
      threadArray0[4] = (Thread) mockThread3;
      threadArray0[5] = (Thread) mockThread3;
      MockThread.enumerate(threadArray0);
      MockThread mockThread5 = new MockThread();
      mockThread5.getContextClassLoader();
      boolean boolean0 = jSJshop0.parserFile("*Q|~M|#M%Y;@:)!");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread(mockThread0, ">&p%?\"");
      MockThread.reset();
      MockThread mockThread2 = new MockThread((ThreadGroup) null, mockThread1, "list", 1380L);
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread0);
      mockThread1.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread4 = new MockThread((ThreadGroup) null, ">&p%?\"");
      mockThread2.getContextClassLoader();
      Thread[] threadArray0 = new Thread[9];
      mockThread0.getContextClassLoader();
      MockThread mockThread5 = new MockThread();
      threadArray0[0] = (Thread) mockThread5;
      MockThread.reset();
      threadArray0[1] = (Thread) mockThread3;
      threadArray0[2] = (Thread) mockThread0;
      mockThread5.getContextClassLoader();
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread2;
      threadArray0[5] = (Thread) mockThread4;
      threadArray0[6] = (Thread) mockThread2;
      threadArray0[7] = (Thread) mockThread3;
      threadArray0[8] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      MockThread.interrupted();
      MockThread mockThread6 = new MockThread();
      mockThread5.getContextClassLoader();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("", "");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.2931300021708616
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Hll";
      stringArray0[2] = "Hll";
      JSJshop.main(stringArray0);
      DataFlavor dataFlavor0 = new DataFlavor();
      DataFlavor dataFlavor1 = DataFlavor.stringFlavor;
      dataFlavor1.match(dataFlavor0);
      dataFlavor0.isFlavorTextType();
      DataFlavor dataFlavor2 = DataFlavor.selectionHtmlFlavor;
      dataFlavor2.clone();
      StringSelection stringSelection0 = new StringSelection("ltt0`");
      stringSelection0.getTransferData(dataFlavor1);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "ltt0`";
      stringArray1[1] = "ltt0`";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray1);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      Class<BasicRootPaneUI> class0 = BasicRootPaneUI.class;
      jSTaskAtom0.removeAllElements();
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(2, 2, true);
      KeyStroke.getKeyStroke(1, (-3), true);
      KeyStroke.getKeyStroke(2, 7, true);
      jSTaskAtom0.add((Object) keyStroke0);
      jSTaskAtom0.add((Object) keyStroke0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("> ", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
