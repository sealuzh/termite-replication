/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 07:39:39 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.schememode.SchemeMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.FocusEvent;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import javax.swing.JColorChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JLayeredPane;
import javax.swing.JRadioButton;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.plaf.metal.MetalLabelUI;
import javax.swing.plaf.multi.MultiLabelUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.xml.dtm.ref.IncrementalSAXSource_Filter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      System.setCurrentTimeMillis(59L);
      String string0 = "";
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("");
      MouseEvent mouseEvent0 = new MouseEvent(jRadioButtonMenuItem0, 260, (-1166L), (-661), 2445, 1, 1799, 669, (-120), false, 0);
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      controller_DisposeOnClose0.componentResized(mouseEvent0);
      boolean boolean0 = true;
      FocusEvent focusEvent0 = new FocusEvent(jRadioButtonMenuItem0, 0, true);
      focusEvent0.setSource(controller_DisposeOnClose0);
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(focusEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      IncrementalSAXSource_Filter incrementalSAXSource_Filter0 = new IncrementalSAXSource_Filter();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
      SchemeMode schemeMode0 = new SchemeMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(schemeMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatter) null);
      IncrementalSAXSource_Filter incrementalSAXSource_Filter0 = new IncrementalSAXSource_Filter();
      JFormattedTextField jFormattedTextField1 = new JFormattedTextField();
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SchemeMode schemeMode0 = new SchemeMode();
      SystemColor systemColor0 = SystemColor.activeCaptionText;
      Controller.removePropertyChangeListener((FreemindPropertyListener) null);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      BrowseMode browseMode0 = new BrowseMode();
      browseMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      System.setCurrentTimeMillis((-83L));
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertTrue(jColorChooser0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      MultiLabelUI multiLabelUI0 = new MultiLabelUI();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.setUI(multiLabelUI0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      JRadioButton jRadioButton0 = new JRadioButton("", true);
      Color color0 = Color.magenta;
      try { 
        Controller.showCommonJColorChooserDialog(jRadioButton0, ")7Q99+s", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Controller.Closer controller_Closer0 = new Controller.Closer();
      // Undeclared exception!
      try { 
        controller_Closer0.windowClosing((WindowEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$Closer", e);
      }
  }
}
