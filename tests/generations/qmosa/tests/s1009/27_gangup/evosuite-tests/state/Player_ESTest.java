/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 05:24:47 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player(13, "", "U2wNQ';)RC8", 2);
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      player0.type();
      boolean boolean0 = false;
      player0.setDead((long) 2, false);
      player0.getY();
      player0.setJoinOK(player0, false);
      Player player1 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8863990313046046
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2794, " ", "module.ModuleBrowserDialog$ModuleFilter", 0, 2794);
      Player player1 = new Player(0, "|mDH~Z2N.bR`Y", (-28882));
      player1.setX((-28882));
      player1.setJoinOK(player0, false);
      player0.setY((-1529.6481F));
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(1119L);
      player1.pack();
      float float0 = player0.getY();
      assertEquals((-1529.6481F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.US;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.US;
      Locale locale2 = Locale.CHINESE;
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      locale3.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.ENGLISH;
      locale1.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      UnaryOperator<Locale.LanguageRange> unaryOperator0 = UnaryOperator.identity();
      linkedList2.replaceAll(unaryOperator0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set0);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      MockFile mockFile0 = new MockFile((String) null, "");
      mockFile0.toURL();
      Player player0 = new Player((-270), (String) null, "*ol-F", (-751));
      String string0 = player0.getIP();
      assertNull(string0);
      
      player0.getName();
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals((-751), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(13, "", "U2wNQ';)RC8", 13);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.setMoney((-3591.8308F));
      player0.unpack(byteArray0);
      player0.type();
      player0.setX(1);
      player0.type();
      player0.getMoney();
      int int0 = player0.type();
      assertEquals((-3591.8308F), player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.196422294125466
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)125;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(13, "", "U2wNQ';)RC8", 2);
      byte[] byteArray1 = player0.pack();
      player0.setZ((short)4919);
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead((long) 2, false);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, 5, (short)4919);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player1;
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player1.setJoinOK(player2, false);
      player2.isJoinOK(player0, false);
      float float0 = player0.getZ();
      assertEquals(4919.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.142383453087495
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(13, "", "U2wNQ';)RC8", 2);
      byte[] byteArray0 = player0.pack();
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.setMoney(1.0F);
      player0.type();
      player0.type();
      player0.setDead((long) 2, false);
      player0.getY();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 5, (short)4919);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player1;
      player0.setJoinOK(player1, false);
      Player player2 = new Player();
      player2.head = (Party) player1;
      player0.isJoinOK(player1, false);
      player1.isJoinOK(player0, false);
      player0.setJoinOK(player1, true);
      Party party0 = new Party();
      player0.getMoney();
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals((-3591.8308F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8863990313046046
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2794, " ", "module.ModuleBrowserDialog$ModuleFilter", 0, 2794);
      Player player1 = new Player(0, "|mDH~Z2N.bR`Y", (-28882));
      player1.setX((-28882));
      player1.setJoinOK(player0, false);
      player0.setY(0.1F);
      player1.isJoinOK(player0, false);
      player1.pack();
      float float0 = player0.getY();
      assertEquals(0.1F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",g)SW_");
      Player player0 = new Player((-28928), "", (-28928));
      player0.setDead((long) (-28928));
      player0.getZ();
      player0.gangStrength();
      player0.pack();
      player0.getTimeOfDeath();
      player0.id = 1;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set0, locale_FilteringMode1);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList5);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList5, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      linkedList5.offer(locale0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list3);
      locale0.getUnicodeLocaleKeys();
      Player player0 = new Player((-28160));
      Player player1 = new Player(20889, (String) null, (-751));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(5);
      player1.setY(20889);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      player0.pack(dataOutputStream0);
      player1.getName();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)49;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte) (-31);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-2811), "", "", (-2407), (-2811));
      player0.setConnected(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player((-2407), "gui.ModuleBrowserDialog$ModuleFilter", (-2811));
      assertTrue(player1.isConnected());
      
      player0.pack();
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set0, locale_FilteringMode1);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList5);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList5, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList5);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list3);
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Player player0 = new Player(0, "ine50", (String) null, 0);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.267949945418531
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)30;
      byteArray0[6] = (byte) (-40);
      byteArray0[7] = (byte) (-45);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2143), 2);
      Player player0 = new Player(433, "", (-2143));
      Player player1 = new Player();
      player1.setJoinOK(player0, false);
      Player player2 = new Player();
      player0.isJoinOK(player2, false);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player2.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.poll();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale locale1 = Locale.CANADA;
      linkedList1.add(locale1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>(linkedList0);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList3, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      linkedList7.add(locale0);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList9, (Collection<Locale>) linkedList1);
      locale1.getUnicodeLocaleKeys();
      Player player0 = new Player(439);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      linkedList5.pollLast();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList7);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list0, locale_FilteringMode0);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      linkedList4.iterator();
      linkedList4.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList15 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList16, (Collection<Locale>) list1);
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player(4, (String) null, (-28160));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G0MaY_D7OaU$d");
      Player player0 = new Player((-504), (String) null, (-504));
      Party party0 = new Party();
      party0.add(player0);
      party0.id = (int) (short)4919;
      player0.remove(party0);
      player0.toString();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-2811), "", "", (-2407), (-2811));
      player0.reset(false);
      player0.getZ();
      Player player1 = new Player((-1669));
      player1.setX(0.0F);
      player0.getTimeOfDeath();
      player1.getX();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)56;
      player1.unpack(byteArray0);
      Player player2 = new Player();
      player2.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1243L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.384415616105067
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(3, "", "l", (-1), (-945));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      float float0 = Player.TOLERANCE;
      player0.setX((-1));
      player0.getX();
      Player player1 = new Player(2, "x)mJs\"~2AV4.u`u:e", "", 1870, 1870);
      int int0 = player0.gangStrength();
      assertEquals((-945), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "S", "S", 0, 0);
      player0.setZ((-1.0F));
      player0.getStrength();
      player0.type();
      player0.type();
      player0.setDead(1L, true);
      player0.getY();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (short)4919);
      Player player1 = new Player(5, "gui.ModuleBrowserDialog$ModuleFilter", 5);
      player0.setJoinOK(player1, true);
      Player player2 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, " ", "module.ModuleBrowserDialog$ModuleFilter", 0, 2794);
      Player player1 = new Player(1, " ", 0);
      player1.setX((-28882));
      Player player2 = new Player(2794);
      player2.setY(0);
      Player player3 = new Player(3169, " ", "module.ModuleBrowserDialog$ModuleFilter", (-21504), (-21282));
      System.setCurrentTimeMillis(3137L);
      Player player4 = new Player(1, " ", (-21282));
      player3.getStrength();
      System.setCurrentTimeMillis(2794);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      linkedList5.pollLast();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList7);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list0, locale_FilteringMode0);
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      linkedList4.iterator();
      linkedList4.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList15 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList16, (Collection<Locale>) list1);
      Player player0 = new Player(20882, "", 1801);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertTrue(player1.isConnected());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1801, player0.getPictureId());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean0);
      assertEquals("Player-1", player1.getName());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0, locale_FilteringMode0);
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list2, locale_FilteringMode1);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList0.poll();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode2);
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      linkedList2.addLast(locale1);
      linkedList2.add(locale1);
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list5, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList4.add((Locale.LanguageRange) null);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list4, locale_FilteringMode4);
      locale1.getUnicodeLocaleKeys();
      System.setCurrentTimeMillis(1692L);
      Player player0 = new Player((-1), "", (-1));
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis(0L);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.053778405293998
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-54);
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)94;
      byteArray0[5] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(0, " ", "module.ModuleBrowserDialog$ModuleFilter", 2075, 2794);
      player0.setJoinOK(player0, false);
      Player player1 = new Player(1, "WxrL \"q_(qa_M=.Jx", 0);
      player1.setX((-28882));
      player1.setJoinOK(player0, false);
      player0.setY(2794);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(2075);
      byte[] byteArray1 = player1.pack();
      System.setCurrentTimeMillis((-1589L));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      float float0 = player1.getY();
      assertEquals((-28882.0F), player1.getX(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(1187, "", "w>K=YEB", (-22729), (-22729));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)28;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.isConnected();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("", player0.getIP());
      assertEquals((-22729), player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-22729), player0.getPictureId());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Party party0 = new Party();
      System.setCurrentTimeMillis(5);
      Player player0 = new Player(5, "", "", 2147340491, 0);
      int int0 = player0.gangStrength();
      assertEquals(2147340491, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(2750, " ", " ", 2750, 2750);
      Object object0 = new Object();
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList3);
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      System.setCurrentTimeMillis(1L);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(2750, int0);
      assertEquals(2750, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(2775, " ", " ", 0, 2775);
      MockFile mockFile0 = new MockFile("K:)09hi^c");
      MockFile mockFile1 = new MockFile(" ", "K:)09hi^c");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(dataOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(filterOutputStream0);
      player0.pack(dataOutputStream0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player(4065, "", "", 0);
      player0.gangStrength();
      player0.setY(0.0F);
      player0.getStrength();
      player0.setX(911.4F);
      player0.setDead(1187L);
      long long0 = player0.getTimeOfDeath();
      assertEquals(911.4F, player0.getX(), 0.01F);
      assertEquals(1187L, long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(4919, (String) null, 5);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.pollLast();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) linkedList5);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList1.addAll((Collection<? extends Locale.LanguageRange>) linkedList0);
      linkedList3.add((Locale.LanguageRange) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList5, locale_FilteringMode0);
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      linkedList1.iterator();
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      linkedList15.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList17 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList18 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList19 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList20 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) linkedList12);
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player(4, "mj>^4o!#2>cHOP;]$", 1);
      player0.pack();
      assertEquals(1, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.052128844641025
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(26, "", 26);
      player0.setZ(26);
      Player player1 = new Player((short)4919, "", "U,'%WYR`4%\"&ef'SIR-", (-1), (short)4919);
      player1.setMoney(1.0F);
      player1.type();
      player1.getPictureId();
      player1.getIP();
      player0.getIP();
      Player player2 = new Player(5, "U,'%WYR`4%\"&ef'SIR-", 5);
      player0.isJoinOK(player2, false);
      player0.pack();
      player2.getY();
      player0.getIP();
      assertEquals(26.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(5, "A4g", "A4g", 4, 4);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      MockFile mockFile0 = new MockFile("K:)09hi^c");
      mockFile0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile("A4g", "x;_o");
      mockFile1.setReadOnly();
      mockFile1.setReadable(false);
      mockFile0.setWritable(true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(4831, "", 573);
      player0.getName();
      player0.getMoney();
      player0.setMoney((-1.0F));
      player0.setDead((long) 4831);
      String string0 = "R5YPjiPDiD=";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("R5YPjiPDiD=", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-35.21427F));
      Player player1 = new Player((short)4919, "lBk(2f[}~]PJ)", "", (short)4919, (short)4919);
      player0.next = (Party) player1;
      player0.setX(4919);
      player1.getTimeOfDeath();
      float float0 = Player.MOVE_DISTANCE;
      player1.setY((-1232.5277F));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isDead();
      player0.gangStrength();
      player1.isJoinOK(player0, false);
      assertEquals((-35.21427F), player0.getZ(), 0.01F);
      assertEquals("Player-1", player0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 10936;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":BVaS@X0BON~+R{");
      Player player0 = new Player(10936);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player((-1), "", "", 5);
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(5, player0.getPictureId());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(2794, " ", " ", 0, 2794);
      Player player1 = new Player(0, "|mDH~Z2N.bR`Y", (-28882));
      Party party0 = player0.boss;
      player0.next = null;
      player1.setX((-28882));
      player0.setY((-1529.6481F));
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis(1119L);
      Party party1 = new Party();
      assertEquals((-1), party1.getId());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9421822974250196
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = ";l1f#S|Sp|\\tO$m";
      Player player0 = new Player(13, "", ";l1f#S|Sp|\tO$m", 2);
      byte[] byteArray0 = player0.pack();
      Party party0 = new Party();
      player0.add(party0);
      player0.setZ((-3591.8308F));
      player0.getStrength();
      player0.type();
      int int0 = Packable.TEXT_MESSAGE;
      player0.getY();
      String string1 = "Y+1*q\"FIO[23yF;bFp";
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (short)4919);
      Player player1 = new Player(2, "Y+1*q\"FIO[23yF;bFp", 2);
      player1.boss = (Party) player0;
      Player player2 = new Player();
      player2.boss = party0;
      player0.isJoinOK(player1, false);
      MockFile mockFile0 = new MockFile((String) null, "");
      // Undeclared exception!
      try { 
        player1.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-702));
      Player player1 = new Player();
      player1.reset(false);
      player0.add(player1);
      player0.gangStrength();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player1.pack(dataOutputStream0);
      player0.type();
      player0.getZ();
      player0.pack();
      player0.isJoinOK(player1, false);
      player0.pack();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      linkedList5.pollLast();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale locale0 = Locale.CHINA;
      linkedList7.add(locale0);
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList7);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      linkedList5.iterator();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      linkedList12.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList14 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player(4, " ", " ", 4);
      int int1 = player0.gangStrength();
      assertEquals(1, int1);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-35.21427F));
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player0.next = (Party) player1;
      player0.setMoney((short)4919);
      player1.id = 0;
      player0.getZ();
      player0.setX((-35.21427F));
      player1.getTimeOfDeath();
      player1.getX();
      Player player2 = new Player((short)4919);
      player1.setY((-1232.5277F));
      boolean boolean0 = player2.isJoinOK(player0, false);
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":BVaS@X0BON~+R{");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Party party0 = new Party(249);
      Player player0 = new Player(249, "$lG~&<37vxl.V", "$lG~&<37vxl.V", (-28928), 2815);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertEquals(2815, player0.getStrength());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals((-28928), player0.getPictureId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      Player player0 = new Player(4, "", 4);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1, player0.getStrength());
      assertEquals(0L, long0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(4, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(2794, " ", " ", 2794, 2794);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte) (-72);
      player0.unpack(byteArray0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[5];
      Object object2 = new Object();
      objectArray0[0] = object2;
      objectArray0[1] = (Object) "&XBIv^}?',*}'V#x%";
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) null;
      objectArray0[4] = (Object) null;
      char[] charArray0 = new char[6];
      System.setCurrentTimeMillis(1010L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 0);
      player0.add(party0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte) (-72);
      byteArray0[6] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(18933);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player18933", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Party party0 = new Party();
      MockFile mockFile0 = new MockFile("module.ModuleBrowserDialog$ModuleFilter", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      Player player0 = new Player((-743), "", "", (-743));
      player0.pack(dataOutputStream0);
      assertEquals((-743), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add((Locale.LanguageRange) null);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList4.pollLast();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList5);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      linkedList6.poll();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list1, locale_FilteringMode2);
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      linkedList7.add(locale0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList7, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList10, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList9, (Collection<Locale>) linkedList10);
      locale0.getUnicodeLocaleKeys();
      Player player0 = new Player((-1));
      Player player1 = new Player((-1), "J@}.$i", 20882);
      player1.setJoinOK(player0, true);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      
      player1.isBoss();
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(20882, player1.getPictureId());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(2750, " ", " ", 2750, 2750);
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[5];
      Object object2 = new Object();
      objectArray0[0] = object2;
      player0.setJoinOK(player0, true);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(2750, player0.getPictureId());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(2750, player0.getStrength());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-1886));
      player0.setZ((-1886));
      player0.setDead();
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-1886));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -1886
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "]`Y2z", 14093);
      player1.setDead((long) 14093, true);
      String string0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("]`Y2z", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-35.21427F));
      Player player1 = new Player((short)4919, "", "", (short)4919, (short)4919);
      player0.setMoney((short)4919);
      player0.type();
      player0.getPictureId();
      player0.getIP();
      player1.getIP();
      Player player2 = new Player(0, "", 0);
      player2.isJoinOK(player0, false);
      player0.pack();
      player1.getY();
      player0.getIP();
      player0.getIP();
      assertEquals(4919.0F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0, "", "U2wNQ';)RC8", 19);
      Party party0 = player0.prev;
      player0.boss = null;
      player0.pack();
      player0.setZ((-3591.8308F));
      player0.type();
      player0.add((Party) null);
      player0.getPictureId();
      player0.getIP();
      player0.getIP();
      Player player1 = new Player(0, "I(T0$L:_F}}\"2", 2);
      player1.isJoinOK(player0, false);
      assertEquals((-3591.8308F), player0.getZ(), 0.01F);
      
      player1.pack();
      player1.getY();
      String string0 = player1.getIP();
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(13, "", "", 1);
      Party party0 = player0.head;
      player0.next = null;
      player0.setZ(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(1, "WxrL \"q_(qa_M=.Jx", " ", 2794);
      player0.setX((-28882));
      System.setCurrentTimeMillis(2075);
      System.setCurrentTimeMillis((-1589L));
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player((-187), "@3!Je@3@0d/|er,XcS", "!e", (-1451));
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.ENGLISH;
      Set<String> set0 = locale1.getUnicodeLocaleAttributes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList6, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list1);
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      System.setCurrentTimeMillis((-1451));
      int int0 = Packable.GAME_STATE;
      float float0 = player0.getMoney();
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-1451), player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.8851218920964303
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(2794, " ", " ", 0, 2794);
      Player player1 = new Player((-28882));
      player1.setX((-28882));
      player1.setJoinOK(player0, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setY((-1529.6481F));
      player1.isJoinOK(player0, false);
      player1.reset(true);
      System.setCurrentTimeMillis(1119L);
      player1.pack();
      System.setCurrentTimeMillis(1006L);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Locale locale0 = Locale.US;
      locale0.clone();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.US;
      Locale locale2 = Locale.CHINESE;
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      Set<String> set1 = locale3.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale4 = Locale.ENGLISH;
      locale1.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      UnaryOperator<Locale.LanguageRange> unaryOperator0 = UnaryOperator.identity();
      linkedList2.replaceAll(unaryOperator0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList6, (Collection<String>) set1);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Player player0 = new Player((-751));
      Player player1 = new Player(13, "", 13);
      player0.reset(false);
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player1.isConnected());
      assertEquals(13, player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("Player-751", player0.getName());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
  }
}
