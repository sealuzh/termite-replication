/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 04:52:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserConstants;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9491149271210162
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("iRwM!#9k:tg-e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)29;
      byteArray1[1] = (byte)29;
      byteArray1[2] = (byte) (-88);
      byteArray1[3] = (byte)29;
      byteArray1[4] = (byte)29;
      byteArray1[5] = (byte)29;
      byteArray1[6] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("");
      Token token1 = Token.newToken((byte)29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader2 = new StringReader("");
      javaParserTokenManager0.getNextToken();
      Token token2 = new Token();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.539561385445098
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("catch");
      StringReader stringReader2 = new StringReader("short");
      stringReader1.skip((-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.reset();
      StringReader stringReader3 = new StringReader("catch");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      StringReader stringReader4 = new StringReader("short");
      char[] charArray0 = new char[1];
      charArray0[0] = 'n';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.getNextToken();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null, 0, 178);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.981019786243817
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5HV0 nPixuv(U,9>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)88;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[1] = 'T';
      charArray0[3] = '\\';
      charArray0[3] = '\\';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals("(", token0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9903475282021756
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("+nRS&^<Eo;(usb|");
      StringReader stringReader2 = new StringReader("t7uY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      StringReader stringReader3 = new StringReader("<NLpnRF& ");
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.newToken(0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5052746762182578
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("throws");
      String string0 = "true";
      StringReader stringReader2 = new StringReader("true");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)36;
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = 'k';
      charArray0[2] = '[';
      stringReader0.read(charArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader3 = null;
      try {
        stringReader3 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9383325632307524
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("tQCtuJ 7Gqm)K%");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringReader stringReader2 = new StringReader("tQCtuJ 7Gqm)K%");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      stringReader2.close();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream2);
      assertEquals(5, javaCharStream2.bufpos);
      assertEquals(6, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2759735601740836
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u~u}");
      StringReader stringReader1 = new StringReader("void");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader2 = new StringReader("$*RN|9M)Q78CWi\"");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)66;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.getNextToken();
      stringReader1.close();
      javaCharStream0.GetImage();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1992), 1, 1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream1, 1);
      javaParserTokenManager0.jjmatchedPos = (int) (byte)82;
      javaParserTokenManager2.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager4.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -1992, column 6.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4981761906601778
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("A^Od!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4528695173723094
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<CHARACTER_LITERAL>");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("E&xs?#'JK4%Z5=&F/lD");
      StringReader stringReader2 = new StringReader("Xeq<C022*4Ib,#l8");
      StringReader stringReader3 = new StringReader("Xeq<C022*4Ib,#l8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader4 = new StringReader("<CHARACTER_LITERAL>");
      stringReader4.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("Xeq", token0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.020395908386618
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("KEZ+Xe-'%");
      StringReader stringReader2 = new StringReader("double");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      stringReader1.reset();
      StringReader stringReader3 = new StringReader("double");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader4 = new StringReader("%");
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.ReInit(javaCharStream0);
      Token.newToken((byte)84);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: <EOF> after : \"\\'%\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9772480383923874
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5HV0 nPixuv(U,9>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)88;
      StringReader stringReader1 = new StringReader("qft1HpSU=&3M<+uP");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(13, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5HV0 nPixuv(U,9>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      javaCharStream0.nextCharBuf = charArray0;
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)88;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[1] = 'T';
      charArray0[3] = '\\';
      charArray0[3] = '\\';
      stringReader0.read(charArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0006876158831357
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("DR4H");
      char[] charArray0 = new char[6];
      charArray0[0] = ' ';
      charArray0[1] = ' ';
      charArray0[2] = ' ';
      charArray0[3] = ' ';
      charArray0[4] = ' ';
      charArray0[5] = ' ';
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("}uOHL39*");
      StringReader stringReader3 = new StringReader("* O1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 68, 46);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.newToken(0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(68, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.166150647680098
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finwll/");
      StringReader stringReader1 = new StringReader("finwll/");
      StringReader stringReader2 = new StringReader("finwll/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.readChar();
      char[] charArray0 = new char[7];
      charArray0[0] = 'a';
      charArray0[1] = 'a';
      charArray0[2] = 'a';
      charArray0[3] = 'a';
      charArray0[4] = 'D';
      charArray0[5] = 'a';
      charArray0[6] = 'D';
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = new Token();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.newToken(6093);
      Token token2 = new Token();
      assertEquals(0, token2.beginColumn);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9591713429572444
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byt<");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 113, 867, 2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("t");
      Token.newToken(1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.9649462002484093
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)38;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)38;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte)38;
      byteArray0[8] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("<mHR;*I,N@Jso-h0%~z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("<mHR;*I,N@Jso-h0%~z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.readChar();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      stringReader1.close();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("mHR", token0.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7167961689127393
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)29;
      StringReader stringReader0 = new StringReader("9l^,:urIzl!tzJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("y'*.Xrl+-3T,ANz5");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 15.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3881611113590973
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finall");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = 5;
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.178448972046002
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("catch");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5680618808117277
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("G_qmV;\"jy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("G_qmV;\"jy");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 10.  Encountered: <EOF> after : \"\\\"jy\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4980044994308748
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)84;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("KEZ+Xe-'%");
      StringReader stringReader2 = new StringReader("double");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("j", token0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5820286895386868
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)125;
      StringReader stringReader0 = new StringReader("P.k\u0006l=bIDP[xd-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[1] = 'D';
      javaCharStream0.readChar();
      charArray0[2] = 'a';
      charArray0[3] = 'a';
      stringReader0.read(charArray0);
      Token token0 = new Token();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curLexState = 13;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, token0.beginColumn);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.304519943331489
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("throws");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("throws");
      StringReader stringReader2 = new StringReader("true");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-13);
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte)70;
      javaParserTokenManager0.getNextToken();
      StringReader stringReader3 = new StringReader("");
      stringReader3.close();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null, (byte)32, 2634);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.184088775891298
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("short");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("catch");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9360128143860558
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)125;
      StringReader stringReader0 = new StringReader("P.k\u0006l=bIDP[xd-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[1] = 'D';
      javaCharStream0.readChar();
      charArray0[2] = 'a';
      int int0 = JavaParserConstants.EXTENDS;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = new Token();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.getNextToken();
      Token token2 = Token.newToken('D');
      token2.beginColumn = 21;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token3 = new Token();
      assertEquals(0, token3.beginLine);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0049385435129077
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@Ml0&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("@Ml0&");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader1.close();
      JavaCharStream javaCharStream2 = null;
      try {
        javaCharStream2 = new JavaCharStream((InputStream) null, 1330, (-3736));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0321221729637644
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("&6{\"-u{yu(K!");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[10];
      charArray0[0] = '\\';
      stringReader0.mark((byte)29);
      charArray0[1] = '\"';
      javaParserTokenManager0.getNextToken();
      javaCharStream0.inBuf = 1556;
      Token token0 = new Token();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "oN5<!>wO");
      StringReader stringReader1 = new StringReader("&");
      Token token1 = javaParserTokenManager0.getNextToken();
      Token token2 = Token.newToken(105);
      assertNotSame(token2, token1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5965647952695972
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/>S)E+arAH[^$i+UX");
      StringReader stringReader0 = new StringReader("ke@&F2pH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\"';
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader1 = new StringReader("");
      Token token1 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      Token token2 = new Token();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9930514721176498
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)125;
      StringReader stringReader0 = new StringReader("P.k\u0006l=bIDP[xd-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[1] = 'D';
      javaCharStream0.readChar();
      charArray0[2] = 'a';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = new Token();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token2 = javaParserTokenManager0.getNextToken();
      token2.beginColumn = 21;
      Token.newToken(1);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"\\u0006\" (6), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.677283154477698
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u~u}");
      StringReader stringReader1 = new StringReader("u~u}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      stringReader1.read();
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 39);
      Token.newToken(1);
      javaParserTokenManager0.getNextToken();
      Token.newToken(0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(4, javaCharStream0.getBeginColumn());
      assertEquals("u", token0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3130089617269696
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-77);
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-77);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("KEZ+Xe-'%");
      StringReader stringReader2 = new StringReader("double");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager3.jjimageLen = 29;
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager4.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4564391162865442
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "short";
      StringReader stringReader0 = new StringReader("short");
      StringReader stringReader1 = new StringReader("xM_3EB#5RGE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0370164581208634
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byte");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(4, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.312487657784676
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("byt<");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("byt<");
      StringReader stringReader2 = new StringReader("Twi!6)Q7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      stringReader2.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("byt", token0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7100151418757135
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@Ml0&");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager1.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7458924564879612
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("$fjg^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      StringBuffer stringBuffer0 = javaParserTokenManager1.image;
      javaParserTokenManager0.image = null;
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = '5';
      charArray0[1] = 'L';
      charArray0[2] = '#';
      javaCharStream0.maxNextCharInd = 1;
      charArray0[3] = '(';
      charArray0[4] = 'x';
      charArray0[5] = '/';
      charArray0[6] = 'x';
      charArray0[7] = 'H';
      stringReader0.read(charArray0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9661279479053817
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[7];
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("~U27%&M#YU9:JvX]");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader1.reset();
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      StringReader stringReader5 = new StringReader("Hd@");
      stringReader5.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("M", token0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9684124220285313
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("+nRS&^<Eo;(usb|");
      StringReader stringReader2 = new StringReader("t7uY");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      char[] charArray0 = new char[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      stringReader1.reset();
      StringReader stringReader3 = new StringReader("\"");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      stringReader2.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader4 = new StringReader("\"goto\"");
      StringReader stringReader5 = new StringReader("\"");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader5, 1, (-1111));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader6 = new StringReader("&");
      stringReader5.close();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream1.bufpos);
      assertEquals("&", token0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.1029837812300003
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1459, 1459);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 39, 1350);
      StringReader stringReader1 = new StringReader("]");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 18, 1350);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      assertEquals(0, javaCharStream2.bufpos);
      assertEquals(18, javaCharStream2.getLine());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.55626724782754
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "e5HV0 nPixuv(U,9>";
      StringReader stringReader0 = new StringReader("e5HV0 nPixuv(U,9>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '<';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte)88;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[1] = 'T';
      charArray0[3] = '\\';
      charArray0[3] = '\\';
      stringReader0.read(charArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5535390844375314
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'j';
      charArray0[1] = ' ';
      charArray0[2] = 'J';
      charArray0[3] = '<';
      charArray0[4] = 'J';
      charArray0[5] = 'j';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("transient");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 40, 40);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      token0.image = "";
      javaCharStream0.buffer = charArray0;
      Token token1 = Token.newToken(40);
      token0.specialToken = token1;
      javaParserTokenManager1.SkipLexicalActions(token0);
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(60, token0.kind);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1936775428196964
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      StringReader stringReader1 = new StringReader("finally");
      StringReader stringReader2 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.readChar();
      char[] charArray0 = new char[7];
      charArray0[0] = 'D';
      charArray0[1] = 'a';
      charArray0[2] = 'a';
      charArray0[3] = 'a';
      charArray0[4] = 'D';
      charArray0[5] = 'a';
      charArray0[6] = 'D';
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = new Token();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.newToken(6093);
      Token token2 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.getColumn());
      assertEquals(0, token2.kind);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5865576489511386
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)29;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("implements");
      stringReader0.mark((byte)29);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("implements");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.655192272393068
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finall\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2534, 2534);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2539, 103);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = null;
      try {
        javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream1, 2539);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 2539. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9625103063616818
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sKO");
      StringReader stringReader1 = new StringReader("xM_3EB#5RGE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5266903552444484
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1459, 1459);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      StringReader stringReader1 = new StringReader("Lexical error at line ");
      javaCharStream0.tokenBegin = (-398);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 45, 2437);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.debugStream = null;
      Token.newToken((-1));
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("B", token0.toString());
      
      javaCharStream1.bufsize = (-2882);
      Token.newToken(45);
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0752133016143652
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u~u}");
      StringReader stringReader1 = new StringReader("void");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader2 = new StringReader("$*RN|9M)Q78CWi\"");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte)126;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader3 = new StringReader("void");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader3);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager1.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager5 = null;
      try {
        javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream3, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5585127312385938
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_yy`bJ5\u0004=re-@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[15];
      charArray0[0] = '.';
      charArray0[1] = '.';
      charArray0[2] = '@';
      charArray0[3] = '\"';
      int int0 = JavaParserConstants.MINUS;
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 24, 480);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 4.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.9902864964898197
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>\"");
      StringReader stringReader1 = new StringReader("v[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      assertEquals(1, javaCharStream0.bufpos);
      
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.9451632649020336
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("&6{\"-u{yu(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("qft1HpSU=&3M<+uP");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream2);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager3.getNextToken();
      Token token0 = javaParserTokenManager3.getNextToken();
      assertEquals(8, javaCharStream2.bufpos);
      assertEquals("=", token0.toString());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.994609141827645
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)29;
      StringReader stringReader0 = new StringReader("9l^,:urIzl!tzJ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("y'*.Xrl+-3T,ANz5");
      char[] charArray0 = new char[0];
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.read(charArray0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = new Token();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager2.getNextToken();
      Token.newToken(3);
      Token token1 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(":", token1.toString());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5344876261996139
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("G_qmV;\"jy");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = '^';
      charArray0[1] = 'F';
      charArray0[2] = '>';
      charArray0[3] = 't';
      charArray0[4] = 'v';
      charArray0[5] = '{';
      charArray0[6] = 'd';
      charArray0[7] = '\"';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = new Token();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token2 = javaParserTokenManager1.getNextToken();
      assertEquals("y", token2.toString());
      assertEquals(74, token2.kind);
      
      javaParserTokenManager0.getNextToken();
      Token.newToken((byte)38);
      Token token3 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token3.kind);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.961239096885005
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      charArray0[0] = '$';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader1 = new StringReader("Lexical error at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-601), 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.newToken((-601));
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("+nRS&^<Eo;(usb|");
      StringReader stringReader2 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      int[] intArray0 = new int[0];
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.9868274853209509
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)125;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)125;
      byteArray1[1] = (byte) (-77);
      StringReader stringReader0 = new StringReader(".g~7Xnwcd\"NO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-77), (byte)38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -77, column 50.  Encountered: <EOF> after : \"\\\"NO\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5119208604684742
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&6{\"-u{yu(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\\';
      charArray0[2] = '\"';
      charArray0[3] = '@';
      charArray0[4] = '.';
      charArray0[5] = '\\';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.032197653926059
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("+nRS&^<Eo;(usb|");
      StringReader stringReader2 = new StringReader("true");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      stringReader1.reset();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(61, token0.kind);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5327271265570117
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)29;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)29, (byte)29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader0 = new StringReader("u~u}");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(74, token0.kind);
      
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5391723800063513
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("$fjg^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1);
      StringBuffer stringBuffer0 = new StringBuffer(1);
      javaParserTokenManager0.image = stringBuffer0;
      JavaParserTokenManager javaParserTokenManager3 = null;
      try {
        javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.045652355717703
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader("null");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      assertEquals(4, javaCharStream0.getBeginColumn());
      
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token.newToken(1);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.0026895884529483
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("&6{\"-u{yu(K!");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[4];
      charArray0[0] = '\\';
      stringReader0.mark((byte)29);
      charArray0[1] = '\"';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&6{\"-u{yu(K!");
      StringReader stringReader1 = new StringReader("");
      javaParserTokenManager0.getNextToken();
      Token token1 = Token.newToken(1);
      assertEquals(0, token1.endColumn);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4081632140453642
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader(";<vrRhs\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2625, 2625);
      javaCharStream0.backup(1491);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = 1491;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\\';
      charArray0[7] = '\\';
      charArray0[8] = '\\';
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.jjmatchedPos = 9;
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.189027727045334
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">>\"");
      int int0 = 1459;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1459, 1459);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 1460);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1460. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0349324589529068
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("&6{\"-u:{yQuG(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = 'G';
      charArray0[2] = '#';
      charArray0[3] = '(';
      charArray0[4] = 'J';
      javaParserTokenManager4.jjmatchedKind = (-391);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager6 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager6.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token.newToken(2);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\\\"-u:{yQuG(K!\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2081308631992194
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("&6{\"-u:{yQuG(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0, 1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = 'G';
      charArray0[2] = '#';
      charArray0[3] = '(';
      charArray0[4] = 'J';
      javaParserTokenManager4.jjmatchedKind = (-391);
      charArray0[0] = '`';
      charArray0[6] = 'L';
      charArray0[7] = 'G';
      stringReader0.read(charArray0);
      javaParserTokenManager4.getNextToken();
      JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager3.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 16.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)125;
      StringReader stringReader0 = new StringReader("P.k\u0006l=bIDP[xd-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[4];
      charArray0[1] = 'D';
      javaCharStream0.readChar();
      charArray0[2] = 'a';
      int int0 = JavaParserConstants.EXTENDS;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      Token token1 = new Token();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaParserTokenManager0.jjFillToken();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2398), (byte)29);
      javaCharStream0.backup((byte)29);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 36, 33);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaCharStream1.bufline = javaParserTokenManager0.jjnewLexState;
      JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null);
      StringReader stringReader0 = new StringReader("h^dbV|j");
      char[] charArray0 = new char[5];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      stringReader0.read(charArray0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream2);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringReader stringReader0 = new StringReader("52Gnd#4A");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1641), (-1641));
      MockPrintStream mockPrintStream0 = new MockPrintStream("52Gnd#4A");
      mockPrintStream0.println(1384.505581636557);
      File file0 = MockFile.createTempFile("I/;!z@zT=^`xp4j^~D", "I/;!z@zT=^`xp4j^~D");
      MockPrintStream mockPrintStream1 = new MockPrintStream(file0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockPrintStream0;
      mockPrintStream1.format("7?p!1!pZ<", objectArray0);
      mockPrintStream1.printf("T", objectArray0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)64;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 109, 109);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.ReInit(javaCharStream1, (-4483));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -4483. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[1];
      stringReader0.read(charArray0);
      byteArray0[0] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[0] = '$';
      charArray0[1] = 'z';
      charArray0[2] = 'P';
      charArray0[3] = 'U';
      charArray0[4] = 'f';
      charArray0[5] = '.';
      charArray0[6] = 'Z';
      charArray0[7] = 'E';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 175);
      javaCharStream0.buffer = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5355990392124594
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"\r\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("u~u}");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: \"\\r\" (13), after : \"\\\"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 29, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(1701);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 1701. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      pipedInputStream0.mark(0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'w';
      javaCharStream0.nextCharBuf = charArray0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.image = "";
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      // Undeclared exception!
      try { 
        pipedOutputStream0.write(byteArray0, (int) (byte)43, (-313));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9842257778294128
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[4];
      stringReader0.read(charArray0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-693));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.9681800308386226
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)29;
      StringReader stringReader0 = new StringReader("K,En_<,>C&AN~r#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(105, token0.kind);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      CharBuffer charBuffer0 = CharBuffer.allocate(13);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      javaParserTokenManager0.image = stringBuffer0;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4539437903316657
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      StringReader stringReader1 = new StringReader("+nRS&^<Eo;(usb|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 2.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4677167772126136
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader1 = new StringReader("NT#Z!s");
      StringReader stringReader2 = new StringReader("+nRS&^<Eo;(usb|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      char[] charArray0 = new char[1];
      charArray0[0] = 'T';
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader3 = new StringReader("NT");
      Token.newToken(Integer.MAX_VALUE);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      StringReader stringReader4 = new StringReader("");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.9868274853209509
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)125;
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)125;
      byteArray1[1] = (byte) (-77);
      StringReader stringReader0 = new StringReader(".g~7Xnwcd\"NO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-77), (byte)38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line -77, column 50.  Encountered: <EOF> after : \"\\\"NO\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4497735421401112
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("&6{\"-u{yu(K!");
      StringReader stringReader1 = new StringReader("DV=xW");
      StringReader stringReader2 = new StringReader("+nRS&^<Eo;(usb|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader0.reset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader2.reset();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5505188809770742
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("&6{\"-u{yu(K!");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)29;
      byteArray1[1] = (byte)29;
      byteArray1[2] = (byte) (-88);
      byteArray1[3] = (byte)29;
      byteArray1[4] = (byte)29;
      byteArray1[5] = (byte)29;
      byteArray1[6] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      char[] charArray0 = new char[2];
      charArray0[0] = 'T';
      charArray0[1] = 'T';
      stringReader0.read(charArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaParserTokenManager0.getNextToken();
      Token token0 = new Token();
      StringReader stringReader1 = new StringReader("");
      Token.newToken((byte)29);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader2 = new StringReader("");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 11.  Encountered: <EOF> after : \"\\\"-u{yu(K!\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.436977628547395
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      StringReader stringReader0 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.beginColumn = 0;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      token0.specialToken = (Token) token_GTToken0;
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager2.getNextToken();
      Token token1 = javaParserTokenManager2.getNextToken();
      assertEquals(7, javaCharStream0.getBeginColumn());
      assertEquals("", token1.toString());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.jjnewStateCnt = 0;
      javaParserTokenManager0.curChar = 'j';
      javaParserTokenManager0.curChar = 'u';
      javaParserTokenManager0.ReInit((JavaCharStream) null);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.specialToken;
      StringReader stringReader0 = new StringReader("while");
      Token.newToken(0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte) (-105);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)42;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 45, 34);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2557, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.SwitchTo(0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      StringReader stringReader1 = new StringReader("\"<\"");
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 610, 3, 45);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 2);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit((JavaCharStream) null, (int) (byte)125);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 125. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)31;
      byteArray0[5] = (byte) (-128);
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)100;
      byteArray0[8] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)41, 3161);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)100, 870, 1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"<\"");
      char[] charArray0 = new char[8];
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      stringReader1.markSupported();
      StringReader stringReader3 = new StringReader("~U27%&M#YU9:JvX]");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader1.reset();
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      StringReader stringReader5 = new StringReader("Hd@");
      stringReader5.read(charArray0);
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
