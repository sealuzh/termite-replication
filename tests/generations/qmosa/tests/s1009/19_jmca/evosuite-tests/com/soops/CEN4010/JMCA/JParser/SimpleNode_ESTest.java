/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 07:03:41 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "A{g5u0K";
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump("ClassOrInterfaceDeclaration", stringWriter0);
      StringReader stringReader0 = new StringReader("A{g5u0K");
      StringReader stringReader1 = new StringReader("ClassOrInterfaceDeclaration");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char[] charArray0 = new char[1];
      javaCharStream0.bufpos = (int) 'r';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 114, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9804054941535139
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine(";");
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("+fhmp71", 0, 0);
      simpleNode0.dump("+fhmp71", stringWriter0);
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("com.soops.CEN4010.JMCA.JParser.SimpleNode", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      SystemInUtil.addInputLine("com.soops.CEN4010.JMCA.JParser.SimpleNode");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 402);
      SystemInUtil.addInputLine("%OYVp!Q[r(;*D}");
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte)100;
      pipedOutputStream1.write(byteArray0);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1076238976549941
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "A{g5u0K", 0, 0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode0.setIdentifier("&");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<.j5");
      StringWriter stringWriter2 = new StringWriter(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter3 = new StringWriter();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      simpleNode0.dump("", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : &", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3987405541121611
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("p/]N(*[L)wm eUk", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 18);
      stringWriter0.append((CharSequence) "p/]N(*[L)wm eUk");
      StringWriter stringWriter1 = stringWriter0.append(' ');
      simpleNode0.setIdentifier("}");
      String string0 = "*le";
      simpleNode0.dump("*le", stringWriter1);
      simpleNode0.jjtGetNumChildren();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int1 = (-1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1721527268));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1721527268
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7786655906578275
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine(";");
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("+fhmp71", 0, 0);
      simpleNode0.dump("<", stringWriter0);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("VariableDeclaratorId", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      SystemInUtil.addInputLine("VariableDeclaratorId");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 402);
      String string0 = "%O\\Y7p!Q[r(,R;*D}";
      try { 
        pipedInputStream0.connect(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.setIdentifier("&&");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1CuuFN$Xd)\",5fR");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      simpleNode0.dump("UnaryExpression", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0794057662397671
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 18);
      stringWriter0.append('\u0015');
      simpleNode0.setIdentifier("(");
      char[] charArray0 = new char[5];
      charArray0[0] = '\u0015';
      charArray0[1] = '>';
      charArray0[2] = '\u0015';
      charArray0[3] = '\u0015';
      charArray0[4] = '\u0015';
      stringWriter0.write(charArray0);
      simpleNode0.dump("*lshft", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 18);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 18, 19);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "<=");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode((-531));
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.setIdentifier("<=");
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(simpleNode0, node0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5310037525719096
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 30;
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.children = null;
      simpleNode0.children = null;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild(simpleNode0, 30);
      simpleNode0.jjtAddChild(simpleNode0, 30);
      simpleNode0.toString();
      // Undeclared exception!
      simpleNode0.dump("*lshft", stringWriter0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "A{g5u0K");
      stringWriter1.write(0);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "A{g5u0K", 0, 0);
      StringWriter stringWriter3 = stringWriter0.append('z');
      StringWriter stringWriter4 = stringWriter3.append('z');
      StringWriter stringWriter5 = stringWriter3.append((CharSequence) "A{g5u0K");
      char[] charArray0 = new char[8];
      StringWriter stringWriter6 = stringWriter3.append((CharSequence) "A{g5u0K");
      stringWriter0.write(charArray0, 0, 3);
      stringWriter4.write("Ex{lictCoAstructorInvHaion", 0, 0);
      StringWriter stringWriter7 = new StringWriter(0);
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      StringWriter stringWriter8 = new StringWriter(3);
      stringWriter2.write("\"null\"", 3, 0);
      StringWriter stringWriter9 = stringWriter3.append((CharSequence) "<=");
      SimpleNode simpleNode0 = new SimpleNode(3);
      stringWriter5.close();
      simpleNode0.setIdentifier("<=");
      stringWriter2.write((-565));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "A{g5u0K");
      stringWriter7.close();
      StringWriter stringWriter10 = stringWriter5.append((CharSequence) stringBuffer0);
      stringWriter10.flush();
      stringWriter10.write(charArray0);
      simpleNode0.dump("<=", stringWriter6);
      stringWriter9.flush();
      simpleNode0.toString();
      StringWriter stringWriter11 = stringWriter1.append((CharSequence) "<=");
      stringWriter11.append((CharSequence) "Modifiers : <=");
      stringWriter4.write(charArray0, 0, 3);
      assertEquals("A{g5u0K\u0000zzA{g5u0KA{g5u0K\u0000\u0000\u0000<=\uFDCBA{g5u0K\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000<Modifiers>\n  <identifier>*le</identifier>\n</Modifiers>\n<=Modifiers : <=\u0000\u0000\u0000", stringWriter4.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "A{g5u0K");
      stringWriter1.write(0);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "A{g5u0K", 0, 0);
      StringWriter stringWriter3 = stringWriter0.append('z');
      StringWriter stringWriter4 = stringWriter3.append('z');
      StringWriter stringWriter5 = stringWriter3.append((CharSequence) "A{g5u0K");
      char[] charArray0 = new char[8];
      StringWriter stringWriter6 = stringWriter3.append((CharSequence) "A{g5u0K");
      stringWriter0.write(charArray0, 0, 3);
      stringWriter4.write("Ex{lictCoAstructorInvHaion", 0, 0);
      StringWriter stringWriter7 = new StringWriter(0);
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      StringWriter stringWriter8 = new StringWriter(3);
      stringWriter2.write("\"null\"", 3, 0);
      StringWriter stringWriter9 = stringWriter3.append((CharSequence) "<=");
      SimpleNode simpleNode0 = new SimpleNode(3);
      stringWriter5.close();
      simpleNode0.setIdentifier("<=");
      stringWriter2.write((-554));
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "A{g5u0K");
      stringWriter7.close();
      StringWriter stringWriter10 = stringWriter5.append((CharSequence) stringBuffer0);
      stringWriter10.flush();
      stringWriter10.write(charArray0);
      simpleNode0.dump("<=", stringWriter6);
      stringWriter9.flush();
      simpleNode0.toString();
      StringWriter stringWriter11 = stringWriter1.append((CharSequence) "<=");
      stringWriter11.append((CharSequence) "Modifiers : <=");
      stringWriter4.write(charArray0, 0, 3);
      assertEquals("A{g5u0K\u0000zzA{g5u0KA{g5u0K\u0000\u0000\u0000<=\uFDD6A{g5u0K\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000<Modifiers>\n  <identifier>*le</identifier>\n</Modifiers>\n<=Modifiers : <=\u0000\u0000\u0000", stringWriter4.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3816002975101453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(30);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.setIdentifier("{");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "{");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceType : {", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3397771104125353
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(30);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.setIdentifier("");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      simpleNode0.dump("", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceType : ", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.675809096749734
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(27);
      simpleNode0.toString("o'S&");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringWriter0.write("o'S&", 0, (int) (byte)0);
      Node node0 = null;
      simpleNode0.jjtAddChild((Node) null, 7);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump("n;wVsKr#wag.#D3/N", stringWriter0);
      simpleNode0.toString("</");
      simpleNode0.jjtAddChild((Node) null, (byte)0);
      SimpleNode simpleNode1 = null;
      try {
        simpleNode1 = new SimpleNode((JavaParser) null, 2147483645);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      simpleNode0.setIdentifier("{");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}wq%^\"3]N @");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode0.dump("{", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("ClassOrInterfaceDeclaration", stringWriter1);
      StringReader stringReader0 = new StringReader("A{g5u0K");
      JavaCharStream javaCharStream0 = null;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      StringReader stringReader1 = new StringReader("ClassOrInterfaceDeclaration");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      String string0 = null;
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-1), (-1432583002));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0688986282206043
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.children = null;
      simpleNode0.children = null;
      simpleNode0.jjtAddChild(simpleNode0, 30);
      simpleNode0.jjtAddChild(simpleNode0, 30);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      simpleNode0.jjtAddChild(simpleNode0, 1162);
      Node node0 = simpleNode0.jjtGetChild(30);
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.toString();
      int int0 = 867;
      simpleNode0.jjtAddChild(node0, 867);
      simpleNode0.jjtGetChild(31);
      simpleNode0.jjtAddChild((Node) null, 31);
      simpleNode0.toString("ClassOrInterfaceType");
      simpleNode0.jjtGetChild(1162);
      simpleNode0.toString();
      simpleNode0.jjtAddChild(simpleNode0, 12);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-6262915));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -6262915
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(33);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.parent = nodeArray0[7];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(nodeArray0[3], 8);
      assertEquals(9, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      simpleNode0.children = null;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)20;
      simpleNode0.children = null;
      simpleNode0.children = null;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, 7);
      simpleNode0.jjtAddChild((Node) null, 7);
      simpleNode0.jjtAddChild((Node) null, 14);
      assertEquals(15, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter1.write((-1073741822));
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "I ,x4e3~8l#!:MP%9", 0, 0);
      StringWriter stringWriter3 = stringWriter2.append('8');
      stringWriter3.append('H');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[3];
      charArray0[0] = 'H';
      charArray0[1] = '8';
      charArray0[2] = 'H';
      StringWriter stringWriter4 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(1431);
      simpleNode0.jjtAddChild(simpleNode1, 1431);
      simpleNode0.jjtGetChild(117);
      assertEquals(1432, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter1.write((-1073741822));
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "I ,x4e3~8l#!:MP%9", 0, 0);
      StringWriter stringWriter3 = stringWriter2.append('8');
      stringWriter3.append('H');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[3];
      charArray0[0] = 'H';
      charArray0[1] = '8';
      charArray0[2] = 'H';
      StringWriter stringWriter4 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(1431);
      simpleNode0.jjtAddChild(simpleNode1, 1431);
      simpleNode0.jjtGetChild(1431);
      assertEquals(1432, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5977912706057125
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("o'S&");
      String string0 = "WhileStatement";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      simpleNode0.parser = javaParser0;
      simpleNode0.children = null;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "n;wVsKrg.#D3/N", 0, 0);
      String string1 = "N";
      int int0 = 0;
      simpleNode0.jjtAddChild(simpleNode0, 7);
      stringWriter1.write("N", (int) (byte)0, 0);
      stringWriter0.write((int) (byte)0);
      stringWriter1.write("o'S&", (int) (byte)0, (int) (byte)0);
      simpleNode0.dump(string0, stringWriter1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte) (-23);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 3857);
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)40);
      simpleNode0.jjtAddChild((Node) null, 3857);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((byte) (-23));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -23
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      SimpleNode simpleNode0 = new SimpleNode(1656);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.setIdentifier("?^z,");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*rshft");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode0.dump("`P:", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2969935575859295
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write("");
      StringWriter stringWriter2 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.write("");
      char[] charArray0 = new char[0];
      stringWriter3.write(80);
      stringWriter0.write(charArray0, 0, 0);
      stringWriter0.write(charArray0);
      stringWriter3.write("8'", 0, 0);
      SimpleNode simpleNode1 = new SimpleNode('z');
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.write((String) null);
      StringWriter stringWriter5 = new StringWriter(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter6 = new StringWriter(0);
      stringWriter5.write(charArray0);
      stringWriter0.write(0);
      StringWriter stringWriter7 = new StringWriter('z');
      stringWriter0.write(charArray0);
      simpleNode0.jjtAddChild(simpleNode1, 951);
      simpleNode0.dump("", stringWriter5);
      simpleNode0.jjtGetNumChildren();
      char[] charArray1 = new char[1];
      charArray1[0] = 'z';
      stringWriter1.write(charArray1);
      StringWriter stringWriter8 = null;
      try {
        stringWriter8 = new StringWriter((-137));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write("A{g5u0K");
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("goto", stringWriter2);
      StringReader stringReader0 = new StringReader("A{g5u0K");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      StringReader stringReader1 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      String string0 = null;
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(80);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(30);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.setIdentifier("1CuuFN$Xd)\",5fR");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      simpleNode0.dump("CompilationUnit", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>1CuuFN$Xd)\",5fR</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceType : 1CuuFN$Xd)\",5fR", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2806);
      // Undeclared exception!
      try { 
        simpleNode0.toString("Z':t8IU8DTnCuW#o.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2806
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4440090083709025
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("cWxe)=e_NV3`|~S>{|");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      int int0 = 2;
      javaParser0.VariableInitializer();
      try { 
        javaParser0.ShiftExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 5.  Encountered: )
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4440090083709025
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Wxe)=e_NV3`|~S>{|");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      int int0 = 2;
      javaParser0.VariableInitializer();
      try { 
        javaParser0.ShiftExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 4.  Encountered: )
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8249506629220404
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter('C');
      StringWriter stringWriter3 = stringWriter2.append('C');
      char[] charArray0 = new char[1];
      stringWriter0.write(charArray0, 0, 0);
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) "A{g5u0K");
      stringWriter3.flush();
      stringWriter2.append((CharSequence) "A{g5u0K");
      stringWriter0.flush();
      simpleNode0.setIdentifier("c");
      StringWriter stringWriter5 = stringWriter1.append((CharSequence) "A{g5u0K");
      StringWriter stringWriter6 = stringWriter5.append((CharSequence) "A{g5u0K");
      StringWriter stringWriter7 = new StringWriter('C');
      stringWriter7.write(charArray0);
      stringWriter6.write("c");
      simpleNode0.dump("A{g5u0K", stringWriter4);
      stringWriter5.write(867);
      stringWriter4.write(charArray0);
      simpleNode0.dump("c", stringWriter4);
      StringWriter stringWriter8 = new StringWriter(0);
      stringWriter8.flush();
      StringWriter stringWriter9 = new StringWriter();
      stringWriter9.append((CharSequence) "c");
      // Undeclared exception!
      try { 
        stringWriter7.write(charArray0, 1280, (-3762));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1455);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(1455);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-2562));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SystemInUtil.addInputLine("<=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A{g5u0K");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A{g5u0K");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode((-1433));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1433
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      char[] charArray0 = new char[1];
      JavaParser javaParser0 = new JavaParser("A{g5u0K");
      SimpleNode simpleNode1 = new SimpleNode('8');
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtOpen();
      simpleNode1.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(940);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(685);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      StringWriter stringWriter2 = new StringWriter('C');
      StringWriter stringWriter3 = new StringWriter();
      char[] charArray0 = new char[1];
      stringWriter3.write(charArray0);
      stringWriter1.write("A{g5u0K");
      stringWriter0.write(charArray0, 0, 0);
      StringWriter stringWriter4 = stringWriter0.append('C');
      stringWriter3.flush();
      StringWriter stringWriter5 = new StringWriter();
      stringWriter0.flush();
      stringWriter4.flush();
      stringWriter4.write(charArray0);
      StringWriter stringWriter6 = stringWriter1.append((CharSequence) "A{g5u0K");
      StringBuffer stringBuffer0 = new StringBuffer();
      stringWriter4.append((CharSequence) stringBuffer0);
      StringWriter stringWriter7 = stringWriter6.append((CharSequence) "A{g5u0K");
      stringWriter0.append((CharSequence) stringBuffer0);
      StringWriter stringWriter8 = new StringWriter('C');
      stringWriter8.write("A{g5u0K");
      stringWriter8.close();
      stringWriter8.flush();
      stringWriter7.write((-1472));
      stringWriter8.write(charArray0);
      stringWriter7.write("");
      stringWriter6.write(870);
      stringWriter4.write(charArray0);
      StringWriter stringWriter9 = new StringWriter(0);
      StringWriter stringWriter10 = new StringWriter(870);
      StringReader stringReader0 = new StringReader("A{g5u0K");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }
}
