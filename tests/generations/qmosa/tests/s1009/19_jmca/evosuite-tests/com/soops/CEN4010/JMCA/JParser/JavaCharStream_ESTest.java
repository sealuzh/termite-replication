/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 05:15:48 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1652433748367397
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      pushbackInputStream0.available();
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      pushbackInputStream0.markSupported();
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 11, (-2332), 7);
      javaCharStream0.GetImage();
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.791640598741053
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byteArrayInputStream0.markSupported();
      pushbackInputStream0.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.line = 9;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1);
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.BeginToken();
      pushbackInputStream1.skip((-384L));
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      javaCharStream0.getEndLine();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)14;
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '(';
      charArray0[8] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.order();
      StringReader stringReader0 = new StringReader("");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip(2566L);
      stringReader1.skip((-523L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2551854936679199
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup((byte)1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, 4094);
      JavaCharStream.hexval('7');
      byteArrayInputStream1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.ExpandBuff(false);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)1;
      intArray0[1] = (int) '\u0000';
      intArray0[2] = (int) (byte)1;
      intArray0[3] = (-1);
      intArray0[4] = (int) '\u0000';
      javaCharStream1.bufline = intArray0;
      JavaCharStream javaCharStream2 = new JavaCharStream(bufferedInputStream0, 4097, 2);
      // Undeclared exception!
      try { 
        javaCharStream1.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.165908131136956
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, (-883), 442);
      javaCharStream0.column = (-2567);
      javaCharStream0.adjustBeginLineColumn(2048, 442);
      javaCharStream0.adjustBeginLineColumn((-2567), 92);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(1153);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5447586517233836
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("ZeTkOi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3167, 0);
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      char[] charArray0 = new char[8];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      charArray0[2] = 'U';
      charArray0[3] = 'Z';
      charArray0[4] = 'Z';
      charArray0[5] = 'Z';
      charArray0[6] = 'Z';
      charArray0[7] = 'Z';
      stringReader0.read(charArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 4070, 0);
      javaCharStream1.bufsize = 0;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0);
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      javaCharStream1.GetImage();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9825734513679603
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      JavaCharStream.hexval('1');
      StringReader stringReader0 = new StringReader("=BhvZicY~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)14, 14);
      javaCharStream0.maxNextCharInd = (int) (byte) (-1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("/N\u0005yj");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte)73;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-22), 4079);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, 183, (byte) (-22));
      // Undeclared exception!
      try { 
        javaCharStream1.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("ZeTkOi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3167, 0);
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`97e~pB~kU");
      javaCharStream0.getColumn();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6079068096018436
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("ZeTkOi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3167, 0);
      javaCharStream0.BeginToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 4070, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0);
      byteArrayInputStream0.reset();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)29;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte) (-105);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)66;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2961408970315507
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[T.dlpI7(xV3wd:");
      StringReader stringReader0 = new StringReader("[T.dlpI7(xV3wd:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.4610203584290358
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.tokenBegin = 3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.adjustBeginLineColumn((byte)13, (byte)13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.adjustBeginLineColumn((byte)13, 15);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn(15, 939);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.797107512422905
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 0, 102);
      StringReader stringReader0 = new StringReader("ZeTkOi");
      javaCharStream1.readChar();
      javaCharStream1.adjustBeginLineColumn(0, 84);
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn((-1853), 4061);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.BeginToken();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      javaCharStream3.ExpandBuff(false);
      javaCharStream2.GetImage();
      int int0 = javaCharStream1.getEndLine();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals((-1853), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.641794813879541
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      pushbackInputStream0.available();
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      pushbackInputStream0.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1);
      javaCharStream1.ExpandBuff(false);
      byteArrayInputStream0.reset();
      javaCharStream1.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-16), 258);
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\u0000", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.160950282757672
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("nDW8SLBh|fbyF10");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = '_';
      charArray0[1] = 'O';
      charArray0[2] = '0';
      charArray0[3] = 'l';
      charArray0[4] = 'Z';
      charArray0[5] = 'L';
      charArray0[6] = 'E';
      stringReader0.read(charArray0);
      javaCharStream0.adjustBeginLineColumn((-2557), (-2557));
      stringReader0.mark(1922);
      javaCharStream0.bufsize = 4084;
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.column = 545;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(4096, 4096);
      javaCharStream0.adjustBeginLineColumn(4096, 4096);
      javaCharStream0.FillBuff();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.70555011425503
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      pushbackInputStream0.available();
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      pushbackInputStream0.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1);
      javaCharStream1.ExpandBuff(false);
      byteArrayInputStream0.reset();
      javaCharStream1.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-283), 117);
      char[] charArray0 = new char[6];
      charArray0[0] = 'e';
      pipedInputStream0.markSupported();
      javaCharStream0.available = (int) (byte)76;
      charArray0[1] = 'k';
      charArray0[2] = '4';
      charArray0[3] = '_';
      charArray0[4] = '';
      charArray0[5] = '?';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginLine();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.bufpos = (-13);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5035870903352846
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      StringReader stringReader0 = new StringReader(" column ");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byteArrayInputStream0.markSupported();
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader("vD&K7&epIUJ:uq");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream2.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape carcter at line ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.542435904831803
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)9;
      byteArray0[6] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.column = 4;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup((byte)0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)9, (-1), 3000);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn(885, (byte) (-62));
      javaCharStream0.BeginToken();
      char[] charArray0 = javaCharStream0.nextCharBuf;
      javaCharStream1.getBeginColumn();
      javaCharStream1.ExpandBuff(false);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(886, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)7;
      byte[] byteArray1 = new byte[2];
      byteArray0[0] = (byte) (-62);
      byteArray1[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      boolean boolean0 = true;
      javaCharStream0.bufline = null;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.backup((-1936));
      byteArrayInputStream0.mark((byte)0);
      StringReader stringReader0 = new StringReader(" column ");
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "cU0m|N-wCKu<H($jL4");
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = 't';
      charArray0[6] = '1';
      charArray0[7] = '1';
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.skip((-1L));
      stringReader0.skip(0L);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.backup((-1930));
      byteArrayInputStream0.mark((byte)0);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.inputStream = (Reader) stringReader0;
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      assertEquals(6025, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.06669094555403
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte)13);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.adjustBeginLineColumn((byte)13, 0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      byteArrayInputStream0.mark(4063);
      javaCharStream0.adjustBeginLineColumn((-1930), 231);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-1929), javaCharStream0.getBeginLine());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6378873321168093
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-47);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(2951);
      byteArrayInputStream1.mark((byte) (-47));
      StringReader stringReader0 = new StringReader("Peh`g)");
      javaCharStream0.adjustBeginLineColumn(2951, 1);
      javaCharStream0.ExpandBuff(true);
      byteArrayInputStream0.mark(5240);
      javaCharStream0.adjustBeginLineColumn((byte)0, 11);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 4095, 12, 1531);
      javaCharStream1.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(5241, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      StringReader stringReader0 = new StringReader("L1+ELaU!");
      stringReader0.ready();
      stringReader0.mark(4);
      stringReader0.skip(4);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = 'l';
      charArray0[2] = '';
      charArray0[4] = '~';
      charArray0[5] = '=';
      charArray0[6] = 'U';
      charArray0[7] = '+';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("}as@7_D:E1<");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip(1800L);
      stringReader0.skip(3L);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((byte)1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 87, (byte)1);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      stringReader2.ready();
      JavaCharStream.hexval('B');
      try { 
        JavaCharStream.hexval('w');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Reader reader0 = null;
      int int0 = 4068;
      int int1 = 4091;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4068, 4091, 4091);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-1920);
      javaCharStream0.GetSuffix(73);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.251366761000341
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1), 81, (-1));
      javaCharStream0.backup((byte)52);
      StringReader stringReader1 = new StringReader("qE n");
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-1712), 77);
      javaCharStream0.GetImage();
      pipedOutputStream0.flush();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(1595);
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      JavaCharStream.hexval('3');
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("J:n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('E');
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("9fG7MzO");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9fG7MzO");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-833), 0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('=');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.791640598741053
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      pushbackInputStream0.available();
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byteArrayInputStream0.markSupported();
      pushbackInputStream0.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1);
      javaCharStream1.ExpandBuff(false);
      byteArrayInputStream0.reset();
      javaCharStream1.BeginToken();
      pushbackInputStream1.skip((-384L));
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      int int0 = javaCharStream0.getLine();
      assertEquals((-1007), javaCharStream0.getBeginColumn());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5415274091608313
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SQ~9T,/}");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4675, 57, 4675);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.getColumn();
      javaCharStream0.ReInit((Reader) stringReader0, 4675, 4675);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte byte0 = (byte)0;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      javaCharStream0.backup((-4227));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4227
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)7;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZeTkKO8");
      StringReader stringReader1 = new StringReader("ZeTkKO8");
      stringReader0.skip((byte)1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 822, 822);
      EvoSuiteFile evoSuiteFile0 = null;
      StringReader stringReader2 = new StringReader("/N\u0005yj");
      stringReader2.ready();
      JavaCharStream.hexval('6');
      char[] charArray0 = new char[3];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '6';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-1479), 6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9497897838546752
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup((byte)1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, 4094);
      JavaCharStream.hexval('8');
      byteArrayInputStream1.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream1.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(4092, (-2138));
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.BeginToken();
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.GetImage();
      assertEquals(1, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)52;
      byteArray0[4] = (byte)0;
      byteArray0[2] = (byte) (-37);
      StringReader stringReader0 = new StringReader(":7ad{3:PbAO7#Pwu2n]");
      stringReader0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-37), (-1));
      stringReader0.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+&;3e$W");
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte) (-2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte) (-30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte)1;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-112), 1);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)52;
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byte byte1 = (byte)0;
      byteArray0[3] = (byte)0;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-25);
      JavaCharStream.hexval('5');
      JavaCharStream.hexval('f');
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2592));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape carcter at line ");
      stringReader0.ready();
      stringReader0.mark(2181);
      stringReader0.skip(2859L);
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)7;
      char char0 = 'M';
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      stringReader1.skip(2107L);
      stringReader1.skip(0L);
      stringReader0.skip((-1L));
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
      
      StringReader stringReader0 = new StringReader("%ix}k9wH*oHqX~rB-[");
      StringReader stringReader1 = new StringReader("ZeTkKO8");
      int int1 = JavaCharStream.hexval('5');
      assertEquals(5, int1);
      
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)0, 5, (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.750331784803731
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      JavaCharStream.hexval('7');
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)14;
      byteArray1[2] = (byte)63;
      byteArray1[3] = (byte) (-62);
      byteArray1[4] = (byte) (-46);
      byteArray1[5] = (byte) (-1);
      byteArray1[6] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream0.ExpandBuff(true);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, 62, 194, (byte) (-62));
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream2 = new JavaCharStream(bufferedInputStream0, 4077, (byte) (-46));
      javaCharStream2.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[1] = (byte) (-1);
      char[] charArray0 = new char[2];
      charArray0[0] = '1';
      charArray0[1] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("}as@7_D:E1<");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip((byte)0);
      stringReader0.skip((byte) (-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 958, (byte) (-1));
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.791640598741053
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      pushbackInputStream0.available();
      StringReader stringReader0 = new StringReader(" column ");
      byteArrayInputStream0.read();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      pushbackInputStream0.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1);
      javaCharStream1.ExpandBuff(false);
      byteArrayInputStream0.reset();
      javaCharStream1.BeginToken();
      pushbackInputStream1.skip((-384L));
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.GetImage();
      int int0 = javaCharStream1.getColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1975017365221605
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte)52);
      StringReader stringReader0 = new StringReader("_AL!`'!");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1214), 4069);
      javaCharStream1.adjustBeginLineColumn((-2117), (-2117));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (byte)52, 82, 82);
      javaCharStream2.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn(88, (-1961));
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(10);
      assertEquals(4044, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.608679110224043
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((-1930));
      StringReader stringReader0 = new StringReader(" column ");
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn((byte)28, (byte)0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix((byte)0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.541323557779523
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.column = 4;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup((byte)0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)9, (-1), 3000);
      javaCharStream1.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn(885, (byte) (-62));
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix((byte)52);
      assertEquals(1, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("%Oe6pK5JcgJ)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, (byte)0);
      StringReader stringReader1 = new StringReader("%Oe6pK5JcgJ)");
      StringReader stringReader2 = new StringReader("%Oe6pK5JcgJ)");
      stringReader0.skip(0L);
      javaCharStream0.FillBuff();
      char[] charArray0 = javaCharStream0.GetSuffix((byte)0);
      assertEquals(0, charArray0.length);
      
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.getEndColumn());
      assertEquals('%', char0);
      assertEquals(0, javaCharStream0.getLine());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.AdjustBuffSize();
      int int0 = 1212;
      javaCharStream0.inBuf = 1212;
      javaCharStream0.GetSuffix(1212);
      stringReader0.markSupported();
      javaCharStream0.tokenBegin = 1212;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-151), (byte)0);
      byteArrayInputStream0.mark(627);
      byteArrayInputStream0.mark(4093);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-151));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-25);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZeTkKOi");
      stringReader0.skip((-1794L));
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-2680L));
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)121;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-8);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-938), (-938));
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-62);
      StringReader stringReader0 = new StringReader("ZeTkOi");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("ZeTkOi");
      char[] charArray0 = new char[5];
      charArray0[0] = 'D';
      charArray0[1] = '0';
      charArray0[2] = 'B';
      charArray0[3] = 'M';
      charArray0[4] = 'L';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip(0L);
      stringReader0.skip((-1L));
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 183, 183);
      javaCharStream0.bufpos = 183;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader1 = new StringReader("/N\u0005yj");
      javaCharStream0.prevCharIsCR = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/N\u0005yj");
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-717L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2261, 3248);
      javaCharStream0.nextCharInd = 3248;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4075, (-1), 4075);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-8);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-938), (-938));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.5104605475108208
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.adjustBeginLineColumn((-2473), 4318);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.adjustBeginLineColumn(4318, (byte)0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn((-1672), (-863));
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.515623152937818
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-8);
      StringReader stringReader0 = new StringReader("%Oe6pK5JcgJ)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (byte)0);
      StringReader stringReader1 = new StringReader("%Oe6pK5JcgJ)");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.backup((byte) (-1));
      StringReader stringReader2 = new StringReader("^Pxwh,]#");
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (byte)0, (byte) (-62));
      javaCharStream1.BeginToken();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, (byte) (-8), 1897, (-1294));
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2745487105965125
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[TdlI\"4(xV3wd:");
      StringReader stringReader0 = new StringReader("[TdlI\"4(xV3wd:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.adjustBeginLineColumn(1, (-1800));
      int int0 = 4077;
      javaCharStream0.adjustBeginLineColumn(4077, (-1800));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)114;
      byteArray0[0] = (byte)114;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)6;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)114);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte) (-62);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)0;
      char char0 = '=';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.182247591833146
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 88, 5037);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1532, (byte)76, 15);
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("ZeTkOi");
      JavaCharStream.hexval('c');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[T.dlpI7(xV3wd:");
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("}as@7_D:E1<");
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip((-3085L));
      stringReader0.skip((byte) (-62));
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5822721271181606
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.backup((-1930));
      byteArrayInputStream0.mark((byte)0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.mark(92);
      javaCharStream0.adjustBeginLineColumn(0, (byte)0);
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte) (-62), (byte) (-62));
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\t", string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZeTkKOi");
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip((-740L));
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q?411cF;6m");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, 5, 682);
      javaCharStream0.maxNextCharInd = 5;
      javaCharStream0.ReInit((Reader) stringReader0, 682, 0, 682);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      charArray0[1] = 'a';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader(" IP=}");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip(1L);
      stringReader0.skip((-422L));
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZeTkKOi");
      stringReader0.skip((-7L));
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.5963268224587748
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte byte0 = (byte)1;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((byte)0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      stringReader0.mark((byte)52);
      stringReader0.skip((byte)52);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.9774715841582307
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      char[] charArray0 = new char[2];
      charArray0[0] = '1';
      charArray0[1] = '1';
      CharBuffer.wrap(charArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-637), 1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, (-637), (byte) (-1));
      javaCharStream0.adjustBeginLineColumn(1761, 669);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.adjustBeginLineColumn(1, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("co.soops.CEN4010.JMCA.JParer.JvaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 183, 183);
      javaCharStream0.Done();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader1 = new StringReader("/N\u0005yj");
      javaCharStream0.prevCharIsCR = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/N\u0005yj");
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byte byte1 = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(100);
      javaCharStream0.readChar();
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$j@9");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)121;
      byteArray0[3] = (byte) (-30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-8);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      pipedOutputStream0.write(byteArray0);
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("c[Cr+");
      stringReader0.read();
      long long0 = stringReader0.skip(1L);
      assertEquals(1L, long0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-74);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.5018904121539887
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte) (-62);
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup((-3777));
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream1.backup(88);
      StringReader stringReader0 = new StringReader("e^'u5IG,D{");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0, (byte) (-27), (byte)0);
      javaCharStream1.BeginToken();
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream1, 4008, (-3226), (byte) (-62));
      javaCharStream0.BeginToken();
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("ZeTkKO8");
      stringReader0.skip(0L);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      StringReader stringReader0 = new StringReader("7>tR");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7>tR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 5418);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-519), 15);
      stringReader0.close();
      int[] intArray0 = new int[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.line = (-519);
      javaCharStream0.bufline = intArray0;
      javaCharStream0.buffer = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-519), 0, (-519));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6022965917561187
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.adjustBeginLineColumn((byte)13, 417);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((byte)13, 939);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(939, int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.182247591833146
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4090);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1647), (-3716));
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 2309, 1228, 12);
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("B%yBIFzL}:&r9PYE6k");
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("");
      stringReader2.skip((-2788L));
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2556332730861364
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = true;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)9, (-944));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0);
      byteArrayInputStream0.reset();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      StringReader stringReader1 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)0, (byte)0, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte)0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.3484795937532508
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.adjustBeginLineColumn((byte)13, (byte)13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      javaCharStream0.adjustBeginLineColumn((byte)13, 15);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(15, 939);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(17, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      PipedInputStream pipedInputStream0 = null;
      PipedInputStream pipedInputStream1 = new PipedInputStream((byte)1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 1, (byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.066626365893797
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      StringReader stringReader0 = new StringReader(" column ");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byteArrayInputStream0.markSupported();
      javaCharStream0.adjustBeginLineColumn(135, (-1007));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.read();
      javaCharStream0.AdjustBuffSize();
      byteArrayInputStream0.mark(14);
      javaCharStream0.adjustBeginLineColumn(7, (byte)7);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      assertEquals(6, byteArrayInputStream0.available());
      assertEquals(9, javaCharStream0.getLine());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.5733734469853964
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)13);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream1.adjustBeginLineColumn(1044, 102);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0, 102, (-2585), (byte)0);
      javaCharStream0.ExpandBuff(false);
      JavaCharStream javaCharStream4 = new JavaCharStream(byteArrayInputStream0, 3747, (-1));
      javaCharStream4.AdjustBuffSize();
      String string0 = javaCharStream1.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\r", string0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2986471626957115
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-283), 117);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn(' ');
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 652, 183);
      CharBuffer charBuffer0 = CharBuffer.allocate(183);
      stringReader0.read(charBuffer0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xnq;Lk=h;");
      StringReader stringReader1 = new StringReader("z(m:Mof-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\".l{hcZ0Zg%Gfjk?bb-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 72, 72, (-3795));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 332, 332, 2300);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mX6?IcC9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1516), (-185));
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.FillBuff();
      StringReader stringReader1 = new StringReader("mX6?IcC9");
      javaCharStream0.ReInit((Reader) stringReader1, (-185), 96);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.GetSuffix(4);
      char[] charArray0 = javaCharStream0.GetSuffix(4);
      assertEquals(4, charArray0.length);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.8472883508124011
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)52;
      StringReader stringReader0 = new StringReader("JT&'hpBCk|");
      stringReader0.skip((byte)52);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)52, (byte)52);
      StringReader stringReader1 = new StringReader("JT&'hpBCk|");
      stringReader0.ready();
      JavaCharStream.hexval('9');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ')r;V_");
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-151), (byte)0);
      byteArrayInputStream0.mark(627);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 627, 9);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.2499390245992577
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      javaCharStream0.adjustBeginLineColumn((byte)0, (byte)13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 417;
      javaCharStream0.adjustBeginLineColumn((byte)13, 417);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((byte)13, 939);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.713537065092644
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)7);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(135);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, (-913), 4073);
      StringReader stringReader0 = new StringReader("v9l 6|");
      javaCharStream0.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v9l 6|");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.746831485658561
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte byte0 = (byte)0;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-1134), 4068);
      javaCharStream0.adjustBeginLineColumn((-2262), (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 2737, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-114), (-114), (-114));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      byte[] byteArray1 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.reset();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('L', char0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[T.dlpI7(xV3wd:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('I', char0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals(' ', char0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.3444053452117863
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      StringReader stringReader0 = new StringReader("4/c[.Nq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte)52);
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, (byte)0, (-1504));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)52;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-62);
      byteArray1[3] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.reset();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('/', char0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("t|nbm:MwecPTgi*1a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 183, (byte)14);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "xnq;Lk=h;");
      StringReader stringReader1 = new StringReader("xnq;Lk=h;");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%'2H3");
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)1;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 236, 9, (-2115));
      javaCharStream0.backup((byte)1);
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4177, 4177, 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      assertEquals(0, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Ix]-\u0000LWOuw82");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-304), (-304));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, (-2808));
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.write(byteArray0);
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 83, 1, (byte)52);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Q');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.614958202916353
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-62);
      byteArray1[1] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.backup((-1930));
      byteArrayInputStream0.mark((byte)0);
      javaCharStream0.adjustBeginLineColumn(0, 0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      javaCharStream0.ExpandBuff(true);
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.mark(92);
      javaCharStream0.adjustBeginLineColumn(0, (byte)0);
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte) (-62), (byte) (-62));
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\t", string0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.390477990983108
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-2138), (-1));
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-1);
      byteArray0[1] = (byte)14;
      char[] charArray0 = new char[5];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("}as@7_D:E1<");
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("}as@7_D:E1<");
      stringReader1.read();
      stringReader1.skip(5);
      stringReader0.skip((byte) (-1));
      try { 
        JavaCharStream.hexval('+');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-1);
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      JavaCharStream.hexval('2');
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[T.dlpI7(xV3wd:");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[T.dlpI7(xV3wd:");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = ')';
      charArray0[1] = ')';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.order();
      CharBuffer charBuffer1 = CharBuffer.allocate(84);
      charBuffer0.read(charBuffer1);
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader("}as@7_D:E1<");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip(0L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      stringReader0.skip(0L);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 0, (-620));
      StringReader stringReader0 = new StringReader("kJm");
      char[] charArray0 = new char[6];
      charArray0[0] = 'Z';
      charArray0[1] = '\\';
      charArray0[2] = 'g';
      charArray0[3] = ' ';
      charArray0[4] = 'w';
      charArray0[5] = 'z';
      stringReader0.read(charArray0);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.ReInit((Reader) null, 182, 182, 182);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-519), 15);
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-519), 0, (-519));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 4340, (byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-62);
      byteArray0[3] = (byte) (-1);
      char[] charArray0 = new char[2];
      charArray0[0] = '1';
      charArray0[1] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.order();
      StringReader stringReader0 = new StringReader("}as@7_D:E1<");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      stringReader0.skip((byte)0);
      stringReader0.skip((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('@', char0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.3152245176595216
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte) (-1);
      StringReader stringReader0 = new StringReader("n9`i,O}\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-1), (-1726));
      javaCharStream0.readChar();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 4053, 0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)14;
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '(';
      charArray0[8] = '1';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.order();
      StringReader stringReader0 = new StringReader("");
      stringReader0.read(charBuffer0);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip(2566L);
      stringReader1.skip((-523L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
