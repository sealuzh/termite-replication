/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 05:53:15 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBPreparedStatement;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.firebirdsql.jdbc.field.FBLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.352641895713288
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-126);
      byteArray1[1] = (byte)38;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)38;
      byteArray2[1] = (byte)38;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)38;
      byteArray3[1] = (byte)23;
      byteArray3[2] = (byte)38;
      byteArray3[3] = (byte) (-126);
      byteArray3[4] = (byte) (-1);
      byteArray3[5] = (byte) (-126);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte)23;
      byteArray4[1] = (byte)23;
      byteArray4[2] = (byte) (-126);
      byteArray4[3] = (byte)23;
      byteArray4[4] = (byte) (-1);
      byteArray4[5] = (byte)38;
      byteArray4[6] = (byte)38;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)38;
      byteArray5[1] = (byte)38;
      byteArray5[2] = (byte) (-126);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[1];
      byteArray6[0] = (byte) (-1);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[8];
      byteArray7[0] = (byte) (-126);
      byteArray7[1] = (byte)38;
      byteArray7[2] = (byte)38;
      byteArray7[3] = (byte) (-126);
      byteArray7[4] = (byte) (-126);
      byteArray7[5] = (byte) (-1);
      byteArray7[6] = (byte)23;
      byteArray7[7] = (byte)38;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[5];
      byteArray8[0] = (byte) (-124);
      byteArray8[1] = (byte)38;
      byteArray8[2] = (byte) (-126);
      byteArray8[3] = (byte)38;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addLast((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-452));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.635136852714852
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList1.add((byte[][]) null);
      linkedList1.addAll((Collection<? extends byte[][]>) linkedList0);
      linkedList1.removeAll(linkedList0);
      FBResultSet fBResultSet2 = new FBResultSet(fBResultSet1.xsqlvars, linkedList0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet1);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[3][4];
      byte[] byteArray1 = new byte[0];
      byteArray0[1] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[1] = (byte)44;
      byteArray0[2] = byteArray2;
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.absolute((-2));
      fBCachedFetcher0.previous();
      fBCachedFetcher0.first();
      fBCachedFetcher0.relative((byte)0);
      Random.setNextRandom((byte) (-50));
      Random.setNextRandom(271);
      Random.setNextRandom((-2022));
      fBCachedFetcher0.last();
      Random.setNextRandom((byte) (-50));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.326620058651022
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>(linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet1);
      fBCachedFetcher0.relative(1547);
      fBCachedFetcher0.getRowNum();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.533381340202103
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.push((byte[][]) null);
      linkedList1.removeAll(linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.relative(400);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher1.deleteRow();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3804082708178105
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.toArray();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-85);
      byteArray1[1] = (byte)116;
      byteArray1[2] = (byte)59;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-75);
      byteArray2[1] = (byte)116;
      byteArray2[2] = (byte) (-85);
      byteArray2[4] = (byte) (-85);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)59;
      byteArray3[1] = (byte) (-75);
      byteArray3[2] = (byte)116;
      byteArray3[3] = (byte) (-75);
      byteArray3[4] = (byte) (-75);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)0;
      byteArray4[1] = (byte) (-85);
      byteArray0[3] = byteArray4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      System.setCurrentTimeMillis(0L);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.386796151208777
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-126);
      byteArray1[1] = (byte)38;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)38;
      byteArray2[1] = (byte)38;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)38;
      byteArray3[1] = (byte)23;
      byteArray3[2] = (byte)38;
      byteArray3[3] = (byte) (-126);
      byteArray3[4] = (byte) (-1);
      byteArray3[5] = (byte) (-126);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte)23;
      byteArray4[1] = (byte)23;
      byteArray4[2] = (byte) (-126);
      byteArray4[3] = (byte)23;
      byteArray4[4] = (byte) (-1);
      byteArray4[5] = (byte)38;
      byteArray4[6] = (byte)38;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)38;
      byteArray5[1] = (byte)38;
      byteArray5[2] = (byte) (-126);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[1];
      byteArray6[0] = (byte) (-1);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[8];
      byteArray7[0] = (byte) (-126);
      byteArray7[1] = (byte)38;
      byteArray7[2] = (byte)38;
      byteArray7[3] = (byte) (-126);
      byteArray7[4] = (byte) (-126);
      byteArray7[5] = (byte) (-1);
      byteArray7[6] = (byte)23;
      byteArray7[7] = (byte)38;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[5];
      byteArray8[0] = (byte) (-124);
      byteArray8[1] = (byte)38;
      byteArray8[2] = (byte) (-126);
      byteArray8[3] = (byte)38;
      byteArray0[7] = byteArray8;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addLast((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-452));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.475291042751102
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList1.removeAll(linkedList0);
      linkedList2.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList2);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet1);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList3, fBResultSet1);
      fBCachedFetcher2.insertRow((byte[][]) null);
      FBCachedFetcher fBCachedFetcher3 = new FBCachedFetcher(linkedList1, fBResultSet1);
      fBCachedFetcher0.absolute(1526);
      fBCachedFetcher2.absolute(17);
      fBCachedFetcher3.absolute(107);
      fBCachedFetcher0.isBeforeFirst();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.805809634924922
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = fBResultSet0.row;
      linkedList1.removeAll(linkedList0);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.close();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isLast());
      
      fBCachedFetcher1.previous();
      System.setCurrentTimeMillis(0L);
      boolean boolean0 = fBCachedFetcher1.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3590322051199313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.toArray();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[9];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.deleteRow();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(83L);
      fBCachedFetcher0.isLast();
      byte[][] byteArray0 = new byte[2][7];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-46);
      byteArray1[1] = (byte) (-2);
      byteArray1[2] = (byte)39;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)39;
      byteArray2[2] = (byte)39;
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte) (-2);
      byteArray2[5] = (byte)39;
      byteArray2[6] = (byte) (-2);
      byteArray2[7] = (byte) (-2);
      byteArray0[1] = byteArray2;
      fBCachedFetcher0.insertRow(byteArray0);
      assertFalse(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3964130865520246
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-107);
      byteArray1[1] = (byte) (-2);
      byteArray1[2] = (byte) (-2);
      byteArray1[3] = (byte)0;
      FBCachedBlobField[] fBCachedBlobFieldArray0 = new FBCachedBlobField[9];
      FBCachedBlobField fBCachedBlobField0 = mock(FBCachedBlobField.class, new ViolatedAssumptionAnswer());
      fBCachedBlobFieldArray0[0] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[1] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[2] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[3] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[4] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[5] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[6] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[7] = fBCachedBlobField0;
      fBCachedBlobFieldArray0[8] = fBCachedBlobField0;
      linkedList0.toArray(fBCachedBlobFieldArray0);
      byteArray1[4] = (byte) (-112);
      byteArray1[5] = (byte) (-98);
      byteArray1[6] = (byte)6;
      byteArray1[7] = (byte) (-93);
      byteArray1[8] = (byte)68;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      linkedList1.add((byte[][]) null);
      fBCachedFetcher0.absolute(627);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][5];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-5);
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      linkedList0.replaceAll(unaryOperator0);
      byteArray1[1] = (byte) (-5);
      byteArray1[2] = (byte) (-5);
      byteArray1[3] = (byte) (-5);
      byteArray1[4] = (byte) (-5);
      byteArray1[5] = (byte)5;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-79);
      linkedList0.add(byteArray0);
      byteArray2[1] = (byte) (-5);
      byteArray2[2] = (byte)5;
      byteArray2[3] = (byte) (-5);
      byteArray2[4] = (byte)5;
      byteArray2[5] = (byte)5;
      byteArray2[6] = (byte) (-5);
      byteArray2[7] = (byte)5;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedHashSet<FBBlobField> linkedHashSet0 = new LinkedHashSet<FBBlobField>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList3.containsAll(linkedList0);
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList4 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList5 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList5, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((byte) (-5));
      fBCachedFetcher0.getFetchSize();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.606676852985523
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet2 = new FBResultSet(fBResultSet1.xsqlvars, linkedList2);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher1.next();
      fBCachedFetcher1.previous();
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher1.insertRow((byte[][]) null);
      assertEquals(1, fBCachedFetcher1.getRowNum());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[7];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      fBLongVarCharFieldArray0[6] = fBLongVarCharFieldArray0[5];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)85;
      byteArray1[1] = (byte) (-18);
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)16;
      byteArray1[5] = (byte) (-3);
      byteArray1[6] = (byte)112;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)85;
      byteArray2[1] = (byte)112;
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.580500584748077
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher1.next();
      fBCachedFetcher1.previous();
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher1.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher1.isEmpty());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addLast((byte[][]) null);
      linkedList0.add((byte[][]) null);
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      Function<ObjectInputStream, byte[][]> function0 = (Function<ObjectInputStream, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.compose((Function<? super ObjectInputStream, ? extends byte[][]>) function0);
      Function.identity();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      UnaryOperator<byte[][]> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator3 = UnaryOperator.identity();
      Function<Delayed, byte[][]> function1 = (Function<Delayed, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Delayed, byte[][]> function2 = unaryOperator2.compose((Function<? super Delayed, ? extends byte[][]>) function1);
      UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      unaryOperator3.apply((byte[][]) null);
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator4 = UnaryOperator.identity();
      unaryOperator4.apply((byte[][]) null);
      unaryOperator0.compose((Function<? super Delayed, ? extends byte[][]>) function2);
      unaryOperator0.apply((byte[][]) null);
      UnaryOperator.identity();
      unaryOperator2.apply((byte[][]) null);
      UnaryOperator.identity();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((byte) (-74));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.284768034826887
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)41;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(408);
      fBCachedFetcher0.relative((-1256));
      fBCachedFetcher0.last();
      fBCachedFetcher0.previous();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(408, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSType.getType("PURE_JAVA");
      GDSType gDSType0 = GDSType.getType("PURE_JAVA");
      fBCachedFetcher0.getRowNum();
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl(gDSType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      linkedList0.add((byte[][]) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator_ManagedTransactionCoordinator0.completeStatements();
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-3079));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator_ManagedTransactionCoordinator1.completeStatements();
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator2 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1547);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][9];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)17;
      byteArray1[1] = (byte) (-112);
      byteArray1[2] = (byte) (-45);
      byteArray1[3] = (byte)18;
      byteArray1[4] = (byte)14;
      byteArray0[0] = byteArray1;
      LinkedList<Delayed> linkedList1 = new LinkedList<Delayed>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      linkedList1.add((Delayed) null);
      linkedList0.add(byteArray0);
      linkedList0.retainAll(linkedList1);
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte) (-45);
      byteArray0[1] = byteArray2;
      linkedList0.add(byteArray0);
      byte[][] byteArray3 = new byte[1][3];
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[7];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[1] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[3] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[4] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[5] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      linkedList0.toArray(fBLongVarCharFieldArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][7];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)19;
      byteArray1[1] = (byte) (-44);
      byteArray1[2] = (byte) (-100);
      byteArray1[3] = (byte) (-88);
      byteArray1[4] = (byte) (-23);
      byteArray1[5] = (byte) (-23);
      byteArray1[6] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-100);
      byteArray2[1] = (byte) (-23);
      byteArray2[2] = (byte) (-66);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-88);
      byteArray3[1] = (byte) (-44);
      byteArray3[2] = (byte) (-72);
      byteArray3[3] = (byte) (-66);
      byteArray3[4] = (byte) (-23);
      byteArray3[5] = (byte) (-100);
      byteArray3[6] = (byte) (-1);
      byteArray3[7] = (byte) (-23);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-23);
      byteArray4[1] = (byte)19;
      byteArray4[2] = (byte) (-88);
      byteArray4[3] = (byte) (-23);
      byteArray4[4] = (byte) (-66);
      byteArray4[5] = (byte) (-44);
      byteArray4[6] = (byte) (-23);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte) (-100);
      byteArray5[1] = (byte) (-23);
      byteArray5[2] = (byte) (-100);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte)19;
      byteArray6[1] = (byte) (-121);
      byteArray6[2] = (byte) (-44);
      byteArray6[3] = (byte) (-72);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte) (-1);
      byteArray7[1] = (byte) (-121);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][3];
      linkedList0.push(byteArray0);
      linkedList0.add(byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedList0.push(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      byte[][] byteArray0 = new byte[7][7];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-95);
      byteArray1[1] = (byte) (-24);
      byteArray1[2] = (byte) (-11);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-24);
      byteArray4[1] = (byte) (-11);
      byteArray4[2] = (byte) (-95);
      byteArray4[3] = (byte) (-24);
      byteArray4[4] = (byte) (-11);
      byteArray4[5] = (byte) (-95);
      byteArray4[6] = (byte) (-24);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte) (-95);
      byteArray5[1] = (byte) (-11);
      byteArray5[2] = (byte) (-24);
      byteArray5[3] = (byte) (-11);
      byteArray5[4] = (byte) (-95);
      byteArray5[5] = (byte) (-24);
      byteArray5[6] = (byte) (-11);
      byteArray5[7] = (byte) (-24);
      byteArray5[8] = (byte) (-24);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte) (-24);
      byteArray6[1] = (byte) (-95);
      byteArray6[2] = (byte) (-95);
      byteArray6[3] = (byte) (-24);
      byteArray6[4] = (byte) (-24);
      byteArray6[5] = (byte) (-11);
      byteArray6[6] = (byte) (-95);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte) (-95);
      byteArray7[1] = (byte) (-11);
      byteArray7[2] = (byte) (-11);
      byteArray7[3] = (byte) (-11);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      internalTransactionCoordinator1.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator2 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator3 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator3);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      internalTransactionCoordinator2.getConnection();
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.ensureTransaction();
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator2);
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection;
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator1);
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator1.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator4 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl1.createDatabaseParameterBuffer();
      databaseParameterBuffer0.getArgumentAsString(1155);
      IscDbHandle iscDbHandle0 = javaGDSImpl0.createIscDbHandle();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, iscDbHandle0, (GDSHelper.GDSHelperErrorListener) null);
      javaGDSImpl1.createIscDbHandle();
      databaseParameterBufferImp0.removeArgument(1155);
      GDSHelper gDSHelper1 = new GDSHelper(javaGDSImpl1, databaseParameterBuffer0, iscDbHandle0, (GDSHelper.GDSHelperErrorListener) null);
      databaseParameterBuffer0.addArgument(271, byteArray1);
      databaseParameterBufferImp0.addArgument(16384, byteArray1);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      javaGDSImpl0.createDatabaseParameterBuffer();
      databaseParameterBufferImp1.getLength();
      System.setCurrentTimeMillis(271);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply((byte[][]) null);
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, byte[][]> function0 = (Function<Object, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super ObjectInputStream, ? extends byte[][]>) function0);
      Function.identity();
      UnaryOperator<byte[][]> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator3 = UnaryOperator.identity();
      Function<Delayed, byte[][]> function1 = (Function<Delayed, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, byte[][]> function2 = (Function<Object, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      linkedList0.remove((Object) unaryOperator1);
      Function<Delayed, byte[][]> function3 = unaryOperator3.compose((Function<? super Delayed, ? extends byte[][]>) function1);
      UnaryOperator<byte[][]> unaryOperator4 = UnaryOperator.identity();
      unaryOperator4.apply((byte[][]) null);
      unaryOperator2.apply((byte[][]) null);
      unaryOperator4.apply((byte[][]) null);
      Function<Object, JMXPrincipal> function4 = (Function<Object, JMXPrincipal>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator3.andThen((Function<? super byte[][], ? extends JMXPrincipal>) function4);
      UnaryOperator<byte[][]> unaryOperator5 = UnaryOperator.identity();
      unaryOperator5.apply((byte[][]) null);
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator6 = UnaryOperator.identity();
      Function<byte[][], Integer> function5 = (Function<byte[][], Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator5.andThen((Function<? super byte[][], ? extends Integer>) function5);
      Function.identity();
      UnaryOperator.identity();
      unaryOperator6.apply((byte[][]) null);
      unaryOperator0.compose((Function<? super Delayed, ? extends byte[][]>) function3);
      UnaryOperator.identity();
      unaryOperator3.apply((byte[][]) null);
      UnaryOperator.identity();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.hasArgument((byte) (-23));
      databaseParameterBufferImp3.addArgument((-2023), (String) null);
      databaseParameterBufferImp1.getArgumentAsInt(1157);
      databaseParameterBufferImp1.getArgumentAsInt((-2023));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.hasArgument((byte) (-23));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument(0, (byte[]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.hasArgument((byte) (-23));
      databaseParameterBufferImp3.addArgument((-2025), (String) null);
      databaseParameterBufferImp1.getArgumentAsInt(1157);
      databaseParameterBufferImp1.getArgumentAsInt((-2025));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.hasArgument((byte) (-23));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument(0, (byte[]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp13.write((XdrOutputStream) null);
      databaseParameterBufferImp13.getArgumentAsInt(2004);
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.hasArgument((-201));
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, (-2025), (byte) (-23), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      FileSystemHandling.shouldAllThrowIOExceptions();
      databaseParameterBufferImp3.addArgument((-2023), (String) null);
      databaseParameterBufferImp1.getArgumentAsInt(1157);
      databaseParameterBufferImp1.getArgumentAsInt((-2023));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.hasArgument((byte) (-23));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument(0, (byte[]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp13.write((XdrOutputStream) null);
      databaseParameterBufferImp13.getArgumentAsInt(2004);
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.hasArgument((-189));
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, (-2023), (byte) (-23), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp3.deepCopy();
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.addArgument((-2025), (String) null);
      databaseParameterBufferImp1.getArgumentAsInt(1157);
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.hasArgument((byte) (-23));
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.addArgument(0, (byte[]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getArgumentAsInt(2004);
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBuffer0.hasArgument((-201));
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 2007, (byte) (-23), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "N w<f(cAFy&sl_J'Kx");
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      FBPreparedStatement fBPreparedStatement0 = new FBPreparedStatement((GDSHelper) null, (-2515), (-950), (-4), internalTransactionCoordinator_MetaDataTransactionCoordinator0, internalTransactionCoordinator0);
      FBPreparedStatement fBPreparedStatement1 = new FBPreparedStatement((GDSHelper) null, 0, 0, 0, internalTransactionCoordinator0, internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8393579695774942
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      byte[][] byteArray0 = new byte[9][1];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-29);
      byteArray1[1] = (byte)9;
      byteArray1[2] = (byte)56;
      byteArray1[3] = (byte)14;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)9;
      byteArray2[1] = (byte)56;
      byteArray2[2] = (byte)9;
      byteArray2[3] = (byte) (-29);
      byteArray2[4] = (byte) (-29);
      byteArray2[5] = (byte)56;
      byteArray2[6] = (byte)14;
      byteArray2[7] = (byte)9;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)14;
      byteArray3[1] = (byte)14;
      byteArray3[2] = (byte)9;
      byteArray3[3] = (byte)56;
      byteArray3[4] = (byte)14;
      byteArray3[5] = (byte)56;
      byteArray3[6] = (byte)14;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)9;
      byteArray4[1] = (byte)9;
      byteArray4[2] = (byte)9;
      byteArray4[3] = (byte) (-29);
      byteArray4[4] = (byte)14;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-29);
      byteArray5[1] = (byte) (-74);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte) (-32);
      byteArray6[1] = (byte)56;
      byteArray6[2] = (byte)14;
      byteArray6[3] = (byte) (-74);
      byteArray6[4] = (byte) (-74);
      byteArray6[5] = (byte) (-74);
      byteArray6[6] = (byte) (-29);
      byteArray6[7] = (byte) (-29);
      byteArray6[8] = (byte) (-29);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[0];
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[1];
      byteArray8[0] = (byte) (-32);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[1];
      byteArray9[0] = (byte) (-29);
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      internalTransactionCoordinator1.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator2 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator3 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator3);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator2.rollback();
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator2);
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator1.getConnection();
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator1);
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator1.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator4 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-1258));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      DatabaseParameterBuffer databaseParameterBuffer0 = javaGDSImpl1.createDatabaseParameterBuffer();
      databaseParameterBuffer0.getArgumentAsString(1155);
      IscDbHandle iscDbHandle0 = javaGDSImpl0.createIscDbHandle();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, iscDbHandle0, (GDSHelper.GDSHelperErrorListener) null);
      javaGDSImpl1.createIscDbHandle();
      GDSHelper gDSHelper1 = new GDSHelper(javaGDSImpl1, databaseParameterBuffer0, iscDbHandle0, (GDSHelper.GDSHelperErrorListener) null);
      databaseParameterBuffer0.addArgument(16384, byteArray1);
      databaseParameterBuffer0.addArgument((-339), gDSHelper1.BLOB_LENGTH_REQUEST);
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      javaGDSImpl0.createDatabaseParameterBuffer();
      databaseParameterBufferImp0.getLength();
      System.setCurrentTimeMillis(0L);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.addLast((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.049839849982979
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.toArray();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-85);
      byteArray1[1] = (byte)116;
      byteArray1[2] = (byte)59;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-75);
      byteArray2[0] = (byte)116;
      byteArray2[2] = (byte) (-85);
      byteArray2[3] = (byte)59;
      byteArray2[4] = (byte) (-85);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)59;
      byteArray3[1] = (byte) (-75);
      byteArray3[2] = (byte)116;
      byteArray3[3] = (byte) (-75);
      FBLongVarCharField[] fBLongVarCharFieldArray0 = new FBLongVarCharField[7];
      FBLongVarCharField fBLongVarCharField0 = mock(FBLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBLongVarCharFieldArray0[0] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[6] = fBLongVarCharField0;
      fBLongVarCharFieldArray0[2] = fBLongVarCharFieldArray0[1];
      fBLongVarCharFieldArray0[3] = fBLongVarCharFieldArray0[2];
      fBLongVarCharFieldArray0[4] = fBLongVarCharFieldArray0[3];
      fBLongVarCharFieldArray0[5] = fBLongVarCharFieldArray0[4];
      linkedList0.toArray(fBLongVarCharFieldArray0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      internalTransactionCoordinator1.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator2 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator3 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator3);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      internalTransactionCoordinator2.getConnection();
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.ensureTransaction();
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator2);
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      internalTransactionCoordinator1.getConnection();
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator1);
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator1.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator4 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[7];
      databaseParameterBufferImp2.getArgumentAsString((-2293));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp4.removeExtensionParams();
      databaseParameterBufferImp2.addArgument((-2293), byteArray0);
      databaseParameterBufferImp0.addArgument((int) (byte) (-32), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.getArgumentAsString((-633));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBuffer0.addArgument((int) (byte) (-32), "JY7iG_");
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsInt(1155);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.write((XdrOutputStream) null);
      databaseParameterBuffer0.hasArgument((byte) (-32));
      databaseParameterBufferImp8.getArgumentAsString((-633));
      databaseParameterBufferImp2.removeExtensionParams();
      databaseParameterBuffer0.addArgument((-2293), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp10.getArgumentAsInt((-971));
      databaseParameterBufferImp9.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.hasArgument((-2293));
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      byte[] byteArray0 = new byte[7];
      databaseParameterBufferImp2.getArgumentAsString((-2300));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp4.removeExtensionParams();
      databaseParameterBufferImp2.addArgument((-2300), byteArray0);
      databaseParameterBufferImp0.addArgument((int) (byte) (-32), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp5.getLength();
      databaseParameterBufferImp5.getArgumentAsString((-2809));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getArgumentAsInt(1155);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBuffer0.hasArgument((byte) (-32));
      databaseParameterBufferImp6.getArgumentAsString((-2809));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBuffer0.addArgument((-2300), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.getArgumentAsInt((-971));
      databaseParameterBufferImp7.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp11.hasArgument(1994);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[5][0];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      internalTransactionCoordinator1.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator2 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator3 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator3);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      internalTransactionCoordinator2.getConnection();
      internalTransactionCoordinator2.rollback();
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.ensureTransaction();
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator2);
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator1.getConnection();
      internalTransactionCoordinator_MetaDataTransactionCoordinator0.connection = null;
      internalTransactionCoordinator1.getConnection();
      byte[][] byteArray0 = new byte[9][6];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)2;
      byteArray1[1] = (byte)122;
      byteArray1[2] = (byte)84;
      byteArray1[3] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)84;
      byteArray2[1] = (byte)84;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-1);
      byteArray3[1] = (byte)2;
      byteArray3[2] = (byte)122;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte)2;
      byteArray5[1] = (byte) (-1);
      byteArray5[2] = (byte)84;
      byteArray5[3] = (byte)122;
      byteArray5[4] = (byte)2;
      byteArray5[5] = (byte)122;
      byteArray5[6] = (byte)84;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte)2;
      byteArray6[1] = (byte)122;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte)2;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[3];
      byteArray8[0] = (byte) (-1);
      byteArray8[1] = (byte)84;
      byteArray8[2] = (byte)122;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[3];
      byteArray9[0] = (byte)84;
      byteArray9[1] = (byte)2;
      byteArray9[2] = (byte)2;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator2 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator2);
      internalTransactionCoordinator2.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator4 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator5 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator.identity();
      byte[][] byteArray0 = new byte[16][0];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-121);
      byteArray1[2] = (byte) (-83);
      byteArray1[4] = (byte)14;
      byteArray1[5] = (byte) (-121);
      byteArray1[3] = (byte)30;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-121);
      byteArray2[1] = (byte)30;
      byteArray2[2] = (byte) (-13);
      byteArray2[3] = (byte)30;
      byteArray2[4] = (byte)14;
      byteArray0[0] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-74);
      byteArray3[1] = (byte) (-83);
      byteArray3[2] = (byte) (-83);
      byteArray3[3] = (byte)30;
      byteArray3[4] = (byte) (-74);
      byteArray0[0] = byteArray3;
      byteArray3[3] = (byte)30;
      byteArray0[3] = byteArray3;
      unaryOperator0.apply(byteArray0);
      UnaryOperator.identity();
      Function<InputStream, byte[][]> function0 = (Function<InputStream, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.compose((Function<? super ObjectInputStream, ? extends byte[][]>) function0);
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator3 = UnaryOperator.identity();
      Function<Delayed, byte[][]> function1 = (Function<Delayed, byte[][]>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Delayed, byte[][]> function2 = unaryOperator0.compose((Function<? super Delayed, ? extends byte[][]>) function1);
      UnaryOperator<byte[][]> unaryOperator4 = UnaryOperator.identity();
      unaryOperator3.apply((byte[][]) null);
      unaryOperator2.apply((byte[][]) null);
      UnaryOperator<byte[][]> unaryOperator5 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator6 = UnaryOperator.identity();
      unaryOperator4.apply((byte[][]) null);
      unaryOperator6.compose((Function<? super Delayed, ? extends byte[][]>) function2);
      unaryOperator5.apply((byte[][]) null);
      UnaryOperator.identity();
      unaryOperator4.apply((byte[][]) null);
      UnaryOperator.identity();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator0 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      byte[][] byteArray0 = new byte[8][7];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-120);
      byteArray1[1] = (byte)29;
      byteArray1[2] = (byte)118;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)29;
      byteArray2[1] = (byte)118;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte) (-79);
      byteArray2[4] = (byte)29;
      byteArray2[5] = (byte) (-1);
      byteArray2[6] = (byte)118;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)29;
      byteArray3[1] = (byte)118;
      byteArray3[2] = (byte)118;
      byteArray3[3] = (byte) (-1);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)29;
      byteArray4[1] = (byte)118;
      byteArray4[2] = (byte)0;
      byteArray4[3] = (byte)0;
      byteArray4[4] = (byte)39;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-120);
      byteArray5[1] = (byte)79;
      byteArray5[2] = (byte) (-1);
      byteArray5[3] = (byte)29;
      byteArray5[4] = (byte) (-1);
      byteArray5[5] = (byte) (-79);
      byteArray5[6] = (byte) (-75);
      byteArray5[7] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte)79;
      byteArray6[1] = (byte)42;
      byteArray6[2] = (byte)79;
      byteArray6[3] = (byte)118;
      byteArray6[4] = (byte)39;
      byteArray6[5] = (byte)79;
      byteArray6[6] = (byte) (-79);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte) (-75);
      byteArray7[1] = (byte)0;
      byteArray7[2] = (byte)79;
      byteArray7[3] = (byte)39;
      byteArray7[4] = (byte)0;
      byteArray7[5] = (byte)8;
      byteArray7[6] = (byte)39;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[7];
      byteArray8[0] = (byte)39;
      byteArray8[1] = (byte) (-120);
      byteArray8[2] = (byte)79;
      byteArray8[3] = (byte) (-95);
      byteArray8[4] = (byte) (-75);
      byteArray8[5] = (byte)42;
      byteArray8[6] = (byte)29;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator0);
      internalTransactionCoordinator1.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator1 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator2 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator3 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      InternalTransactionCoordinator internalTransactionCoordinator2 = new InternalTransactionCoordinator(internalTransactionCoordinator_ManagedTransactionCoordinator3);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator_ManagedTransactionCoordinator0.connection = null;
      internalTransactionCoordinator2.setCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator1);
      internalTransactionCoordinator0.getConnection();
      internalTransactionCoordinator1.getConnection();
      InternalTransactionCoordinator.ManagedTransactionCoordinator internalTransactionCoordinator_ManagedTransactionCoordinator4 = new InternalTransactionCoordinator.ManagedTransactionCoordinator((AbstractConnection) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp3.deepCopy();
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.addArgument((-2025), (String) null);
      databaseParameterBufferImp1.getArgumentAsInt(1157);
      databaseParameterBufferImp1.getArgumentAsInt((-2025));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.hasArgument((byte) (-23));
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.addArgument(0, (byte[]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getArgumentAsInt(2004);
      databaseParameterBufferImp3.getArgumentAsString(0);
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBuffer0.hasArgument((-201));
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      UnaryOperator.identity();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][1];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)100;
      byteArray1[1] = (byte) (-82);
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-14);
      byteArray1[4] = (byte)102;
      byteArray1[5] = (byte)73;
      byteArray1[6] = (byte)53;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte) (-14);
      byteArray3[1] = (byte)18;
      byteArray3[2] = (byte)53;
      byteArray3[3] = (byte)102;
      byteArray3[4] = (byte) (-83);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte) (-109);
      byteArray4[1] = (byte)53;
      byteArray4[2] = (byte)108;
      byteArray4[3] = (byte) (-1);
      byteArray4[4] = (byte)102;
      byteArray4[5] = (byte) (-1);
      byteArray4[6] = (byte) (-83);
      byteArray4[7] = (byte)18;
      byteArray4[8] = (byte)18;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte)108;
      byteArray5[1] = (byte)102;
      byteArray5[2] = (byte) (-14);
      byteArray5[3] = (byte)73;
      byteArray5[4] = (byte)18;
      byteArray5[5] = (byte)73;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)100;
      byteArray6[1] = (byte)100;
      byteArray6[2] = (byte) (-1);
      byteArray6[3] = (byte) (-1);
      byteArray6[4] = (byte) (-1);
      byteArray6[5] = (byte)102;
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) localDateTime0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.or(predicate0);
      Predicate<Object> predicate5 = predicate1.and(predicate0);
      Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate6 = predicate2.negate();
      predicate1.negate();
      predicate2.test(predicate3);
      Predicate<Object> predicate7 = predicate5.negate();
      Predicate<Object> predicate8 = predicate3.and(predicate1);
      Predicate<Object> predicate9 = predicate7.and(predicate0);
      Predicate<Object> predicate10 = predicate7.negate();
      Predicate<Object> predicate11 = Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate12 = predicate11.or(predicate2);
      Predicate<Object> predicate13 = predicate0.negate();
      Predicate<Object> predicate14 = predicate9.and(predicate4);
      Predicate<Object> predicate15 = predicate13.and(predicate6);
      predicate12.and(predicate15);
      Predicate<Object> predicate16 = predicate8.and(predicate9);
      predicate14.and(predicate6);
      predicate10.test(predicate7);
      Predicate<Object> predicate17 = predicate1.negate();
      Predicate<Object> predicate18 = predicate9.or(predicate2);
      Predicate<Object> predicate19 = predicate16.and(predicate17);
      predicate19.and(predicate8);
      Predicate<Object> predicate20 = predicate2.or(predicate4);
      predicate18.negate();
      predicate4.negate();
      predicate2.or(predicate20);
      Predicate.isEqual((Object) predicate7);
      predicate12.negate();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[9][3];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-2);
      byteArray1[1] = (byte) (-120);
      byteArray1[2] = (byte)98;
      byteArray1[3] = (byte) (-124);
      byteArray1[4] = (byte) (-79);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-124);
      byteArray2[1] = (byte)65;
      byteArray2[2] = (byte) (-120);
      byteArray2[3] = (byte)98;
      byteArray2[4] = (byte) (-2);
      byteArray2[5] = (byte) (-2);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)65;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-124);
      byteArray5[1] = (byte) (-2);
      byteArray5[2] = (byte) (-124);
      byteArray5[3] = (byte) (-2);
      byteArray5[4] = (byte) (-120);
      byteArray5[5] = (byte) (-120);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte) (-124);
      byteArray6[1] = (byte) (-124);
      byteArray6[2] = (byte) (-2);
      byteArray6[3] = (byte)98;
      byteArray6[4] = (byte) (-124);
      byteArray6[5] = (byte) (-124);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[0];
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte) (-79);
      byteArray8[1] = (byte) (-79);
      byteArray8[2] = (byte) (-120);
      byteArray8[3] = (byte)98;
      byteArray8[4] = (byte) (-124);
      byteArray8[5] = (byte) (-2);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[0];
      byteArray0[8] = byteArray9;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
