/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 05:22:55 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.Button;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.datatransfer.StringSelection;
import java.awt.image.ByteLookupTable;
import java.beans.VetoableChangeListenerProxy;
import java.io.File;
import java.net.URI;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Function;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JRootPane;
import javax.swing.JTabbedPane;
import javax.swing.TransferHandler;
import javax.swing.colorchooser.DefaultColorSelectionModel;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.CaseInsensitiveString;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.ProcedureInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).isClosed();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[0];
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      ConnectionWrapper connectionWrapper2 = new ConnectionWrapper(connectionWrapper1);
      ConnectionWrapper connectionWrapper3 = new ConnectionWrapper(connectionWrapper1);
      connectionWrapper3.clearWarnings();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(15);
      SQLDriver sQLDriver0 = new SQLDriver();
      connectionWrapper0.isClosed();
      sQLDriver0.setUrl(";:+Cb");
      sQLDriver0.clone();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLDriverPropertyCollection0.removeDriverProperty("ZzOs!qr;2_N");
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper3, sQLDriverPropertyCollection0, sQLDriver0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ";:+Cb";
      DBUtil.getColumnType((ISQLConnection) sQLConnection0, (ITableInfo) null, ";:+Cb");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String[] stringArray1 = new String[2];
      stringArray1[0] = ";:+Cb";
      Cursor.getDefaultCursor();
      Cursor.getDefaultCursor();
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 579);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("v Kycd`gm", "FlB1Ul 9WK{Qi^is_p", "v Kycd`gm", "J,]", (-1778), "DQ?dcSZgdb*) >X]ss", (-183), (-1398), (-183), (-1398), "FlB1Ul 9WK{Qi^is_p", "DQ?dcSZgdb*) >X]ss", (-4327), (-1398), "m,w6sT.\"~");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("CREATE TABLE ");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection1, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "v5<)`\"em'$sNPaC.8A", "DBUtil.error.unknowntype");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      connectionWrapper0.setReadOnly(false);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      sQLConnection0.setTransactionIsolation(1881);
      sQLConnection0.close();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection1, sQLDriver1);
      SQLDatabaseMetaData sQLDatabaseMetaData0 = sQLConnection1.getSQLMetaData();
      TableInfo tableInfo0 = new TableInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "i", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "SQLHistoryItem == null", sQLDatabaseMetaData0);
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", tableInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      doReturn(false).when(connection0).isClosed();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(15);
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriver sQLDriver1 = new SQLDriver();
      ConnectionWrapper connectionWrapper2 = new ConnectionWrapper(connectionWrapper1);
      connectionWrapper2.isClosed();
      sQLDriver1.setUrl("':NQpU||P");
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver1);
      connectionWrapper0.setHoldability(15);
      sQLDriverPropertyCollection2.getDriverProperties();
      sQLConnection0.setAutoCommit(false);
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver1);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection1, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-1684));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("=|[dU4/");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 65532);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).isClosed();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      ConnectionWrapper connectionWrapper2 = new ConnectionWrapper(connectionWrapper1);
      ConnectionWrapper connectionWrapper3 = new ConnectionWrapper(connectionWrapper1);
      connectionWrapper3.clearWarnings();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(15);
      SQLDriver sQLDriver0 = new SQLDriver();
      connectionWrapper2.isClosed();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper1, sQLDriverPropertyCollection0, sQLDriver0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions";
      stringArray0[1] = ";:+Cb";
      stringArray0[2] = ";:+Cb";
      stringArray0[3] = "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions";
      stringArray0[4] = ";W':NQJp|P";
      stringArray0[5] = ";:+Cb";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) sQLConnection0, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLDriver sQLDriver0 = new SQLDriver();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-757));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(connection0).getAutoCommit();
      doReturn(false).when(connection0).isClosed();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      connectionWrapper1.clearWarnings();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(15);
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriver sQLDriver1 = new SQLDriver();
      ConnectionWrapper connectionWrapper2 = new ConnectionWrapper(connectionWrapper1);
      connectionWrapper2.isClosed();
      sQLDriver1.setUrl("':NQpU||P");
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver1);
      connectionWrapper0.setHoldability(15);
      sQLConnection0.setAutoCommit(false);
      sQLConnection0.close();
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver1);
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames(sQLConnection1, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = null;
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "v{", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("=|[dU4/");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(2, (-177));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.isTableExt((CaseInsensitiveString) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getApplication();
      DBUtil.typesAreEquivalent(2, 2);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MODIFY $tableName$ TO RECONSTRUCT", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "?(t!n)y", (-246), ">zZ<.O7ZC-Cg8Lc/*", (-246), 0, (-3228), 1, "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", ">zZ<.O7ZC-Cg8Lc/*", (-9), 2, "exp");
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 2001);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(connection0).getAutoCommit();
      doReturn(false).when(connection0).isClosed();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(15);
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLDriver sQLDriver1 = new SQLDriver();
      ConnectionWrapper connectionWrapper2 = new ConnectionWrapper(connectionWrapper1);
      connectionWrapper2.isClosed();
      sQLDriver1.setUrl("':NQpU||P");
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = sQLAlias0.getDriverPropertiesClone();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver1);
      connectionWrapper0.setHoldability(15);
      sQLDriverPropertyCollection2.getDriverProperties();
      sQLConnection0.setAutoCommit(false);
      sQLConnection0.close();
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection2, sQLDriver1);
      try { 
        DBUtil.getPKColumnString(sQLConnection1, (ITableInfo) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Methods cannot be invoked on a closed connection
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      String string0 = null;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      stack0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "K#X`}Gmo~{Ivc=sZ", "s^}e]$W");
      int int0 = 1201;
      int int1 = 660;
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=:HO#ul1|cW79rJc8");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=:HO#ul1|cW79rJc8");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(":~4", "SchemaInfo.SuccessfullyRestoredDatabaseMetaData", "ga=Qq/Y8kB", ":~4", 0, "v Kycd`gm", (-245), 321, 366, 366, "!7x44qc'z2,=?", "\" options.", 366, 856, ":~4");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("s-milcKy@CJlP].wa|", "", "net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", "propName == null", 39, "", 716, 716, (-183), 39, (String) null, "listener", 62, 716, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CREATE SEQUENCE $sequenceName$ START WITH $startValue$ INCREMENT BY $incrementValue$ $cache$ $cacheValue$");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("boZ&ms{ZcRTvI3Sd", (String) null, "CREATE SEQUENCE $sequenceName$ START WITH $startValue$ INCREMENT BY $incrementValue$ $cache$ $cacheValue$", "J,]", 165, "J,]", (-1398), (-357), (-1398), (-4327), "J,]", "igV6]*L", 1489, 1268, "]Z./%h:");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "r-r3.zS");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`{");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":qbN(OZ6E");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("px3", "px3", "", "px3", (-969), "", 2000, 66, (-433), 1738, "px3", ":qbN(OZ6E", 2000, 3697, "h&;d:6\"lk?V z;/O]b");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`{");
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Parsing for [", "Parsing for [");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl.listRoots();
      MockFile mockFile0 = new MockFile("Parsing for [", "Y=sX");
      MockFile mockFile1 = new MockFile("D%8");
      mockFile1.delete();
      mockFile1.setExecutable(false);
      mockFile1.mkdir();
      fileWrapperFactoryImpl0.create((File) mockFile1);
      URI uRI0 = mockFile0.toURI();
      fileWrapperImpl1.listFiles();
      fileWrapperFactoryImpl0.createTempFile("DefaultIntervalCategoryDataset.getValue(): series index out of range.", " schema = ", (FileWrapper) fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(uRI0);
      MockFile mockFile2 = new MockFile("(,sKgS>#S?!~_", "axion");
      mockFile2.getAbsolutePath();
      mockFile0.setReadable(false);
      mockFile2.setReadOnly();
      MockFile mockFile3 = new MockFile(uRI0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl("Parsing for [");
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(uRI0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserSpecificWikiConfigurationsFile();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "|y]1 ", "z_bRmS=TBOL", "X\\}Q:", (-3), "6x", (-3), 2004, 465, 783, "X\\}Q:", "org.jfree.data.time.TimePeriodFormatException", 65535, 8, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("org.jfree.data.time.TimePeriodFormatException", icon0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      assertNull(sQLDriver0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "Parsing layout options for \"";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "Parsing layout options for \"", "Parsing layout options for \"", (-3467), "w+hG98G", 3259, 1679, (-629), 2002, "8TI", " and table_schema = ? ", 1679, (-1950), "w+hG98G");
      String string1 = "*e\\c';Nl')+=e";
      String string2 = "xB&y~'6MOwMXWDp{GIz";
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("*ec';Nl')+=e", "Parsing layout options for \"", " and catalog ", "y3lK|.", 2004, "xB&y~'6MOwMXWDp{GIz", 3259, (-1950), 1077, (-401), "GKW%5i8C-}0", "w+hG98G", (-427), (-3467), "");
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBUtil.isBinaryType(tableColumnInfo1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "Parsing layout options for \"", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = null;
      String string1 = "Encountered u]expected exception while attempting to determin if catalogs are used in table def0nitions";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, (String) null, "Encountered u]expected exception while attempting to determin if catalogs are used in table def0nitions", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      DBUtil.convertTableToObjectList(linkedList0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(27);
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLConnection sQLConnection0 = null;
      try {
        sQLConnection0 = new SQLConnection((Connection) null, sQLDriverPropertyCollection1, sQLDriver0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLConnection == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ITableInfo iTableInfo0 = null;
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) null;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      DBUtil.convertObjectToTableList(list1);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 579);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo2 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "pRjl_*nb4O[@8jD,", 3006, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, 9, 3514, 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "pRjl_*nb4O[@8jD,", 9, (-1876), "pRjl_*nb4O[@8jD,");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 14;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      int int1 = (-1087);
      String string0 = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      int int2 = 207;
      String string1 = "select ";
      String string2 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("8e?sHVCW 19E", (String) null, (String) null, (String) null, (-1087), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1087), 14, 273, 207, "select ", (String) null, (-1087), 1003, (String) null);
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, (String) null, "T9V<`XKkU8GT<w(tJ", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "propName == null");
      imageIcon0.getIconHeight();
      imageIcon0.getImage();
      imageIcon0.getIconHeight();
      TransferHandler transferHandler0 = new TransferHandler("");
      StringSelection stringSelection0 = new StringSelection("X{Z");
      transferHandler0.getVisualRepresentation(stringSelection0);
      DatabaseObjectType.createNewDatabaseObjectType("BuKWjd4|f%hP", (Icon) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("-06-", (String) null, " b5z\"X%11EKN| =u}9", (String) null, (-1566), "-06-", 1986, (-2177), (-2177), 1986, "", "", 1986, 1986, (String) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      assertNull(sQLDriver0.getDriverClassName());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "$F", "SELECT next_value-1, max_value, min_value, cache_size, increment_value, case     when cycle_flag = 'Y'     then 1     else 0 end FROM iisequences where seq_name = ?", "(,sKgS>#S?!~_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getJDBCDebugLogFile();
      fileWrapperImpl0.mkdir();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl.listRoots();
      fileWrapperFactoryImpl0.create(fileWrapperImpl1);
      fileWrapperFactoryImpl0.createTempFile("Y=sX", "Parsing for [", (FileWrapper) fileWrapperImpl0);
      MockFile mockFile0 = new MockFile("Parsing for [", "Y=sX");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      mockFile0.setReadable(false);
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperFactoryImpl0.create((File) mockFile0);
      FileWrapperImpl.createTempFile("Parsing for [", "You have tried to set a null error-handler.", fileWrapperImpl2);
      mockFile0.setReadable(false);
      FileWrapperFactoryImpl fileWrapperFactoryImpl3 = new FileWrapperFactoryImpl();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Parsing for [", "c<!{n", "AND T2.tabid = T1.tabid", "]1-!2yv3=%J6x)%", (-5), (String) null, (-2421), 701, 633, 1108, "]1-!2yv3=%J6x)%", "AND T2.tabid = T1.tabid", 1108, (-2757), "Y=sX");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(50L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "CyZI", "CREATE TABLE ", 4877, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2042), (-2042), (-1112), (-2042), "DQ?dcSZgdb*) >X]ss", "?8[(EiMUV", 1007, (-910), (String) null);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon((String) null, "y(M)m}H4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDatabaseAliasesFile();
      fileWrapperFactoryImpl0.createTempFile("Y=sX", "Parsing for [", fileWrapper0);
      MockFile mockFile0 = new MockFile("You have tried to set a null error-handler.");
      mockFile0.setReadable(true);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      mockFile0.setReadable(false);
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapper fileWrapper1 = fileWrapperFactoryImpl0.create((File) mockFile0);
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl2.createTempFile("Y=sX", "=b:HO#ul1|cW*79rJc8", fileWrapper1);
      fileWrapperImpl0.getFileReader();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("-06-", "=b:HO#ul1|cW*79rJc8", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Y=sX", 1061, "8e?sHVCW 19E", 1061, 1061, 1007, 1061, "=b:HO#ul1|cW*79rJc8", "Mm>3", (-3481), (-3481), "Mm>3");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1061, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "?2!<0FU", "LdoN5<", (String) null, (-4), (String) null, 2006, (-3), 2006, 116, ".", "right(", 502, (-3), ".");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.USER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = ";W':NQJp|P";
      DBUtil.setLastStatement(";W':NQJp|P");
      DBUtil.getLastStatement();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall(";W':NQJp|P");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "sb";
      int int0 = (-558);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("sb", "u2~", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "xZ_3*yY&`wG~", 110, " )", (-72), (-1340), (-558), 110, "xZ_3*yY&`wG~", "SVT5D VLql7W.4@[A0", (-558), (-1340), "SVT5D VLql7W.4@[A0");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "RXN'o", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType(";MD C5^?");
      DatabaseObjectType.createNewDatabaseObjectType("s:>~hD6ju");
      DatabaseObjectType.createNewDatabaseObjectType("s:>~hD6ju");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDT;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getPluginUserSettingsFolder();
      dBCopyPlugin2.unload();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin2, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("*ec';Nl')+=e", (String) null, (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2), "Li\"cD{(N", (-3467), 1232, 2147483645, 1739, "DataCache.error.loadingdrivers", "", 1232, (-3467), " tableName=");
      DBUtil.isBinaryType(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "DataCache.error.loadingdrivers", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("(,sKgS>#S?!~_", (String) null, "-06-", " b5z\"X%11EKN| =u}9", 2066, (String) null, 4000, 2004, 288, 2004, "", "-06-", 2066, 288, "org.hibernate.dialect.Oracle9Dialect");
      DBUtil.isBinaryType(tableColumnInfo0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultOpenIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("v", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("org.hibernate.dialect.Oracle9Dialect");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      assertEquals(288, tableColumnInfo0.getOrdinalPosition());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Y=sX", "Y=sX", "Y=sX", "org.hibernate.type.LongType", (-401), "", (-2028178998), (-5), (-862), (-401), "9v", "-06-", (-2028178998), (-2418), "JDBCPieDataset: swallowing exception.");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("-06-");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("DBUtil.error.maptype", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("text/plain");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseObjectType) null).when(foreignKeyInfo0).getDatabaseObjectType();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(foreignKeyInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("X\\}Q:", "=b:HO#ul1|cW*79rJc8", "DQ?dcSZgdb*) >X]ss", "m,w6sT.\"~", 4690, "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", (-183), (-183), 46, 1954, "m,w6sT.\"~", "=b:HO#ul1|cW*79rJc8", 4690, 1954, "tp3`9q");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q,u8=STwe0xqUCMi&");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("=b:HO#ul1|cW*79rJc8", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)56;
      byteArray0[6] = (byte)56;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "IN87I1zZ:", (ITableInfo) null, (byte)56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("-Ch,<?6xAQ8=$WAp", "", "bFpY;]H/}p^}Um7ZqN", "", 0, "", 16, 16, 152, (-629), " and table_schema = ? ", "", 65532, (-3467), "");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("", "", (String) null, "*ec';Nl')+=e", 65532, "bFpY;]H/}p^}Um7ZqN", 0, 152, (-7658), 4611, "*ec';Nl')+=e", "Li\"cD{(N", 65532, 65532, "()1@DK");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("org.hibernate.dialect.Oracle9Dialect$1", "bFpY;]H/}p^}Um7ZqN", "()1@DK", "PQ%mh", 16, "*ec';Nl')+=e", (-1906), (-16), (-629), (-1906), "-Ch,<?6xAQ8=$WAp", "", (-629), (-1906), (String) null);
      tableColumnInfoArray0[2] = tableColumnInfo2;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals(", *ec';Nl')+=e, PQ%mh", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      String string0 = "mb+IvnsQ-hJO{@c[_";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.apache.log4j.helpers.Loader", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "org.apache.log4j.helpers.Loader", "mb+IvnsQ-hJO{@c[_", 3287, "f5+5O}~HD=KV )w|>", (-3084), (-7), 2183, 2196, "org.apache.log4j.helpers.Loader", "`7h[OSb,?z /M5u.tg", 3017, 7, "mb+IvnsQ-hJO{@c[_");
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(2002, tableColumnInfo0, (ISession) null);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(502, 16);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = ">^uYa%s>Ug";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, ">^uYa%s>Ug", ">^uYa%s>Ug", ">^uYa%s>Ug", 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBUtil.setLastStatementValues("#5ZK#WKB");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = (-7);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("select ", "K#X`}Gmo~{Ivc=sZ", "select ", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDatabaseAliasesFile();
      fileWrapperFactoryImpl0.createTempFile("Y=sX", "Parsing for [", fileWrapper0);
      MockFile mockFile0 = new MockFile("You have tried to set a null error-handler.");
      mockFile0.setReadable(true);
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      mockFile0.setReadable(false);
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      FileWrapper fileWrapper1 = fileWrapperFactoryImpl0.create((File) mockFile0);
      mockFile0.setReadable(true);
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl2.createTempFile("Y=sX", "=b:HO#ul1|cW*79rJc8", fileWrapper1);
      fileWrapperImpl0.toURL();
      fileWrapperImpl0.getFileReader();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      int int0 = DBUtil.replaceDistinctDataType(1007, (TableColumnInfo) null, (ISession) null);
      assertEquals(1007, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`{");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":qbN(OZ6E");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("px3", "px3", "", "px3", (-969), "", 2000, 66, (-433), 1738, "px3", ":qbN(OZ6E", 2000, 3697, "h&;d:6\"lk?V z;/O]b");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`{");
      DBUtil.replaceDistinctDataType((-969), tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(2000);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "DDH/0:7x,.{^", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setTestColumnNames(false);
      dBCopyPreferenceBean0.setCommitAfterTableDefs(false);
      dBCopyPreferenceBean0.setTableDelayMillis(929L);
      dBCopyPreferenceBean0.setSelectFetchSize(128);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      assertEquals(929L, dBCopyPreferenceBean0.getTableDelayMillis());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      int int0 = 2608;
      JRootPane jRootPane0 = new JRootPane();
      jRootPane0.getLayeredPane();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)71;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)16;
      byte byte0 = (byte)74;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte) (-10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[6] = (byte) (-76);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(4194, byteArray0);
      Hashtable<RenderingHints.Key, ProcedureInfo> hashtable0 = new Hashtable<RenderingHints.Key, ProcedureInfo>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      DBUtil dBUtil0 = new DBUtil();
      // Undeclared exception!
      try { 
        renderingHints0.computeIfAbsent(dBUtil0, (Function<? super Object, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-2082), 96);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("SELErT next_value-N, max_value, min_value, cache_size, increment_value, cse    Awhen cycle_flag = 'Y'    Vhen 1     else 0 end FROM iisequences where seq_name = ?", "SELErT next_value-N, max_value, min_value, cache_size, increment_value, cse    Awhen cycle_flag = 'Y'    Vhen 1     else 0 end FROM iisequences where seq_name = ?", "rq-r3S", (ISession) null, true, 16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "K#X`}Gmo~{Ivc=sZ", "s^}e]$W");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      int int0 = 528;
      DBUtil.typesAreEquivalent(528, 528);
      Color color0 = Color.gray;
      color0.getColorSpace();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel();
      DefaultColorSelectionModel defaultColorSelectionModel1 = new DefaultColorSelectionModel();
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 225);
      Color color0 = Color.gray;
      color0.getColorSpace();
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel(color0);
      DefaultColorSelectionModel defaultColorSelectionModel1 = new DefaultColorSelectionModel();
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel1);
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      int int0 = 16;
      DBUtil.typesAreEquivalent(16, 16);
      String string0 = ". Using 'length'";
      JTabbedPane jTabbedPane0 = null;
      try {
        jTabbedPane0 = new JTabbedPane(16);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal tab placement: must be TOP, BOTTOM, LEFT, or RIGHT
         //
         verifyException("javax.swing.JTabbedPane", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      String string0 = "SELECT next_value-1, max_value, min_value, ache_size, increment_value, cse     when cycle_flag = 'Y'    then 1     else 0 end FROM iisequnces where seq_name = ?";
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v Kycd`gm");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "v{");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":qbN(OZ6E");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("exp", "exp", "", "exp", (-969), "", 2000, 66, (-433), 1738, "exp", ":qbN(OZ6E", 2000, 3697, "h&;d:6\"lk?V z;/O]b");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "v{");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "org.fest.swing.edt.GuiTask", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.getIconWidth();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "D<-r", "D<-r", "*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DefaultColorSelectionModel defaultColorSelectionModel0 = new DefaultColorSelectionModel();
      JColorChooser jColorChooser0 = new JColorChooser(defaultColorSelectionModel0);
      DBUtil.fixCase((ISession) null, (String) null);
      String string0 = "vTTX+<\"[5|NxD";
      XYSeries xYSeries0 = new XYSeries("vTTX+<\"[5|NxD");
      XYSeriesCollection xYSeriesCollection0 = new XYSeriesCollection(xYSeries0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy((String) null, xYSeriesCollection0);
      jColorChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Toolkit", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "(X&SmyAlnB6w");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
