/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 06:55:47 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.Locale;
import java.util.Stack;
import java.util.function.Predicate;
import javax.swing.DebugGraphics;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5478183549676735
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 371);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.mark((byte)66);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "\u0000+\u0000\u00E8\u0000\u0000\u0000\u0000";
      stringArray0[1] = "\u0000\u0000\u0000\u0000=.\u0000\u0000";
      stringArray0[2] = "119";
      byteArrayInputStream0.mark((byte)109);
      BufferedCustomInputStream.main(stringArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Newzgrabber.verbose = true;
      pipedOutputStream0.write((int) (byte)109);
      base64Decoder0.setLineCount(3L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7774035244144605
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)44;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[5] = (byte)46;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)109;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)46;
      byteArray1[1] = (byte)10;
      byteArray1[2] = (byte)61;
      byteArray1[3] = (byte)44;
      byteArray1[4] = (byte)109;
      byteArray1[6] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)109);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)44, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.mark(81);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      pipedOutputStream0.write((int) (byte)10);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6044510233677172
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte)61;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, dataOutputStream0);
      base64Decoder1.decodeStream();
      Base64Decoder base64Decoder2 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder2.setBegin(false);
      Base64Decoder base64Decoder3 = new Base64Decoder(bufferedCustomInputStream0, dataOutputStream0);
      base64Decoder1.decodeStream();
      base64Decoder3.decodeStream();
      pipedOutputStream0.write((int) (byte)61);
      base64Decoder3.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder3.decodeStream();
      base64Decoder1.decodeStream();
      base64Decoder2.decodeStream();
      assertEquals(4, pipedInputStream0.available());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.582647532242458
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\u0000+\u0000\u00E8\u0000\u0000\u0000\u0000");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">\u0000>L");
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte)66;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 371);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "\u0000+\u0000\u00E8\u0000\u0000\u0000\u0000";
      stringArray0[1] = "\u0000\u0000\u0000\u0000=.\u0000\u0000";
      stringArray0[2] = "119";
      BufferedCustomInputStream.main(stringArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      pipedOutputStream0.write((int) (byte)66);
      base64Decoder0.setBegin(true);
      base64Decoder0.setLineCount((-1L));
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5326914208398718
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)44;
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte)97;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 371);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("6wxQ/6I`eZ/)/EOkg2g-z|x@n]^%%");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(bufferedInputStream0, 1, false);
      MockFile mockFile0 = new MockFile("6wxQ/6I`eZ", ")/EOkg2g-z|x@n]^%%");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      mockPrintStream0.append((CharSequence) ")/EOkg2g-z|x@n]^%%");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockFile0);
      mockPrintStream0.append((CharSequence) ")/EOkg2g-z|x@n]^%%");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.ProgressSet = true;
      base64Decoder0.decodeStream();
      assertEquals(41L, mockFile0.length());
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5915950580657945
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)44;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 371);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, dataOutputStream0);
      Newzgrabber.IsBatch = false;
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.582647532242458
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[1] = (byte)43;
      byteArray0[3] = (byte) (-53);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      byteArray0[5] = (byte)97;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      byteArray0[6] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("Newzgrabber.DirectoryDialog", "6wxQ/6I`eZ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")/EOkg2g-z|x@n]^%%");
      MockFile mockFile1 = new MockFile(".");
      File file0 = mockFile0.getCanonicalFile();
      mockFile1.setExecutable(false);
      mockFile1.getAbsolutePath();
      mockFile0.mkdirs();
      mockFile0.setExecutable(false);
      mockFile1.renameTo(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5478183549676735
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 371);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.mark((byte)66);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "\u0000+\u0000\u00E8\u0000\u0000\u0000\u0000";
      stringArray0[1] = "\u0000\u0000\u0000\u0000=.\u0000\u0000";
      stringArray0[2] = "119";
      BufferedCustomInputStream.main(stringArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      pipedOutputStream0.write((int) (byte)61);
      base64Decoder0.setLineCount((-1L));
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(0L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5478183549676735
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte)61;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 371);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.mark((byte)66);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "\u0000+\u0000\u00E8\u0000\u0000\u0000\u0000";
      stringArray0[1] = "\u0000\u0000\u0000\u0000=.\u0000\u0000";
      stringArray0[2] = "119";
      BufferedCustomInputStream.main(stringArray0);
      PrintStream printStream0 = DebugGraphics.logStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      pipedOutputStream0.write((int) (byte)109);
      base64Decoder0.setLineCount((-11L));
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals((-10L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.567944147734173
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      byteArray0[3] = (byte)63;
      byteArray0[2] = (byte)60;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[20] = (byte)60;
      byteArray0[4] = (byte)44;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "lW#=Mf\"M#QmDTE}");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lW#=Mf\"M#QmDTE}");
      byteArray0[17] = (byte)81;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[6] = (byte)81;
      byteArray0[8] = (byte)0;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("P 2{i,5<JBn", "lW#=Mf\"M#QmDTE}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockFile mockFile1 = new MockFile("lW#=Mf\"M#QmDTE}", "P 2{i,5<JBn");
      mockFile1.mkdirs();
      mockFile1.toURL();
      File file0 = mockFile0.getCanonicalFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      file0.getAbsolutePath();
      mockFile0.toPath();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/99_newzgrabber/P 2{i,5<JBn/lW#=Mf\"M#QmDTE}");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Object object1 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object1);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate.isEqual((Object) "Test Frame");
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate2.and(predicate4);
      Predicate<Object> predicate8 = predicate5.or(predicate2);
      Predicate.isEqual((Object) predicate2);
      predicate5.negate();
      predicate8.negate();
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate9 = predicate0.or(predicate7);
      Object object2 = new Object();
      Object object3 = new Object();
      predicate8.test(predicate9);
      Object object4 = new Object();
      predicate6.test(object4);
      Predicate<Object> predicate10 = Predicate.isEqual((Object) predicate7);
      predicate9.and(predicate10);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)54;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)54, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Object object1 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object1);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate.isEqual((Object) "Test Frame");
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate2.and(predicate4);
      Predicate<Object> predicate8 = predicate5.or(predicate2);
      Predicate.isEqual((Object) predicate2);
      predicate5.negate();
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate9 = predicate0.or(predicate7);
      Object object2 = new Object();
      Object object3 = new Object();
      predicate8.test(predicate9);
      Object object4 = new Object();
      predicate6.test(object4);
      Predicate<Object> predicate10 = Predicate.isEqual((Object) predicate7);
      predicate9.and(predicate10);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)54;
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)54, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Object object1 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object1);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate.isEqual((Object) "v\u000FmY J\u00F4\u00CB\u00F4vax");
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate1);
      Object object2 = new Object();
      Predicate.isEqual(object2);
      Predicate<Object> predicate5 = predicate0.negate();
      predicate3.negate();
      predicate5.test((Object) null);
      Predicate.isEqual((Object) predicate4);
      predicate5.negate();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "v\u000FmY J\u00F4\u00CB\u00F4vax");
      Predicate<Object> predicate7 = predicate2.or(predicate6);
      Object object3 = new Object();
      Object object4 = new Object();
      predicate7.test(object4);
      Predicate<Object> predicate8 = predicate0.negate();
      predicate0.or(predicate8);
      predicate7.test(object3);
      predicate7.and(predicate3);
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[5] = (byte)54;
      byteArray0[3] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, 122, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals(3L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5676322270261697
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Object object1 = new Object();
      Object object2 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object2);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate0.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) predicate2;
      objectArray0[1] = object1;
      objectArray0[2] = object1;
      Object object3 = new Object();
      objectArray0[3] = object3;
      objectArray0[4] = (Object) predicate3;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 0);
      Predicate.isEqual((Object) defaultTableModel0);
      Predicate<Object> predicate4 = predicate0.or(predicate1);
      predicate4.negate();
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)54;
      byteArray0[3] = (byte)94;
      byteArray0[2] = (byte)54;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)44;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)54;
      Object object4 = new Object();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)44, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder1.decodeStream();
      assertEquals(2L, base64Decoder1.getLineCount());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.582647532242458
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[1] = (byte)43;
      byteArray0[3] = (byte) (-53);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      byteArray0[5] = (byte)97;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      byteArray0[6] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("Newzgrabber.DirectoryDialog", "6wxQ/6I`eZ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")/EOkg2g-z|x@n]^%%");
      MockFile mockFile1 = new MockFile(".");
      File file0 = mockFile0.getCanonicalFile();
      mockFile1.setExecutable(false);
      mockFile0.mkdirs();
      mockFile0.setExecutable(false);
      mockFile1.renameTo(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      byteArray0[0] = (byte)63;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)44;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      byteArray0[17] = (byte)97;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[6] = (byte)97;
      byteArray0[8] = (byte)63;
      byteArray0[8] = (byte)10;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFile mockFile0 = new MockFile("Newzgrabber.DirectoryDialog", ".");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mmmm,aam");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockFile mockFile1 = new MockFile(".", "Newzgrabber.DirectoryDialog");
      mockFile1.mkdirs();
      mockFile1.toURL();
      File file0 = mockFile0.getCanonicalFile();
      mockPrintStream0.print((double) (byte)63);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      mockFile0.toPath();
      mockFile1.renameTo(file0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.04381662610029
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PrintStream printStream0 = DebugGraphics.logStream();
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, printStream0);
      base64Decoder0.setReader((InputStream) null);
      base64Decoder0.os = (OutputStream) printStream0;
      base64Decoder0.setBegin(false);
      base64Decoder0.LineCount = 0L;
      base64Decoder0.decodeStream();
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.foundbegin = false;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ProgressSet);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Object object1 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object1);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate.isEqual((Object) "Test Frame");
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate2.and(predicate4);
      Predicate<Object> predicate8 = predicate5.or(predicate2);
      predicate6.test(object1);
      predicate2.or(predicate1);
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Predicate.isEqual(object2);
      Predicate<Object> predicate9 = predicate4.negate();
      Object object5 = new Object();
      predicate5.test(predicate7);
      predicate3.test(object5);
      predicate3.or(predicate9);
      Predicate.isEqual((Object) predicate3);
      predicate2.and(predicate7);
      Predicate<Object> predicate10 = predicate0.and(predicate8);
      predicate10.and(predicate8);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      stack0.removeIf(predicate6);
      Object object6 = new Object();
      Object object7 = new Object();
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }
}
