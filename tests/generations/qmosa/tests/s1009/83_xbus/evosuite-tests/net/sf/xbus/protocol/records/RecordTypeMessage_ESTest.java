/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 06:10:28 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.Hashtable;
import java.util.LinkedList;
import javax.xml.namespace.QName;
import javax.xml.rpc.handler.HandlerChain;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.AxisEngine;
import org.apache.axis.MessageContext;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDJAXRPCHandlerInfoChain;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.handlers.HandlerInfoChainFactory;
import org.apache.axis.message.Detail;
import org.apache.axis.message.NamedNodeMapImpl;
import org.apache.axis.message.SOAPHeaderElement;
import org.apache.axis.soap.SOAP11Constants;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLHeadElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLTableCaptionElementImpl;
import org.apache.html.dom.HTMLTableElementImpl;
import org.apache.html.dom.HTMLTableSectionElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      String[] stringArray0 = new String[8];
      handlerInfoChainFactory0.createHandlerChain();
      stringArray0[6] = "org.apache.axis.encoding.ser.BeanDeserializerFactory";
      stringArray0[1] = "wsdlFile";
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      stringArray0[7] = "RPC";
      stringArray0[5] = "streaming";
      stringArray0[6] = "undeployment";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory(linkedList0);
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.setRoles(stringArray0);
      handlerInfoChainFactory1.setRoles(stringArray0);
      handlerInfoChainFactory1.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory1);
      ByteArrayList byteArrayList3 = new ByteArrayList();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.createHandlerChain();
      stringArray0[7] = "faultFlow";
      SOAP11Constants sOAP11Constants0 = new SOAP11Constants();
      QName qName0 = WSDDConstants.QNAME_WSDLFILE;
      handlerInfoChainFactory0.setRoles(stringArray0);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(stringArray0);
      handlerInfoChainFactory0.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory2 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "fault");
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.setReturncode("RC_OK");
      recordTypeMessage0.getResponseText();
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage1.getRequestTextAsXML((XBUSSystem) null);
      RecordTypeMessage recordTypeMessage2 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage1.setRequestText((String) null, (XBUSSystem) null);
      recordTypeMessage2.getRequestText((XBUSSystem) null);
      recordTypeMessage1.getResponseText();
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[2];
      byteArrayList0.toString();
      byteArray0[0] = (byte)4;
      ByteArrayList.createByteArrayList(byteArray0, 5);
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, 2);
      ByteArrayList.createByteArrayList(byteArray0, (byte)16);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "_Z");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      byte[] byteArray0 = new byte[16];
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory((HandlerInfoChainFactory) null);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory1);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDJAXRPCHandlerInfoChain0.deployToRegistry(wSDDDeployment0);
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      HandlerInfoChainFactory handlerInfoChainFactory2 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      handlerInfoChainFactory2.createHandlerChain();
      QName qName0 = new QName("\"?>", "name", "role");
      String[] stringArray0 = new String[0];
      handlerInfoChainFactory2.setRoles(stringArray0);
      HandlerInfoChainFactory handlerInfoChainFactory3 = new HandlerInfoChainFactory();
      handlerInfoChainFactory3.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory2.setRoles(stringArray0);
      handlerInfoChainFactory2.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory4 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("parameter", (XBUSSystem) null, "BSF");
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, 2);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      String[] stringArray0 = new String[5];
      stringArray0[4] = "transport";
      stringArray0[2] = "Handler";
      stringArray0[3] = "http://xml.apache.org/axis/wsdd/providers/handler";
      stringArray0[0] = "provider";
      stringArray0[2] = "faultFlow";
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory((HandlerInfoChainFactory) null);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDJAXRPCHandlerInfoChain0.deployToRegistry(wSDDDeployment0);
      handlerInfoChainFactory0.createHandlerChain();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "chain";
      stringArray1[4] = "header";
      stringArray1[0] = "COM";
      stringArray0[3] = "MSG";
      stringArray0[3] = "wsdlFile";
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.createHandlerChain();
      QName qName0 = new QName("chain", "class", "attachment");
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory2 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("operation", (XBUSSystem) null, "wsdlFile");
      recordTypeMessage0.setResponseObject(byteArrayList1, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.removeParameter("serializer");
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory2 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      handlerInfoChainFactory2.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory3 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      HandlerChain handlerChain0 = handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      HandlerInfoChainFactory handlerInfoChainFactory4 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      handlerInfoChainFactory4.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory3.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory2);
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory4.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory5 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, (String) null);
      try { 
        recordTypeMessage0.setRequestObject(handlerChain0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.apache.axis.handlers.HandlerChainImpl cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z_oy&3=k6wf].c8w");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z_oy&3=k6wf].c8w");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("!E~<", (XBUSSystem) null, "z_oy&3=k6wf].c8w");
      try { 
        recordTypeMessage0.setRequestObject("RMI", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getVersion();
      hTMLDocumentImpl0.createRange();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "1.0");
      hTMLTableElementImpl0.getClassName();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      HTMLTableCaptionElementImpl hTMLTableCaptionElementImpl0 = new HTMLTableCaptionElementImpl(hTMLDocumentImpl0, "!x 6Kq%#wToMC)`/");
      NodeFilter nodeFilter1 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      hTMLDocumentImpl0.createNodeIterator((Node) hTMLTableCaptionElementImpl0, (short)9, nodeFilter1);
      attrNSImpl0.isSameNode((Node) null);
      HTMLTableSectionElementImpl hTMLTableSectionElementImpl0 = new HTMLTableSectionElementImpl(hTMLDocumentImpl0, "!x 6Kq%#wToMC)`/");
      hTMLDocumentImpl0.createNodeIterator((Node) pSVIDocumentImpl0, (short)9, nodeFilter0);
      hTMLTableElementImpl0.getAttributes();
      hTMLTableElementImpl0.lookupPrefix("1.0");
      hTMLDocumentImpl0.isEqualNode(attrNSImpl0);
      hTMLDocumentImpl0.getUserData((Node) hTMLTableElementImpl0, "!x 6Kq%#wToMC)`/");
      NodeFilter nodeFilter2 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "!x 6Kq%#wToMC)`/");
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "!x 6Kq%#wToMC)`/");
      hTMLDocumentImpl0.createTreeWalker((Node) pSVIDocumentImpl0, (short)9, nodeFilter2);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      hTMLDocumentImpl0.getPrefix();
      attrNSImpl0.getBaseURI();
      NamedNodeMapImpl namedNodeMapImpl2 = new NamedNodeMapImpl();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false);
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl(false, false);
      DeferredDocumentImpl deferredDocumentImpl4 = new DeferredDocumentImpl();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("!x 6Kq%#wToMC)`/", (XBUSSystem) null, "!x 6Kq%#wToMC)`/");
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("role");
      mockPrintWriter0.print((long) (byte) (-21));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.close();
      SerializationContext serializationContext0 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      mockPrintWriter0.print('>');
      SerializationContext serializationContext1 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext2 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext3 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext4 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext5 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext6 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      serializationContext6.isEncoded();
      QName qName0 = WSDDConstants.QNAME_ARRAYMAPPING;
      qName0.equals(serializationContext1);
      qName0.getPrefix();
      serializationContext1.qName2String(qName0, true);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDDeployment0.getEngine();
      MessageContext.getCurrentContext();
      wSDDDeployment0.getTransports();
      SerializationContext serializationContext7 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext8 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext9 = new SerializationContext(mockPrintWriter0, (MessageContext) null);
      serializationContext9.setItemQName(wSDDDeployment0.QNAME_JAXRPC_HANDLERINFO);
      wSDDDeployment0.getServiceByNamespaceURI("attachments.directory");
      SerializationContext serializationContext10 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      serializationContext7.setItemQName(wSDDJAXRPCHandlerInfoChain0.QNAME_DOC);
      serializationContext4.isEncoded();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("http://xml.apache.org/axis/wsdd/providers/java", (XBUSSystem) null, "securityProvider");
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.removeParameter("serializer");
      SOAPHeaderElement sOAPHeaderElement0 = new SOAPHeaderElement("deployment", "encodingStyle");
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory2 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      String[] stringArray0 = new String[8];
      stringArray0[1] = "http://xml.apache.org/axis/wsdd/providers/handler";
      stringArray0[5] = "soapActorName";
      stringArray0[2] = "handler";
      stringArray0[1] = "itemType";
      stringArray0[5] = "Handler";
      stringArray0[6] = "org.apache.axis.encoding.ser.ArraySerializerFactory";
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory3 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("deployment", (XBUSSystem) null, "pivot");
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-1);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, 3000);
      Integer integer0 = new Integer((byte) (-1));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList2.iterator();
      recordTypeMessage0.setRequestObject(byteArrayList2, (XBUSSystem) null);
      System.setCurrentTimeMillis((byte) (-1));
      byteArrayList1.addAll(byteArrayList0);
      System.setCurrentTimeMillis((byte) (-1));
      Hashtable<Object, String> hashtable0 = new Hashtable<Object, String>();
      byteArrayList1.add(byteArray0);
      Hashtable<ByteArrayList, Integer> hashtable1 = new Hashtable<ByteArrayList, Integer>();
      System.setCurrentTimeMillis((-2054L));
      System.setCurrentTimeMillis((byte)4);
      System.setCurrentTimeMillis(803L);
      System.setCurrentTimeMillis((-2054L));
      System.setCurrentTimeMillis(695L);
      System.setCurrentTimeMillis((-2054L));
      System.setCurrentTimeMillis(2328L);
      System.setCurrentTimeMillis((byte)4);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.removeParameter("serializer");
      SOAPHeaderElement sOAPHeaderElement0 = new SOAPHeaderElement("deployment", "encodingStyle");
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory2 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory2.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory3 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      String[] stringArray0 = new String[10];
      stringArray0[1] = "http://xml.apache.org/axis/wsdd/providers/handler";
      stringArray0[5] = "action";
      stringArray0[2] = "handler";
      stringArray0[1] = "Handler";
      stringArray0[2] = "Handler";
      stringArray0[4] = "handler";
      stringArray0[6] = "org.apache.axis.encoding.ser.ArraySerializerFactory";
      handlerInfoChainFactory3.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory3.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory1);
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory4 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("deployment", (XBUSSystem) null, "pivot");
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      DocumentImpl documentImpl0 = new DocumentImpl();
      String string0 = "net.sf.xbus.protocol.records.RecordTypeParser";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sf.xbus.protocol.records.RecordTypeParser");
      recordTypeMessage0.setResponseDocument(documentImpl0, (XBUSSystem) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte) (-75);
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, (byte) (-75));
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      System.setCurrentTimeMillis((byte) (-75));
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-75);
      byteArray1[1] = (byte) (-75);
      byteArray1[2] = (byte)39;
      byteArray1[3] = (byte) (-75);
      byteArray1[4] = (byte) (-75);
      byteArray1[5] = (byte) (-75);
      byteArray1[6] = (byte) (-75);
      ByteArrayList.createByteArrayList(byteArray1, (byte) (-75));
      Hashtable<Object, String> hashtable0 = new Hashtable<Object, String>();
      byteArrayList0.add(byteArray0);
      Hashtable<ByteArrayList, Integer> hashtable1 = new Hashtable<ByteArrayList, Integer>();
      FileProvider fileProvider0 = new FileProvider("Lc)c_8,rM");
      fileProvider0.getDeployment();
      Detail detail0 = new Detail();
      // Undeclared exception!
      try { 
        detail0.getQName();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      pSVIDocumentImpl0.normalize();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getVersion();
      hTMLDocumentImpl0.getForms();
      hTMLDocumentImpl0.createRange();
      hTMLDocumentImpl0.setNodeValue("");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "");
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      hTMLTableElementImpl0.getCaption();
      attrNSImpl0.isSameNode((Node) null);
      hTMLDocumentImpl0.createNodeIterator((Node) pSVIDocumentImpl0, (short) (-1), nodeFilter0);
      hTMLTableElementImpl0.getAttributes();
      hTMLDocumentImpl0.isEqualNode(attrNSImpl0);
      hTMLDocumentImpl0.getUserData((Node) hTMLTableElementImpl0, "x 6Kq%#w ow MC)B/");
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "x 6Kq%#w ow MC)B/");
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "x 6Kq%#w ow MC)B/");
      hTMLDocumentImpl0.getDoctype();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false, false);
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl(false);
      CoreDocumentImpl.isXMLName("x 6Kq%#w ow MC)B/", false);
      deferredDocumentImpl1.hasAttributes();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("1.0", (XBUSSystem) null, "x 6Kq%#w ow MC)B/");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl2, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("role");
      mockPrintWriter0.print((long) (byte) (-21));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.close();
      SerializationContext serializationContext0 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      mockPrintWriter0.print('>');
      SerializationContext serializationContext1 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext2 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext3 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext4 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext5 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext6 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      serializationContext6.isEncoded();
      QName qName0 = WSDDConstants.QNAME_ARRAYMAPPING;
      qName0.equals(serializationContext1);
      qName0.getPrefix();
      qName0.getNamespaceURI();
      serializationContext1.qName2String(qName0, false);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDDeployment0.getEngine();
      MessageContext messageContext0 = new MessageContext((AxisEngine) null);
      wSDDDeployment0.getTransports();
      SerializationContext serializationContext7 = new SerializationContext(mockPrintWriter1, messageContext0);
      SerializationContext serializationContext8 = new SerializationContext(mockPrintWriter1, (MessageContext) null);
      SerializationContext serializationContext9 = new SerializationContext(mockPrintWriter0, (MessageContext) null);
      serializationContext9.setItemQName(wSDDDeployment0.QNAME_JAXRPC_HANDLERINFO);
      wSDDDeployment0.getServiceByNamespaceURI("attachments.directory");
      mockPrintWriter0.print((String) null);
      serializationContext9.isEncoded();
      wSDDDeployment0.writeToContext(serializationContext0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("itemQName", (XBUSSystem) null, "BSF");
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      pSVIDocumentImpl0.normalize();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getVersion();
      hTMLDocumentImpl0.getImages();
      hTMLDocumentImpl0.createRange();
      hTMLDocumentImpl0.setNodeValue("I 6Kq%#w ow NMCiB/");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "1.0");
      hTMLTableElementImpl0.getAttributes();
      hTMLDocumentImpl0.isEqualNode(attrNSImpl0);
      hTMLDocumentImpl0.getUserData((Node) hTMLTableElementImpl0, "I 6Kq%#w ow NMCiB/");
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "I 6Kq%#w ow NMCiB/");
      hTMLDocumentImpl0.getXmlStandalone();
      hTMLDocumentImpl0.createTreeWalker((Node) pSVIDocumentImpl0, (short) (-1), nodeFilter0);
      hTMLDocumentImpl0.getDoctype();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false, true);
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(false, false);
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl(false, true);
      DocumentImpl documentImpl0 = new DocumentImpl();
      CoreDocumentImpl.isXMLName("1.0", true);
      documentImpl0.hasAttributes();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      try { 
        recordTypeMessage0.setResponseObject(pipedInputStream0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.io.PipedInputStream cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z_oy&3=k6wf].c8w");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z_oy&3=k6wf].c8w");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("!E~<", (XBUSSystem) null, "z_oy&3=k6wf].c8w");
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      wSDDJAXRPCHandlerInfoChain0.removeParameter("serializer");
      SOAPHeaderElement sOAPHeaderElement0 = new SOAPHeaderElement("deployment", "encodingStyle");
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory2 = wSDDJAXRPCHandlerInfoChain0.getHandlerChainFactory();
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory2.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory1.createHandlerChain();
      QName qName0 = new QName("role", "`3Q3H\"k;3h:1M+ -", "chain");
      handlerInfoChainFactory2.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      handlerInfoChainFactory1.setRoles((String[]) null);
      handlerInfoChainFactory2.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory3 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("value", (XBUSSystem) null, "org.apache.axis.encoding.ser.BeanSerializerFactory");
      try { 
        recordTypeMessage0.setResponseObject(handlerInfoChainFactory3, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.apache.axis.handlers.HandlerInfoChainFactory cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      HandlerInfoChainFactory handlerInfoChainFactory0 = new HandlerInfoChainFactory();
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      HandlerInfoChainFactory handlerInfoChainFactory1 = new HandlerInfoChainFactory();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      String[] stringArray0 = new String[5];
      stringArray0[4] = "transport";
      stringArray0[2] = "Handler";
      stringArray0[3] = "http://xml.apache.org/axis/wsdd/providers/handler";
      stringArray0[0] = "provider";
      stringArray0[2] = "faultFlow";
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory((HandlerInfoChainFactory) null);
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDJAXRPCHandlerInfoChain0.deployToRegistry(wSDDDeployment0);
      handlerInfoChainFactory0.createHandlerChain();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "chain";
      stringArray1[4] = "header";
      stringArray1[0] = "COM";
      stringArray0[3] = "MSG";
      stringArray0[3] = "wsdlFile";
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory0.createHandlerChain();
      wSDDJAXRPCHandlerInfoChain0.setHandlerChainFactory(handlerInfoChainFactory0);
      handlerInfoChainFactory0.createHandlerChain();
      QName qName0 = new QName("chain", "class", "attachment");
      handlerInfoChainFactory0.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.createHandlerChain();
      handlerInfoChainFactory1.setRoles(wSDDJAXRPCHandlerInfoChain0.scopeStrings);
      handlerInfoChainFactory1.createHandlerChain();
      HandlerInfoChainFactory handlerInfoChainFactory2 = new HandlerInfoChainFactory();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("operation", (XBUSSystem) null, "wsdlFile");
      recordTypeMessage0.setResponseObject(byteArrayList1, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      hTMLDocumentImpl0.getVersion();
      hTMLDocumentImpl0.getAnchors();
      hTMLDocumentImpl0.createRange();
      hTMLDocumentImpl0.setNodeValue("4~&c?1^q!xmt");
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      HTMLTableElementImpl hTMLTableElementImpl0 = new HTMLTableElementImpl(hTMLDocumentImpl0, "4~&c?1^q!xmt");
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      hTMLTableElementImpl0.getLang();
      hTMLDocumentImpl0.getApplets();
      attrNSImpl0.isSameNode((Node) null);
      hTMLTableElementImpl0.setFrame("<");
      hTMLTableElementImpl0.getAttributes();
      hTMLDocumentImpl0.isEqualNode(attrNSImpl0);
      hTMLDocumentImpl0.getUserData((Node) hTMLTableElementImpl0, "`");
      NodeFilter nodeFilter1 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      HTMLHeadElementImpl hTMLHeadElementImpl0 = new HTMLHeadElementImpl(hTMLDocumentImpl0, "`");
      hTMLDocumentImpl0.item((short) (-1));
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(false, false);
      deferredDocumentImpl0.getReadOnly();
      deferredDocumentImpl0.getDomConfig();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("1.0", (XBUSSystem) null, "`");
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)17;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)102;
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 7);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayList.createByteArrayList(byteArray0, (-1313));
      byteArrayList0.iterator();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      QName qName0 = WSDDConstants.QNAME_OPERATION;
      qName0.getNamespaceURI();
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      wSDDDeployment0.getEngine();
      wSDDDeployment0.getDeployedServices();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("enableNamespacePrefixOptimization", (XBUSSystem) null, "http://xml.apache.org/axis/wsdd/");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("attachments.implementation", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9b");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "z_oy&3=k6wf].c8w";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z_oy&3=k6wf].c8w");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z_oy&3=k6wf].c8w");
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("Vms?9~vWK3", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-1);
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, 3000);
      Integer integer0 = new Integer((byte) (-1));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList2.iterator();
      recordTypeMessage0.setRequestObject(byteArrayList2, (XBUSSystem) null);
      System.setCurrentTimeMillis((byte) (-1));
      byteArrayList1.addAll(byteArrayList0);
      System.setCurrentTimeMillis((byte) (-1));
      Hashtable<Object, String> hashtable0 = new Hashtable<Object, String>();
      byteArrayList1.add(byteArray0);
      Hashtable<ByteArrayList, Integer> hashtable1 = new Hashtable<ByteArrayList, Integer>();
      System.setCurrentTimeMillis((-2054L));
      System.setCurrentTimeMillis((byte)4);
      System.setCurrentTimeMillis(803L);
      System.setCurrentTimeMillis((-2054L));
      long long0 = 695L;
      System.setCurrentTimeMillis(695L);
      System.setCurrentTimeMillis((-2054L));
      System.setCurrentTimeMillis(2328L);
      System.setCurrentTimeMillis((byte)4);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 4);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
}
