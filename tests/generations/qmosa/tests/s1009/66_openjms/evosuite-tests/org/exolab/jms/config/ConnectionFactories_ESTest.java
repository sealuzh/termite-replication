/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 06:11:06 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("org.exolab.castor.mappig.loader.J1CollectionHandlers", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[24];
      charArray0[3] = '\u0000';
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      parserAdapter0.setContentHandler(xMLReaderAdapter4);
      parserAdapter0.ignorableWhitespace(charArray0, 'Y', 'Y');
      charArray0[5] = 'Y';
      charArray0[8] = '\\';
      xMLReaderAdapter3.ignorableWhitespace(charArray0, '\\', (-1397));
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("LX'Frf", "LX'Frf", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.endPrefixMapping("org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      defaultHandler2_0.characters(charArray0, 29, (-3061));
      defaultHandler2_0.ignorableWhitespace(charArray0, 27, 29);
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[20];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(16, (TopicConnectionFactory) null);
      assertEquals(20, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[8];
      xAConnectionFactoryArray0[0] = null;
      xAConnectionFactoryArray0[1] = null;
      xAConnectionFactoryArray0[2] = null;
      xAConnectionFactoryArray0[3] = null;
      xAConnectionFactoryArray0[4] = null;
      xAConnectionFactoryArray0[5] = null;
      xAConnectionFactoryArray0[6] = null;
      xAConnectionFactoryArray0[7] = null;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.removeXAConnectionFactory((XAConnectionFactory) null);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("org.exolab.castor.mappig.loader.J1CollectionHandlers", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[24];
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      parserAdapter0.setContentHandler(xMLReaderAdapter4);
      parserAdapter0.ignorableWhitespace(charArray0, 'Y', 'Y');
      charArray0[5] = 'Y';
      charArray0[8] = '\\';
      xMLReaderAdapter3.ignorableWhitespace(charArray0, '\\', (-1397));
      parserAdapter0.characters(charArray0, '\\', '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("LX'Frf", "LX'Frf", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.endPrefixMapping("org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      defaultHandler2_0.characters(charArray0, 29, 'Y');
      defaultHandler2_0.ignorableWhitespace(charArray0, 27, 29);
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[20];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.addConnectionFactory(connectionFactory0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('0');
      CharBuffer.wrap((CharSequence) "+", 0, 1);
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('G');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i`q_vh_Ze9`c1&VW!");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i`q_vh_Ze9`c1&VW!");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      int int0 = 0;
      connectionFactories0.getXAQueueConnectionFactory(0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[8];
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionFactories0.getQueueConnectionFactory(5);
      connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(10, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[17];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(12);
      connectionFactories0.setXAConnectionFactory(12, xAConnectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Rp3DAR?Axx|3[C");
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#s[hN4fC7/t~");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[6] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      charBuffer0.mark();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(2, connectionFactories0.getXATopicConnectionFactoryCount());
      assertEquals(7, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = false;
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=@eA|d");
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)6;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory1;
      XAQueueConnectionFactory xAQueueConnectionFactory2 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory2;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[7] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertEquals(9, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.addConnectionFactory(connectionFactory0);
      StringReader stringReader0 = new StringReader("M:(N\"([0h.");
      connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      connectionFactories0.getTopicConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[3];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      assertEquals(3, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      assertEquals("", stringWriter1.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      mockThrowable0.getStackTrace();
      mockException0.initCause(mockThrowable0);
      MockThrowable mockThrowable1 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.fillInStackTrace();
      mockThrowable0.printStackTrace();
      mockException0.printStackTrace();
      MockThrowable mockThrowable2 = new MockThrowable("n<m5");
      StackTraceElement stackTraceElement0 = new StackTraceElement("3", "", ")Ko", (-707));
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "", "N+0yXfAN|.", (-1278));
      Locator2Impl locator2Impl0 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[21];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertEquals(20, connectionFactories0.getTopicConnectionFactoryCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("XMLFieldDesciptor: ", "XMLFieldDesciptor: ");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[24];
      charArray0[23] = 'Y';
      charArray0[3] = 'Y';
      charArray0[5] = 'S';
      charArray0[8] = 'S';
      xMLReaderAdapter3.ignorableWhitespace(charArray0, 'S', 'Y');
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("LX'rf", "xYn=kG!sc", "Yq*aKfO&lXh$");
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.endPrefixMapping("Yq*aKfO&lXh$");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      defaultHandler2_0.characters(charArray0, 29, (-3061));
      defaultHandler2_0.ignorableWhitespace(charArray0, 1, 29);
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[20];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(20, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl1.characters((char[]) null, 6, 6);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.getContentHandler();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl4.getDTDHandler();
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl1.resolveEntity("", "");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.setErrorHandler(xMLFilterImpl1);
      xMLFilterImpl1.characters((char[]) null, 10, 6);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl6.setErrorHandler(xMLFilterImpl3);
      xMLReaderAdapter0.setDTDHandler(xMLFilterImpl6);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getSystemId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        connectionFactories0.addXAConnectionFactory(842, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 842, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5094656225315988
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray1 = connectionFactories0.getXAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories1.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray1);
      assertEquals(7, connectionFactories1.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      CharBuffer.wrap(charArray0, 1, 1);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.addConnectionFactory(connectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KI$#|_K:");
      CharBuffer.wrap((CharSequence) "KI$#|_K:");
      ConnectionFactory connectionFactory1 = connectionFactories0.getConnectionFactory(1);
      try { 
        connectionFactories0.setConnectionFactory((-314), connectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      xAConnectionFactoryArray0[1] = xAConnectionFactory1;
      xAConnectionFactoryArray0[2] = xAConnectionFactory0;
      xAConnectionFactoryArray0[3] = xAConnectionFactory0;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory0;
      xAConnectionFactoryArray0[6] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      StringWriter stringWriter3 = stringWriter1.append('R');
      stringWriter1.write(0);
      StringWriter stringWriter4 = new StringWriter(508);
      stringWriter3.write((-415));
      stringWriter4.append('m');
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter(0);
      StringWriter stringWriter8 = new StringWriter();
      stringWriter7.append('m');
      StringWriter stringWriter9 = new StringWriter(508);
      StringWriter stringWriter10 = new StringWriter(762);
      StringWriter stringWriter11 = new StringWriter();
      StringWriter stringWriter12 = new StringWriter();
      StringWriter stringWriter13 = new StringWriter();
      stringWriter12.close();
      connectionFactories0.getXAConnectionFactory();
      try { 
        connectionFactories0.getConnectionFactory((-415));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("org.exolab.caItor.mappig.loader.J1CollectionHandlers", "org.exolab.caItor.mappig.loader.J1CollectionHandlers");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[38];
      charArray0[3] = '\u0000';
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      parserAdapter0.setContentHandler(xMLReaderAdapter4);
      parserAdapter0.ignorableWhitespace(charArray0, 'Y', 'Y');
      charArray0[5] = 'Y';
      xMLReaderAdapter3.ignorableWhitespace(charArray0, '\\', (-1419));
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("2kRD={-~aOD!E", "2kRD={-~aOD!E", "org.exolab.caItor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDocumentHandler((DocumentHandler) null);
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 'Y', 'Y');
      xMLReaderAdapter2.endPrefixMapping("org.exolab.caItor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      defaultHandler2_0.ignorableWhitespace(charArray0, 27, (-1419));
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter1.endDocument();
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", (Throwable) null);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable("javC.u;il.Hashtable");
      mockException0.getStackTrace();
      MockThrowable mockThrowable2 = (MockThrowable)mockThrowable0.fillInStackTrace();
      mockException0.getSuppressed();
      MockThrowable mockThrowable3 = new MockThrowable("javC.u;il.Hashtable");
      MockThrowable.getDefaultStackTrace();
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "javC.u;il.Hashtable", "OD>L 7q#ba!-.%|", 2086);
      mockThrowable2.setOriginForDelegate(stackTraceElement0);
      MockThrowable mockThrowable4 = new MockThrowable();
      mockThrowable2.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[12];
      stackTraceElementArray1[0] = stackTraceElement1;
      stackTraceElementArray1[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement1;
      StackTraceElement stackTraceElement3 = new StackTraceElement("javC.u;il.Hashtable", "3", "3", 4226);
      stackTraceElementArray1[3] = stackTraceElement3;
      stackTraceElementArray1[4] = stackTraceElement2;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("XMLFieldDepciptor: ", "XMLFieldDepciptor: ");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[24];
      charArray0[23] = 'Y';
      charArray0[3] = 'Y';
      charArray0[5] = 'S';
      charArray0[8] = 'S';
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("LX'rf", "xYn=kG!sc", "Yq*aKfO&lXh$");
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.endPrefixMapping("Yq*aKfO&lXh$");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      defaultHandler2_0.characters(charArray0, 29, (-3061));
      defaultHandler2_0.ignorableWhitespace(charArray0, 22, 29);
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[10];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory1 = connectionFactories0.getQueueConnectionFactory(0);
      try { 
        connectionFactories0.setQueueConnectionFactory(890, queueConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fG");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('$');
      stringWriter0.append('$');
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "fG");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringWriter1.write("fG");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertNull(xAQueueConnectionFactory0.getName());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[10];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
      assertEquals(10, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("Dfp#h*ki5gQFtgl");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl1.getValue("fv/^~?e-P7@EypRzt", "3r-CS");
      attributes2Impl0.getValue("3r-CS");
      attributes2Impl1.getQName((-13));
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl1.getType((String) null, "3r-CS");
      attributes2Impl0.clear();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex((String) null, (String) null);
      attributes2Impl0.getURI((-13));
      attributesImpl0.getValue("Iy0LO", "RZ?%#.spzQxeX>P0");
      attributes2Impl1.clear();
      attributesImpl0.addAttribute("Iy0LO", "RZ?%#.spzQxeX>P0", "fv/^~?e-P7@EypRzt", "Iy0LO", "");
      attributes2Impl1.getValue((String) null, (String) null);
      attributesImpl0.getLength();
      attributes2Impl0.addAttribute("", (String) null, "\r`dLZ0Sr}mf&/??|GU", (String) null, (String) null);
      attributes2Impl1.getIndex((String) null);
      attributesImpl0.setAttributes(attributes2Impl2);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      attributesImpl1.getValue(1212);
      attributesImpl1.getLocalName(1330);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.clearXAQueueConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      try { 
        connectionFactories0.marshal((Writer) stringWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      MockException mockException0 = new MockException("java.util.Hashtable");
      mockException0.getLocalizedMessage();
      MockThrowable mockThrowable0 = new MockThrowable("java.util.Hashtable");
      mockException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = mockException0.getStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("vRi&1", "I&", "java.util.Hashtable", (-707));
      MockThrowable mockThrowable1 = new MockThrowable("n<m5");
      StackTraceElement stackTraceElement1 = new StackTraceElement("vRi&1", "7GU*mEXX&yw", "n<m5", (-707));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[0] = '=';
      parserAdapter0.characters(charArray0, 836, 111);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray1 = new char[3];
      charArray1[0] = 'o';
      charArray1[1] = ' ';
      charArray1[2] = ' ';
      parserAdapter0.ignorableWhitespace(charArray1, 1884, 7);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      MockException mockException0 = new MockException();
      MockException mockException1 = new MockException(mockException0);
      MockException mockException2 = new MockException(">YFjUA/BKMm8", mockException0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(7, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      charBuffer0.append('\'');
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charBuffer0.append((CharSequence) stringBuffer0);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charBuffer1.get(charArray0, 1, 4);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(4, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      xMLFilterImpl2.endElement("57s/=5_oEQ'Br>", "57s/=5_oEQ'Br>", "57s/=5_oEQ'Br>");
      xMLFilterImpl1.characters((char[]) null, 6, 6);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl0.getContentHandler();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl3.getErrorHandler();
      xMLFilterImpl4.getDTDHandler();
      xMLFilterImpl0.characters((char[]) null, 6, 108);
      xMLFilterImpl4.ignorableWhitespace((char[]) null, (-242), 6);
      xMLFilterImpl2.notationDecl("57s/=5_oEQ'Br>", "j2Yi(lUx", "57s/=5_oEQ'Br>");
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl5.setErrorHandler((ErrorHandler) null);
      xMLFilterImpl0.skippedEntity("j2Yi(lUx");
      InputSource inputSource0 = new InputSource("j2Yi(lUx");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl3.setEntityResolver(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl8.setErrorHandler(xMLFilterImpl1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      xMLFilterImpl8.setErrorHandler(xMLFilterImpl5);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[5];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactoryCount();
      MockThrowable mockThrowable0 = new MockThrowable("");
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable("");
      Throwable throwable0 = mockThrowable1.fillInStackTrace();
      MockThrowable mockThrowable2 = new MockThrowable("");
      StackTraceElement[] stackTraceElementArray0 = MockThrowable.getDefaultStackTrace();
      mockThrowable1.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      mockThrowable2.getStackTrace();
      mockThrowable2.getSuppressed();
      mockThrowable2.getStackTrace();
      MockException mockException0 = new MockException("", throwable0);
      mockException0.printStackTrace();
      int int0 = 4226;
      String string0 = null;
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement("m$A+r.5", (String) null, "m$A+r.5", 4226);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Method name is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-314), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.setXAQueueConnectionFactory(36, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "'Z";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Marshaller.enableDebug = false;
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(12);
      stringWriter2.write((-25));
      stringWriter0.append((CharSequence) null);
      stringWriter0.close();
      stringWriter0.close();
      CharBuffer.allocate(1);
      char[] charArray0 = new char[7];
      charArray0[0] = '';
      charArray0[1] = 'v';
      stringWriter2.write((String) null);
      connectionFactories0.getXAConnectionFactoryCount();
      charArray0[2] = 'b';
      charArray0[3] = 'i';
      charArray0[4] = 'H';
      charArray0[5] = '-';
      charArray0[6] = '1';
      stringWriter2.write(charArray0, 1, 1);
      stringWriter2.append('%');
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = null;
      try {
        stringWriter4 = new StringWriter((-25));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.353363451324745
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      connectionFactories0.isValid();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      try { 
        connectionFactories0.getXATopicConnectionFactory(1327);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.endElement("57s/=5_oEQ'Br>", "57s/=5_oEQ'Br>", "57s/=5_oEQ'Br>");
      xMLFilterImpl1.characters((char[]) null, 6, 6);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.getContentHandler();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl4.getDTDHandler();
      xMLFilterImpl1.characters((char[]) null, 6, 6);
      xMLFilterImpl4.notationDecl("j2Yi(lUx", "57s/=5_oEQ'Br>", "57s/=5_oEQ'Br>");
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "9lGUp#L56dL64", "dly3a.z]!`~NmB", (-174));
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "", (-2119));
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setEncoding("");
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Marshaller.enableDebug = false;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U");
      boolean boolean0 = connectionFactories0.isValid();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[25];
      charArray0[1] = 'v';
      charArray0[23] = 'd';
      charArray0[3] = 'd';
      charArray0[4] = 'V';
      charArray0[5] = 'S';
      charArray0[6] = 'm';
      charArray0[7] = 'v';
      charArray0[8] = '^';
      xMLReaderAdapter3.ignorableWhitespace(charArray0, 'S', 'd');
      parserAdapter0.characters(charArray0, (-3061), 29);
      xMLReaderAdapter3.endElement("'L&Xf", "xYn=kG!sc", "?Cxg");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_1);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.processingInstruction("org.exolab.caItor.mappig.loader.J1CollectionHandlers", "org.exolab.caItor.mappig.loader.J1CollectionHandlers");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      char[] charArray0 = new char[38];
      charArray0[3] = 'Y';
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter1.processingInstruction((String) null, (String) null);
      parserAdapter0.setContentHandler(xMLReaderAdapter3);
      parserAdapter0.ignorableWhitespace(charArray0, 'Y', 'Y');
      charArray0[5] = 'Y';
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 'P', 'Y');
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter2.endElement("2kRD={-~aOD!E", "2kRD={-~aOD!E", "org.exolab.caItor.mappig.loader.J1CollectionHandlers");
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter4.setDocumentHandler((DocumentHandler) null);
      xMLReaderAdapter4.ignorableWhitespace(charArray0, 3036, 3036);
      xMLReaderAdapter2.endPrefixMapping("2kRD={-~aOD!E");
      xMLReaderAdapter0.endDocument();
      xMLReaderAdapter3.endPrefixMapping((String) null);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter1.endDocument();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.marshal((ContentHandler) xMLReaderAdapter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "_name";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_name");
      try { 
        connectionFactories0.setXAConnectionFactory(1, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      StringWriter stringWriter0 = new StringWriter(90);
      StringWriter stringWriter1 = new StringWriter(90);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[7];
      charArray0[0] = 'w';
      charArray0[1] = '`';
      charArray0[2] = '.';
      charArray0[3] = 'C';
      charArray0[4] = '8';
      charArray0[5] = '[';
      charArray0[6] = 'B';
      stringWriter1.write(charArray0);
      stringWriter1.write((-1));
      connectionFactories0.getXATopicConnectionFactory();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-560));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      boolean boolean0 = connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#s[hN4fC7/t~");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=@eA|d");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Marshaller.enableDebug = true;
      int int0 = 0;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[3];
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      charArray0[0] = '(';
      CharBuffer.allocate(0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = null;
      try {
        stringWriter3 = new StringWriter((-1609));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray0 = new char[9];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      charArray0[2] = '\"';
      charArray0[3] = '\"';
      charArray0[4] = '\"';
      charArray0[5] = '\"';
      charArray0[6] = '\"';
      charArray0[7] = '\"';
      charArray0[8] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      charBuffer0.append('\'');
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      charBuffer0.append((CharSequence) stringBuffer0);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charBuffer1.get(charArray0, 1, 4);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable("javC.u;il.Hashtable");
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      StackTraceElement[] stackTraceElementArray1 = mockThrowable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", (-707));
      MockThrowable mockThrowable4 = new MockThrowable("javC.u;il.Hashtable");
      StackTraceElement[] stackTraceElementArray2 = new StackTraceElement[15];
      stackTraceElementArray2[0] = stackTraceElement0;
      stackTraceElementArray2[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCJX", "javC.u;il.Hashtable", (-707));
      stackTraceElementArray2[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "N+0yXfAN|.", (-707));
      stackTraceElementArray2[3] = stackTraceElement2;
      stackTraceElementArray2[4] = stackTraceElement0;
      stackTraceElementArray2[0] = stackTraceElement0;
      Locator2Impl locator2Impl0 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory((-1), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "UnicodeBig";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-2034), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = "f";
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories1.addXAConnectionFactory(xAConnectionFactory0);
      StringWriter stringWriter0 = new StringWriter(5);
      int int0 = (-1051);
      CharBuffer.allocate(28);
      CharBuffer charBuffer0 = null;
      int int1 = 42;
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) null, (-1051), 2534);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      xATopicConnectionFactory0.setName("");
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      Marshaller.enableDebug = true;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      xATopicConnectionFactory0.setName("");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[5];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactory0.setName("");
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[10];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      MockException mockException0 = new MockException();
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable("javC.u;il.Hashtable");
      Throwable throwable0 = mockThrowable0.fillInStackTrace();
      mockException0.getSuppressed();
      mockException0.addSuppressed(mockThrowable1);
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      MockThrowable.getDefaultStackTrace();
      MockThrowable.getDefaultStackTrace();
      MockThrowable.getDefaultStackTrace();
      MockThrowable.replacement_getStackTrace(mockThrowable0);
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      mockException0.addSuppressed(mockThrowable2);
      mockException0.addSuppressed(mockThrowable2);
      MockThrowable mockThrowable3 = new MockThrowable();
      throwable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", ";:7p[gma&AmX", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[12];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", ";:7p[gma&AmX", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", ";:7p[gma&AmX", ";:7p[gma&AmX", 4226);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[10];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      try { 
        connectionFactories0.getQueueConnectionFactory((-23));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXAQueueConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('G');
      int int0 = 2539;
      int int1 = (-1);
      stringWriter0.write((-1));
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter(2539);
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = new StringWriter();
      StringWriter stringWriter8 = null;
      try {
        stringWriter8 = new StringWriter((-1609));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MockException mockException0 = new MockException("java.util.Hashtable");
      mockException0.getLocalizedMessage();
      MockThrowable mockThrowable0 = new MockThrowable("vRi&1", mockException0);
      mockException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("vRi&1", "3", "java.util.Hashtable", (-707));
      MockThrowable mockThrowable1 = new MockThrowable("n<m5");
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("vRi&1", "7GU*mEXX&yw", "n<m5", (-707));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      assertEquals(0, queueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      int int0 = 1;
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      StringReader stringReader0 = new StringReader("+");
      connectionFactories0.getXATopicConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(1, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.addConnectionFactory(connectionFactory0);
      int int0 = 1;
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      CharBuffer.wrap((CharSequence) charBuffer0);
      StringReader stringReader0 = new StringReader("+");
      connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.setConnectionFactory(1, connectionFactory0);
      connectionFactories0.getTopicConnectionFactory();
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 606, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("Qs+9JWX(tGyM");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl1.getValue("IEDNm~O=m", "3-w'");
      attributes2Impl0.getValue("3-w'");
      attributes2Impl0.getValue((-230));
      attributes2Impl1.getQName(3);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl1.getType((String) null, "3-w'");
      attributes2Impl0.clear();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex((String) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXATopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-3284), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      Marshaller.enableDebug = true;
      Marshaller.enableDebug = true;
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      mockThrowable0.getStackTrace();
      mockException0.getCause();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      MockThrowable mockThrowable4 = new MockThrowable("javC.u;il.Hashtable");
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[15];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCJX", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "N+0yXfAN|.", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement1;
      stackTraceElementArray1[0] = stackTraceElement0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(4226);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      int int0 = 1;
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionFactories0.addTopicConnectionFactory(1, topicConnectionFactory0);
      connectionFactories0.getTopicConnectionFactory(1);
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories0.getConnectionFactoryCount();
      int int1 = (-1113);
      try { 
        connectionFactories0.getXAConnectionFactory((-1113));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl1.getColumnNumber();
      locatorImpl1.getSystemId();
      xMLReaderAdapter3.setDocumentLocator(locatorImpl1);
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[1] = '4';
      charArray0[2] = 'S';
      parserAdapter0.characters(charArray0, (-3061), 14);
      xMLReaderAdapter3.endElement("", "xYn=kG!sc", "");
      xMLReaderAdapter2.endPrefixMapping("");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_1);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_1);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      parserAdapter0.getDTDHandler();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("Dfp#h*ki5gQttgl");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl1.getValue("&|ZT\bHVAaGiq", "3r-CS");
      attributes2Impl0.getValue("3r-CS");
      attributes2Impl1.getQName((-13));
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      attributes2Impl1.getType((String) null, "3r-CS");
      attributes2Impl0.clear();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex((String) null, (String) null);
      attributes2Impl0.getURI((-13));
      attributesImpl0.getValue("IFEhLO", "RZ?%#.spzQxeX>P0");
      attributes2Impl1.clear();
      attributesImpl0.addAttribute("IFEhLO", "RZ?%#.spzQxeX>P0", "&|ZT\bHVAaGiq", "IFEhLO", "Zx");
      attributes2Impl1.getValue((String) null, (String) null);
      attributesImpl0.getLength();
      attributes2Impl0.addAttribute("Zx", (String) null, "\r`dLZ0Sr}mf&/??|GU", (String) null, (String) null);
      attributes2Impl1.getIndex((String) null);
      attributesImpl0.setAttributes(attributes2Impl2);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      attributesImpl1.getValue(1175);
      attributesImpl1.getLocalName((-1));
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((-200), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("Dfp#h*ki5gQFtgl");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl1.getValue("fv/^~?e-P7@EypRzt", "3r-CS");
      attributes2Impl0.getValue("3r-CS");
      attributes2Impl1.getQName((-13));
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl1.getType((String) null, "3r-CS");
      attributes2Impl0.clear();
      attributes2Impl0.getLength();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex((String) null, (String) null);
      attributes2Impl0.getURI((-13));
      attributes2Impl3.getValue("Iy0LO", "RZ?%#.spzQxeX>P0");
      attributes2Impl1.clear();
      attributes2Impl3.addAttribute("Iy0LO", "RZ?%#.spzQxeX>P0", "fv/^~?e-P7@EypRzt", "Iy0LO", "");
      attributes2Impl1.getValue((String) null, (String) null);
      attributes2Impl3.getLength();
      attributes2Impl0.addAttribute("", (String) null, "\r`dLZ0Sr}mf&/??|GU", (String) null, (String) null);
      attributes2Impl1.getIndex((String) null);
      attributes2Impl3.setAttributes(attributes2Impl2);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributesImpl0.getValue(1212);
      attributesImpl0.getLocalName(1330);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(1212, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("orI.exolab.casto5.mapping.Mapping");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl0.getValue("3-w'");
      attributes2Impl1.getQName(3);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl1.getType((String) null, "3-w'");
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex((String) null, (String) null);
      attributes2Impl1.getURI((-2330));
      attributesImpl0.clear();
      attributesImpl0.addAttribute("R0Lv", ":AR_P0Qxu*~C){QM`B", "IEDNm~O=m", "R0Lv", "");
      attributes2Impl1.getValue((String) null, (String) null);
      attributesImpl0.getLength();
      attributes2Impl2.getType(0);
      attributes2Impl0.addAttribute((String) null, (String) null, "\r`dLU0SrWmf&?|GU", (String) null, (String) null);
      attributes2Impl1.getIndex((String) null);
      attributesImpl0.setAttributes(attributes2Impl2);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      attributesImpl1.getLocalName(1330);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte) (-55);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":U");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      char[] charArray0 = new char[8];
      charArray0[0] = '(';
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories1.addTopicConnectionFactory(topicConnectionFactory0);
      topicConnectionFactory0.setName("9;7>GzD?");
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[8];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      topicConnectionFactoryArray0[7] = topicConnectionFactory0;
      connectionFactories1.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      assertFalse(topicConnectionFactory1.equals((Object)topicConnectionFactory0));
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(118, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName((String) null);
      try { 
        connectionFactories0.setXATopicConnectionFactory((-955), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("org.exolab.castor.mappig.loader.J1CollectionHandlers", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      xMLReaderAdapter3.startElement("", "NPd*f22`X|KtQ@9", "", attributes2Impl0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      parserAdapter0.setContentHandler(xMLReaderAdapter4);
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("LX'3lf", "LX'3lf", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.endPrefixMapping("org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter1.endDocument();
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[20];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      assertEquals(20, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C&{%4v}1Z{iwGgI ");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(775, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 775, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("vRi&1", mockException0);
      mockThrowable0.getStackTrace();
      mockException0.initCause(mockThrowable0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("vRi&1", "3", "javC.u;il.Hashtable", (-707));
      MockThrowable mockThrowable1 = new MockThrowable("3");
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("vRi&1", "7GU*mEXX&yw", "vRi&1", (-707));
      stackTraceElementArray1[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "N+0yXrAN|.", (-707));
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[5] = stackTraceElement0;
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getLineNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.getXAQueueConnectionFactory(67);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      Marshaller.enableDebug = true;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      xATopicConnectionFactory0.setName("");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[5];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      Marshaller.enableDebug = true;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      xATopicConnectionFactory0.setName("");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      try { 
        connectionFactories0.setXATopicConnectionFactory(9, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      mockThrowable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[15];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCJX", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "N+0yXfAN|.", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement1;
      stackTraceElementArray1[0] = stackTraceElement0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(19);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.processingInstruction("unable to add attribute \"", "unable to add attribute \"");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      char[] charArray0 = new char[38];
      charArray0[3] = 'Y';
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter1.processingInstruction((String) null, (String) null);
      parserAdapter0.setContentHandler(xMLReaderAdapter3);
      parserAdapter0.ignorableWhitespace(charArray0, 'Y', 'Y');
      charArray0[5] = 'Y';
      xMLReaderAdapter2.ignorableWhitespace(charArray0, 'P', 'Y');
      parserAdapter0.characters(charArray0, (-3081), '\u0000');
      parserAdapter0.endDocument();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter4.setDocumentHandler((DocumentHandler) null);
      xMLReaderAdapter4.ignorableWhitespace(charArray0, 3036, 3036);
      xMLReaderAdapter2.endPrefixMapping("2kRD={-~aOD!E");
      xMLReaderAdapter0.endDocument();
      xMLReaderAdapter3.endPrefixMapping((String) null);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter1.endDocument();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockThrowable0.fillInStackTrace();
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      mockThrowable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[12];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCX", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "3", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement1;
      stackTraceElementArray1[0] = stackTraceElement0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter(4226);
      stringWriter0.close();
      stringWriter0.close();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-25);
      try { 
        connectionFactories0.getXAConnectionFactory((-25));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(1, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      Throwable throwable0 = mockThrowable0.fillInStackTrace();
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      throwable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[12];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCX", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "3", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement1;
      stackTraceElementArray1[0] = stackTraceElement0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte) (-15);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.clearQueueConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#s[hN4fC7/t~");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=@eA|d");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("XMLFielZDepciptor: ", "XMLFielZDepciptor: ");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      char[] charArray0 = new char[30];
      charArray0[23] = 'Y';
      charArray0[3] = 'Y';
      int int0 = 373;
      parserAdapter0.ignorableWhitespace(charArray0, 373, 373);
      charArray0[5] = 'S';
      charArray0[8] = 'S';
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.endPrefixMapping("Yq*aKfO&lXh$");
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(1150);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable("javC.u;il.Hashtable");
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      mockThrowable0.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray1 = mockThrowable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#3c");
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", (-707));
      MockThrowable mockThrowable3 = new MockThrowable("javC.u;il.Hashtable");
      StackTraceElement[] stackTraceElementArray2 = new StackTraceElement[15];
      stackTraceElementArray2[0] = stackTraceElement0;
      stackTraceElementArray2[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCJX", "javC.u;il.Hashtable", (-707));
      stackTraceElementArray2[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "N+0yXfAN|.", (-707));
      stackTraceElementArray2[3] = stackTraceElement2;
      stackTraceElementArray2[4] = stackTraceElement0;
      stackTraceElementArray2[0] = stackTraceElement0;
      Locator2Impl locator2Impl0 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      Marshaller.enableDebug = true;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MockException mockException0 = new MockException("java.util.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("vRi&1", mockException0);
      mockException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("vRi&1", "3", "java.util.Hashtable", (-707));
      MockThrowable mockThrowable1 = new MockThrowable("n<m5");
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("vRi&1", "7GU*mEXX&yw", "n<m5", (-707));
      stackTraceElementArray1[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("java.util.Hashtable", "3", "N+0yXfAN|.", (-707));
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[5] = stackTraceElement0;
      mockException0.setStackTrace(stackTraceElementArray1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('9');
      stringWriter1.close();
      try { 
        connectionFactories0.getTopicConnectionFactory((-707));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable();
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable3 = new MockThrowable();
      mockThrowable0.getStackTrace();
      mockThrowable0.getSuppressed();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[15];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "jeCX", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "3", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[0] = stackTraceElement0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(4226);
      stringWriter0.close();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MockException mockException0 = new MockException("java.util.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("vRi&1", mockException0);
      mockException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("vRi&1", "3", "java.util.Hashtable", (-707));
      MockThrowable mockThrowable1 = new MockThrowable("n<um5");
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("3", "n<um5", "n<um5", (-707));
      stackTraceElementArray1[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("java.util.Hashtable", "3", "@UMv;~r4T7h0:a6/", (-707));
      stackTraceElementArray1[1] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[5] = stackTraceElement0;
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setColumnNumber((-950));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#s[hN4fC7/t~");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=@eA|d");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("Dfp#h*ki5gQFtgl");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl1.getValue("fv/^~<?e-P7EypRzt", "3r-CS");
      attributes2Impl0.getValue("3r-CS");
      attributes2Impl1.getQName((-13));
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl1.getType((String) null, "3r-CS");
      attributes2Impl0.clear();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex((String) null, (String) null);
      attributes2Impl0.getURI((-13));
      attributesImpl0.getValue("Iy0LO", "RZ?%#.spzQxeX>P0");
      attributes2Impl1.clear();
      attributesImpl0.addAttribute("Iy0LO", "RZ?%#.spzQxeX>P0", "fv/^~<?e-P7EypRzt", "Iy0LO", "");
      attributes2Impl1.getValue((String) null, (String) null);
      attributesImpl0.getLength();
      attributes2Impl0.addAttribute("", (String) null, "\r`dLZ0Sr}mf&/?L1?|U", (String) null, (String) null);
      attributes2Impl1.getIndex((String) null);
      attributesImpl0.setAttributes(attributes2Impl2);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setErrorHandler((ErrorHandler) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.Hashtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.Hashtable", mockException0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable1 = new MockThrowable("javC.u;il.Hashtable");
      MockThrowable mockThrowable2 = new MockThrowable("javC.u;il.Hashtable");
      mockException0.getSuppressed();
      MockThrowable mockThrowable3 = new MockThrowable("javC.u;il.Hashtable");
      MockThrowable.getDefaultStackTrace();
      mockException0.fillInStackTrace();
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable4 = new MockThrowable();
      mockThrowable2.getStackTrace();
      mockException0.fillInStackTrace();
      mockThrowable0.getStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[12];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.Hashtable", "3", "javC.u;il.Hashtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.Hashtable", "3", "3", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement1;
      stackTraceElementArray1[0] = stackTraceElement0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.processingInstruction("org.exolab.castor.mappig.loader.J1CollectionHandlers", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      char[] charArray0 = new char[24];
      charArray0[3] = '\u0000';
      defaultHandler2_0.comment(charArray0, 4, 4);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      parserAdapter0.setContentHandler(xMLReaderAdapter4);
      parserAdapter0.ignorableWhitespace(charArray0, 'Y', 'Y');
      charArray0[5] = 'Y';
      xMLReaderAdapter3.ignorableWhitespace(charArray0, '\\', (-1397));
      parserAdapter0.characters(charArray0, (-3061), '\u0000');
      parserAdapter0.endDocument();
      xMLReaderAdapter3.endElement("LX'3lf", "LX'3lf", "org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.ignorableWhitespace(charArray0, (-832), (-832));
      xMLReaderAdapter2.endPrefixMapping("org.exolab.castor.mappig.loader.J1CollectionHandlers");
      xMLReaderAdapter3.setDTDHandler(defaultHandler2_0);
      defaultHandler2_0.ignorableWhitespace(charArray0, 27, 29);
      xMLReaderAdapter1.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      xMLReaderAdapter2.setEntityResolver(defaultHandler2_0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-1397));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C&{%4v}1Z{iwGgI ");
      int int0 = (-2464);
      try { 
        connectionFactories0.addXATopicConnectionFactory((-2464), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2464, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      Marshaller.enableDebug = true;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactory1.setName("");
      xATopicConnectionFactory1.setName("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[5];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = true;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[11];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Z");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3!2giv.HYO]X");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tB<@<;Jrj#`~1 ");
      try { 
        connectionFactories0.getQueueConnectionFactory(966);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.getType("org.exolab.castor.mapping.Mapping");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl1.getValue("IEDNm~O=m", "3-w'");
      attributes2Impl0.getValue("3-w'");
      attributes2Impl1.getQName(3);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl0.clear();
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl0);
      attributes2Impl2.getIndex("IEDNm~O=m", (String) null);
      attributes2Impl1.getURI((-2330));
      attributesImpl0.clear();
      attributesImpl0.addAttribute("R0Lv", "unable to introspect class '", "IEDNm~O=m", "R0Lv", "");
      attributes2Impl1.getValue((String) null, (String) null);
      attributesImpl0.getLength();
      attributes2Impl2.getType(0);
      attributes2Impl0.addAttribute((String) null, (String) null, "\r`dLU0SrWmf&?|GU", (String) null, (String) null);
      attributes2Impl1.getIndex((String) null);
      attributesImpl0.setAttributes(attributes2Impl2);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      attributesImpl1.getLocalName(1328);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      xMLFilterImpl1.characters((char[]) null, 6, 6);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl4.getContentHandler();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl4.getDTDHandler();
      xMLFilterImpl1.characters((char[]) null, 6, 6);
      xMLFilterImpl4.notationDecl("~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "57s/=5_oEQ'Br>", "57s/=5_oEQ'Br>");
      xMLFilterImpl3.setDTDHandler(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl1.setErrorHandler(xMLFilterImpl3);
      xMLFilterImpl6.skippedEntity("~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl7.setEntityResolver(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl5.setErrorHandler(xMLFilterImpl3);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      xMLFilterImpl6.setErrorHandler(xMLFilterImpl7);
      xMLFilterImpl4.resolveEntity((String) null, "GsqG&Z\":zYL\"H+#YwBs");
      xMLFilterImpl2.characters((char[]) null, 6, 1059);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl5.setErrorHandler(xMLFilterImpl4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      MockException mockException0 = new MockException("javC.u;il.HaPshtable");
      MockThrowable mockThrowable0 = new MockThrowable("javC.u;il.HaPshtable", mockException0);
      Throwable throwable0 = mockException0.initCause(mockThrowable0);
      StackTraceElement[] stackTraceElementArray0 = mockThrowable0.getStackTrace();
      Throwable throwable1 = mockThrowable0.fillInStackTrace();
      MockThrowable mockThrowable1 = new MockThrowable();
      mockException0.getSuppressed();
      mockThrowable0.printStackTrace();
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable2 = new MockThrowable();
      throwable1.getStackTrace();
      throwable0.getSuppressed();
      MockThrowable.getDefaultStackTrace();
      mockException0.printStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("javC.u;il.HaPshtable", "' must implement ", "javC.u;il.HaPshtable", 4226);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[12];
      mockException0.fillInStackTrace();
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("javC.u;il.HaPshtable", "jeCX", "javC.u;il.HaPshtable", 4226);
      stackTraceElementArray1[11] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("javC.u;il.HaPshtable", "jeCX", "jeCX", 4226);
      stackTraceElementArray1[3] = stackTraceElement2;
      stackTraceElementArray1[4] = stackTraceElement1;
      StringWriter stringWriter0 = new StringWriter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.marshal((Writer) stringWriter0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter1.write((-1));
      CharBuffer.allocate(0);
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      int int0 = (-129);
      StringWriter stringWriter4 = null;
      try {
        stringWriter4 = new StringWriter((-129));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }
}
