/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 05:31:08 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.565247518967129
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("<\"G}p", "<\"G}p");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      derivedVariable1.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      ontologyTerm6.setIdentifier((-1905));
      ontologyTerm6.setTerm((String) null);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm6);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm9);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0606875187709988
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.columnStart = "8";
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      Integer integer0 = new Integer(2297);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate0.or(predicate2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("8", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.032753546228388
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getQuestionNumber();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      supportingDocument0.setFilePath("c4@0-cKiIWbG$~!po");
      supportingDocument0.setDescription("");
      supportingDocument0.setTitle("");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getAvailability();
      rawVariable0.isNewRecord();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) rawVariable1);
      derivedVariable0.setIdentifier((-2004318069));
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.createVariableSummary();
      assertEquals("-2004318069", derivedVariable0.getDisplayItemIdentifier());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate.isEqual((Object) null);
      predicate0.negate();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setIdentifier(24);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm5);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.856041791784525
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setCounty("|SaS");
      User user1 = new User((String) null, "|SaS");
      user1.setCounty("B,4-cjQ~)");
      user1.setUserID("Tq.L5-ApdXPa_#vM+");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("ouG:xakn{G>HW*?<H");
      rawVariable0.notes = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.8864123700068762
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      user0.setPhone(":>K~O%:gts~0o0M$");
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable2.removeSourceVariables(arrayList1);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable2);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      user0.setCounty(":>K~O%:gts~0o0M$");
      User user1 = new User("v", "UNABLE_TO_CREATE_USER");
      user0.setUserID(":>K~O%:gts~0o0M$");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable2.getAlternativeVariable();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      assertTrue(arrayList2.isEmpty());
      
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.9773356744811643
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      user0.setAddressLine1((String) null);
      user0.setPhone("4B5t3^*@c(a5?");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      user0.setCounty("dC2d~&9");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      derivedVariable0.setCategory("a<ieJ|_[@SsR]4N]:");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      predicate1.or(predicate2);
      Predicate<Object> predicate3 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate4 = Predicate.isEqual((Object) "X$4Un");
      predicate3.or(predicate4);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertEquals("a<ieJ|_[@SsR]4N]:", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.899252427255836
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      derivedVariable0.setCategory((String) null);
      user0.setUserID((String) null);
      user0.setAddressLine1((String) null);
      user0.setPhone("4B5t3^*@c(a5?");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(derivedVariable0);
      user0.setCounty("dC2d~&9");
      user0.setCounty("4B5t3^*@c(a5?");
      user0.setCounty((String) null);
      user0.setUserID("6YqH^)FG peV?1HK#{,");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.969849579660301
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCoded(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaned(false);
      derivedVariable0.codeBookNumber = "!rbiUnvs";
      derivedVariable0.setName("!rbiUnvs");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getNotes();
      derivedVariable0.getValueLabels();
      derivedVariable0.removeSourceVariables(arrayList0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("!rbiUnvs", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1250548729467176
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("&X8");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("(=IJS(OHdJu7(k!:W");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setName("&X8");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      valueLabel0.getDisplayName();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCleaned(false);
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getName();
      derivedVariable0.getDisplayName();
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("(=IJS(OHdJu7(k!:W", derivedVariable0.getForm());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.9920486376899036
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword(":>K~O%:gts~0o0M$");
      user0.setPhone("ymW|:1l)Yx");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Gt@9`=Q&IfmB<");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      ChangeEventType changeEventType0 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.questionNumber.label", "general.fieldValue.blank");
      predicate2.and(predicate3);
      Integer integer0 = new Integer(646);
      Predicate.isEqual((Object) integer0);
      predicate0.or(predicate3);
      predicate1.or(predicate0);
      User user1 = new User(":>K~O%:gts~0o0M$", "Gt@9`=Q&IfmB<");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, derivedVariable1);
      boolean boolean0 = derivedVariable1.isCleaned();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("8");
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      user0.setAddressLine1("UNABLE_TO_UPDATE_VALUE_LABELS");
      user0.setPhone("4B5t3^*@c(a5?");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, (Variable) null);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.808226851330753
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.questionNumber = "variable.year.label";
      derivedVariable0.getIdentifier();
      derivedVariable0.codeBookNumber = "variable.category.label";
      derivedVariable0.clone();
      derivedVariable0.getColumnEnd();
      derivedVariable0.setCategory("variable.category.label");
      derivedVariable0.getFilePath();
      derivedVariable0.getFilePath();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.columnStart = "sG$^0o+";
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDescription("a\"zw");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getAlias();
      derivedVariable0.getLabel();
      User user0 = new User("U_e'eC", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      System.setCurrentTimeMillis(0);
      derivedVariable0.getCategory();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("#CP~P36i8z");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(630L);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("variable.category.label", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.126520074411919
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear(":>K~O%:gts~0o0M$");
      derivedVariable1.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      Variable.validateFields(derivedVariable0);
      User user1 = new User("UNABLE_TO_GET_ORIGINAL_VARIABLE", ":>K~O%:gts~0o0M$");
      derivedVariable1.setFilePath("UNABLE_TO_GET_ORIGINAL_VARIABLE");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("DUPLICATE_DOCUMENT_ASSOCIATION");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm1, ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      rawVariable0.getFilePath();
      derivedVariable1.getFilePath();
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.getFilePath();
      assertEquals("UNABLE_TO_GET_ORIGINAL_VARIABLE", derivedVariable1.getFilePath());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.977104674250164
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      User user1 = new User("8", (String) null);
      user1.setUserID("0");
      derivedVariable0.setAlias("Z:\"J");
      user1.setPhone("nw17['S:)#P&wb.{");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      Variable.validateFields(rawVariable1);
      User user2 = new User("", "4B5t3^*@c(a5?");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      derivedVariable0.getCategory();
      assertEquals("8", derivedVariable0.getName());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.001022552635227
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      User user0 = new User("6", (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      user1.setFirstName("6");
      user1.setPhone("s|");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      user0.setCounty("K3L=Cm>N]^cc1L\"bXNL");
      User user2 = new User("s|", (String) null);
      user2.setCounty("+lkh&");
      User user3 = new User("blank", ";;#P]");
      user3.setUserID("d.K:`Jf trEksGm");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable3.getSourceVariables();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.159531185173757
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      unaryOperator0.apply(supportingDocument0);
      arrayList0.replaceAll(unaryOperator0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      rawVariable0.setCleaningDescription("auN10");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList0.addAll((Collection<? extends SupportingDocument>) arrayList1);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getColumnStart();
      rawVariable0.createVariableSummary();
      rawVariable0.getAlias();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      supportingDocument1.setDescription("");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setEmail("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_DUPLICATE");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      rawVariable1.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        rawVariable1.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.741881032063148
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.addSupportingDocuments(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      arrayList1.add((SupportingDocument) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.setSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0021306465384523
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword(":>K~O%:gts~0o0M$");
      user0.setPhone("ymW|:1l)Yx");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable1);
      User user1 = new User("UNABLE_TO_CREATE_AVAILABILITY_STATE", ":>K~O%:gts~0o0M$");
      User user2 = new User();
      User user3 = new User("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES", "Xc");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user3, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable1.isCleaned());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.8929774123445533
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("J}jd|Z t\":");
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getColumnEnd();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setYear("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      rawVariable0.clone();
      derivedVariable0.setCleaned(false);
      rawVariable0.setCleaningStatus("variable.cleaningDescription.label");
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      derivedVariable0.getForm();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      rawVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.7651795427108663
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      user0.setPhone("4B5t3^*@c(a5?");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.setColumnEnd("4B5t3^*@c(a5?");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.clone();
      derivedVariable1.getName();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("4B5t3^*@c(a5?", derivedVariable0.getColumnEnd());
      
      derivedVariable1.getSourceVariables();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.712716157477042
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(rawVariable0.isCleaned());
      
      User user1 = new User("8", (String) null);
      user0.setCounty("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      user1.setUserID((String) null);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      rawVariable0.setCodeBookNumber("'26`ur'iu");
      rawVariable0.setCleaningDescription("'26`ur'iu");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription((String) null);
      supportingDocument0.setDescription((String) null);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.createVariableSummary();
      rawVariable0.getFilePath();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.addSourceVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("0");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getAlternativeVariable();
      assertEquals("'26`ur'iu", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.886580762698633
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.setYear("NON_EXISTENT_VARIABLE_FOR_SUMMARY");
      user0.setCounty("|SaS");
      User user1 = new User((String) null, "|SaS");
      user1.setCounty("B,4-cjQ~)");
      user1.setUserID("Tq.L5-ApdXPa_#vM+");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("NON_EXISTENT_VARIABLE_FOR_SUMMARY", derivedVariable1.getYear());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getName();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.8293166333389634
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.isNewRecord();
      rawVariable0.getDisplayName();
      rawVariable0.clone();
      derivedVariable0.setLabel("");
      rawVariable0.getLabel();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User("", "");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable1);
      assertFalse(rawVariable1.isCoded());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.977022022791366
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("8");
      derivedVariable0.setName("8");
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      User user1 = new User((String) null, (String) null);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertEquals("8", derivedVariable0.getAvailability());
      assertEquals(2, arrayList0.size());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("UNABLE_TO_GET_AVAILABILITY_STATES");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("");
      derivedVariable0.isNewRecord();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable1.getName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getYear();
      derivedVariable0.getForm();
      assertEquals("UNABLE_TO_GET_AVAILABILITY_STATES", derivedVariable0.getForm());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9173385067639175
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("|SS");
      User user0 = new User("variable.label.label", (String) null);
      user0.setAddressLine2("UN;+J&o5PP");
      User user1 = new User("UNABLE_TO_CREATE_CATEGORY", "UNABLE_TO_CREATE_CATEGORY");
      user1.setEmail("S#RA9n?9=}LSDgz`(.");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      User user2 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      User user3 = new User("]@TD$", "variable.label.label");
      OntologyTerm.detectFieldChanges(user3, ontologyTerm4, ontologyTerm3);
      derivedVariable1.containsOntologyTerm(ontologyTerm7);
      rawVariable1.getLabel();
      assertEquals("|SS", rawVariable1.getLabel());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0245682164857692
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      user0.setAddressLine1((String) null);
      user0.setPhone("4B5t3^*@c(a5?");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(derivedVariable0);
      user0.setCounty("dC2d~&9");
      User user1 = new User("U`d~3)u=X 6B8_.3Ci", "UN;+J&o5PP");
      user0.setUserID("z");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      rawVariable1.getName();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("8", derivedVariable0.getDisplayName());
      
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      String string0 = derivedVariable0.getFilePath();
      assertNotNull(string0);
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0080594378013763
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_AVAILABILITY_STATES");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("UNABLE_TO_GET_AVAILABILITY_STATES");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("");
      derivedVariable0.isNewRecord();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.getName();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getLabel();
      derivedVariable0.getYear();
      assertEquals("UNABLE_TO_GET_AVAILABILITY_STATES", derivedVariable0.getForm());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.118896621308037
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("M_\"1");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear(":>K~O%:gts~0o0M$");
      derivedVariable1.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setAvailability("<");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setCounty(":>K~O%:gts~0o0M$");
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable1);
      User user1 = new User("UNABLE_TO_GET_ORIGINAL_VARIABLE", "variable.isCoded.label");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      derivedVariable1.getAlternativeVariable();
      assertEquals(":>K~O%:gts~0o0M$", derivedVariable1.getYear());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      User user2 = new User();
      OntologyTerm.detectFieldChanges(user2, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      ontologyTerm2.getDisplayName();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      arrayList2.add(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = rawVariable1.getOntologyTerms();
      arrayList5.add(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.481085849774372
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = null;
      User user0 = new User("8", (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.and(predicate1);
      User user1 = new User();
      user1.setUserID("variable.columnEnd.label");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = null;
      arrayList0.add((SupportingDocument) null);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes(rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("variable.alternativeVariable.label");
      supportingDocument0.setTitle("UNABLE_TO_CeEATE_DAQABASE");
      User user0 = new User("", "UNABLE_TO_CeEATE_DAQABASE");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("()!tV");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      supportingDocument1.setFileName((String) null);
      derivedVariable0.getFilePath();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.327701700803115
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      predicate3.or(predicate2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("C[%l*Lf");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.831673301904631
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("&X8");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("&X8");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.hasSameDisplayName(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.setName("usjr.status.unverified");
      derivedVariable0.isNewRecord();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm3, ontologyTerm1);
      derivedVariable0.getFilePath();
      assertEquals("usjr.status.unverified", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.8398448086735604
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setQuestionNumber("~");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable1.addOntologyTerms(arrayList0);
      rawVariable1.setColumnStart("general.fieldValue.blank");
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getFilePath();
      rawVariable1.cloneAttributes(rawVariable0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setCoded(true);
      rawVariable0.getQuestionNumber();
      rawVariable1.getCleaningDescription();
      derivedVariable0.isCoded();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.stream();
      arrayList1.ensureCapacity(0);
      arrayList1.clear();
      derivedVariable0.getIdentifier();
      derivedVariable0.setSourceVariables(arrayList1);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.getDisplayName();
      derivedVariable0.clone();
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.6038924873880145
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setFirstName("UN;+J&o5PP");
      user0.setPhone("K3L=Cm>N]^cc1L\"bXNL");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      user0.setCounty("UN;+J&o5PP");
      User user1 = new User("Wi.M@:u'h)4%VYs", "Wi.M@:u'h)4%VYs");
      user1.setCounty("+|CTm=,3o}x");
      user1.setUserID("+|CTm=,3o}x");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable3);
      assertFalse(derivedVariable3.isCleaned());
      assertEquals(0, derivedVariable3.getIdentifier());
      assertEquals("Unknown", derivedVariable3.getAvailability());
      assertFalse(derivedVariable3.isCoded());
      assertEquals("Unknown", derivedVariable3.getCleaningStatus());
      assertFalse(derivedVariable3.isNewRecord());
      assertEquals("Unknown", derivedVariable3.getCategory());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.9602574582366654
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.columnStart = "8";
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("8", derivedVariable0.getColumnStart());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.014922078761879
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setStatus((String) null);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.sort((Comparator<? super SupportingDocument>) null);
      rawVariable0.columnStart = null;
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.clear();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList3 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("|SS", rawVariable0.getLabel());
      assertEquals(2, arrayList3.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.7807630234806044
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("8");
      derivedVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      user0.setPhone("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      user0.setPhone("GQui");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ontologyTerm0.setOntologyName("Yl}]5lP4|v");
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm1);
      user0.setAddressLine2("8");
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("C#C,><C11n%,");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable2.getOntologyTerms();
      arrayList0.clear();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable4 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable2.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3691591637540217
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setTerm("");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = rawVariable1.getOntologyTerms();
      arrayList3.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm2);
      derivedVariable0.containsOntologyTerm(ontologyTerm4);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm5, ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm6);
      assertTrue(boolean0);
      
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("8c*Glk6Uk}`RRH");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) "8");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setDescription((String) null);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm(ontologyTerm2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.665445018235624
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone(":>K~O%:gts~0o0M$");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      user0.setCounty("|Sao");
      User user1 = new User((String) null, "|Sao");
      user1.setCounty("B,4-cjQ~)");
      user1.setUserID("Tq.L5-ApdXPa_#vM+");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      derivedVariable0.isCleaned();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.834346297924457
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setFirstName("UN;+J&o5PP");
      user0.setPhone("K3L=Cm>N]^cc1L\"bXNL");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      user0.setCounty("UN;+J&o5PP");
      User user1 = new User("Wi.M@:u'h)4%VYs", "Wi.M@:u'h)4%VYs");
      user1.setCounty("+sCTz=,3o}c");
      user1.setUserID("+sCTz=,3o}c");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7824491567226977
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      arrayList0.clear();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable2.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable2);
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals(0, rawVariable2.getIdentifier());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      rawVariable3.getCodeBookNumber();
      assertFalse(rawVariable3.isCoded());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      ontologyTerm1.setNameSpace("%Z<6");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.getDisplayName();
      int int0 = 0;
      derivedVariable0.setIdentifier(1567);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      try { 
        OntologyTerm.validateFields(ontologyTerm0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5280403553936055
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setTerm("variable.alternativeVariable.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ontologyTerm0.setTerm("=(6*%v]S/FE5");
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      User user0 = new User("Y|o-tlfey", "=X8Wi");
      user0.setPassword("w)0n2e1lzC^>");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      rawVariable1.getOntologyTerms();
      rawVariable2.removeOntologyTerms(arrayList3);
      derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.888479681806141
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_ALIAS_FILE_PATH");
      User user2 = new User("zh?WUN3N<*zfI9.zGl", "x");
      user0.setAddressLine2("zh?WUN3N<*zfI9.zGl");
      User user3 = new User("UNABLE_TO_CREATE_ALIAS_FILE_PATH", "zh?WUN3N<*zfI9.zGl");
      user3.setEmail((String) null);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm1);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.91744264088867
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      derivedVariable0.setIdentifier((-1739));
      derivedVariable0.setName("variable.label.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, (RawVariable) null, (RawVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.841369501550467
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      user0.setAddressLine1((String) null);
      user0.setPhone((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      user0.setCounty("v(Zj[:c.sctxm:/62");
      User user1 = new User("U`d~3)u=X 6B8_.3Ci", "`O");
      user1.setUserID("dC2d~&9");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, derivedVariable0);
      assertEquals("8", derivedVariable0.getDisplayName());
      
      rawVariable1.getName();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("variable.label.label");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setIdentifier(0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-1073741822));
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.listIterator();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable1.isNewRecord();
      derivedVariable0.setNotes("K:Xa L");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("K:Xa L", derivedVariable0.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.842433123445637
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      User user0 = new User("8", "]AkBy$}Q+cV?KLTh*@");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.availability.label");
      RawVariable rawVariable1 = new RawVariable();
      user0.setPhone("");
      Variable.validateFields(derivedVariable0);
      User user1 = new User("VDg;:3", "variable.availability.label");
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable3);
      assertEquals("variable.availability.label", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("|SS");
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      user0.setEmail("UNABLE_TO_CREATE_CATEGORY");
      user0.setAffiliation((String) null);
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      Predicate<ValueLabel> predicate0 = Predicate.isEqual((Object) "|SS");
      Predicate<ValueLabel> predicate1 = predicate0.negate();
      Predicate<ValueLabel> predicate2 = predicate1.or(predicate0);
      Predicate<ValueLabel> predicate3 = predicate2.and(predicate0);
      arrayList0.removeIf(predicate3);
      arrayList0.add((ValueLabel) null);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      derivedVariable0.setCleaned(false);
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getName();
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.927851727329591
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("`O");
      User user0 = new User("`5-hpvXyK|J#^>", (String) null);
      User user1 = new User();
      user1.setPassword("`5-hpvXyK|J#^>");
      User user2 = new User();
      user2.setPhone("variable.saveChanges.valueChanged");
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      Variable.validateFields(rawVariable0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) user3);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) user0);
      Object object0 = new Object();
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "`O");
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate1.or(predicate0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate0);
      predicate4.or(predicate1);
      Predicate<Object> predicate7 = predicate0.or(predicate5);
      Predicate<Object> predicate8 = predicate7.and(predicate3);
      predicate4.negate();
      predicate1.or(predicate6);
      Predicate.isEqual((Object) "`5-hpvXyK|J#^>");
      predicate2.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate2.and(predicate1);
      Predicate<Object> predicate11 = predicate10.or(predicate6);
      predicate0.or(predicate11);
      predicate9.negate();
      predicate4.or(predicate10);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("`O", rawVariable0.getLabel());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.927851727329591
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("`O");
      User user0 = new User("`5-hpvXyK|J#^>", (String) null);
      User user1 = new User();
      user1.setPassword("`5-hpvXyK|J#^>");
      User user2 = new User();
      user2.setPhone("variable.saveChanges.valueChanged");
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      Variable.validateFields(rawVariable0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) user3);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) user0);
      Object object0 = new Object();
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "`O");
      predicate2.or(predicate1);
      predicate1.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate.isEqual((Object) predicate1);
      predicate4.and(predicate5);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate7 = predicate5.or(predicate6);
      Predicate<Object> predicate8 = predicate1.negate();
      predicate6.negate();
      predicate1.or(predicate3);
      Predicate.isEqual((Object) null);
      predicate7.or(predicate8);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable2);
      assertEquals("`O", rawVariable0.getLabel());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.927851727329591
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.questionNumber = "riPLtwN'B7b!8RXw";
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPhone((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(rawVariable0);
      User user1 = new User("fWYkzcNkd:hH0(l; ", "variable.isCoded.label");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("riPLtwN'B7b!8RXw", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = null;
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.976743351158441
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("`O");
      rawVariable0.setColumnEnd((String) null);
      User user0 = new User("`5-hpvXyK|J#^>", (String) null);
      User user1 = new User();
      user1.setPassword("`5-hpvXyK|J#^>");
      User user2 = new User();
      user2.setPhone("variable.saveChanges.valueChanged");
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      Variable.validateFields(rawVariable0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) user3);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) user0);
      Object object0 = new Object();
      Predicate<Object> predicate2 = Predicate.isEqual((Object) user2);
      predicate2.or(predicate1);
      predicate0.negate();
      predicate2.or(predicate0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate.isEqual((Object) macawChangeEvent0);
      User user4 = new User((String) null, "UN;+J&o5PP");
      user3.setUserID("`O");
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.2418395424041515
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("4[N2uy;HO|loZYvnWmA", "4[N2uy;HO|loZYvnWmA");
      valueLabel0.setIdentifier((-1431655763));
      user0.clone();
      user0.setAddressLine2(" KN+\"Q");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.notes = "variable.columnStart.label";
      derivedVariable0.setLabel("`,Odp8\"JcPbPQNa");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.setColumnEnd("a\"zw");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setName("XW9BJkH{-jmp ");
      derivedVariable0.getAlias();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setCleaningDescription("i;GoCq/uD?oFi/|=qn");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User("8", (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate0.and(predicate3);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.negate();
      predicate6.or(predicate7);
      Predicate.isEqual((Object) predicate2);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.6010596151777494
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      User user0 = new User("6", (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate6.or(predicate7);
      Predicate<Object> predicate9 = Predicate.isEqual((Object) predicate2);
      predicate1.and(predicate6);
      predicate6.or(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      predicate5.and(predicate0);
      Predicate.isEqual((Object) valueLabel0);
      predicate3.negate();
      Predicate<Object> predicate10 = predicate9.or(predicate0);
      Predicate.isEqual((Object) "INVALID_CATEGORY");
      Predicate<Object> predicate11 = predicate10.and(predicate2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate.isEqual((Object) ontologyTerm0);
      predicate3.or(predicate7);
      Predicate<Object> predicate12 = predicate7.negate();
      Predicate<Object> predicate13 = predicate6.negate();
      Predicate.isEqual((Object) predicate12);
      predicate13.or(predicate11);
      Predicate.isEqual((Object) user0);
      predicate10.or(predicate8);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList0.isEmpty());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      
      rawVariable0.getForm();
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      User user0 = new User("8", (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      derivedVariable0.removeOntologyTerms(arrayList1);
      assertFalse(arrayList1.contains(ontologyTerm0));
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setDescription("%*;");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm7);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5880588147135972
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("`O");
      assertEquals("`O", rawVariable0.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm2.setDescription((String) null);
      ontologyTerm1.setTerm("T]@");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm8);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm9);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setQuestionNumber("UNABLE_TO_CREATE_USER");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      assertEquals("UNABLE_TO_CREATE_USER", derivedVariable0.getQuestionNumber());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setCounty("B,4-cjQ~)");
      User user1 = new User();
      user1.setAddressLine2("(S#94.._R`&Y6~0");
      user1.setUserID((String) null);
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.8122222077200845
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      user0.setAddressLine1((String) null);
      user0.setPhone((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      user0.setCounty("dC2du~$9");
      User user1 = new User("N9D.wj$>]\"%O?&r^", "UN;+J&o5PP");
      user0.setUserID("z");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, rawVariable1);
      assertEquals("8", derivedVariable0.getName());
      
      rawVariable1.getName();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertFalse(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.125827073718918
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("-L");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setAvailability("");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      derivedVariable0.setCodeBookNumber("-L");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.detectFieldChanges(user0, derivedVariable1, valueLabel0, valueLabel0);
      Variable.validateFields(rawVariable0);
      rawVariable0.removeValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.remove((Object) user0);
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      derivedVariable1.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      User user0 = new User("8", (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "8");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate3.or(predicate5);
      Predicate.isEqual((Object) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate7 = Predicate.isEqual((Object) ontologyTerm0);
      predicate6.and(predicate7);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument3);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList3 = derivedVariable2.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList3);
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("Z:\"J");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("UNABLE_TO_CeEATE_DAQABASE");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFilePath("O&wPmI&9UA~HPCp\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      derivedVariable0.getDisplayItemIdentifier();
      assertEquals("Z:\"J", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.455394993624801
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("8");
      derivedVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setPassword("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm0.setDescription("variable.category.label");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsOntologyTerm(ontologyTerm5);
      assertFalse(derivedVariable1.isCleaned());
      
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.721952113903694
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      predicate3.or(predicate2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("C[%l*Lf");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      User user0 = new User();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      derivedVariable0.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm3);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      derivedVariable0.getAlias();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.206552161926179
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User("6", (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate0.and(predicate3);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate4.negate();
      predicate6.or(predicate7);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) predicate2);
      predicate8.and(predicate1);
      user0.setStatus("supportingDocument.title.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSupportingDocuments(arrayList0);
      derivedVariable1.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      user0.setCounty("]AkBy$}Q+cV?KLTh*@");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList1);
      String string0 = rawVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      derivedVariable1.getSourceVariables();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.clear();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setOntologyTerms(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("HSacOA>", (String) null);
      RawVariable rawVariable5 = new RawVariable();
      assertFalse(rawVariable5.isNewRecord());
      assertFalse(rawVariable5.isCoded());
      assertFalse(rawVariable5.isCleaned());
      assertEquals(0, rawVariable5.getIdentifier());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("");
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.8340460276812385
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setCounty("|SaS");
      User user1 = new User((String) null, "|SaS");
      user1.setCounty("B,4-cjQ~)");
      user1.setUserID("Tq.L5-ApdXPa_#vM+");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ChangeEventType changeEventType0 = ChangeEventType.ONTOLOGY_TERM;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "y!aB}1", "8");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate1.negate();
      RawVariable rawVariable0 = new RawVariable();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) rawVariable0);
      Predicate<Object> predicate5 = predicate4.or(predicate0);
      Predicate<Object> predicate6 = predicate5.or(predicate0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      predicate2.test(predicate3);
      macawChangeEvent0.setUserID("y!aB}1");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      Predicate.isEqual((Object) rawVariable1);
      Predicate<Object> predicate7 = predicate5.and(predicate6);
      predicate4.or(predicate5);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) predicate0);
      predicate3.and(predicate8);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate<Object> predicate9 = predicate4.or(predicate1);
      predicate9.or(predicate7);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("8");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6957944374577663
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setOntologyTerms(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "HSacOA>");
      user0.setPassword("HSacOA>");
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList3);
      derivedVariable0.getOntologyTerms();
      rawVariable1.getYear();
      derivedVariable0.hasSameDisplayName(rawVariable3);
      assertFalse(rawVariable3.isNewRecord());
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
      assertFalse(rawVariable3.isCleaned());
      assertFalse(rawVariable3.isCoded());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.8770349917296576
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "8");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate0.or(predicate4);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      Predicate.isEqual((Object) "8");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) supportingDocument1);
      Object object0 = new Object();
      Predicate<Object> predicate7 = Predicate.isEqual(object0);
      Predicate<Object> predicate8 = predicate2.or(predicate5);
      Predicate<Object> predicate9 = predicate4.or(predicate7);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Predicate<Object> predicate10 = Predicate.isEqual((Object) predicate1);
      predicate0.or(predicate10);
      predicate4.or(predicate1);
      predicate5.and(predicate6);
      Predicate<Object> predicate11 = predicate4.negate();
      predicate8.or(predicate7);
      Predicate<Object> predicate12 = Predicate.isEqual((Object) predicate4);
      predicate7.negate();
      predicate3.negate();
      predicate9.and(predicate2);
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate5.or(predicate13);
      predicate14.or(predicate11);
      Predicate.isEqual((Object) predicate10);
      predicate3.or(predicate5);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertTrue(arrayList1.isEmpty());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.211128820965081
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "S5");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate3.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      predicate3.or(predicate0);
      Predicate.isEqual((Object) "S5");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Integer integer0 = new Integer((-485));
      Predicate.isEqual((Object) integer0);
      predicate1.and(predicate4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable1.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.getSourceVariables();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.4651935718829296
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("8");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      String string0 = derivedVariable0.getCategory();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.759273288068035
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("8", "9cqZh #(/S&$");
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "9cqZh #(/S&$", ".[_*N");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      predicate1.test("9cqZh #(/S&$");
      predicate2.and(predicate1);
      predicate0.and(predicate0);
      predicate0.and(predicate2);
      user0.setStatus("8");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.addSupportingDocuments(arrayList0);
      derivedVariable3.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.questionNumber = "9cqZh #(/S&$";
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      user0.setCounty("]AkBy$}Q+cV?KLTh*@");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable1.addSourceVariables(arrayList1);
      rawVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.62015514484474
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "S5");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate3.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      predicate3.or(predicate0);
      Predicate.isEqual((Object) "S5");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Integer integer0 = new Integer((-485));
      Predicate.isEqual((Object) integer0);
      predicate1.and(predicate4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable1.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.getSourceVariables();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable4);
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertFalse(derivedVariable4.isCoded());
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertFalse(derivedVariable4.isCleaned());
      assertFalse(derivedVariable4.isNewRecord());
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertEquals("0", derivedVariable4.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.5825339255764295
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      arrayList0.clear();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable2.getOntologyTerms();
      rawVariable2.setAvailability((String) null);
      arrayList0.add(ontologyTerm0);
      rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "HSacOA>");
      user0.setPassword("HSacOA>");
      RawVariable rawVariable6 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6953942773937407
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clear();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setOntologyTerms(arrayList1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User((String) null, "HSacOA>");
      user0.setPassword("HSacOA>");
      RawVariable rawVariable4 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList3);
      derivedVariable0.getOntologyTerms();
      rawVariable2.getDisplayName();
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCoded());
      assertFalse(rawVariable2.isCleaned());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.7523229576206436
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm1.setDescription((String) null);
      ontologyTerm0.setTerm("ouG:xakn{G>HW*?<H");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm8.setDescription("ouG:xakn{G>HW*?<H");
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm8);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm8);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.6001529103340366
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "ontologyTerm.description.saveChanges";
      derivedVariable0.clone();
      User user0 = new User();
      user0.setPhone("variable.cleaningStatus.label");
      derivedVariable0.setAvailability("ontologyTerm.description.saveChanges");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setName("s2p&@2C:EZRH");
      assertEquals("ontologyTerm.description.saveChanges", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.7847567999674316
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.listIterator();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setForm("");
      rawVariable0.setCleaningDescription("variable.cleaningStatus.label");
      rawVariable0.getCleaningStatus();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getCategory();
      rawVariable0.getOntologyTerms();
      rawVariable0.clone();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      System.setCurrentTimeMillis(1241L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningDescription((String) null);
      derivedVariable0.setYear("C2");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getAlias();
      assertEquals("C2", derivedVariable0.getYear());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("UNABLE_TO_CREATE_DATABASE");
      User user0 = new User("variable.label.label", "UNABLE_TO_CREATE_DATABASE");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFilePath("()!tV");
      supportingDocument2.setFileName((String) null);
      supportingDocument0.setIdentifier(0);
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("variable.label.label", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.5813690145252886
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("SS");
      derivedVariable0.form = "SS";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setQuestionNumber("+%VL|q~f]mpd");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.getSourceVariables();
      assertEquals("SS", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.7331208640563642
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("|SS");
      derivedVariable0.setName("variable.label.label");
      User user0 = new User();
      user0.setUserID("|SS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable1.cloneAttributes(derivedVariable0);
      rawVariable1.setSupportingDocuments(arrayList0);
      rawVariable1.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      derivedVariable1.removeSourceVariable(rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSupportingDocuments(arrayList0);
      rawVariable1.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user1 = new User();
      user1.setCounty("variable.label.label");
      user1.setUserID("6YqH^)FG peV?1HK#{,");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable2, rawVariable2);
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable1.removeSourceVariable(rawVariable1);
      assertEquals("|SS", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.7641613855752816
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      User user1 = new User();
      user1.setPassword((String) null);
      user0.setPhone((String) null);
      user0.setPhone("I#'foh0JU\"xq&Hm\"k#^");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm1, ontologyTerm3);
      User user2 = new User("GQui", "I#'foh0JU\"xq&Hm\"k#^");
      user2.setAddressLine2("}t(7_Y`.R6F");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm.detectFieldChanges(user2, ontologyTerm2, ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("8", derivedVariable0.getName());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.06514546898285
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setFilePath((String) null);
      derivedVariable1.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      user0.setPassword(":>K~O%:gts~0o0M$");
      user0.setPhone("ymW|:1l)Yx");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.validateFields(derivedVariable1);
      assertTrue(derivedVariable1.isCleaned());
      
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Gt@9`=Q&IfmB<");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "Gt@9`=Q&IfmB<");
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      Predicate<Object> predicate6 = predicate2.and(predicate1);
      RawVariable rawVariable0 = new RawVariable();
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate7 = predicate1.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      predicate8.or(predicate2);
      Predicate.isEqual((Object) rawVariable0);
      Predicate<Object> predicate9 = predicate0.and(predicate6);
      Predicate<Object> predicate10 = predicate9.or(predicate3);
      predicate10.or(predicate5);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.7721472289141453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("general.error.blankField");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setName("variable.label.label");
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.validateFields(rawVariable0);
      User user0 = new User("general.error.blankField", "variable.label.label");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.label.label", rawVariable0.getDisplayName());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.539665843289319
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("J;");
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      LinkedList<DerivedVariable> linkedList0 = new LinkedList<DerivedVariable>(arrayList1);
      arrayList0.retainAll(linkedList0);
      rawVariable0.clone();
      assertEquals("J;", rawVariable0.getColumnEnd());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "variable.label.label";
      User user0 = new User((String) null, "UN;+J&o5PP");
      user0.setAddressLine2("UNABLE_TO_CREATE_CATEGORY");
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("variable.label.label", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.9281293251828346
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("8");
      user0.setUserID((String) null);
      user0.setPhone("4B5t3^*@c(a5?");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(derivedVariable0);
      user0.setCounty((String) null);
      User user1 = new User("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES", (String) null);
      user0.setUserID("UNABLE_TO_GET_ALL_SUMMARY_VARIABLES");
      derivedVariable0.setName("4B5t3^*@c(a5?");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.form = "8";
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      derivedVariable0.getSourceVariables();
      assertEquals("4B5t3^*@c(a5?", derivedVariable0.getName());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.8038831643317152
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setCounty("|SaS");
      User user1 = new User((String) null, "|SaS");
      user1.setCounty("B,4-cjQ~)");
      user1.setUserID("Tq.L5-ApdXPa_#vM+");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.907588744644341
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.columnStart = "8";
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription((String) null);
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("8", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.8342501718069912
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.columnEnd = "}%Od.^*Oxp|7Y++";
      user0.setCounty("|SaS");
      User user1 = new User((String) null, "|SaS");
      user1.setLastName("33:n|(=`C#5W");
      user1.setCounty("B,4-cjQ~)");
      user1.setUserID((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("}%Od.^*Oxp|7Y++", derivedVariable1.getColumnEnd());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.862681628353659
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "variable.label.label";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("|SS");
      User user0 = new User("variable.label.label", (String) null);
      user0.setAddressLine2("UN;+J&o5PP");
      User user1 = new User("Z:\"J", "Z:\"J");
      user1.setUserID((String) null);
      user1.setEmail("variable.label.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setDescription("INVALID_ADMINISTRATOR");
      User user2 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm1);
      User user3 = new User((String) null, "Z:\"J");
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges(user3, ontologyTerm4, (OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.928377443618034
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel("`O");
      User user0 = new User("`5-hpvXyK|J#^>", (String) null);
      User user1 = new User();
      user1.setPassword("`5-hpvXyK|J#^>");
      User user2 = new User();
      user2.setPhone("variable.saveChanges.valueChanged");
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      Variable.validateFields(rawVariable0);
      user2.setPhone("XPii?$@VS(B -&");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable1);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      user2.setCounty("`O");
      User user4 = new User("4AId\"g?iFg'u", "vY%.`(X*IU@.:~");
      User user5 = new User((String) null, (String) null);
      user5.setUserID("");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user3, rawVariable1, rawVariable0);
      assertEquals("`O", rawVariable0.getLabel());
      
      rawVariable1.getName();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      User user0 = new User("8", (String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add((OntologyTerm) null);
      rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.5437920559363696
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone(":>K~O%:gts~0o0M$");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user0.setCounty("|SaS");
      User user1 = new User((String) null, "|SaS");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("UNABLE_TO_GET_ALL_ONTOLOGY_TERMS");
      User user2 = new User();
      OntologyTerm.detectFieldChanges(user2, ontologyTerm1, ontologyTerm1);
      User user3 = new User((String) null, "|SaS");
      OntologyTerm.detectFieldChanges(user3, ontologyTerm1, ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable3.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = rawVariable1.getOntologyTerms();
      arrayList3.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("hFd9vvUu11TJS");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "8");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate0.and(predicate2);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      predicate4.or(predicate3);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Predicate.isEqual((Object) supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setDescription("8");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("8");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      VariableSummary variableSummary0 = derivedVariable1.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      derivedVariable1.updateOntologyTerm(ontologyTerm7);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setIdentifier(635);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.listIterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm0);
      arrayList4.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.setForm("-LHA");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges((User) null, ontologyTerm2, ontologyTerm5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.9954171502194566
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("&X8");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("(=IJS(OHdJu7(k!:W");
      derivedVariable0.getDisplayName();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName("m(");
      derivedVariable0.isNewRecord();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.isNewRecord();
      derivedVariable0.setNotes("m(");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals("(=IJS(OHdJu7(k!:W", derivedVariable0.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      User user0 = new User("8", (String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      Predicate.isEqual((Object) valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setDescription("8");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.584838202797333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("_(Y0Zam]");
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      assertEquals("_(Y0Zam]", derivedVariable1.getColumnStart());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setFirstName("UN;+J&o5PP");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.containsAll(arrayList1);
      arrayList0.add(ontologyTerm1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm2.setDescription("UN;+J&o5PP");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm10);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      User user0 = new User("6", (String) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      predicate0.and(predicate3);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      predicate5.or(predicate6);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate2);
      predicate5.or(predicate0);
      ValueLabel valueLabel0 = new ValueLabel();
      Predicate.isEqual((Object) valueLabel0);
      predicate3.negate();
      Predicate<Object> predicate8 = predicate7.or(predicate0);
      Predicate.isEqual((Object) "INVALID_CATEGORY");
      predicate8.and(predicate2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate.isEqual((Object) ontologyTerm0);
      predicate3.or(predicate6);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setCleaningStatus("6");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      assertEquals("6", rawVariable0.getCleaningStatus());
      
      user0.setCounty((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear(":>K~O%:gts~0o0M$");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm5);
      // Undeclared exception!
      try { 
        OntologyTerm.detectFieldChanges(user0, (OntologyTerm) null, ontologyTerm2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.OntologyTerm", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }
}
