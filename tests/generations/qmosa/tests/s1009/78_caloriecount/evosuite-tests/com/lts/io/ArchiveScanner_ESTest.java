/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 17:18:28 GMT 2020
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb";
      archiveScanner0.scan();
      archiveScanner0.excludes = stringArray0;
      stringArray0[1] = ")Cb";
      archiveScanner0.processArchive(improvedFile0, ")Cb");
      assertTrue(improvedFile0.isAbsolute());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb";
      archiveScanner0.scan();
      archiveScanner0.excludes = stringArray0;
      stringArray0[1] = ")Cb";
      archiveScanner0.processFile(")Cb");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0832550105185086
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      archiveScanner0.getNotIncludedDirectories();
      archiveScanner0.scandir(mockFile0, "child, ", false);
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0832550105185086
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb";
      archiveScanner0.scan();
      archiveScanner0.excludes = stringArray0;
      stringArray0[1] = ")Cb";
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, ")Cb", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2700181519104905
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb", ")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      archiveScanner0.processArchive(mockFile0, "/!Se");
      assertTrue(mockFile0.canExecute());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("&#L0jaq", "H#iBfaT0H#iBfaT.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "&#L0jaq");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/replication/scripts/projects/78_caloriecount/&#L0jaq/H#iBfaT0H#iBfaT.jar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("#/8j[8|U2GW\"n^F", "#/8j[8|U2GW\"n^F");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "crititcal.com.lts.application.errors.properties.title");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0547209169068124
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      ImprovedFile improvedFile1 = new ImprovedFile("The directory, 0The directory, .jar");
      try { 
        archiveScanner0.processDirectory(improvedFile1, ")Cb", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/The directory, 0The directory, .jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5118965585343875
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")Cb");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      try { 
        archiveScanner0.processArchive(improvedFile1, ")Cb");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb/tempdir0
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")C[", ")C[");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")C[", ")C[", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[";
      stringArray0[1] = ")C[";
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[2] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[";
      stringArray0[3] = ")C[";
      stringArray0[4] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[";
      stringArray0[5] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[";
      stringArray0[6] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[";
      stringArray0[7] = ")C[";
      archiveScanner0.processDirectory(mockFile0, "f>c", false);
      assertTrue(mockFile0.canExecute());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.069917341816382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb", ")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      archiveScanner0.processDirectory(mockFile0, "/!Se", true);
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0832550105185086
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")Cb");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile1, ")Cb", false);
      assertEquals(0L, improvedFile1.getFreeSpace());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("|W|*-n:Tx89+j#", ">i.eSe^Y_b4x2b");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("#/8j[8|U2GW\"n^F", "crititcal.com.lts.application.errors.properties.title");
      ImprovedFile.createTempImprovedFile("jar:", "crititcal.com.lts.application.errors.properties.title", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/#/8j[8|U2GW\"n^F/crititcal.com.lts.application.errors.properties.title/#/8j[8|U2GW\"n^F0crititcal.com.lts.application.errors.properties.title/jar:2crititcal.com.lts.application.errors.properties.title", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("&#L0jaq", "H#iBfaT0H#iBfaT.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "BfaT", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/&#L0jaq/H#iBfaT0H#iBfaT.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")C[", ")C[");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")C[", ")C[", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "/home/ubuntu/replication/scripts/projects/78_caloriecount/)C[/)C[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5118965585343875
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")C");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")C");
      archiveScanner0.scan();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, ")C");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("/home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")Cb");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      archiveScanner0.processFile("A<fitjP[GXu");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2700181519104905
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")Cb");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")Cb", ")Cb", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir(")Cb");
      archiveScanner0.scan();
      archiveScanner0.processFile("/home/ubuntu/replication/scripts/projects/78_caloriecount/)Cb");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9556998911125343
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")C[", ")C[");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(")C[", ")C[", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = archiveScanner0.excludes;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, "", true);
      assertEquals(0L, improvedFile0.getUsableSpace());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("#/8j[8|U2GW\"n^F", "crititcal.com.lts.application.errors.properties.title");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("crititcal.com.lts.application.errors.properties.title");
      improvedFile0.mkdirs();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }
}
