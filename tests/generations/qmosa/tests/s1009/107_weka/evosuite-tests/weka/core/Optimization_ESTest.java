/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 06:37:28 GMT 2019
 */

package weka.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.core.Optimization;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Optimization_ESTest extends Optimization_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      locale0.getScript();
      Object[] objectArray0 = new Object[17];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList1;
      linkedList1.add(locale0);
      Object object0 = new Object();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale1 = Locale.ROOT;
      locale0.getExtension('R');
      linkedList1.add(locale1);
      objectArray0[3] = object0;
      objectArray0[4] = (Object) locale0;
      locale0.getDisplayLanguage(locale1);
      objectArray0[5] = (Object) "";
      locale0.getScript();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale locale2 = Locale.CHINESE;
      double[] doubleArray0 = new double[0];
      Predicate<Object> predicate0 = Predicate.isEqual(objectArray0[5]);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Locale locale3 = Locale.FRANCE;
      locale1.getDisplayScript();
      locale0.getDisplayScript(locale3);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate1.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate.isEqual((Object) "Italian");
      Predicate.isEqual((Object) "");
      predicate3.negate();
      linkedList1.removeIf(predicate4);
      double[] doubleArray1 = Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, (boolean[]) null);
      assertFalse(doubleArray1.equals((Object)doubleArray0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.setNextRandom(10);
      Locale locale0 = Locale.JAPAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      Locale.setDefault(locale0);
      locale0.getScript();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      linkedList1.add(locale0);
      Object object0 = new Object();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale locale1 = Locale.ENGLISH;
      Locale.getISOCountries();
      linkedList1.add((Locale) null);
      locale0.getDisplayLanguage(locale1);
      linkedList3.add("Mini?ization subject to bounds on the variables");
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList3);
      Locale.lookupTag(linkedList0, list0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale locale2 = new Locale("", "");
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.identity(10, 10);
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 10;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      assertArrayEquals(new double[] {10.0}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(20, 20);
      double[] doubleArray0 = new double[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\t");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-116);
      byteArray0[1] = (byte)35;
      byteArray0[3] = (byte)110;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      matrix0.normF();
      doubleArray0[0] = (double) 28;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertNotSame(doubleArray0, doubleArray1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(20, 20);
      double[] doubleArray0 = new double[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\t");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)110;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      doubleArray0[0] = (double) 28;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[1] = true;
      booleanArray0[1] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertFalse(doubleArray1.equals((Object)doubleArray0));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.ITALIAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.setDefault(locale0);
      locale0.getScript();
      Object[] objectArray0 = new Object[17];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList1;
      linkedList1.add(locale0);
      Object object0 = new Object();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale locale1 = Locale.ROOT;
      locale0.getExtension('R');
      linkedList1.add(locale1);
      objectArray0[3] = object0;
      objectArray0[4] = (Object) locale0;
      locale0.getDisplayLanguage(locale1);
      objectArray0[5] = (Object) "";
      locale0.getScript();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale2 = Locale.CHINESE;
      double[] doubleArray0 = new double[0];
      Predicate<Object> predicate0 = Predicate.isEqual(objectArray0[5]);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Locale locale3 = Locale.FRANCE;
      locale0.getDisplayScript(locale3);
      predicate2.negate();
      predicate1.negate();
      predicate2.negate();
      Predicate.isEqual((Object) "Italian");
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = false;
      double[] doubleArray1 = Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, false, booleanArray0);
      assertFalse(doubleArray1.equals((Object)doubleArray0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(20, 20);
      double[] doubleArray0 = new double[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-116);
      doubleArray0[1] = (double) (byte)35;
      byteArray0[3] = (byte)110;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, (boolean[]) null);
      assertArrayEquals(new double[] {Double.NaN, Double.POSITIVE_INFINITY}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Random.setNextRandom(10);
      Locale locale0 = Locale.ENGLISH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale0);
      locale0.getScript();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      Object[] objectArray0 = new Object[14];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList1;
      linkedList1.add(locale0);
      Object object0 = new Object();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale locale1 = Locale.ROOT;
      linkedList1.add(locale1);
      objectArray0[11] = object0;
      objectArray0[4] = (Object) locale0;
      locale0.getDisplayLanguage(locale1);
      objectArray0[5] = (Object) "rN!xXb+Dz^ws!zSN";
      linkedList0.toArray(objectArray0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList2);
      Locale.lookupTag(linkedList0, list0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale locale2 = new Locale("", "");
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 8;
      doubleArray0[1] = (double) 10;
      doubleArray0[2] = (double) 10;
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Random.setNextRandom(10);
      Locale locale0 = Locale.ENGLISH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      Locale.setDefault(locale0);
      locale0.getScript();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      Object[] objectArray0 = new Object[14];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList1;
      linkedList1.add(locale0);
      Object object0 = new Object();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale locale1 = Locale.ROOT;
      linkedList1.add(locale1);
      objectArray0[11] = object0;
      objectArray0[4] = (Object) locale0;
      locale0.getDisplayLanguage(locale1);
      objectArray0[5] = (Object) "rN!xXb+Dz^ws!zSN";
      linkedList0.toArray(objectArray0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList3);
      Locale.lookupTag(linkedList0, list0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale locale2 = new Locale("", "");
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 8;
      doubleArray0[1] = (double) 10;
      doubleArray0[2] = (double) 10;
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale0);
      locale0.getScript();
      Object[] objectArray0 = new Object[17];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[2] = (Object) linkedList1;
      linkedList1.add(locale0);
      Object object0 = new Object();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale locale1 = Locale.ROOT;
      locale0.getExtension('R');
      linkedList1.add(locale1);
      objectArray0[3] = object0;
      objectArray0[4] = (Object) locale0;
      locale0.getDisplayLanguage(locale1);
      objectArray0[5] = (Object) "rN!xXb+Dz^ws!zSN";
      locale0.getScript();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale locale2 = new Locale("", "");
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      double[] doubleArray0 = new double[0];
      Predicate<Object> predicate0 = Predicate.isEqual(objectArray0[5]);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      linkedList1.removeIf(predicate3);
      double[] doubleArray1 = Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, true, (boolean[]) null);
      assertEquals(0, doubleArray1.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(20, 28);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (double) 28;
      doubleArray0[1] = (double) 20;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = false;
      booleanArray0[1] = false;
      booleanArray0[2] = true;
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY}, doubleArray1, 0.01);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(20, 20);
      double[] doubleArray0 = new double[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\t");
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)125;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      doubleArray0[0] = (double) 28;
      boolean[] booleanArray0 = new boolean[6];
      booleanArray0[1] = true;
      booleanArray0[1] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, true, booleanArray0);
      assertArrayEquals(new double[] {Double.POSITIVE_INFINITY, 0.0}, doubleArray1, 0.01);
      assertArrayEquals(new double[] {28.0, 0.0}, doubleArray0, 0.01);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(5784);
      optimization_DynamicIntArray0.getRevision();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.elementAt(5784);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5784
         //
         verifyException("weka.core.Optimization$DynamicIntArray", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(20, 20);
      double[] doubleArray0 = new double[16];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\t");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-116);
      byteArray0[1] = (byte)35;
      byteArray0[3] = (byte)110;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      matrix0.normF();
      doubleArray0[0] = (double) 28;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ok)&%2q1}V6Qjb)");
      boolean boolean0 = Optimization.m_Debug;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      weka.core.matrix.Matrix matrix0 = new weka.core.matrix.Matrix(20, 20);
      double[] doubleArray0 = new double[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\t");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-116);
      byteArray0[1] = (byte) (-116);
      byteArray0[3] = (byte)110;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[4] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      matrix0.normF();
      doubleArray0[0] = (double) 28;
      boolean[] booleanArray0 = new boolean[3];
      booleanArray0[0] = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      double[] doubleArray1 = Optimization.solveTriangle(matrix0, doubleArray0, false, booleanArray0);
      assertEquals(2, doubleArray1.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Random.setNextRandom(10);
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = Locale.JAPANESE;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) locale1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Locale locale2 = Locale.FRANCE;
      locale1.getDisplayScript(locale2);
      Predicate<Object> predicate4 = predicate0.negate();
      predicate2.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate.isEqual((Object) "");
      Predicate.isEqual((Object) predicate4);
      predicate5.negate();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      linkedList0.removeIf(predicate0);
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = (double) 10;
      doubleArray0[1] = (double) 10;
      doubleArray0[2] = 1818.0;
      doubleArray0[3] = (double) 10;
      doubleArray0[4] = (double) 10;
      doubleArray0[5] = (double) 10;
      doubleArray0[6] = (double) 10;
      doubleArray0[7] = (double) 10;
      // Undeclared exception!
      try { 
        Optimization.solveTriangle((weka.core.matrix.Matrix) null, doubleArray0, false, (boolean[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Optimization", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(306);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.size();
      int int0 = optimization_DynamicIntArray0.size();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.281955547659427
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(1553);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(1947);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(1553);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.addElement(1553);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(200);
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(200);
      optimization_DynamicIntArray0.removeElementAt(0);
      assertEquals(1, optimization_DynamicIntArray0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.233582383181043
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      int int0 = 0;
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(0);
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.addElement(0);
      int int1 = (-1320);
      optimization_DynamicIntArray0.addElement(2469);
      optimization_DynamicIntArray0.addElement((-1320));
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.copy();
      optimization_DynamicIntArray0.addElement(0);
      optimization_DynamicIntArray0.removeAllElements();
      optimization_DynamicIntArray0.getRevision();
      optimization_DynamicIntArray0.copy();
      // Undeclared exception!
      try { 
        optimization_DynamicIntArray0.removeElementAt((-1320));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Random.setNextRandom(10);
      Locale locale0 = Locale.ENGLISH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale0);
      locale0.getScript();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) linkedList0;
      objectArray0[1] = (Object) linkedList0;
      objectArray0[3] = (Object) linkedList1;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) "rN!xXb+D)^ws!zSN";
      linkedList0.toArray(objectArray0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList2);
      Locale.lookupTag(linkedList0, list0);
      Locale.lookup(linkedList0, linkedList1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale.lookup(linkedList0, linkedList1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.add((Locale.LanguageRange) null);
      locale0.getUnicodeLocaleKeys();
      weka.core.matrix.Matrix matrix0 = weka.core.matrix.Matrix.random(8, 10);
      Locale locale1 = Locale.JAPANESE;
      linkedList1.add(locale1);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 1.0000000009313226;
      objectArray0[0] = (Object) 10;
      Optimization.solveTriangle(matrix0, doubleArray0, true, (boolean[]) null);
      Optimization optimization0 = mock(Optimization.class, CALLS_REAL_METHODS);
      Optimization.DynamicIntArray optimization_DynamicIntArray0 = optimization0.new DynamicIntArray(10);
      optimization_DynamicIntArray0.addElement(10);
      assertEquals(1, optimization_DynamicIntArray0.size());
  }
}
