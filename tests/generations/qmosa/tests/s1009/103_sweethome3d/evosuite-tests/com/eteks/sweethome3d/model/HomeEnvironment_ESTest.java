/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 07:03:24 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.024884788669466
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setLightColor((-576));
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      Camera camera0 = new Camera(523.2F, 1955.0F, 1955.0F, 1955.0F, (-576), 0.0F);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, (String) null, homeEnvironment0, camera1);
      Object object0 = new Object();
      camera0.setTime(60000L);
      propertyChangeEvent0.setPropagationId(object0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property.valueOf("DRAWING_MODE");
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getDrawingMode();
      assertEquals(180, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Random.setNextRandom(4028);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, (-2602), 0.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(441, homeTexture0, (-2602), (-2078), 0.0F);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertNotNull(homeTexture1);
      
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(25, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2078), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(441, homeEnvironment0.getGroundColor());
      assertEquals((-2602), homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.19741190322987
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Random.setNextRandom((-1173));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-151), (HomeTexture) null, (-151), (-151), (-1173));
      homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-1173));
      homeEnvironment0.setWallsAlpha((-1173));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setPhotoWidth((-880));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setGroundColor(17);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoHeight();
      Random.setNextRandom((-880));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getVideoHeight();
      Random.setNextRandom(2264);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Bax ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ln.at9q]_&sT~VZE");
      Random.setNextRandom(1765);
      CatalogTexture catalogTexture0 = new CatalogTexture("editorSubFolder.Windows", "editorSubFolder.Windows", (Content) null, 1.0F, (-1.0F), "editorSubFolder.Windows", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1899, homeTexture0, (-1360), homeTexture0, 1765, (-1.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1360), homeEnvironment0.getSkyColor());
      assertEquals(1899, homeEnvironment0.getGroundColor());
      assertEquals(1765, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byteArray0[0] = (byte) (-55);
      float float0 = 0.0F;
      String string0 = null;
      Class<Integer> class0 = Integer.class;
      ResourceURLContent resourceURLContent0 = null;
      try {
        resourceURLContent0 = new ResourceURLContent(class0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 1.3333334F, (-1108.42F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("cY:(:2ky", "", (Content) null, (-5433.1F), 578.07306F, "cY:(:2ky");
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2054, homeTexture0, 0, (-1764), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture1 = homeEnvironment1.getGroundTexture();
      assertNotNull(homeTexture1);
      
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      int int0 = homeEnvironment3.getSkyColor();
      assertEquals(0, int0);
      assertEquals(2054, homeEnvironment3.getGroundColor());
      assertEquals(13684944, homeEnvironment3.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment3.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment3, homeEnvironment2);
      assertEquals(400, homeEnvironment3.getPhotoWidth());
      assertEquals((-1764), homeEnvironment3.getLightColor());
      assertEquals(240, homeEnvironment3.getVideoHeight());
      assertEquals(25, homeEnvironment3.getVideoFrameRate());
      assertEquals(300, homeEnvironment3.getPhotoHeight());
      assertTrue(homeEnvironment3.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSubpartSizeUnderLight(425);
      homeEnvironment1.setGroundColor(0);
      homeEnvironment0.setWallsAlpha(425);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getSubpartSizeUnderLight();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment0.setPhotoHeight(18);
      homeEnvironment1.setWallsAlpha(1097.0F);
      homeEnvironment1.setPhotoQuality((-593));
      homeEnvironment0.getPhotoAspectRatio();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.TexturesCategory", (PropertyChangeListener) null);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoWidth((-2332));
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(18, homeEnvironment0.getPhotoHeight());
      assertEquals((-1749), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, 0, 2.0F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-1501), homeTexture0, (-2144686785), (-1.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2144686785), homeEnvironment0.getLightColor());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1501), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getGroundTexture();
      homeEnvironment2.setSubpartSizeUnderLight(1.0F);
      homeEnvironment2.setGroundColor((-579));
      homeEnvironment2.setAllLevelsVisible(true);
      homeEnvironment2.getVideoAspectRatio();
      homeEnvironment1.setPhotoQuality((-2271));
      homeEnvironment1.getPhotoAspectRatio();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment2.getDrawingMode();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("k.pf\"4Q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.k.pf\"4Q
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setVideoFrameRate((-1834));
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(0.0F, 1778.99F, 0.0F, (-3042.239F), 308.0F, 2092.8848F, (-2436L), camera_Lens0);
      camera0.clone();
      Camera camera1 = new Camera(1.0F, (-1243.6316F), 1778.99F, (-1243.6316F), 1728.63F, 333.65887F);
      Camera camera2 = new Camera(333.65887F, 308.0F, 578.5226F, 184.0F, 578.5226F, 2092.8848F);
      homeEnvironment0.getVideoFrameRate();
      Random.setNextRandom((-1834));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Q@{|#G0b'3Lej_kf", temporaryURLContent0, 1021.68F, 2176.8F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 0);
      homeEnvironment0.getLightColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("RATIO_2_1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.RATIO_2_1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.259345973978942
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(425, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment2.setVideoWidth(425);
      homeEnvironment2.setCeillingLightColor((-3397));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment3.setSubpartSizeUnderLight(1.0F);
      homeEnvironment3.setGroundColor((-579));
      homeEnvironment3.setAllLevelsVisible(true);
      homeEnvironment3.getVideoAspectRatio();
      homeEnvironment3.setPhotoHeight(425);
      homeEnvironment3.setPhotoQuality(2541);
      homeEnvironment2.setWallsAlpha(0.0F);
      homeEnvironment1.setPhotoQuality((-2271));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "_]0!Qt@$;'S", "", homeEnvironment3);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getLightColor();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment3.isAllLevelsVisible();
      homeEnvironment1.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Random.setNextRandom(4028);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 25.0F, 2610.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(17, homeTexture0, (-2602), 0, (-191.36678F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(17, homeEnvironment1.getGroundColor());
      assertEquals(0, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals((-2602), homeEnvironment1.getSkyColor());
      assertEquals((-191.36678F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1839));
      homeEnvironment0.clone();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(1898.5089F, 1898.5089F, 1898.5089F, 102.08972F, 0.0F, 0L, 565L, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      camera0.setLens(camera_Lens1);
      Object object5 = new Object();
      Object object6 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object5, "", object6, object6);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1839), homeEnvironment0.getVideoQuality());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.122928297357194
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(441, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment1.setCeillingLightColor(92);
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.setLightColor(2733);
      homeEnvironment0.setSubpartSizeUnderLight(441);
      homeEnvironment0.clone();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.setPhotoHeight(1839);
      homeEnvironment1.setWallsAlpha(1.0F);
      homeEnvironment1.setPhotoQuality((-3397));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.getSubpartSizeUnderLight();
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(1839, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-485));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-485), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Random.setNextRandom(4028);
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("nN=;@4v", "SKY_TEXTURE", uRLContent0, (-2.13632013E9F), (-2602), "mx05],", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2121, homeTexture0, (-2078), (-2078), 4028);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2121, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2078), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-2078), homeEnvironment0.getLightColor());
      assertNotNull(homeTexture1);
      assertEquals(4028.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-154));
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "blsG5n=0YA@,mOt", object2, object1);
      homeEnvironment1.getCeillingLightColor();
      System.setCurrentTimeMillis((-154));
      Random.setNextRandom((-154));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2746));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality((-2746));
      homeEnvironment1.getPhotoWidth();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2746), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0257505895352663
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("?xuMoZ", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(15);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setVideoWidth(0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth((-718));
      homeEnvironment1.getVideoHeight();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(0, homeEnvironment0.getCeillingLightColor());
      assertEquals(15, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("Application Data", "Application Data", (Content) null, 5, 5, "Application Data");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, homeTexture0, (-82), homeTexture0, 5, (-82));
      homeEnvironment0.getSkyColor();
      Random.setNextRandom(5);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality((-38));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object2, "r[P4t?W8E(6&h['D!", "r[P4t?W8E(6&h['D!", object2);
      homeEnvironment1.getVideoHeight();
      AspectRatio aspectRatio1 = homeEnvironment1.getPhotoAspectRatio();
      assertEquals((-38), homeEnvironment0.getPhotoQuality());
      assertEquals(AspectRatio.RATIO_2_1, aspectRatio1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)102;
      byteArray0[3] = (byte) (-65);
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte)5;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FILL");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.325016622744741
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(425, (HomeTexture) null, 3524, (HomeTexture) null, (-3397), 3524);
      homeEnvironment2.setVideoWidth(425);
      homeEnvironment2.setCeillingLightColor((-3397));
      HomeEnvironment homeEnvironment3 = homeEnvironment1.clone();
      homeEnvironment0.setVideoQuality((-1913));
      homeEnvironment3.setSubpartSizeUnderLight(464.0736F);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment4.setVideoWidth(425);
      homeEnvironment2.setSkyColor((-1913));
      homeEnvironment1.setPhotoQuality(3524);
      homeEnvironment2.getVideoFrameRate();
      homeEnvironment3.setVideoWidth(425);
      homeEnvironment2.getLightColor();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setPhotoWidth(1);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment5 = homeEnvironment3.clone();
      homeEnvironment5.getVideoCameraPath();
      homeEnvironment5.setLightColor(1);
      HomeEnvironment homeEnvironment6 = new HomeEnvironment();
      homeEnvironment6.setVideoFrameRate(2350);
      homeEnvironment6.getPhotoAspectRatio();
      homeEnvironment4.getVideoCameraPath();
      assertEquals(319, homeEnvironment4.getVideoHeight());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.1262368167947456
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoQuality(400);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(400);
      homeEnvironment1.setPhotoQuality(400);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.setVideoWidth((-2602));
      homeEnvironment0.getLightColor();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.setPhotoWidth(400);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment2.getPhotoQuality();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment2.getGroundTexture();
      System.setCurrentTimeMillis(60000L);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Z <", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Z <", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(335);
      homeEnvironment0.setVideoWidth(335);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(251, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Y", "Y", "", object0);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeEvent0.setPropagationId(homeEnvironment1);
      propertyChangeEvent0.toString();
      homeEnvironment0.clone();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoHeight();
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListener1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-112);
      byteArray0[4] = (byte)81;
      byteArray0[5] = (byte) (-10);
      byteArray0[6] = (byte)67;
      byteArray0[7] = (byte) (-64);
      byteArray0[8] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      HomeEnvironment.Property homeEnvironment_Property2 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property2, propertyChangeListenerProxy0);
      homeEnvironment1.isAllLevelsVisible();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.Y
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7353390710828336
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoFrameRate((-1528));
      homeEnvironment0.setVideoFrameRate((-1528));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getGroundTexture();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("@w#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.@w#
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((byte) (-55), 0.0F, (byte) (-55), 308.0F, 1842.477F, 1842.477F, (byte) (-55), camera_Lens0);
      Camera camera1 = camera0.clone();
      Camera camera2 = new Camera((-1.0F), 0.0F, (-1243.6316F), 1.5F, 0.0F, (-5889.0F));
      Camera camera3 = new Camera(0.0F, 0.0F, (-535.749F), (byte) (-55), 1842.477F, 1.5F);
      assertFalse(camera3.equals((Object)camera1));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.259345973978942
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(1046);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getVideoHeight();
      homeEnvironment0.setGroundColor(740);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.valueOf("LIGHT_COLOR");
      CatalogTexture catalogTexture0 = new CatalogTexture("LIGHT_COLOR", (Content) null, 240, 0.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      homeEnvironment1.setCeillingLightColor(17);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.setCeillingLightColor(740);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LIGHT_COLOR", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Object object0 = new Object();
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.isObserverCameraElevationAdjusted();
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.Property.values();
      homeEnvironment1.setGroundColor((-148));
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(1046, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Y", "Y", "", object0);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeEvent0.setPropagationId(homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoHeight((-153));
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoHeight();
      assertEquals((-153), homeEnvironment1.getPhotoHeight());
      
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy3);
      assertEquals(13427964, homeEnvironment2.getSkyColor());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.378143862792398
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoWidth(2171);
      homeEnvironment1.setCeillingLightColor(2171);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment2.setPhotoQuality(2171);
      homeEnvironment1.setGroundColor(2171);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment2.getVideoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment2.setGroundColor(384);
      homeEnvironment1.setGroundColor((-2498));
      HomeEnvironment homeEnvironment3 = new HomeEnvironment((-1559), (HomeTexture) null, (-1559), (-1559), (-631));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment3.getWallsAlpha();
      homeEnvironment0.setVideoQuality(962);
      homeEnvironment1.setPhotoHeight(400);
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment3.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoWidth((-4411));
      Random.setNextRandom(612);
      homeEnvironment0.clone();
      assertEquals((-4411), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.37848691596564
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("v4", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.setSubpartSizeUnderLight(3511.0F);
      homeEnvironment0.setGroundColor(707);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment2.getVideoAspectRatio();
      homeEnvironment2.setCeillingLightColor(707);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.setObserverCameraElevationAdjusted(true);
      homeEnvironment3.setPhotoHeight(707);
      homeEnvironment3.setWallsAlpha((-766.819F));
      homeEnvironment2.setPhotoQuality(707);
      HomeEnvironment homeEnvironment4 = homeEnvironment3.clone();
      homeEnvironment4.getPhotoAspectRatio();
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListener1);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("PHOTO_QUALITY", propertyChangeListenerProxy2);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy3);
      homeEnvironment0.getLightColor();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment3.getSkyColor();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment3.getVideoHeight();
      assertEquals((-766.819F), homeEnvironment3.getWallsAlpha(), 0.01F);
      assertEquals(240, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(11053224);
      homeEnvironment0.clone();
      String string0 = "&-c8";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("&-c8", "&-c8", 2171, "rSW", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Class<Object> class0 = Object.class;
      ResourceURLContent resourceURLContent1 = null;
      try {
        resourceURLContent1 = new ResourceURLContent(class0, "rSW", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown resource rSW
         //
         verifyException("com.eteks.sweethome3d.tools.ResourceURLContent", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URL uRL1 = MockURL.URL(uRL0, "h");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("eIDEO_ASz2PECT_RATIO", "eIDEO_ASz2PECT_RATIO", uRLContent0, (-1.0F), (-350.90073F), "h");
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 300, homeTexture0, 11, 11);
      homeEnvironment0.getSkyTexture();
      assertEquals(11.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JBC(xD#&P");
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 0.0F, 195, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(195, homeTexture0, (-2793), homeTexture0, 1, (-2793));
      homeEnvironment0.setLightColor(769);
      assertEquals(769, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-3163));
      homeEnvironment0.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RaLYe9nWtcxTa#Wt", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("RaLYe9nWtcxTa#Wt", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("{MfzZ$~u)$d9V7", propertyChangeListenerProxy1);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("(h{b*{f:+]J|evC", "{MfzZ$~u)$d9V7", propertyChangeListenerProxy0, "{MfzZ$~u)$d9V7");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("RaLYe9nWtcxTa#Wt", propertyChangeListenerProxy1);
      assertFalse(propertyChangeListenerProxy3.equals((Object)propertyChangeListenerProxy0));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.046430838943019
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      Camera camera0 = new Camera(300, 300, 754.1443F, 1.0F, 726.55F, 1596.109F);
      camera0.setX(1.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Z <", "Z <", camera0, "Z <");
      Object object1 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Object object2 = new Object();
      propertyChangeEvent0.setPropagationId(object2);
      propertyChangeEvent0.toString();
      homeEnvironment0.setVideoWidth(300);
      homeEnvironment0.getLightColor();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoWidth((-1));
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setLightColor(13684944);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getVideoHeight();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(300, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-21));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Class<String> class0 = String.class;
      homeEnvironment1.getDrawingMode();
      ResourceURLContent resourceURLContent1 = null;
      try {
        resourceURLContent1 = new ResourceURLContent(class0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-704));
      homeEnvironment0.setPhotoQuality(8192);
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getHttpExample();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte) (-30);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      boolean boolean0 = false;
      try { 
        MockURL.URL("y\"EF~yR!YKjHGTwO;", "kx!UYxgGQX/V8", "y\"EF~yR!YKjHGTwO;");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: y\"ef~yr!ykjhgtwo;
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("&-c8", "Z<r<O8Ny", 2171, "rSW", uRLStreamHandler0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      URLStreamHandler uRLStreamHandler1 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("9,k|S", "rSW", 7, "WALLS_ALPHA", uRLStreamHandler1);
      ResourceURLContent resourceURLContent1 = new ResourceURLContent(uRL0, false);
      homeEnvironment2.setPhotoWidth(400);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.clone();
      homeEnvironment2.setLightColor(400);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment2.getPhotoWidth();
      assertEquals(400, homeEnvironment2.getLightColor());
      
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoFrameRate((-1523));
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setCeillingLightColor((-1523));
      homeEnvironment0.setVideoWidth((-1523));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.clone();
      assertEquals((-1523), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = 4;
      Random.setNextRandom(4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(4);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoHeight(4);
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", uRLContent0, 0.0F, (-2602), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2602), homeTexture0, (-2602), 1562, (-1.0F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      String string0 = "";
      PropertyChangeListener propertyChangeListener0 = null;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("-Ry9a", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(0.0F, (-272.986F), (byte) (-55), (-272.986F), (-1.0F), 0.0F);
      camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "+kAi0Ogc7*6VJ5!kH", (Object) null, homeEnvironment1);
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LIGHT_COLOR");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment2.getSkyTexture();
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment2.getSkyColor());
      assertEquals(0.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment2.getGroundColor());
      assertEquals(13684944, homeEnvironment2.getLightColor());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertEquals(300, homeEnvironment2.getPhotoHeight());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 5, 1859.045F, "SKY_COLOR", false);
      CatalogTexture catalogTexture1 = new CatalogTexture("SKY_COLOR", " J/{w`lqr<", (Content) null, 1859.045F, 5, " J/{w`lqr<", false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, homeTexture0, 5, homeTexture0, 5, (-506.99695F));
      homeEnvironment0.getGroundTexture();
      assertEquals(5, homeEnvironment0.getLightColor());
      assertEquals(5, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(5, homeEnvironment0.getSkyColor());
      assertEquals((-506.99695F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.508084841459723
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(24);
      homeEnvironment0.setVideoQuality((-129));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor((-129));
      homeEnvironment0.setGroundColor((-129));
      homeEnvironment0.setCeillingLightColor((-129));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoQuality((-129));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoQuality((-129));
      assertEquals((-129), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setGroundColor(2538);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(13684944);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL1, false);
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      assertFalse(temporaryURLContent1.isJAREntry());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1598), (HomeTexture) null, (-1598), 1446, (-1560.9572F));
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setGroundColor((-245));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("AN@,F@wcv'1", uRLContent0, 4934, 1.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      int int0 = 0;
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(4934, homeTexture0, 0, (-1073741823), 425.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("d#vO~T`irD", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("tiq", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, "JX0N6p44", object0, "AN@,F@wcv'1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.301160282549396
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      MockURL.URL(uRL0, "");
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      homeEnvironment0.setGroundColor((-5672));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality((-1550));
      homeEnvironment1.getPhotoAspectRatio();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("-K`%& ", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-5672), (HomeTexture) null, (-579), 0, 4952.381F);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment1.getVideoHeight();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment.Property.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("FILL_AND_OUTLINE", (Content) null, 111.4F, 1212.9279F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(330, homeTexture0, (-1511), homeTexture0, 330, 1.7777778F);
      HomeTexture homeTexture1 = homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeTexture homeTexture2 = new HomeTexture(homeTexture1);
      homeEnvironment0.clone();
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      // Undeclared exception!
      try { 
        homeEnvironment1.setGroundTexture(homeTexture2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-158.1079F));
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      MockURL.getFtpExample();
      URL uRL1 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      ResourceURLContent resourceURLContent1 = new ResourceURLContent(uRL1, false);
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Random.setNextRandom(4028);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      assertFalse(object4.equals((Object)object2));
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      homeEnvironment0.setVideoWidth(2621);
      homeEnvironment0.setCeillingLightColor(20);
      homeEnvironment0.setVideoWidth(2733);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.clone();
      homeEnvironment1.getGroundColor();
      homeEnvironment1.getVideoHeight();
      Random.setNextRandom(2621);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(2050, homeEnvironment0.getVideoHeight());
      assertEquals(20, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASz2PECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASz2PECT_RATIO", "VIDEO_ASz2PECT_RATIO", uRLContent0, (-1.0F), (-337.5078F), "");
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment.DrawingMode.values();
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 11, 3, (-337.5078F));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(11, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(3, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-337.5078F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.008925238667177
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setVideoQuality(400);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_N,'Y@?|u}Vk~|Sv5");
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoWidth(400);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment1.getPhotoAspectRatio();
      HomeEnvironment.Property.values();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getVideoHeight();
      System.setCurrentTimeMillis(300);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("]Z <", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("]Z <", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoWidth(335);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(251, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("07mI~xG>^D", "07mI~xG>^D", temporaryURLContent0, (-477.731F), (-477.731F), (String) null, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)3;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)75;
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.6286003732844097
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      homeEnvironment0.setCeillingLightColor((-1787));
      homeEnvironment0.setPhotoWidth(1172);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setCeillingLightColor(1172);
      homeEnvironment1.setPhotoWidth(1172);
      homeEnvironment1.getCeillingLightColor();
      System.setCurrentTimeMillis((-1787));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.clone();
      homeEnvironment2.getPhotoAspectRatio();
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment2.getVideoAspectRatio());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-77);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)102;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Y", "Y", "", object0);
      propertyChangeEvent0.setPropagationId("");
      propertyChangeEvent0.setPropagationId(homeEnvironment1);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setPhotoHeight(46);
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoHeight();
      assertEquals(46, homeEnvironment1.getPhotoHeight());
      
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy3);
      assertEquals(13684944, homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ALL_LEVELS_VISIBLE");
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Mac OS X", "com.eteks.sweethome3d.tools.temporarySubFolder", uRLContent0, 1.3333334F, 2610.0F, "", true);
      catalogTexture0.getCategory();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, (-1252.4891F), (-399.24F), true);
      catalogTexture1.setCategory((TexturesCategory) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("hXa?3y=0.1<0", uRLContent0, 1.0F, 1.0F);
      CatalogTexture catalogTexture3 = new CatalogTexture("=gM9ZL_-", temporaryURLContent0, 2667.13F, 2610.0F);
      CatalogTexture catalogTexture4 = new CatalogTexture("", "hXa?3y=0.1<0", temporaryURLContent0, (-1832.2F), 2338.9287F, "8_");
      catalogTexture4.compareTo(catalogTexture2);
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-704), homeTexture0, (-704), (-2297.4414F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-704), homeEnvironment1.getLightColor());
      assertEquals((-2297.4414F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-704), homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.5F);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("LIGHT_COLOR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.LIGHT_COLOR
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent1 = null;
      try {
        resourceURLContent1 = new ResourceURLContent(class0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("A[6(wB", propertyChangeListener0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.toArray();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>(linkedList0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(3741.26F, (-2498.048F), (-1731.6F), (-2498.048F), (-2498.048F), 1371.4329F, 1458L, camera_Lens0);
      Camera camera1 = camera0.clone();
      linkedList1.addFirst(camera1);
      homeEnvironment1.setVideoCameraPath(linkedList1);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent1 = null;
      try {
        resourceURLContent1 = new ResourceURLContent(class0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = 15;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JBC(xD#&P");
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("Uhf=1U@", "LENS", uRLContent0, 15, (-2689.85F), "com.eteks.sweethome3d.model.HomeEnvironment$Property");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1011, homeTexture0, 1011, 966, 15);
      homeEnvironment0.setVideoFrameRate(11053224);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, uRLContent0, 24, (-111.7592F));
      float float0 = (-1.0F);
      catalogTexture0.setCategory((TexturesCategory) null);
      // Undeclared exception!
      try { 
        uRLContent0.getJAREntryName();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Content isn't a JAR entry
         //
         verifyException("com.eteks.sweethome3d.tools.URLContent", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(24);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(24);
      homeEnvironment0.setVideoQuality(24);
      assertEquals(24, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment1.setWallsAlpha(0.0F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("A[6(wB", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "applicationSubFolder.Mac OS X", homeEnvironment1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals(240, homeEnvironment2.getVideoHeight());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(13427964, homeEnvironment2.getSkyColor());
      assertEquals(11053224, homeEnvironment2.getGroundColor());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertNotSame(homeEnvironment2, homeEnvironment0);
      assertEquals(13684944, homeEnvironment2.getLightColor());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_ASz2PECT_RATIO", uRLContent0, (-1.0F), (-1.0F));
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASz2PECT_RATIO", "VIDEO_ASz2PECT_RATIO", uRLContent0, (-1.0F), (-337.5078F), "");
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1011, homeTexture0, 0, homeTexture0, 1011, (-1.0F));
      homeEnvironment0.setGroundTexture(homeTexture0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals(1011, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(1011, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(2532);
      homeEnvironment1.setPhotoQuality(0);
      assertEquals(2532, homeEnvironment1.getVideoQuality());
      
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("M|nvC>", propertyChangeListenerProxy0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("A[6(wB", "M|nvC>", "M|nvC>", "com.eteks.sweethome3d.model.HomeEnvironment$DrawingMode");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("Can't create temporary folder ", propertyChangeListenerProxy1);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ln.at9q]_&sT~VZE");
      byte[] byteArray1 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-15.02F));
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Random.setNextRandom(4028);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.938311329683084
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 19, 19, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, homeTexture0, 19, 61, 19);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setGroundColor((-1559));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_TEXTURE;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.setVideoQuality(19);
      homeEnvironment0.setPhotoHeight(19);
      homeEnvironment0.setLightColor(61);
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment1.getPhotoAspectRatio());
      assertEquals((-1559), int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(1784);
      homeEnvironment0.setPhotoHeight(501);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      assertFalse(object4.equals((Object)object2));
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(24);
      homeEnvironment0.setVideoQuality((-129));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setCeillingLightColor((-129));
      homeEnvironment0.setGroundColor((-129));
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoQuality((-129));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoQuality((-129));
      homeEnvironment0.getVideoAspectRatio();
      assertEquals((-129), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      Class<String> class0 = String.class;
      ResourceURLContent resourceURLContent1 = null;
      try {
        resourceURLContent1 = new ResourceURLContent(class0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
