/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 04:32:31 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.CardLayout;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.event.HierarchyBoundsListener;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.List;
import java.util.Locale;
import java.util.function.Predicate;
import javax.swing.Action;
import javax.swing.JApplet;
import javax.swing.JCheckBox;
import javax.swing.JLayeredPane;
import javax.swing.JSpinner;
import javax.swing.JToggleButton;
import javax.swing.JToolBar;
import javax.swing.SpinnerListModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.plaf.multi.MultiTableUI;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.awt.SunHints;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSMethod;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSTaskAtom;
import umd.cs.shop.JSTasks;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2653607117359171
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "one");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "error in parsing file");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "Returning failure from find-plan: Can not find an applicable method");
      MockURL.getFileExample();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)96;
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      byteArray0[1] = (byte)96;
      JSJshopVars.exclamation = 8;
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)43;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "k";
      stringArray0[1] = "error in parsing file";
      stringArray0[2] = "one";
      stringArray0[3] = "error in parsing file";
      JSJshop.main(stringArray0);
      byteArray0[5] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "1DN.8L!L\"+");
      jSJshop0.testParser();
      jSJshop0.getAddList();
      jSJshop0.testParser();
      StringReader stringReader0 = new StringReader("1DN.8L!L\"+");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8793886467027037
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Error in readFile() : ");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      jSJshop0.testParser();
      jSJshop0.getAddList();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      System.setCurrentTimeMillis((-3698L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(",age p:/,age p:");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "(z)wb8q");
      String string0 = ",age p:";
      jSJshop0.getBufferedReader(",age p:", ",age p:", (JApplet) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ",age p:";
      JSpinner jSpinner0 = null;
      try {
        jSpinner0 = new JSpinner((SpinnerModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // model cannot be null
         //
         verifyException("javax.swing.JSpinner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8756625184129461
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "b)G>x(W=&-bHQ6^.&b");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "]?gv^datq");
      JSJshopVars.lessT = 1;
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "Returning failure from find-plan: Can not find an applicable method");
      MockURL.getFileExample();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)96;
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      byteArray0[1] = (byte)96;
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)34;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "1DN.8L!L\"+");
      jSJshop0.testParser();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      JSJshopVars.lessT = (int) (byte)96;
      jSJshop0.getAddList();
      jSJshop0.testParser();
      StringReader stringReader0 = new StringReader("1DN.8L!L\"+");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8964826637967207
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "error in parsing file");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "zXNVOt/syuF')')p2");
      MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)43;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "zXNVOt/syuF')')p2");
      jSJshop0.testParser();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      jSJshop0.getAddList();
      jSJshop0.testParser();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8964826637967207
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "error in parsing file");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "zXNVOt/syuF')')p2");
      MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)43;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "zXNVOt/syuF')')p2");
      jSJshop0.testParser();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      jSJshop0.getAddList();
      jSJshop0.testParser();
      StringReader stringReader0 = new StringReader("zXNVOt/syuF')')p2");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1949913371291307
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.sol();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)42;
      byteArray0[0] = (byte)42;
      JSJshopVars.rightBrac = 3;
      byteArray0[1] = (byte)93;
      JSJshopVars.interrogation = (int) (byte)93;
      byteArray0[3] = (byte)93;
      jSJshop0.getAddList();
      byteArray0[3] = (byte)93;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockURL.getFileExample();
      jSJshop0.testParser();
      jSJshop0.getSolution();
      System.setCurrentTimeMillis((-1L));
      jSJshop0.testParser();
      jSJshop0.getSolution();
      System.setCurrentTimeMillis((byte)42);
      jSJshop0.getAddList();
      JToggleButton jToggleButton0 = new JToggleButton();
      MultiTableUI multiTableUI0 = new MultiTableUI();
      CardLayout cardLayout0 = new CardLayout();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      jSJshop0.getSolution();
      Integer.divideUnsigned((byte)42, (byte)42);
      Integer.getInteger("umd.cs.shop.JSState");
      // Undeclared exception!
      try { 
        renderingHints0.put(jToggleButton0, integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.JToggleButton cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8964826637967207
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "error in parsing file");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "zXNVOt/syuF')')p2");
      MockURL.getFileExample();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)118;
      byteArray0[2] = (byte)43;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "zXNVOt/syuF')')p2");
      jSJshop0.testParser();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      jSJshop0.getAddList();
      jSJshop0.testParser();
      StringReader stringReader0 = new StringReader("zXNVOt/syuF')')p2");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getAddList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5150643074442467
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.sol();
      jSJshop0.getAddList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "umd.cs.shop.JSListIfThenElse");
      MockURL.getFileExample();
      jSJshop0.getDeleteList();
      JSJshopVars.flagExit = false;
      FileSystemHandling.createFolder(evoSuiteFile0);
      jSJshop0.parserFile("? ");
      jSJshop0.testParser();
      jSJshop0.getSolution();
      JSJshopVars.minus = (-2);
      System.setCurrentTimeMillis((-3130L));
      jSJshop0.testParser();
      System.setCurrentTimeMillis((-3130L));
      JSJshop jSJshop1 = new JSJshop("? ", "tcgwgaf&|5u-b");
      assertFalse(jSJshop1.equals((Object)jSJshop0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8906882058599346
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "P:yg~");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "-CcQW%@G");
      jSJshop0.testParser();
      jSJshop0.getAddList();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      JSpinner jSpinner0 = new JSpinner();
      SpinnerListModel spinnerListModel0 = null;
      try {
        spinnerListModel0 = new SpinnerListModel((List<?>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SpinnerListModel(List) expects non-null non-empty List
         //
         verifyException("javax.swing.SpinnerListModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8857925600589074
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPlan jSPlan0 = new JSPlan();
      JSJshop jSJshop1 = new JSJshop();
      jSJshop1.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "make-domain ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "n6p");
      MockURL.getFileExample();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "9,_aSw[oMT1#t>mf@\"");
      jSJshop0.testParser();
      jSJshop0.getAddList();
      System.setCurrentTimeMillis((-3130L));
      jSJshop1.testParser();
      int int0 = 63;
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel(63, 63, 3293, 3293);
      JSpinner jSpinner0 = new JSpinner();
      JSpinner jSpinner1 = new JSpinner(spinnerNumberModel0);
      JSpinner.ListEditor jSpinner_ListEditor0 = null;
      try {
        jSpinner_ListEditor0 = new JSpinner.ListEditor(jSpinner0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerListModel
         //
         verifyException("javax.swing.JSpinner$ListEditor", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1515402137752404
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Expected 'defdomain or defproblem' ");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      jSJshop0.parserFile("The resulting state :");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "0 plans found");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "]<?gwv^datq");
      MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Expecting ')' for PlanningProblem");
      jSJshop0.testParser();
      jSJshop0.getSolution();
      jSJshop0.getAddList();
      jSJshop0.testParser();
      StringReader stringReader0 = new StringReader("0 plans found");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-100);
      byteArray0[1] = (byte) (-17);
      byteArray0[2] = (byte)54;
      byteArray0[3] = (byte) (-20);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0046024109418776
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "T/p/dn$/}rLfYs*M";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "T/p/dn$/}rLfYs*M");
      MockURL.getFileExample();
      String string1 = "1DN.8\\L!L\"+";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "1DN.8L!L\"+");
      jSJshop0.testParser();
      jSJshop0.getSolution();
      jSJshop0.getAddList();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      JSOperator jSOperator0 = new JSOperator();
      // Undeclared exception!
      try { 
        jSOperator0.standarizerOp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSOperator", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = 1;
      String string0 = "; ";
      StringReader stringReader0 = new StringReader("; ");
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("; ", (String) null, (JApplet) null);
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerDateModel
         //
         verifyException("javax.swing.JSpinner$DateEditor", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      System.setCurrentTimeMillis(0L);
      JSJshop jSJshop0 = new JSJshop();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "j ~?\">1+A>.(SF";
      stringArray0[1] = "farp.shp";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSTasks jSTasks0 = new JSTasks();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("make-domain ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "make-domain ");
      byte byte0 = (byte)86;
      jSJshop0.parserFile("make-domain ");
      System.setCurrentTimeMillis(0L);
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerDateModel
         //
         verifyException("javax.swing.JSpinner$DateEditor", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = 1;
      StringReader stringReader0 = new StringReader("; ");
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      byte[] byteArray0 = new byte[3];
      int int0 = 0;
      stringReader0.mark(0);
      streamTokenizer0.resetSyntax();
      stringReader0.markSupported();
      byteArray0[0] = (byte)0;
      stringReader0.mark(981);
      char[] charArray0 = new char[10];
      charArray0[2] = '.';
      charArray0[4] = '.';
      stringReader0.reset();
      charArray0[6] = '\u0000';
      streamTokenizer0.nextToken();
      stringReader0.reset();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)0, 0);
      charBuffer0.clear();
      stringReader0.read(charBuffer0);
      stringReader0.read(charArray0);
      streamTokenizer0.parseNumbers();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("&i;8nd4[5xvf*7/-qf@");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-36);
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte)119;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("&i;8nd4[5xvf*7/-qf@", "xpected 'dfdomain or defproblem' ");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.isGround();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object2;
      objectArray0[1] = object2;
      objectArray0[2] = (Object) jSTaskAtom0;
      objectArray0[3] = object3;
      objectArray0[4] = objectArray0[2];
      objectArray0[5] = object4;
      objectArray0[6] = (Object) jSTaskAtom0;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      jSTaskAtom0.add(object4);
      Object object5 = new Object();
      System.setCurrentTimeMillis((-5L));
      JSJshop jSJshop0 = new JSJshop();
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object1;
      objectArray0[1] = object2;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      System.setCurrentTimeMillis(11L);
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Predicate<JSPairPlanTSListNodes> predicate0 = Predicate.isEqual((Object) null);
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      Predicate<DefaultTableModel> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<JSPairPlanTSListNodes> predicate2 = predicate0.and(predicate0);
      Object object0 = new Object();
      Predicate<Object> predicate3 = Predicate.isEqual(object0);
      Predicate<Object> predicate4 = predicate3.or(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate4);
      predicate2.and(predicate6);
      Predicate<JSPairPlanTSListNodes> predicate7 = predicate2.negate();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      predicate1.negate();
      predicate7.and(predicate2);
      Predicate<JSPairPlanTSListNodes> predicate8 = predicate7.and(predicate0);
      predicate8.and(predicate0);
      Predicate<JSPairPlanTSListNodes> predicate9 = predicate2.negate();
      predicate8.or(predicate9);
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      Predicate<JSPairPlanTSListNodes> predicate0 = Predicate.isEqual((Object) jSJshop0);
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      Object object0 = new Object();
      Predicate<DefaultTableModel> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) jSPairPlanTSListNodes0);
      Predicate.isEqual((Object) jSJshop0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      Predicate<Object> predicate5 = predicate2.or(predicate4);
      Predicate<Object> predicate6 = predicate3.and(predicate5);
      Predicate<Object> predicate7 = predicate2.negate();
      Predicate<JSPairPlanTSListNodes> predicate8 = predicate0.negate();
      Predicate<Object> predicate9 = predicate6.or(predicate5);
      Predicate<JSPairPlanTSListNodes> predicate10 = predicate8.or(predicate0);
      predicate10.and(predicate2);
      predicate7.and(predicate6);
      Predicate<Object> predicate11 = predicate7.negate();
      Predicate<Object> predicate12 = predicate11.or(predicate2);
      Predicate<Object> predicate13 = predicate6.negate();
      Predicate<Object> predicate14 = predicate2.negate();
      Predicate<Object> predicate15 = predicate12.or(predicate13);
      Predicate<Object> predicate16 = predicate15.negate();
      Predicate<Object> predicate17 = predicate15.negate();
      Predicate<Object> predicate18 = predicate13.negate();
      Predicate<Object> predicate19 = predicate17.or(predicate2);
      Predicate<Object> predicate20 = predicate14.and(predicate19);
      predicate2.and(predicate20);
      Predicate<Object> predicate21 = Predicate.isEqual((Object) predicate4);
      predicate9.or(predicate18);
      Predicate<DefaultTableModel> predicate22 = predicate1.negate();
      predicate21.and(predicate20);
      predicate16.or(predicate9);
      Predicate<DefaultTableModel> predicate23 = predicate22.negate();
      predicate23.negate();
      String[] stringArray0 = new String[0];
      JSJshop.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis(2913L);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Searching satisfiers for";
      stringArray0[1] = "";
      stringArray0[2] = "one";
      stringArray0[3] = "WzfIefb5I";
      stringArray0[4] = "umd.cs.shop.JSTasks";
      stringArray0[5] = "UT-sHpH/I49GkzU";
      stringArray0[6] = "********* tree final solution*******";
      stringArray0[7] = "< ";
      stringArray0[8] = "one";
      JSJshop.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "Lll";
      JSMethod jSMethod0 = new JSMethod();
      jSMethod0.head();
      JSJshop jSJshop0 = new JSJshop();
      String string1 = "\"t,s0z)d\\hv";
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("", "\"t,s0z)dhv", (JApplet) null);
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerDateModel
         //
         verifyException("javax.swing.JSpinner$DateEditor", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object1;
      objectArray0[1] = object2;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      StringReader stringReader0 = new StringReader(":");
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      charArray0[1] = '@';
      stringReader0.read(charArray0);
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = 1;
      StringReader stringReader0 = new StringReader("; ");
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      byte[] byteArray0 = new byte[3];
      stringReader0.mark(0);
      streamTokenizer0.resetSyntax();
      stringReader0.markSupported();
      byteArray0[0] = (byte)0;
      stringReader0.mark(981);
      char[] charArray0 = new char[10];
      charArray0[2] = '8';
      stringReader0.reset();
      streamTokenizer0.nextToken();
      stringReader0.reset();
      stringReader0.read(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 0);
      charBuffer0.clear();
      stringReader0.read(charBuffer0);
      char[] charArray1 = new char[2];
      charArray1[0] = '\\';
      charArray1[1] = '\\';
      stringReader0.read(charArray1);
      streamTokenizer0.parseNumbers();
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop((String) null, "***************FINAL SOLUTION*******");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      Object object0 = new Object();
      Object object1 = new Object();
      jSTaskAtom0.add(object1);
      Object object2 = new Object();
      jSTaskAtom0.removeAllElements();
      Object object3 = new Object();
      Object object4 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = object1;
      objectArray0[1] = object2;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      jSTaskAtom0.add(object2);
      Object object5 = new Object();
      jSTaskAtom0.removeAllElements();
      Object object6 = new Object();
      Object object7 = new Object();
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      JSPlanningProblem jSPlanningProblem0 = jSJshop0.prob();
      assertNull(jSPlanningProblem0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = 1;
      StringReader stringReader0 = new StringReader("; ");
      stringReader0.read();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      byte[] byteArray0 = new byte[3];
      stringReader0.mark(0);
      streamTokenizer0.resetSyntax();
      stringReader0.markSupported();
      byteArray0[0] = (byte)0;
      stringReader0.mark(981);
      char[] charArray0 = new char[10];
      charArray0[2] = '8';
      charArray0[4] = '8';
      stringReader0.reset();
      charArray0[6] = '\u0000';
      stringReader0.reset();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)0, 0);
      stringReader0.read(charBuffer0);
      charArray0[8] = '8';
      stringReader0.read(charArray0);
      streamTokenizer0.ttype = (int) (byte)0;
      byteArray0[2] = (byte)39;
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.isGround();
      jSTaskAtom0.add((Object) "(_9!7(kLRx:Ok3?u");
      jSTaskAtom0.removeAllElements();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getSolution();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("(_9!7(kLRx:Ok3?u", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getTree();
      JApplet jApplet1 = JSJshop.applet;
      assertNull(jApplet1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Predicate<JSPairPlanTSListNodes> predicate0 = Predicate.isEqual((Object) null);
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      String[] stringArray0 = new String[4];
      Predicate<DefaultTableModel> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "all");
      Predicate<String> predicate3 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate2.and(predicate2);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate0.negate();
      Predicate<Object> predicate6 = predicate5.or(predicate2);
      Predicate<JSPairPlanTSListNodes> predicate7 = predicate0.or(predicate6);
      predicate0.and(predicate0);
      stringArray0[2] = "all";
      stringArray0[3] = "all";
      Predicate<Object> predicate8 = predicate2.and(predicate6);
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate10 = predicate9.or(predicate2);
      predicate2.negate();
      Predicate<Object> predicate11 = predicate2.negate();
      Predicate<Object> predicate12 = predicate6.negate();
      predicate11.negate();
      predicate10.negate();
      Predicate<Object> predicate13 = predicate9.and(predicate2);
      Predicate<Object> predicate14 = Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate15 = predicate13.or(predicate14);
      predicate1.negate();
      predicate15.and(predicate11);
      predicate12.or(predicate5);
      predicate1.negate();
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.8686985429648904
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "P:yg~");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getDeleteList();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "vhs7$dfR_)|d=");
      MockURL.getFileExample();
      jSJshop0.testParser();
      jSJshop0.getAddList();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      JCheckBox jCheckBox0 = new JCheckBox("* ", true);
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager0 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager1 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      Action action0 = null;
      MetalComboBoxUI.MetalComboBoxLayoutManager metalComboBoxUI_MetalComboBoxLayoutManager2 = metalComboBoxUI0.new MetalComboBoxLayoutManager();
      metalComboBoxUI_MetalComboBoxLayoutManager2.minimumLayoutSize(jCheckBox0);
      JToolBar jToolBar0 = new JToolBar("po");
      JToolBar jToolBar1 = null;
      try {
        jToolBar1 = new JToolBar(23);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // orientation must be one of: VERTICAL, HORIZONTAL
         //
         verifyException("javax.swing.JToolBar", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Predicate<JSPairPlanTSListNodes> predicate0 = Predicate.isEqual((Object) null);
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      String[] stringArray0 = new String[4];
      Predicate<DefaultTableModel> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "Bll");
      Predicate<String> predicate3 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate4 = predicate2.and(predicate2);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate0.negate();
      Predicate<Object> predicate6 = predicate5.or(predicate2);
      Predicate<JSPairPlanTSListNodes> predicate7 = predicate0.or(predicate6);
      predicate0.and(predicate0);
      stringArray0[2] = "Bll";
      stringArray0[3] = "Bll";
      Predicate<Object> predicate8 = predicate2.and(predicate6);
      Predicate<Object> predicate9 = predicate8.negate();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(" [");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte) (-51);
      byteArray0[4] = (byte)91;
      byteArray0[5] = (byte) (-54);
      byteArray0[6] = (byte)52;
      byteArray0[7] = (byte)126;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate10 = predicate9.or(predicate2);
      predicate2.negate();
      Predicate<Object> predicate11 = predicate9.negate();
      Predicate<Object> predicate12 = predicate6.negate();
      predicate11.negate();
      predicate10.negate();
      Predicate<Object> predicate13 = predicate9.and(predicate2);
      Predicate<Object> predicate14 = Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate15 = predicate13.or(predicate14);
      predicate1.negate();
      predicate15.and(predicate11);
      predicate12.or(predicate5);
      predicate1.negate();
      JSJshop.main(stringArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(" [", " [");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Bll");
      Object object0 = new Object();
      predicate0.test(object0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      stringArray0[2] = "Bll";
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate2.negate();
      Object object1 = new Object();
      Predicate.isEqual(object1);
      predicate0.negate();
      predicate0.negate();
      Predicate<Object> predicate7 = predicate3.negate();
      predicate7.negate();
      Predicate<Object> predicate8 = predicate6.negate();
      predicate5.and(predicate0);
      predicate8.negate();
      JSJshop.main(stringArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("jqG#7t@0%7}8", (String) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      String[] stringArray0 = new String[4];
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Lll");
      Predicate<String> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate0);
      stringArray0[2] = "Lll";
      stringArray0[3] = "Lll";
      Predicate<Object> predicate5 = predicate0.and(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate5.negate();
      Integer integer0 = new Integer(93);
      predicate5.test(integer0);
      predicate0.negate();
      Predicate<Object> predicate8 = predicate0.negate();
      Predicate<Object> predicate9 = predicate4.negate();
      predicate8.negate();
      predicate7.negate();
      Predicate.isEqual((Object) "Lll");
      predicate0.test(predicate1);
      Predicate<Object> predicate10 = predicate6.and(predicate0);
      Predicate<Object> predicate11 = Predicate.isEqual((Object) predicate1);
      predicate5.and(predicate4);
      Predicate<Object> predicate12 = predicate10.or(predicate11);
      predicate12.or(predicate10);
      predicate12.and(predicate8);
      predicate9.or(predicate3);
      JSJshop.main(stringArray0);
      JSOperator jSOperator0 = new JSOperator();
      jSOperator0.head();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("` ", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Locale.FilteringMode.values();
      Predicate<JSPairPlanTSListNodes> predicate0 = Predicate.isEqual((Object) null);
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      String[] stringArray0 = new String[4];
      Predicate<DefaultTableModel> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "all");
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate3 = predicate2.and(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate2);
      predicate0.or(predicate5);
      stringArray0[0] = "Here starts the tree";
      predicate0.and(predicate0);
      stringArray0[2] = "all";
      stringArray0[3] = "all";
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "v=4:k],74siehiujs");
      Predicate<Object> predicate7 = predicate6.negate();
      predicate7.and(predicate6);
      predicate7.or(predicate6);
      predicate1.negate();
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      System.setCurrentTimeMillis(3199L);
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      JApplet jApplet1 = JSJshop.applet;
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("not", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }
}
