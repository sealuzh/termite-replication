/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 06:28:30 GMT 2019
 */

package net.kencochrane.a4j.file;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;
import net.kencochrane.a4j.file.FileUtil;
import net.kencochrane.a4j.util.LoadProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileUtil_ESTest extends FileUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(":ThB4K[");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=%fhD/\"~&mode=&type=lite&page=&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ":FWk\"cO0Bwd");
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.listIterator();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.stream();
      arrayList1.add(":ThB4K[");
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer((-2145331859));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      integerArray0[3] = integer1;
      Integer integer3 = new Integer((int) integerArray0[3]);
      integerArray0[4] = integer3;
      Integer integer4 = new Integer((-1072));
      integerArray0[5] = integer4;
      Integer integer5 = new Integer((int) integerArray0[3]);
      integerArray0[6] = integer5;
      Integer integer6 = new Integer((int) integerArray0[1]);
      integerArray0[7] = integer6;
      Integer integer7 = new Integer((-2145331859));
      integerArray0[8] = integer7;
      arrayList0.toArray(integerArray0);
      fileUtil0.fetchBNFile("", "%fhD/\"~", "");
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer8 = new Integer(2);
      Integer integer9 = new Integer(2);
      Integer integer10 = new Integer(2);
      arrayList0.add(integer10);
      Integer integer11 = new Integer(2);
      Integer integer12 = new Integer(2);
      Integer integer13 = new Integer(341);
      Integer integer14 = new Integer((-2145338308));
      arrayList0.add(integer14);
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        arrayList3.listIterator((-4023));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4023
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/T_NULL__.XML");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "_X:&V1^rUYx['");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/NULL__.XML");
      byte[] byteArray0 = new byte[30];
      byteArray0[0] = (byte) (-56);
      arrayList0.add("_");
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte) (-80);
      byteArray0[5] = (byte) (-52);
      byteArray0[7] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      arrayList0.add("Peh`Pg)");
      FileUtil fileUtil0 = new FileUtil();
      Random.setNextRandom(913);
      Random.setNextRandom(913);
      fileUtil0.getBrowseNodeFile((String) null, "", "");
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_NULL.XML");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.stream();
      arrayList0.add("");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function1).apply(any());
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super Object, ?>) unaryOperator2);
      Function<Object, String> function2 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      function3.apply(unaryOperator0);
      unaryOperator1.compose((Function<? super Object, ?>) function3);
      Function.identity();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function3);
      Function<Object, String> function4 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function0);
      function4.andThen((Function<? super String, ?>) unaryOperator1);
      function2.compose((Function<? super String, ?>) function4);
      UnaryOperator.identity();
      function2.andThen((Function<? super String, ? extends String>) function2);
      function3.compose((Function<? super String, ?>) function4);
      File file0 = fileUtil0.getSimilarItems((String) null, "net.kencochrane.a4j.util.LoadProperties");
      assertNotNull(file0);
      assertEquals(5L, file0.length());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "jDhayi*L@Z");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate1.and(predicate2);
      Predicate.isEqual((Object) "jDhayi*L@Z");
      Predicate<Object> predicate7 = predicate0.negate();
      ArrayList<Object> arrayList3 = new ArrayList<Object>(arrayList1);
      arrayList3.parallelStream();
      predicate6.and(predicate7);
      Predicate<Object> predicate8 = predicate4.negate();
      Object object0 = new Object();
      Predicate.isEqual((Object) "<-6\"c]JRbvo?xQa8&t");
      predicate2.negate();
      predicate8.or(predicate1);
      arrayList3.removeIf(predicate5);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&KeywordSearch=jDhayi*L%40Z&mode=ShoppingCart=add&f=xml&dev-t=&type=&page=&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "<-6\"c]JRbvo?xQa8&t");
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList3.sort(comparator1);
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      File file0 = fileUtil0.downloadKeywordSearchFile("jDhayi*L@Z", "ShoppingCart=add&f=xml&dev-t=", "", "");
      assertNull(file0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.iterator();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      linkedList2.iterator();
      linkedList2.descendingIterator();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList4.push("");
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList6.add("");
      linkedList6.add("jDhayi*L@Z");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList2.containsAll(linkedList7);
      linkedList1.poll();
      linkedList5.containsAll(linkedList7);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      arrayList0.addAll((Collection<? extends String>) linkedList9);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/J(,G-__LITE__.XML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "jDhayi*L@Z");
      arrayList2.add("ts_");
      arrayList1.add("");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("j(,G-", "lite", "", "_");
      assertEquals(10, fileInputStream0.available());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/_A6BX~.:=\\(MA;Y;_.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      predicate4.test(predicate1);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) "a6bX~.:=(ma;Y;");
      Predicate<Object> predicate6 = predicate4.and(predicate5);
      arrayList1.stream();
      Predicate<Object> predicate7 = predicate1.or(predicate0);
      predicate7.and(predicate6);
      predicate2.negate();
      predicate6.test(predicate3);
      Object object3 = new Object();
      Predicate.isEqual((Object) "a6bX~.:=(ma;Y;");
      predicate6.or(predicate2);
      Predicate<Object> predicate8 = Predicate.isEqual(object2);
      Predicate<Object> predicate9 = predicate3.negate();
      predicate8.or(predicate9);
      UnaryOperator.identity();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getBrowseNodeFile("", "a6bX~.:=(ma;Y;", "");
      System.setCurrentTimeMillis(5L);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.iterator();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>(arrayList1);
      linkedList0.iterator();
      linkedList1.descendingIterator();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList1.containsAll(arrayList0);
      linkedList1.poll();
      linkedList1.containsAll(linkedList4);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SellerSearch=&Hmac=&type=&page=null&offerstatus=&Hmac=&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "jDhayi*L@Z");
      linkedList6.add("jDhayi*L@Z");
      arrayList1.addAll((Collection<? extends String>) linkedList6);
      arrayList2.add("jDhayi*L@Z");
      linkedList0.pollLast();
      arrayList0.add((String) null);
      linkedList1.removeAll(linkedList6);
      arrayList2.add((String) null);
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadThirdPartySearchFile("&Hmac=", "", (String) null, "&Hmac=");
      assertNull(file0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_NULL.XML");
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte) (-92);
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[4] = (byte)60;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SimilaritySearch=null&type=lite&offerpage=&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "kna[Iu>dIOD");
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function1).apply(any());
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super Object, ?>) unaryOperator2);
      Function<Object, String> function2 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      function3.apply(unaryOperator0);
      Function<Object, Object> function4 = unaryOperator1.compose((Function<? super Object, ?>) function3);
      Function.identity();
      function2.compose((Function<? super Object, ?>) function4);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function3);
      Function<Object, String> function5 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function0);
      Function.identity();
      function5.andThen((Function<? super String, ?>) unaryOperator1);
      function2.andThen((Function<? super String, ? extends String>) function2);
      function3.compose((Function<? super String, ?>) function5);
      File file0 = fileUtil0.getSimilarItems((String) null, "kna[Iu>dIOD");
      assertNotNull(file0);
      assertTrue(file0.canExecute());
      assertEquals("S_NULL.XML", file0.getName());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.iterator();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      linkedList2.iterator();
      linkedList2.descendingIterator();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList4.push("");
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList6.add("jDhayi*L@Z");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList2.containsAll(linkedList7);
      linkedList1.poll();
      linkedList5.containsAll(linkedList7);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      arrayList0.addAll((Collection<? extends String>) linkedList9);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/J(,G-__LITE__.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      arrayList3.add("");
      arrayList1.add("");
      LinkedList<String> linkedList10 = new LinkedList<String>();
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("j(,G-", "lite", "", "_");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function5 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function6 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function5);
      function4.compose((Function<? super Object, ?>) unaryOperator1);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function6);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function7 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      Function<Object, Object> function8 = Function.identity();
      Function<Object, Object> function9 = unaryOperator1.compose((Function<? super Object, ?>) function8);
      unaryOperator2.andThen((Function<? super Object, ? extends String>) function5);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function4);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_NULL.XML");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte)96;
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-99);
      byteArray0[6] = (byte)109;
      byteArray0[8] = (byte) (-36);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Function<Object, String> function10 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function6);
      unaryOperator1.compose((Function<? super Object, ?>) function6);
      function10.compose((Function<? super Object, ?>) function9);
      unaryOperator0.compose((Function<? super Object, ? extends String>) function7);
      function10.andThen((Function<? super String, ?>) function3);
      Random.setNextRandom((-1741));
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getAccessories((String) null, arrayList1);
      System.setCurrentTimeMillis((byte)96);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.iterator();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>(arrayList0);
      linkedList0.iterator();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&AsinSearch=&Hmac=&type=null&offerpage=a4j-config.txt&offer=)ElIP*E{ k7BeMr&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      linkedList1.descendingIterator();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList1.containsAll(arrayList0);
      linkedList5.poll();
      linkedList1.containsAll(linkedList4);
      LinkedList<String> linkedList6 = new LinkedList<String>();
      LinkedList<String> linkedList7 = new LinkedList<String>();
      arrayList0.addAll((Collection<? extends String>) linkedList7);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList0.add((String) null);
      arrayList2.add("Y}oPVDT;Z@");
      arrayList1.add((String) null);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      linkedList5.add((String) null);
      arrayList1.addAll((Collection<? extends String>) arrayList2);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getASINFile("&Hmac=", (String) null, ")ElIP*E{ k7BeMr", "a4j-config.txt");
      assertNull(file0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2801024911433996
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(":ThB4K[");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList1.add("0zz");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      FileSystemHandling.shouldAllThrowIOExceptions();
      unaryOperator0.andThen((Function<? super String, ? extends String>) unaryOperator1);
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_NULL_NET.KENCOCHRANE.A4J.DATA.QUERY_NET.KENCOCHRANE.A4J.DATA.QUERY.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ":ThB4K[");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getASINFile((String) null, "net.kencochrane.a4j.data.Query", (String) null, "net.kencochrane.a4j.data.Query");
      Random.setNextRandom((-1741));
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      fileUtil0.getAccessories(":ThB4K[", arrayList1);
      System.setCurrentTimeMillis((-1741));
      boolean boolean1 = fileUtil0.downloadOneASINFile("!b4%wR14", ":ThB4K[", "0zz", "#%PP'j]/&.I", "");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2761809225159486
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(":ThB4K[");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList1.add("0zz");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super String, ? extends String>) unaryOperator1);
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_NULL_NET.KENCOCHRANE.A4J.DATA.QUERY_NET.KENCOCHRANE.A4J.DATA.QUERY.XML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getASINFile((String) null, "net.kencochrane.a4j.data.Query", (String) null, "net.kencochrane.a4j.data.Query");
      Random.setNextRandom((-1741));
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      ArrayList<Object> arrayList3 = new ArrayList<Object>();
      fileUtil0.getAccessories("", arrayList1);
      System.setCurrentTimeMillis((-1741));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator.identity();
      UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/NULL_NULL_NET.KNCOCHRANE.A4J.DATA.QERY_NET.KNCOCHRANE.A4J.DATA.QERY.XML");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-85);
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)2;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.getASINFile((String) null, "net.kncochrane.a4j.data.Qery", (String) null, "net.kncochrane.a4j.data.Qery");
      Integer integer0 = new Integer(62);
      Integer integer1 = new Integer(62);
      Integer integer2 = new Integer(62);
      Integer integer3 = new Integer((-1));
      Integer integer4 = new Integer(3577);
      Integer integer5 = new Integer((-2145303460));
      Integer integer6 = new Integer((-2145303460));
      Integer integer7 = new Integer(589);
      Integer integer8 = new Integer((-2145303460));
      Integer integer9 = new Integer(572);
      Integer integer10 = new Integer(2498);
      Integer integer11 = new Integer(3577);
      Integer integer12 = new Integer(3577);
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      assertTrue(arrayList1.isEmpty());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.iterator();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      linkedList2.iterator();
      linkedList2.descendingIterator();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList4.push("");
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList6.add("");
      linkedList6.add("jDhayi*L@Z");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList2.containsAll(linkedList7);
      linkedList1.poll();
      linkedList5.containsAll(linkedList7);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      arrayList0.addAll((Collection<? extends String>) linkedList1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/J(,G-__LITE__.XML");
      FileSystemHandling.createFolder(evoSuiteFile0);
      arrayList2.add("ts_");
      arrayList1.add("");
      LinkedList<String> linkedList9 = new LinkedList<String>();
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("j(,G-", "lite", "", "_");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_{EKP.XML");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "{eKp");
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      arrayList2.listIterator();
      arrayList2.listIterator();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchAccessories("{eKp", arrayList1);
      arrayList0.stream();
      arrayList0.add("");
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-2145318844));
      Integer integer1 = new Integer((-2145318844));
      arrayList3.add(integer1);
      Integer integer2 = new Integer((-3345));
      Integer integer3 = new Integer((-3345));
      Integer integer4 = new Integer((-3345));
      Integer integer5 = new Integer(2);
      Integer integer6 = new Integer((-3345));
      arrayList2.add(integer0);
      ArrayList<Integer> arrayList4 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        arrayList4.listIterator(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function5 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function6 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function5);
      Function<Object, String> function7 = function4.compose((Function<? super Object, ?>) unaryOperator1);
      Function<Object, String> function8 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function6);
      Function<Object, String> function9 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      Function<Object, Object> function10 = Function.identity();
      Function<Object, Object> function11 = unaryOperator1.compose((Function<? super Object, ?>) function10);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function5);
      unaryOperator1.andThen((Function<? super Object, ? extends String>) function4);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/A_NULL.XML");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)100;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)100;
      byteArray0[4] = (byte)1;
      byteArray0[6] = (byte)109;
      byteArray0[8] = (byte) (-49);
      FileSystemHandling.createFolder(evoSuiteFile0);
      unaryOperator1.compose((Function<? super Object, ?>) function6);
      function8.compose((Function<? super Object, ?>) function11);
      unaryOperator0.compose((Function<? super Object, ? extends String>) function9);
      function7.andThen((Function<? super String, ?>) function3);
      Random.setNextRandom((byte)96);
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getAccessories((String) null, arrayList1);
      assertNotNull(file0);
      assertTrue(file0.canExecute());
      assertEquals("/A_NULL.XML", file0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/T_NULL__.XML");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/NULL__.XML");
      byte[] byteArray0 = new byte[30];
      byteArray0[0] = (byte) (-56);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[3] = (byte) (-56);
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte) (-80);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      arrayList0.add("Ph`g");
      FileUtil fileUtil0 = new FileUtil();
      Random.setNextRandom(913);
      Random.setNextRandom(913);
      fileUtil0.getBrowseNodeFile((String) null, "", "");
      System.setCurrentTimeMillis((-1L));
      Random.setNextRandom((byte)70);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_NULL.XML");
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.stream();
      arrayList0.add("");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function1).apply(any());
      UnaryOperator.identity();
      Function<Object, String> function2 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      function3.apply(unaryOperator0);
      Function<Object, Object> function4 = unaryOperator1.compose((Function<? super Object, ?>) function3);
      Function.identity();
      function2.compose((Function<? super Object, ?>) function4);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function3);
      Function<Object, String> function5 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function0);
      Function.identity();
      function5.andThen((Function<? super String, ?>) unaryOperator1);
      function2.compose((Function<? super String, ?>) function5);
      function2.andThen((Function<? super String, ? extends String>) function2);
      function3.compose((Function<? super String, ?>) function5);
      File file0 = fileUtil0.getSimilarItems((String) null, "");
      assertEquals(18L, file0.length());
      assertNotNull(file0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.137773400673192
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      byte[] byteArray0 = new byte[18];
      byteArray0[2] = (byte)60;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SimilaritySearch=null&type=lite&offerpage=&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "new");
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte)1;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("aU{Nk08@DI{!C)9");
      arrayList0.stream();
      arrayList0.add("");
      UnaryOperator.identity();
      UnaryOperator.identity();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/S_NULL.XML");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "aU{Nk08@DI{!C)9");
      unaryOperator2.apply((String) null);
      UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super String, ? extends String>) unaryOperator1);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems((String) null, "");
      assertEquals(15, fileInputStream0.available());
      assertNotNull(fileInputStream0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      byte[] byteArray0 = new byte[18];
      byteArray0[2] = (byte)60;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&SimilaritySearch=null&type=lite&offerpage=&offer=all&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "new");
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte)1;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.stream();
      arrayList0.add("");
      UnaryOperator.identity();
      UnaryOperator.identity();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.apply((String) null);
      UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super String, ? extends String>) unaryOperator1);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems((String) null, "");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LoadProperties.instance();
      FileUtil fileUtil0 = new FileUtil();
      // Undeclared exception!
      try { 
        fileUtil0.renameFile("T(a3L\"d8k#m", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.iterator();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      linkedList2.iterator();
      linkedList2.descendingIterator();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList4.push("");
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList6.add("");
      linkedList6.add("jDhayi*L@Z");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList2.containsAll(linkedList7);
      linkedList1.poll();
      linkedList5.containsAll(linkedList7);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      arrayList0.addAll((Collection<? extends String>) linkedList9);
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<String> linkedList11 = new LinkedList<String>();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      LinkedList<String> linkedList13 = new LinkedList<String>();
      linkedList8.add("jDhayi*L@Z");
      arrayList1.addAll((Collection<? extends String>) linkedList10);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      // Undeclared exception!
      try { 
        fileUtil0.deleteFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.offer("jDhayi*L@Z");
      LinkedList<String> linkedList3 = new LinkedList<String>(arrayList1);
      linkedList0.descendingIterator();
      linkedList1.descendingIterator();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList4.add("jDhayi*L@Z");
      linkedList1.containsAll(arrayList0);
      arrayList1.add("jDhayi*L@Z");
      linkedList4.add("QlPS`emk&an#3GoWh'");
      linkedList4.add("offerstatus=");
      linkedList4.clone();
      linkedList1.poll();
      linkedList1.containsAll(linkedList4);
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.add("jDhayi*L@Z");
      arrayList1.addAll((Collection<? extends String>) linkedList5);
      linkedList0.pollLast();
      arrayList0.add((String) null);
      linkedList1.removeAll(linkedList5);
      arrayList0.add((String) null);
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.downloadThirdPartySearchFile("&Hmac=", "", (String) null, "&Hmac=");
      assertNull(file0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer((-2145331844));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[3]);
      integerArray0[4] = integer4;
      integerArray0[5] = integer1;
      integerArray0[7] = integerArray0[2];
      Integer integer5 = new Integer((-2145331859));
      integerArray0[8] = integer5;
      arrayList0.toArray(integerArray0);
      Integer integer6 = new Integer(2);
      Integer integer7 = new Integer(2);
      Integer integer8 = new Integer(2);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("*~zw=*s.wdkbg0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "86400000");
      arrayList0.add(integer8);
      Integer integer9 = new Integer(2);
      Integer integer10 = new Integer(2);
      Integer integer11 = new Integer(341);
      Integer integer12 = new Integer((int) integerArray0[1]);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      fileUtil0.renameFile("*~zw=*s.wdkbg0", "%%eiS(#d");
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add((Object) arrayList0);
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      arrayList1.retainAll(arrayList0);
      predicate3.test((Object) null);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate0);
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      predicate1.negate();
      Predicate<Object> predicate7 = predicate1.and(predicate2);
      Predicate<Object> predicate8 = predicate7.and(predicate3);
      Predicate<Object> predicate9 = predicate4.negate();
      predicate9.test(arrayList0);
      Object object2 = new Object();
      Predicate<Object> predicate10 = Predicate.isEqual(object2);
      Predicate.isEqual((Object) predicate8);
      predicate8.or(predicate5);
      predicate1.or(predicate8);
      Predicate.isEqual((Object) predicate10);
      predicate6.negate();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getBrowseNodeFile("xaB-p^'B*N+4;", "xaB-p^'B*N+4;", "");
      assertNull(file0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      boolean boolean0 = fileUtil0.downloadBrowseNodeFile("]r_OHq~/yX V6eo#E?", "$T", "{ge=g36R", "LJmo^-AV3");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      linkedList0.offerFirst("jDh!ayi*LOE");
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.descendingIterator();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>(arrayList0);
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList3.add("jDh!ayi*LOE");
      LinkedList<String> linkedList5 = new LinkedList<String>(linkedList2);
      linkedList3.descendingIterator();
      linkedList1.descendingIterator();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList2.add("jDh!ayi*LOE");
      linkedList2.push("f0^lEd?JNYhzxT");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList4.add("f0^lEd?JNYhzxT");
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.spliterator();
      linkedList8.add("jDh!ayi*LOE");
      ArrayList<String> arrayList2 = new ArrayList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<String> linkedList11 = new LinkedList<String>();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      linkedList5.add("f0^lEd?JNYhzxT");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("d)Y_|yYW", "jDh!ayi*LOE", "jDh!ayi*LOE", "d)Y_|yYW");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) "a6bX~.:=(ma;Y;");
      predicate4.and(predicate5);
      Stream<Object> stream0 = arrayList1.stream();
      Predicate<Object> predicate6 = predicate3.or(predicate2);
      Predicate<Object> predicate7 = predicate5.and(predicate3);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) "`wz==3FlV'ZSy");
      predicate8.or(predicate5);
      Predicate<Object> predicate9 = predicate5.negate();
      arrayList1.parallelStream();
      predicate6.and(predicate8);
      Predicate<Object> predicate10 = predicate9.negate();
      Object object2 = new Object();
      predicate8.negate();
      Predicate<Object> predicate11 = Predicate.isEqual((Object) stream0);
      predicate11.or(predicate10);
      arrayList1.removeIf(predicate7);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      File file0 = fileUtil0.downloadKeywordSearchFile(")nYQum&", "", "", "4'>As]@-],[Nc|Ws/");
      assertNull(file0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-2145258275));
      arrayList3.add(integer0);
      arrayList3.listIterator();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchKeywordSearchFile("!r x", (String) null, (String) null, "!r x");
      arrayList2.stream();
      ArrayList<Integer> arrayList4 = new ArrayList<Integer>();
      ArrayList<Integer> arrayList5 = new ArrayList<Integer>();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList5.forEach(consumer0);
      arrayList5.add(integer0);
      arrayList5.clear();
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      ArrayList<Integer> arrayList6 = new ArrayList<Integer>();
      Integer integer3 = new Integer(0);
      arrayList6.add(integer3);
      Integer integer4 = new Integer((-1960));
      Integer integer5 = new Integer(0);
      Integer integer6 = new Integer((-2145258275));
      Integer integer7 = new Integer(0);
      Integer integer8 = new Integer((-1));
      Integer integer9 = new Integer(24);
      Integer integer10 = new Integer((-2145318844));
      Integer integer11 = new Integer((-693));
      ArrayList<Integer> arrayList7 = new ArrayList<Integer>();
      assertTrue(arrayList7.isEmpty());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      linkedList0.offerFirst("jDhayi*L@Z");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.iterator();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>(arrayList1);
      LinkedList<String> linkedList4 = new LinkedList<String>();
      LinkedList<String> linkedList5 = new LinkedList<String>(linkedList2);
      linkedList3.descendingIterator();
      linkedList1.descendingIterator();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList2.push("!,.r");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList4.add("!,.r");
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.add("jDhayi*L@Z");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      arrayList0.add("qnP{`4-_nU6Y);7R");
      LinkedList<String> linkedList9 = new LinkedList<String>();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<String> linkedList11 = new LinkedList<String>();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      linkedList5.add("!,.r");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchKeywordSearchFile("", ", ", "jDhayi*L@Z", ", ");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LoadProperties.instance();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      fileUtil0.downloadAccessoriesFile("*wI", arrayList0, "T(a3L\"d8k#g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Random.setNextRandom(2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("cacheDir");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile(mockFile0, "Vq_w7HUE!4cH!hKw");
      File file0 = mockFile1.getAbsoluteFile();
      boolean boolean0 = fileUtil0.isAgeGood(file0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBNFile("YsYzii];$;U!@1srNi", "net.kencochrane.a4j.util.a4jUtil", "3rd_");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      fileUtil0.downloadGenericSearchFile((String) null, "/~bhO:Op#-KniMoMg", "w]sDqEVH7|,_Jz`~A", "3", "t_", "=H*BRTAPzU<SU");
      fileUtil0.downloadBlendedSearchFile("/~bhO:Op#-KniMoMg", "t_");
      fileUtil0.downloadCart("/~bhO:Op#-KniMoMg");
      boolean boolean0 = fileUtil0.isAgeGood((File) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/T_NULL__.XML");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "_X:&V1^rUYx['");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/NULL__.XML");
      byte[] byteArray0 = new byte[30];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte) (-80);
      byteArray0[5] = (byte) (-52);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)0;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      arrayList0.add("Peh`Pg)");
      FileUtil fileUtil0 = new FileUtil();
      Random.setNextRandom(913);
      Random.setNextRandom(913);
      fileUtil0.getBrowseNodeFile((String) null, "", "");
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      arrayList0.parallelStream();
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.negate();
      Object object2 = new Object();
      predicate2.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      arrayList0.removeIf(predicate3);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      FileInputStream fileInputStream0 = fileUtil0.fetchASINFile("Z<>Vi;`_KI e1(>", "Z<>Vi;`_KI e1(>", "", "");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.iterator();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      linkedList2.iterator();
      linkedList2.descendingIterator();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList4.push("");
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList0.add("");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList0.add("/ `Y1&c4`");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      arrayList3.addAll((Collection<? extends String>) linkedList3);
      ArrayList<String> arrayList4 = new ArrayList<String>();
      arrayList3.add("/ `Y1&c4`");
      LinkedList<String> linkedList8 = new LinkedList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<String> linkedList11 = new LinkedList<String>();
      linkedList0.add("/ `Y1&c4`");
      arrayList4.addAll((Collection<? extends String>) linkedList6);
      ArrayList<String> arrayList5 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.deleteFile("");
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList0.add("lz\"rQ@1fG!&5:#g1Q");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList2.iterator();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      LinkedList<String> linkedList4 = new LinkedList<String>(linkedList3);
      linkedList2.iterator();
      linkedList2.descendingIterator();
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList4.push("");
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList6.add("");
      linkedList6.add("lz\"rQ@1fG!&5:#g1Q");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList2.add("lz\"rQ@1fG!&5:#g1Q");
      linkedList2.containsAll(linkedList7);
      linkedList1.poll();
      linkedList5.containsAll(linkedList7);
      LinkedList<String> linkedList8 = new LinkedList<String>();
      LinkedList<String> linkedList9 = new LinkedList<String>();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<String> linkedList11 = new LinkedList<String>();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      LinkedList<String> linkedList13 = new LinkedList<String>();
      linkedList13.add("lz\"rQ@1fG!&5:#g1Q");
      arrayList1.addAll((Collection<? extends String>) linkedList8);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.deleteFile("z#HzidgSdTN");
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) "a6bX~.:=(ma;Y;");
      predicate4.and(predicate5);
      Stream<Object> stream0 = arrayList1.stream();
      Predicate<Object> predicate6 = predicate3.or(predicate2);
      Predicate<Object> predicate7 = predicate5.and(predicate3);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) "`wz==3FlV'ZSy");
      predicate8.or(predicate5);
      Predicate<Object> predicate9 = predicate5.negate();
      ArrayList<Object> arrayList2 = new ArrayList<Object>(arrayList1);
      arrayList2.parallelStream();
      predicate6.and(predicate8);
      Predicate<Object> predicate10 = predicate9.negate();
      Object object2 = new Object();
      predicate8.negate();
      Predicate<Object> predicate11 = Predicate.isEqual((Object) stream0);
      predicate11.or(predicate10);
      arrayList1.removeIf(predicate7);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      FileUtil fileUtil0 = new FileUtil();
      LoadProperties.instance();
      Random.setNextRandom(35);
      boolean boolean0 = fileUtil0.downloadSimilaritesFile((String) null, "net.kencochrane.a4j.util.a4jUtil", "4'>As]@-],[Nc|Ws/");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList1.add((Object) arrayList0);
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      arrayList1.retainAll(arrayList0);
      predicate3.test((Object) null);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate0);
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      predicate1.negate();
      predicate6.or(predicate0);
      Predicate<Object> predicate7 = predicate1.and(predicate2);
      arrayList1.parallelStream();
      Predicate<Object> predicate8 = predicate7.and(predicate3);
      predicate2.negate();
      Predicate<Object> predicate9 = predicate4.negate();
      predicate9.test(arrayList0);
      Object object2 = new Object();
      Predicate<Object> predicate10 = Predicate.isEqual(object2);
      Predicate.isEqual((Object) predicate8);
      predicate8.or(predicate5);
      predicate1.or(predicate0);
      Predicate.isEqual((Object) predicate10);
      predicate6.negate();
      UnaryOperator.identity();
      FileUtil fileUtil0 = new FileUtil();
      File file0 = fileUtil0.getSimilarItems("N8Vrt", "se)/)_B@_i");
      assertNull(file0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) "ta_");
      Predicate<Object> predicate6 = predicate4.and(predicate5);
      arrayList1.stream();
      Predicate<Object> predicate7 = predicate3.or(predicate2);
      predicate5.and(predicate3);
      Predicate<Object> predicate8 = predicate7.negate();
      Object object2 = new Object();
      predicate2.negate();
      Object object3 = new Object();
      Predicate.isEqual(object3);
      Predicate<Object> predicate9 = predicate1.and(predicate7);
      predicate9.or(predicate6);
      predicate2.test(predicate5);
      Predicate.isEqual((Object) "p,v0A]PT");
      Predicate<Object> predicate10 = predicate8.and(predicate6);
      predicate10.negate();
      predicate1.or(predicate9);
      arrayList1.removeIf(predicate10);
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList2.sort(comparator0);
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile((String) null, "~c#vq{0+@", "f=xml", "", "f=xml", "~c#vq{0+@");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) "a6bX~.:=(ma;Y;");
      Predicate<Object> predicate6 = predicate4.and(predicate5);
      arrayList1.stream();
      Predicate<Object> predicate7 = predicate3.or(predicate2);
      predicate5.and(predicate3);
      Predicate<Object> predicate8 = predicate7.negate();
      Object object2 = new Object();
      Object object3 = new Object();
      Predicate.isEqual(object3);
      Predicate<Object> predicate9 = predicate1.and(predicate7);
      predicate9.or(predicate6);
      Predicate.isEqual((Object) "p,v0A]PT");
      Predicate<Object> predicate10 = predicate8.and(predicate6);
      predicate10.negate();
      predicate1.or(predicate9);
      arrayList1.removeIf(predicate10);
      ArrayList<Object> arrayList2 = new ArrayList<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList2.sort(comparator0);
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile((String) null, "~c#vq{0+@", "f=xml", "", "f=xml", "~c#vq{0+@");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator.identity();
      UnaryOperator.identity();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "popcornmonste2-20";
      stringArray0[1] = "popcornmonste2-20";
      stringArray0[2] = "popcornmonste2-20";
      stringArray0[3] = "H3Z-Z;upz+e#I.";
      arrayList0.toArray(stringArray0);
      arrayList0.add(stringArray0[0]);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super String, ? extends String>) unaryOperator0);
      FileInputStream fileInputStream0 = fileUtil0.fetchSimilarItems("amazonSererUR", "H3Z-Z;upz+e#I.");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-2145258275));
      arrayList3.add(integer0);
      arrayList3.listIterator();
      FileUtil fileUtil0 = new FileUtil();
      fileUtil0.fetchAccessories("ssocateID", arrayList2);
      arrayList2.stream();
      ArrayList<Integer> arrayList4 = new ArrayList<Integer>();
      ArrayList<Integer> arrayList5 = new ArrayList<Integer>();
      arrayList5.add(integer0);
      arrayList5.clear();
      Integer integer1 = new Integer(0);
      Integer integer2 = new Integer(0);
      ArrayList<Integer> arrayList6 = new ArrayList<Integer>();
      Integer integer3 = new Integer(0);
      arrayList6.add(integer3);
      Integer integer4 = new Integer((-1960));
      Integer integer5 = new Integer(328);
      Integer integer6 = new Integer(0);
      Integer integer7 = new Integer(4441);
      Integer integer8 = new Integer(0);
      Integer integer9 = new Integer((-1));
      Integer integer10 = new Integer(24);
      Integer integer11 = new Integer((-2145318844));
      Integer integer12 = new Integer((-693));
      ArrayList<Integer> arrayList7 = new ArrayList<Integer>();
      assertTrue(arrayList7.isEmpty());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      MockFile mockFile0 = new MockFile("cacheDir");
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(mockFile0, "Vq_w7HUE!4cH!hKw");
      mockFile1.getAbsoluteFile();
      FileInputStream fileInputStream0 = fileUtil0.fetchThirdPartySearchFile((String) null, "", ",G]Y3!]O5nu%pYUuF", "zL@nE3WbYNa]R9:");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.add("jDhayi*L@Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.toArray();
      linkedList0.offerFirst("jDhayi*L@Z");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.descendingIterator();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      LinkedList<String> linkedList3 = new LinkedList<String>(arrayList1);
      LinkedList<String> linkedList4 = new LinkedList<String>();
      linkedList3.add("jDhayi*L@Z");
      LinkedList<String> linkedList5 = new LinkedList<String>(linkedList2);
      linkedList3.descendingIterator();
      linkedList1.descendingIterator();
      LinkedList<String> linkedList6 = new LinkedList<String>();
      linkedList2.add("jDhayi*L@Z");
      linkedList2.push("f0^lEd?JNYhzxT");
      LinkedList<String> linkedList7 = new LinkedList<String>();
      linkedList4.add("f0^lEd?JNYhzxT");
      LinkedList<String> linkedList8 = new LinkedList<String>();
      linkedList8.spliterator();
      linkedList8.add("jDhayi*L@Z");
      ArrayList<String> arrayList3 = new ArrayList<String>();
      arrayList0.add("qnP{`4-_nU6Y);7R");
      LinkedList<String> linkedList9 = new LinkedList<String>();
      LinkedList<String> linkedList10 = new LinkedList<String>();
      LinkedList<String> linkedList11 = new LinkedList<String>();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      linkedList5.add("f0^lEd?JNYhzxT");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchGenericSearchFile("f0^lEd?JNYhzxT", "6/6Qp`+q+2-s|-Qa", "6/6Qp`+q+2-s|-Qa", "6/6Qp`+q+2-s|-Qa", "jDhayi*L@Z", "qnP{`4-_nU6Y);7R");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("a4j-config.txt");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, String> function1 = unaryOperator0.compose((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function4 = unaryOperator0.compose((Function<? super Object, ? extends String>) function3);
      Function<Object, String> function5 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function6 = unaryOperator0.compose((Function<? super Object, ? extends String>) function2);
      Function<Object, String> function7 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function6);
      Function<Object, String> function8 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function7);
      Function<Object, String> function9 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function2);
      Function<Object, Object> function10 = Function.identity();
      unaryOperator1.compose((Function<? super Object, ?>) function10);
      Function<Object, String> function11 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function6);
      Function<Object, String> function12 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function8);
      Function<Object, Object> function13 = unaryOperator1.compose((Function<? super Object, ?>) function5);
      Function.identity();
      Function<Object, String> function14 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      function14.compose((Function<? super Object, ?>) function13);
      Function<Object, String> function15 = function14.andThen((Function<? super String, ? extends String>) function9);
      function4.andThen((Function<? super String, ?>) function13);
      Function<Object, Integer> function16 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function17 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function16);
      function12.compose((Function<? super Object, ?>) function17);
      unaryOperator0.compose((Function<? super Object, ? extends String>) function4);
      function14.apply("a_");
      function8.compose((Function<? super Object, ?>) function2);
      function15.andThen((Function<? super String, ?>) function12);
      function3.compose((Function<? super Integer, ?>) function11);
      function6.compose((Function<? super String, ?>) function13);
      function12.compose((Function<? super Integer, ?>) function10);
      unaryOperator0.apply("j8_yECC/&X{637");
      FileUtil fileUtil0 = new FileUtil();
      FileInputStream fileInputStream0 = fileUtil0.fetchBlendedSearchFile("j8_yECC/&X{637", "a4j-config.txt");
      assertNull(fileInputStream0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer((-2145331859));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[3]);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-1072));
      integerArray0[5] = integer5;
      integerArray0[6] = integerArray0[3];
      integerArray0[7] = integerArray0[2];
      Integer integer6 = new Integer((-2145331859));
      integerArray0[8] = integer6;
      arrayList0.toArray(integerArray0);
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer7 = new Integer(2);
      Integer integer8 = new Integer(2);
      Integer integer9 = new Integer(2);
      arrayList0.add(integer9);
      Integer integer10 = new Integer(2);
      Integer integer11 = new Integer(2);
      Integer integer12 = new Integer(341);
      Integer integer13 = new Integer((int) integerArray0[1]);
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      fileUtil0.renameFile("*~zw=*s.wdkbg0", "%%eiS(#d");
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(":ThB4K[");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://xml.amazon.net/onca/xml3?t=popcornmonste2-20&dev-t=DSB0XDDW1GQ3S&BrowseNodeSearch=%fhD/\"~&mode=&type=lite&page=&offer=new&f=xml");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      arrayList0.listIterator();
      FileUtil fileUtil0 = new FileUtil();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.stream();
      arrayList1.add(":ThB4K[");
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer((-2145331859));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((int) integerArray0[0]);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[2]);
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[3]);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-1072));
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((int) integerArray0[3]);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer((int) integerArray0[1]);
      integerArray0[7] = integer7;
      Integer integer8 = new Integer((-2145331859));
      integerArray0[8] = integer8;
      arrayList0.toArray(integerArray0);
      fileUtil0.fetchBNFile("", "%fhD/\"~", "");
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      Integer integer9 = new Integer(2);
      Integer integer10 = new Integer(2);
      Integer integer11 = new Integer(2);
      arrayList0.add(integer11);
      Integer integer12 = new Integer(2);
      Integer integer13 = new Integer(2);
      Integer integer14 = new Integer(341);
      Integer integer15 = new Integer((-2145338308));
      arrayList0.add(integer15);
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      // Undeclared exception!
      try { 
        arrayList3.listIterator((-4023));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4023
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
