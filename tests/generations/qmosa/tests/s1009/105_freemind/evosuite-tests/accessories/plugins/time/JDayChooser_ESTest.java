/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 18:29:12 GMT 2020
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.extensions.ExportHook;
import freemind.modes.mindmapmode.actions.NodeHookAction;
import freemind.modes.schememode.SchemeMode;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.RescaleOp;
import java.util.Date;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Properties;
import java.util.Stack;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.SynchronousQueue;
import javax.help.BackAction;
import javax.help.HelpSet;
import javax.help.JHelp;
import javax.help.JHelpContentViewer;
import javax.help.JHelpGlossaryNavigator;
import javax.swing.DefaultBoundedRangeModel;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentListener;
import javax.swing.event.MenuKeyEvent;
import javax.swing.event.RowSorterEvent;
import javax.swing.plaf.basic.BasicOptionPaneUI;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.plaf.multi.MultiOptionPaneUI;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.tree.TreePath;
import org.apache.batik.ext.awt.g2d.GraphicContext;
import org.apache.batik.gvt.CanvasGraphicsNode;
import org.apache.batik.gvt.CompositeGraphicsNode;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.xml.serializer.ToTextSAXHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.699450783005357
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E>I+a!=+O|$P7]+z";
      stringArray0[1] = "";
      stringArray0[2] = "org.openstreetmap.gui.jmapviewer.MemoryTileCache";
      stringArray0[3] = "";
      stringArray0[0] = "W8OJt";
      stringArray0[5] = "";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "accessories.plugins.time.JDayChooser");
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      defaultStyledDocument0.getUndoableEditListeners();
      Color color0 = Color.cyan;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-4069.7742F);
      floatArray0[2] = (-4069.7742F);
      floatArray0[3] = (-4069.7742F);
      color0.getColorComponents(floatArray0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay(21);
      jDayChooser0.setFocus();
      jDayChooser0.setDay((-1386));
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.712924217851714
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      int int0 = SwingConstants.LEFT;
      mockGregorianCalendar0.getCalendarType();
      mockGregorianCalendar0.getGregorianChange();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setYear(1924);
      jDayChooser0.setMaxDayCharacters(2);
      jDayChooser0.getMaxDayCharacters();
      MultiOptionPaneUI multiOptionPaneUI0 = new MultiOptionPaneUI();
      Color color0 = Color.cyan;
      jDayChooser0.init();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      PriorityBlockingQueue<Locale> priorityBlockingQueue1 = new PriorityBlockingQueue<Locale>();
      SynchronousQueue<Locale> synchronousQueue0 = new SynchronousQueue<Locale>();
      CanvasGraphicsNode canvasGraphicsNode0 = new CanvasGraphicsNode();
      canvasGraphicsNode0.getRenderingHints();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 2;
      floatArray0[1] = (float) 2;
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.Y;
      // Undeclared exception!
      try { 
        canvasGraphicsNode0.add((Object) gVTAttributedCharacterIterator_TextAttribute0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute(Y) is not a GraphicsNode
         //
         verifyException("org.apache.batik.gvt.CompositeGraphicsNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.876981297880272
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMonth(4872);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(8818, (-200), 907, 907, (-200));
      mockGregorianCalendar0.getWeeksInWeekYear();
      mockGregorianCalendar0.getCalendarType();
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      jDayChooser0.setSelectableDateRange((Date) null, date0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(true);
      assertFalse(jDayChooser2.isDecorationBordersVisible());
      
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      jDayChooser1.setYear(6);
      jDayChooser1.setEnabled(false);
      JDayChooser jDayChooser3 = new JDayChooser(false);
      JMonthChooser jMonthChooser0 = jDayChooser0.monthChooser;
      jDayChooser3.monthChooser = null;
      jDayChooser1.getDecorationBackgroundColor();
      jDayChooser3.initDecorations();
      jDayChooser1.setEnabled(true);
      jDayChooser1.setFocus();
      assertTrue(jDayChooser1.isDayBordersVisible());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "14");
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getMaxDayCharacters();
      Locale locale0 = new Locale("90msp-RKSJ-V");
      jDayChooser0.setLocale(locale0);
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 0, (-42L), 0, 0, 'n', 37);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.8241702584701645
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getComponentListeners();
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getMouseMotionListeners();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      Dimension dimension0 = basicOptionPaneUI0.getMinimumOptionPaneSize();
      jDayChooser0.setSize(dimension0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setYear((byte)8);
      jDayChooser0.setEnabled(true);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.initDecorations();
      jDayChooser0.setEnabled(false);
      assertFalse(jDayChooser0.isDayBordersVisible());
      
      jDayChooser1.getSelectedDay();
      assertFalse(jDayChooser1.isDecorationBordersVisible());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7883982443058835
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.getWeeksInWeekYear();
      mockGregorianCalendar0.getCalendarType();
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      jDayChooser0.setSelectableDateRange(date0, date0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(true);
      jDayChooser0.initDecorations();
      Date date1 = jDayChooser1.minSelectableDate;
      jDayChooser0.setMaxSelectableDate(date1);
      jDayChooser2.setMinSelectableDate(date1);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 10, 40L, (-1646), 62, 'h');
      jDayChooser0.keyTyped(keyEvent0);
      jDayChooser0.isWeekOfYearVisible();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7421583343393316
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.addHierarchyListener((HierarchyListener) null);
      jDayChooser0.initDecorations();
      jDayChooser0.getDay();
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.updateUI();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D21>s?");
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 14, 14, 0, 0, 'N', 0);
      keyEvent0.getExtendedKeyCode();
      KeyEvent.getKeyModifiersText(0);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.isDecorationBackgroundVisible();
      ActionEvent actionEvent0 = null;
      try {
        actionEvent0 = new ActionEvent((Object) null, 'N', "", 3165L, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7385791605222836
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)90;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jDayChooser0.requestFocus(false);
      jDayChooser0.setIgnoreRepaint(false);
      jDayChooser0.setDay((-149));
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.remove((Component) jDayChooser0);
      menuSelectionManager0.addChangeListener(jYearChooser0);
      MenuSelectionManager menuSelectionManager1 = new MenuSelectionManager();
      menuSelectionManager1.removeChangeListener(jYearChooser0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jYearChooser0, 2556, 0L, (-287), (byte) (-54), 's', (MenuElement[]) null, menuSelectionManager1);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.getSelectedDay();
      jDayChooser0.getSelectedDay();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("mZ");
      jTextPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDay(35);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager.defaultManager();
      jDayChooser0.setMonth((-1248));
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.getComponents();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "year");
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Font.getFont("year");
      jDayChooser0.setFont((Font) null);
      System.setCurrentTimeMillis((-1734));
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(2636, 46, 333, (-3572), 3114, 2636);
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.835648786842241
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      int int0 = SwingConstants.EAST;
      mockGregorianCalendar0.getCalendarType();
      mockGregorianCalendar0.getGregorianChange();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setYear(21);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setMaxDayCharacters(721);
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.getMaxDayCharacters();
      jDayChooser0.setWeekOfYearVisible(false);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HelpSet helpSet0 = new HelpSet(classLoader0);
      JHelpGlossaryNavigator jHelpGlossaryNavigator0 = new JHelpGlossaryNavigator(helpSet0, "day", "day");
      helpSet0.getCombinedMap();
      FocusEvent focusEvent0 = new FocusEvent(jHelpGlossaryNavigator0, 0, false, jDayChooser1);
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser1.setMonth(44);
      JDayChooser jDayChooser3 = new JDayChooser();
      jDayChooser0.setDecorationBordersVisible(true);
      jDayChooser1.drawDays();
      assertEquals(0, jDayChooser1.getMaxDayCharacters());
      
      jDayChooser1.setMaxDayCharacters(0);
      assertEquals(14, jDayChooser1.getDay());
      assertTrue(jDayChooser1.isDayBordersVisible());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6741970408327744
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("");
      jTextPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument(styleContext0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(172);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser1 = new JYearChooser();
      JHelp jHelp0 = new JHelp();
      JHelpContentViewer jHelpContentViewer0 = jHelp0.getContentViewer();
      jYearChooser1.remove((Component) jHelpContentViewer0);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      MenuSelectionManager menuSelectionManager1 = MenuSelectionManager.defaultManager();
      menuSelectionManager1.addChangeListener(jYearChooser0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jHelpContentViewer0, (-1437625606), 12302, 1753, 1753, 's', (MenuElement[]) null, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.enableInputMethods(false);
      Color color0 = jDayChooser0.getSundayForeground();
      jDayChooser0.setDecorationBackgroundColor(color0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      DefaultBoundedRangeModel defaultBoundedRangeModel0 = new DefaultBoundedRangeModel();
      JSlider jSlider0 = new JSlider(defaultBoundedRangeModel0);
      // Undeclared exception!
      try { 
        jDayChooser0.add((Component) jSlider0, (Object) "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cannot add to layout: unknown constraint: 
         //
         verifyException("java.awt.BorderLayout", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7421583343393316
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("mrVZ");
      jTextPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      JDayChooser jDayChooser0 = new JDayChooser();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, '>', (-7L), (-1248), 35, '>');
      InputEvent.getMaskForButton(11);
      jDayChooser0.keyPressed(keyEvent0);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager.defaultManager();
      jDayChooser0.setMonth(11);
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.getComponents();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Font.getFont("year");
      jDayChooser0.setFont((Font) null);
      jDayChooser0.addListeners(11);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7039446318508737
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("mZ");
      Color color0 = jTextPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument2);
      jTextPane1.getCharacterAttributes();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      float[] floatArray0 = new float[6];
      floatArray0[0] = (-4069.7742F);
      floatArray0[1] = (-4069.7742F);
      floatArray0[2] = (-100.9095F);
      floatArray0[3] = 0.0F;
      floatArray0[4] = 1.0F;
      floatArray0[5] = 1.0F;
      color0.getColorComponents(floatArray0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay(21);
      jDayChooser0.setFocus();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      jDayChooser0.setLocale(locale0);
      assertEquals(21, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.683281366426669
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jDayChooser0.requestFocus(false);
      jDayChooser0.setIgnoreRepaint(false);
      jDayChooser0.setDay(172);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      MenuSelectionManager.defaultManager();
      jYearChooser0.remove((Component) jDayChooser0);
      menuSelectionManager0.addChangeListener(jYearChooser0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      CompositeGraphicsNode compositeGraphicsNode0 = new CompositeGraphicsNode();
      Locale.lookup(linkedList0, compositeGraphicsNode0);
      jDayChooser0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.712924217851714
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = SwingConstants.EAST;
      int int1 = 1924;
      jDayChooser0.setYear(1924);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.getMaxDayCharacters();
      Color color0 = Color.cyan;
      jDayChooser0.init();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      SynchronousQueue<Locale> synchronousQueue0 = new SynchronousQueue<Locale>();
      CanvasGraphicsNode canvasGraphicsNode0 = new CanvasGraphicsNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      canvasGraphicsNode0.getRenderingHints();
      float[] floatArray0 = new float[1];
      floatArray0[0] = 0.0F;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      ExportHook exportHook0 = new ExportHook();
      // Undeclared exception!
      try { 
        exportHook0.createBufferedImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.extensions.ExportHook", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.890536333108299
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "nq";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "7hV9_SH";
      stringArray0[4] = "nq";
      JDayChooser jDayChooser0 = new JDayChooser(false);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-1.0), (-1.0), (-1.0), 0.0);
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      GraphicContext graphicContext0 = new GraphicContext(affineTransform1);
      Font font0 = graphicContext0.getFont();
      jDayChooser0.setFont(font0);
      jDayChooser0.setWeekOfYearVisible(false);
      Color color0 = jDayChooser0.getWeekdayForeground();
      jDayChooser0.init();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.getComponents();
      jDayChooser0.setYearChooser(jYearChooser0);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setYear(952);
      jDayChooser0.setEnabled(false);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.setDay(4015);
      jDayChooser0.setWeekdayForeground(color0);
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.698555534979564
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-19);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument0.removeStyle((String) null);
      JEditorPane jEditorPane0 = new JEditorPane();
      jEditorPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(styleContext0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      assertEquals(14, jDayChooser1.getDay());
      
      jDayChooser1.setDay((byte) (-19));
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager1 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser1 = new JYearChooser();
      JHelp jHelp0 = new JHelp();
      jHelp0.getContentViewer();
      jYearChooser0.remove((Component) jEditorPane0);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      MenuSelectionManager.defaultManager();
      menuSelectionManager1.addChangeListener(jYearChooser1);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 12302, 0L, 172, (byte) (-19), '?', (MenuElement[]) null, menuSelectionManager0);
      jDayChooser1.keyPressed(menuKeyEvent0);
      jDayChooser0.drawWeeks();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      JOptionPane jOptionPane0 = new JOptionPane();
      jOptionPane0.getInitialValue();
      basicOptionPaneUI0.selectInitialValue(jOptionPane0);
      Dimension dimension0 = basicOptionPaneUI0.getMinimumOptionPaneSize();
      jDayChooser0.setSize(dimension0);
      Color color0 = Color.cyan;
      jDayChooser0.setSundayForeground(color0);
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners(10156);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.779870665922342
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.init();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.getComponents();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setYearChooser(jYearChooser0);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setYear(628);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.036876623629521
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.getWeeksInWeekYear();
      mockGregorianCalendar0.getCalendarType();
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      jDayChooser0.setSelectableDateRange(date0, date0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      Integer.getInteger("T/{qs", integer0);
      mockGregorianCalendar0.before(integer0);
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      JMonthChooser jMonthChooser0 = new JMonthChooser(false);
      jDayChooser0.setMonthChooser(jMonthChooser0);
      SchemeMode schemeMode0 = new SchemeMode();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jDayChooser0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      jDayChooser0.getTemporaryCalendar();
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.init();
      JYearChooser jYearChooser1 = new JYearChooser();
      jYearChooser1.getComponents();
      jDayChooser0.setYearChooser(jYearChooser0);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setYear(952);
      jDayChooser0.setEnabled(true);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.setDay(777);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setMaxSelectableDate(date0);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setMinSelectableDate((Date) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7216895901039444
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getComponentListeners();
      boolean boolean0 = false;
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getMouseMotionListeners();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      JTree jTree0 = new JTree();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getPathForRow(jTree0, 28);
      jTree0.getPathBounds((TreePath) null);
      jDayChooser0.scrollRectToVisible((Rectangle) null);
      int int0 = (-1681);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(28, 28, (-200), 49, (-1681));
      mockGregorianCalendar0.getWeeksInWeekYear();
      mockGregorianCalendar0.getCalendarType();
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      jDayChooser0.setSelectableDateRange(date0, date0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(true);
      Date date1 = jDayChooser1.minSelectableDate;
      jDayChooser1.setMaxSelectableDate(date1);
      jDayChooser2.getMinSelectableDate();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      PDFDocumentGraphics2D pDFDocumentGraphics2D1 = null;
      try {
        pDFDocumentGraphics2D1 = new PDFDocumentGraphics2D(pDFDocumentGraphics2D0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.769861455747857
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jDayChooser0.requestFocus(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(172);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.remove((Component) jDayChooser0);
      menuSelectionManager0.addChangeListener(jYearChooser0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, (byte) (-21), (byte)90, (-4), 49, 's', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.getMenuSelectionManager();
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setForeground((Color) null);
      jDayChooser0.getSelectedDay();
      jDayChooser0.getWeekdayForeground();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.549904071707152
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      JOptionPane jOptionPane0 = new JOptionPane();
      JOptionPane jOptionPane1 = new JOptionPane();
      jOptionPane1.getInitialValue();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      Dimension dimension0 = basicOptionPaneUI1.getMinimumOptionPaneSize();
      jDayChooser0.setSize(dimension0);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      Font.getFont("day");
      StringContent stringContent0 = new StringContent();
      jDayChooser1.drawDays();
      CanvasGraphicsNode canvasGraphicsNode0 = new CanvasGraphicsNode();
      canvasGraphicsNode0.getRenderingHints();
      float[] floatArray0 = new float[9];
      floatArray0[0] = 1.0F;
      floatArray0[1] = 1.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = 1.0F;
      floatArray0[4] = 1.0F;
      floatArray0[5] = (float) 262;
      floatArray0[6] = 1.0F;
      floatArray0[7] = (float) 262;
      floatArray0[8] = (float) 262;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      ExportHook exportHook0 = new ExportHook();
      // Undeclared exception!
      try { 
        exportHook0.createBufferedImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.extensions.ExportHook", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      ToTextSAXHandler toTextSAXHandler0 = new ToTextSAXHandler((ContentHandler) null, "day");
      toTextSAXHandler0.getOutputFormat();
      HsqlProperties hsqlProperties0 = new HsqlProperties((Properties) null);
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection(hsqlProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.persist.HsqlProperties", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7020734760735947
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("mZ");
      jTextPane0.getSelectedTextColor();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.requestFocus(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(228);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setDay((-1437625606));
      Integer integer1 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser1 = new JYearChooser();
      jYearChooser1.remove((Component) jYearChooser0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jMonthChooser0.setMonth(45);
      menuSelectionManager0.addChangeListener(jMonthChooser0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jYearChooser1, 228, 172, 177, 12302, 's', (MenuElement[]) null, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      int int0 = jDayChooser0.getDay();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E>I+a!=+O|$P7]+z";
      stringArray0[1] = "";
      stringArray0[2] = "org.openstreetmap.gui.jmapviewer.MemoryTileCache";
      stringArray0[3] = "";
      stringArray0[0] = "W8OJt";
      stringArray0[5] = "";
      stringArray0[6] = "8AJf";
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
      jYearChooser0.remove((Component) jFormattedTextField0);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      MenuSelectionManager menuSelectionManager1 = MenuSelectionManager.defaultManager();
      menuSelectionManager1.addChangeListener(jYearChooser0);
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jYearChooser0, 33, 0L, (-4533), 2, 'L', (MenuElement[]) null, menuSelectionManager0);
      JDayChooser jDayChooser0 = new JDayChooser();
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed((KeyEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 0, 8189, 24, '!');
      jDayChooser0.keyReleased(keyEvent0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7020734760735947
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("mZ");
      jTextPane0.getSelectedTextColor();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.requestFocus(false);
      jDayChooser0.setDay(228);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setDay((-1437625606));
      Integer integer1 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      MenuSelectionManager.defaultManager();
      JYearChooser jYearChooser1 = new JYearChooser();
      jYearChooser1.remove((Component) jYearChooser0);
      JMonthChooser jMonthChooser0 = jDayChooser0.monthChooser;
      menuSelectionManager0.addChangeListener((ChangeListener) null);
      menuSelectionManager0.getSelectedPath();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jYearChooser1, 228, 172, 177, 12302, 's', (MenuElement[]) null, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Font font0 = styleContext0.getFont("day", 172, (-1));
      jDayChooser0.setFont(font0);
      jDayChooser0.getDaysInMonth();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getHeight();
      Class<NodeHookAction> class0 = NodeHookAction.class;
      jDayChooser0.getListeners(class0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      metalComboBoxEditor0.addActionListener(jDayChooser0);
      jDayChooser0.addFocusListener(metalComboBoxEditor0);
      Dimension dimension0 = jDayChooser0.getPreferredSize();
      jDayChooser0.setFont((Font) null);
      jDayChooser0.getDayPanel();
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.isDecorationBordersVisible();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isContentAreaFilled();
      BackAction backAction0 = new BackAction(dimension0);
      jDayChooser_DecoratorButton0.addMouseListener(backAction0);
      RowSorterEvent.Type rowSorterEvent_Type0 = RowSorterEvent.Type.SORT_ORDER_CHANGED;
      int int0 = (-623);
      // Undeclared exception!
      try { 
        RowSorterEvent.Type.valueOf("day");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant javax.swing.event.RowSorterEvent.Type.day
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.757689330507757
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.getComponents();
      Color color0 = Color.cyan;
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.init();
      jDayChooser0.setYear((-3282));
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      JButton[] jButtonArray0 = new JButton[3];
      jDayChooser0.getSelectedDay();
      jButtonArray0[0] = null;
      JButton jButton0 = new JButton();
      jButtonArray0[1] = jButton0;
      JButton jButton1 = jDayChooser0.selectedDay;
      jButtonArray0[2] = null;
      jDayChooser0.days = jButtonArray0;
      JYearChooser jYearChooser1 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser1);
      Date date0 = jDayChooser0.minSelectableDate;
      // Undeclared exception!
      try { 
        jDayChooser0.setMaxSelectableDate(date0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      int int0 = SwingConstants.EAST;
      mockGregorianCalendar0.getGregorianChange();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      Integer.getInteger("(/{ps", integer0);
      mockGregorianCalendar0.before(integer0);
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      boolean boolean0 = true;
      JMonthChooser jMonthChooser0 = new JMonthChooser(true);
      SchemeMode schemeMode0 = new SchemeMode();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jDayChooser0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      HsqlProperties hsqlProperties0 = new HsqlProperties();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h>-");
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.addDocumentListener((DocumentListener) null);
      defaultStyledDocument1.removeStyle("mZ");
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument2);
      jTextPane0.getCharacterAttributes();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.init();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      SynchronousQueue<Locale> synchronousQueue0 = new SynchronousQueue<Locale>();
      CanvasGraphicsNode canvasGraphicsNode0 = new CanvasGraphicsNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      canvasGraphicsNode0.getRenderingHints();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) (-3282);
      floatArray0[1] = 0.0F;
      floatArray0[2] = 1.0F;
      floatArray0[3] = 0.0F;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      ExportHook exportHook0 = new ExportHook();
      // Undeclared exception!
      try { 
        exportHook0.createBufferedImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.extensions.ExportHook", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7039446318508737
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h>-");
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.addDocumentListener((DocumentListener) null);
      defaultStyledDocument1.removeStyle("mZ");
      Color color0 = jTextPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument();
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument2);
      jTextPane1.getCharacterAttributes();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      float[] floatArray0 = new float[6];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Metal");
      floatArray0[0] = (-4069.7742F);
      floatArray0[1] = (-4069.7742F);
      floatArray0[2] = 1.0F;
      floatArray0[3] = 0.0F;
      defaultStyledDocument0.getUndoableEditListeners();
      floatArray0[4] = 1.0F;
      floatArray0[5] = 1.0F;
      color0.getColorComponents(floatArray0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay(21);
      jDayChooser0.setFocus();
      jDayChooser0.setDay(21);
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(21, jDayChooser0.getDay());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.699450783005357
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = stringArray0[0];
      stringArray0[2] = "org.openstreetmap.gui.jmapviewer.MemoryTileCache";
      stringArray0[3] = "";
      stringArray0[0] = "W8OJt";
      stringArray0[5] = "";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "accessories.plugins.time.JDayChooser");
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      defaultStyledDocument0.getUndoableEditListeners();
      Color color0 = Color.cyan;
      float[] floatArray0 = new float[4];
      floatArray0[0] = (-1.0F);
      floatArray0[1] = (-4069.7742F);
      floatArray0[2] = (-4069.7742F);
      floatArray0[3] = (-4069.7742F);
      color0.getColorComponents(floatArray0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDay(21);
      jDayChooser0.setFocus();
      jDayChooser0.setDay((-1386));
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.grabFocus();
      Class<NodeHookAction> class0 = NodeHookAction.class;
      jDayChooser0.getListeners(class0);
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.getAccessibleContext();
      jDayChooser0.contains(100, 100);
      jDayChooser0.getDayPanel();
      jDayChooser0.setAlwaysFireDayProperty(true);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(true);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.7325637712329622
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      mockGregorianCalendar0.getWeeksInWeekYear();
      mockGregorianCalendar0.getCalendarType();
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      jDayChooser0.setSelectableDateRange(date0, date0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      JDayChooser jDayChooser1 = new JDayChooser(false);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      Date date1 = jDayChooser2.minSelectableDate;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Date date2 = jDayChooser1.setMaxSelectableDate(date1);
      Date date3 = jDayChooser0.setMinSelectableDate(date1);
      assertSame(date3, date2);
      
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext1 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      Style style0 = styleContext1.addStyle("day", styleContext_NamedStyle0);
      Font font0 = styleContext0.getFont((AttributeSet) style0);
      jDayChooser2.setFont(font0);
      assertTrue(jDayChooser2.isDayBordersVisible());
      assertEquals(14, jDayChooser2.getDay());
      assertFalse(jDayChooser2.isDecorationBordersVisible());
      assertFalse(jDayChooser2.isWeekOfYearVisible());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E>I+a!=+O|$P7]+z";
      stringArray0[1] = "";
      stringArray0[2] = "org.openstreetmap.gui.jmapviewer.MemoryTileCache";
      stringArray0[3] = "";
      stringArray0[0] = "W8OJt";
      stringArray0[5] = "";
      stringArray0[6] = "8AJf";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "W8OJt";
      stringArray1[2] = "";
      stringArray1[3] = "E>I+a!=+O|$P7]+z";
      stringArray1[4] = "E>I+a!=+O|$P7]+z";
      stringArray1[5] = "BcSVEyj)rdX_s{(WHol";
      stringArray1[6] = "";
      JDayChooser jDayChooser0 = new JDayChooser();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      
      jDayChooser0.updateUI();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getMaxSelectableDate();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.746209545491266
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      int int0 = SwingConstants.EAST;
      mockGregorianCalendar0.getCalendarType();
      mockGregorianCalendar0.getGregorianChange();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.setYear(1924);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setWeekOfYearVisible(false);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.drawDays();
      System.setCurrentTimeMillis((-1433L));
      jDayChooser0.drawDays();
      float[] floatArray0 = new float[8];
      floatArray0[0] = (float) 1924;
      CanvasGraphicsNode canvasGraphicsNode0 = new CanvasGraphicsNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      canvasGraphicsNode0.getRenderingHints();
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray0, (RenderingHints) null);
      ExportHook exportHook0 = new ExportHook();
      // Undeclared exception!
      try { 
        exportHook0.createBufferedImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.extensions.ExportHook", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.757689330507757
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getTransferHandler();
      jDayChooser0.setYear((-1665));
      jDayChooser0.setMaxDayCharacters((-1665));
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(0, int0);
      
      jDayChooser0.setWeekOfYearVisible(true);
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      jDayChooser0.setYear((-1665));
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6929037542586007
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane();
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(stringContent0, styleContext0);
      defaultStyledDocument1.removeStyle("mZ");
      jTextPane0.getSelectedTextColor();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.GERMANY;
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDay(35);
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.setMaxDayCharacters(35);
      jDayChooser0.setDayBordersVisible(true);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jDayChooser0.requestFocus(false);
      jDayChooser0.setDay((byte) (-19));
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      JYearChooser jYearChooser0 = new JYearChooser();
      jYearChooser0.setMaximum((byte)90);
      jYearChooser0.remove((Component) jDayChooser0);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.76639130174906
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getComponentListeners();
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser1.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      JDayChooser jDayChooser2 = new JDayChooser(false);
      JDayChooser jDayChooser3 = new JDayChooser(false);
      Date date0 = jDayChooser1.minSelectableDate;
      Date date1 = jDayChooser2.setMaxSelectableDate((Date) null);
      jDayChooser0.setMinSelectableDate(date1);
      assertFalse(jDayChooser0.isDayBordersVisible());
      
      jDayChooser3.isDayBordersVisible();
      assertFalse(jDayChooser3.isDecorationBordersVisible());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.710079913333388
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "E>I+a!=+O|$P7]+z";
      stringArray0[1] = "";
      stringArray0[2] = "org.openstreetmap.gui.jmapviewer.MemoryTileCache";
      stringArray0[3] = "";
      stringArray0[0] = "West";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JTable jTable0 = new JTable(1, 14);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jTable0, (-815), 3964L, 3157, 1, '_', (MenuElement[]) null, menuSelectionManager0);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.keyPressed(menuKeyEvent0);
      ActionEvent actionEvent0 = new ActionEvent("E>I+a!=+O|$P7]+z", 699, "Metal", 791L, 1);
      jDayChooser0.getDayPanel();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      jDayChooser0.getTransferHandler();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 228);
      focusEvent0.paramString();
      focusEvent0.setSource(basicOptionPaneUI0);
      jDayChooser0.focusGained(focusEvent0);
      jDayChooser0.getDayPanel();
      jDayChooser0.getPopupLocation((MouseEvent) null);
      jDayChooser0.setYear((-1454));
      jDayChooser0.getSelectedDay();
      ActionEvent actionEvent0 = null;
      try {
        actionEvent0 = new ActionEvent((Object) null, (-1454), "Can't find action.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-54);
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jDayChooser0.setDay(172);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 2892, "R", 0L, 3);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      JOptionPane jOptionPane0 = new JOptionPane();
      JOptionPane jOptionPane1 = new JOptionPane();
      jOptionPane1.getInitialValue();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "BcSVEyj)rdX_s{(WHol";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
