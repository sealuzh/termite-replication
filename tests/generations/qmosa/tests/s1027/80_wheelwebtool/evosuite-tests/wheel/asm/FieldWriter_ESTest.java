/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 07:10:34 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter((-268435451));
      classWriter0.index = (-268435451);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1150), "", "y0,u{", "dV2[wB[*mlb", (Object) null);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-268435451));
      classWriter0.index = (-268435451);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "&", "dV2[wB[*mlb", "Deprecated", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "=+O)Atg", "Runt8CeInvisibleAnnotations", "(9xOA&m", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(437);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 56, "?I+oTp_#GmcRYLwP(", "?I+oTp_#GmcRYLwP(", "-;O_fhdM0 GB?F!km~", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter0 = new ClassWriter(15);
      byteVector0.put12(55, 15);
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 15, "", "y0,u{", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 16777270);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 49, "Ljava/lng/{ynthetrc;", (String) null, (String) null, pushbackInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1830));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "z4qf<ll1r^a*~==\"e", "z4qf<ll1r^a*~==\"e", "z4qf<ll1r^a*~==\"e", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "dV2[wB[*mlb", "Runt8CeInvisibleAnnotations", "(9xOA&m", (Object) null);
      ByteVector byteVector0 = new ByteVector(431);
      Attribute attribute0 = new Attribute("?I+oTp_#GmcRYLwP(");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("Ljava/lng/{ynthetrc;", false);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      fieldWriter0.visitAnnotation("Ljava/lng/{ynthetrc;", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(417);
      ClassWriter classWriter0 = new ClassWriter(63);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 56, "?I+oTp_#GmcRYLwP(", "?I+oTp_#GmcRYLwP(", (String) null, (Object) null);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      classWriter0.version = 16777270;
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.7902679680745903
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      fieldWriter0.visitAnnotation("Ljava/lng/{ynthetrc;", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      fieldWriter0.visitAnnotation("Ljava/lng/{ynthetrc;", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 191, "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-95));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-95), "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;", "Ljava/lng/{ynthetrc;");
      classWriter0.version = 16777266;
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("wheel.asm.ClassAdapter", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2685));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "8FQWqQiZtbM+1#qSN", "8FQWqQiZtbM+1#qSN", "8FQWqQiZtbM+1#qSN", "8FQWqQiZtbM+1#qSN");
      fieldWriter0.visitEnd();
  }
}
