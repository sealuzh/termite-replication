/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 21:41:48 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9322865015654056
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(90);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 90);
      assertEquals(91, simpleNode0.jjtGetNumChildren());
      
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(90);
      simpleNode0.dump((String) null, stringWriter0);
      stringWriter0.close();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      simpleNode0.jjtGetParent();
      simpleNode0.toString((String) null);
      simpleNode0.dump(">Jnz", stringWriter0);
      simpleNode0.toString("");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      String string0 = simpleNode0.toString();
      assertEquals("ThrowStatement", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine(">WnZfHE-T JT^dy?5ZU");
      SystemInUtil.addInputLine("K5..\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      SimpleNode simpleNode0 = new SimpleNode(63);
      StringWriter stringWriter0 = new StringWriter(63);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wl|:Ys{CV8&^");
      arrayList0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      arrayList0.add("wl|:Ys{CV8&^");
      arrayList0.add("@");
      simpleNode0.dump(">6m^-dWKPQ}m", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      linkedList0.listIterator();
      arrayList0.add("<");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add("<");
      arrayList0.add("<");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      arrayList1.add("dvdvekUez\u0002jhoE0+");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      arrayList2.add(";");
      arrayList0.add("\"(\"");
      simpleNode0.dump("ConditionalAndExpression", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lt</identifier>\n  <identifier>*lt</identifier>\n  <identifier>*lt</identifier>\n  <identifier>\"(\"</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.594825463663181
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("PrimaryPrefix");
      stringReader0.skip((-3511L));
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("PrimaryPrefix");
      StringReader stringReader2 = new StringReader("PrimaryPrefix");
      JavaParser javaParser0 = new JavaParser(stringReader2);
      SimpleNode simpleNode0 = new SimpleNode((-1842688678));
      javaParser0.RelationalExpression();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add(" : ");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 19);
      simpleNode0.jjtAddChild((Node) null, 37);
      simpleNode0.jjtAddChild((Node) null, 96);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 37);
      SimpleNode simpleNode2 = (SimpleNode)javaParser0.currNode;
      simpleNode1.jjtAddChild(simpleNode2, 5607);
      simpleNode1.jjtGetChild(19);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode3 = new SimpleNode((-1842688678));
      simpleNode0.jjtAddChild((Node) null, 97);
      int int0 = 140;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(140);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 140
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale locale0 = Locale.CANADA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      linkedList0.listIterator();
      arrayList0.add(">");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.add("<");
      arrayList1.trimToSize();
      arrayList0.removeAll(set0);
      StringReader stringReader0 = new StringReader(">");
      stringReader0.markSupported();
      arrayList0.add("Name");
      arrayList0.add(">");
      simpleNode0.dump("aueFz(szP2s", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*gt</identifier>\n  <identifier>*gt</identifier>\n  <identifier>*lt</identifier>\n  <identifier>Name</identifier>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      SimpleNode simpleNode0 = new SimpleNode(84);
      UnaryOperator.identity();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<=");
      arrayList0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)87;
      byteArray0[2] = (byte) (-118);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.dump("K5..\"", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*le</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      linkedList0.listIterator();
      arrayList0.add("return");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList2.trimToSize();
      arrayList2.trimToSize();
      ArrayList<String> arrayList3 = simpleNode0.identifiers;
      arrayList0.add("BooleanLiteral");
      arrayList0.add("}");
      arrayList0.add("EW:a^W\"_2UGv1!?");
      StringWriter stringWriter0 = new StringWriter(17);
      simpleNode0.dump("$@/Sc1_f?,", stringWriter0);
      assertEquals("<VariableDeclarator>\n  <identifier>return</identifier>\n  <identifier>BooleanLiteral</identifier>\n  <identifier>EW:a^W\"_2UGv1!?</identifier>\n</VariableDeclarator>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.693913319058074
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.ParseException");
      stringReader0.markSupported();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      javaParser0.RelationalExpression();
      char[] charArray0 = new char[7];
      charArray0[1] = 'm';
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(" : ");
      arrayList0.add(" : ");
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add("2");
      StringWriter stringWriter0 = new StringWriter();
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      Node node0 = jJTJavaParserState0.rootNode();
      simpleNode0.jjtAddChild(node0, 0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      simpleNode0.jjtSetParent(nodeArray0[0]);
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.parent;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtGetParent();
      String string0 = "[Bm8 G%Ud-QS";
      // Undeclared exception!
      try { 
        simpleNode0.dump("[Bm8 G%Ud-QS", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList1.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      arrayList1.add(">=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">WnZfE-T J-^dy?xoJU");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wl|:Ys{C+VLE8a(");
      simpleNode0.dump("K5..\"", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*ge</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList1.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      arrayList1.add(">=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">WnZfE-T J-^dy?xoJU");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wl|:Ys{C+VLE8a(");
      simpleNode0.dump("K5..\"", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*ge</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.284895622904342
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(60);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("UnaryExpressionNotPlusMinus");
      arrayList1.parallelStream();
      simpleNode0.jjtAddChild(simpleNode0, 961);
      simpleNode0.jjtAddChild(simpleNode0, 37);
      simpleNode0.jjtAddChild(simpleNode0, 961);
      simpleNode0.jjtGetChild(60);
      simpleNode0.jjtGetNumChildren();
      stringWriter1.append('O');
      // Undeclared exception!
      simpleNode0.dump("xmcP\"-C-W[gWk`s,^%A", stringWriter0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter(37);
      StringWriter stringWriter1 = new StringWriter(37);
      stringWriter1.append((CharSequence) "F@");
      stringWriter1.write("F@");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter2 = new StringWriter(37);
      stringWriter0.write((-1794001903));
      arrayList0.add("");
      StringWriter stringWriter3 = new StringWriter(37);
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.write((-1794001903));
      stringWriter2.close();
      char[] charArray0 = new char[0];
      stringWriter3.write(charArray0);
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      stringWriter0.append('L');
      StringWriter stringWriter7 = new StringWriter();
      StringWriter stringWriter8 = new StringWriter();
      arrayList0.add("{");
      arrayList0.add(">3OZ");
      simpleNode0.dump("", stringWriter0);
      assertEquals("\uB411\uB411L<NameList>\n  <identifier>>3OZ</identifier>\n</NameList>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      linkedList0.listIterator();
      arrayList0.add("return");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.trimToSize();
      arrayList0.trimToSize();
      arrayList1.removeAll(arrayList0);
      StringReader stringReader0 = new StringReader("<");
      stringReader0.markSupported();
      arrayList0.add("<<");
      arrayList0.add("<");
      simpleNode0.dump("aueFz(szP2s", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lt</identifier>\n  <identifier>return</identifier>\n  <identifier>*lshft</identifier>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      arrayList0.clear();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      linkedList0.listIterator();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.subList(0, 0);
      arrayList1.add("/#u?`Wg");
      arrayList1.trimToSize();
      arrayList1.removeAll(arrayList0);
      arrayList0.add("=");
      arrayList0.add("kpk+x8:Nb");
      arrayList0.add("<");
      simpleNode0.dump("01=S5!wP(Qf@2]GI$Aw", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>=</identifier>\n  <identifier>kpk+x8:Nb</identifier>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5965155763056016
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter(37);
      stringWriter0.flush();
      stringWriter0.write(37);
      simpleNode0.dump("F@", stringWriter0);
      arrayList0.add("F@");
      StringWriter stringWriter1 = new StringWriter(37);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(37);
      stringWriter1.close();
      char[] charArray0 = new char[8];
      stringWriter2.write(charArray0);
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      stringWriter6.write("=0[h;UB9<m7z");
      stringWriter1.write("/H?UKh07k");
      StringWriter stringWriter7 = new StringWriter(37);
      StringWriter stringWriter8 = new StringWriter();
      stringWriter7.flush();
      StringWriter stringWriter9 = new StringWriter();
      StringWriter stringWriter10 = new StringWriter(37);
      stringWriter10.append((CharSequence) "=0[h;UB9<m7z");
      arrayList0.add("&");
      StringWriter stringWriter11 = stringWriter2.append('*');
      simpleNode0.dump("\"7lkN8 |;l]V>", stringWriter11);
      assertEquals("%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000*<NameList>\n  <identifier>F@</identifier>\n  <identifier>*amp</identifier>\n</NameList>\n", stringWriter11.toString());
      assertEquals("%\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000*<NameList>\n  <identifier>F@</identifier>\n  <identifier>*amp</identifier>\n</NameList>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.367377953109292
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LocaVariabl8Declarati");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.RelationalExpression();
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      SimpleNode simpleNode0 = (SimpleNode)jJTJavaParserState0.peekNode();
      JJTJavaParserState jJTJavaParserState1 = new JJTJavaParserState();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      stringReader0.markSupported();
      arrayList0.add("LocaVariabl8Declarati");
      arrayList0.add("LocaVariabl8Declarati");
      StringWriter stringWriter0 = new StringWriter();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 3444);
      SystemInUtil.addInputLine("LocaVariabl8Declarati");
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, (InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 423);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      pushbackInputStream0.mark((-1));
      javaCharStream0.bufpos = 423;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      javaCharStream0.bufpos = javaCharStream0.bufpos;
      javaCharStream1.ReInit((InputStream) bufferedInputStream0);
      arrayList0.add("LocaVariabl8Declarati");
      javaCharStream0.maxNextCharInd = 3054;
      char[] charArray0 = new char[2];
      charArray0[0] = 'u';
      charArray0[1] = '\"';
      javaCharStream1.ReInit((InputStream) pushbackInputStream0, 423, 423, (-117644756));
      arrayList0.add("N{3<3hE");
      simpleNode0.dump("PrimaryExpression", stringWriter0);
      assertEquals("<RelationalExpression><ShiftExpression><AdditiveExpression><MultiplicativeExpression><UnaryExpression><UnaryExpressionNotPlusMinus><PostfixExpression><PrimaryExpression><PrimaryPrefix><Name>\n  <identifier>LocaVariabl8Declarati</identifier>\n</Name>\n</PrimaryPrefix>\n</PrimaryExpression>\n</PostfixExpression>\n</UnaryExpressionNotPlusMinus>\n</UnaryExpression>\n</MultiplicativeExpression>\n</AdditiveExpression>\n</ShiftExpression>\n</RelationalExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">WnZfHE-T J-^dy?xoJU");
      SystemInUtil.addInputLine(">WnZfHE-T J-^dy?xoJU");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">WnZfHE-T J-^dy?xoJU");
      SystemInUtil.addInputLine(">WnZfHE-T J-^dy?xoJU");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(66);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">WnZfHE-T J-^dy?xoJU");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wl|:Ys{C+VLE8a(");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">WnZfHE-T J-^dy?xoJU");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wl|:Ys{C+VLE8a(");
      stringWriter0.write("r");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wl|:Ys{C+VLE8a(");
      arrayList2.add("z");
      arrayList2.add("R,T75%88`>wz/x]/");
      String string0 = simpleNode0.toString();
      assertEquals("Arguments : z : R,T75%88`>wz/x]/", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      simpleNode0.jjtSetParent(simpleNode0);
      Node node0 = simpleNode0.jjtGetParent();
      assertEquals(0, node0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6145591551764051
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) linkedList2);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      arrayList0.clear();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) arrayList0, locale_FilteringMode0);
      List<String> list0 = new ArrayList<String>();
      linkedList0.listIterator();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.subList(0, 0);
      arrayList0.add("/#u?`Fg");
      arrayList1.clear();
      arrayList0.removeAll(list0);
      arrayList0.add((String) null);
      arrayList0.add("N;'P=45euk^>_ef{[:");
      arrayList0.add("/#u?`Fg");
      // Undeclared exception!
      try { 
        simpleNode0.dump("<", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.469877311176996
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yQ_H7rDf0+ethgu,");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.RelationalExpression();
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      javaParser0.generateParseException();
      jJTJavaParserState0.peekNode();
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-1106823794));
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.trimToSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-120958784), (-120958784));
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, (-1), (-1074787335), 2187);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      arrayList0.add("yQ_H7rDf0+ethgu,");
      // Undeclared exception!
      try { 
        simpleNode0.dump("yQ_H7rDf0+ethgu,", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      UnaryOperator.identity();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j&w]");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j&w]");
      StringReader stringReader0 = new StringReader("K5..\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte) (-101));
      // Undeclared exception!
      try { 
        simpleNode0.toString("K5..\"");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -101
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) arrayList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      linkedList0.listIterator();
      arrayList0.ensureCapacity((-713));
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.subList(0, 0);
      arrayList1.clear();
      arrayList1.removeAll(arrayList0);
      arrayList0.add("=");
      arrayList0.add("=");
      arrayList0.add("<");
      simpleNode0.dump("01=S5!wP(Qf@2]GI$Aw", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>=</identifier>\n  <identifier>=</identifier>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      SimpleNode simpleNode0 = new SimpleNode(84);
      UnaryOperator.identity();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("j&w]");
      arrayList0.clone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j&w]");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)87;
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j&w]");
      String string0 = simpleNode0.toString("X+hIz%P");
      assertEquals("X+hIz%PForInit : j&w]", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      SimpleNode simpleNode0 = new SimpleNode((-1913020746));
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-2895));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtSetParent((Node) null);
      Node node1 = simpleNode0.jjtGetParent();
      assertNull(node1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)27;
      SimpleNode simpleNode0 = new SimpleNode((-1913020746));
      StringReader stringReader0 = new StringReader("*=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1648), (-4395), 437);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (byte)27);
      simpleNode0.jjtAddChild(simpleNode1, 437);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      simpleNode0.jjtGetChild((byte)27);
      simpleNode0.jjtOpen();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1913020746
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5965155763056016
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter(37);
      stringWriter0.flush();
      stringWriter0.write(37);
      simpleNode0.dump("F@", stringWriter0);
      arrayList0.add("F@");
      StringWriter stringWriter1 = new StringWriter(37);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write("F@");
      stringWriter2.write(37);
      stringWriter1.close();
      char[] charArray0 = new char[8];
      stringWriter2.write(charArray0);
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      stringWriter6.append((CharSequence) "F@");
      stringWriter6.write("=0[h;UB9<m7z");
      stringWriter1.write("/H?UKh07k");
      StringWriter stringWriter7 = new StringWriter(37);
      stringWriter7.append((CharSequence) "F@");
      StringWriter stringWriter8 = new StringWriter();
      stringWriter7.flush();
      StringWriter stringWriter9 = new StringWriter();
      StringWriter stringWriter10 = new StringWriter();
      StringWriter stringWriter11 = new StringWriter(37);
      arrayList0.add("");
      stringWriter11.append((CharSequence) "F@");
      char[] charArray1 = new char[3];
      charArray1[0] = '\u001A';
      charArray1[1] = '@';
      charArray1[2] = '.';
      stringWriter11.write(charArray1);
      arrayList0.add("n$=*v3L");
      simpleNode0.dump("F@", stringWriter11);
      assertEquals("F@\u001A@.<NameList>\n  <identifier>F@</identifier>\n  <identifier>n$=*v3L</identifier>\n</NameList>\n", stringWriter11.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("K5..\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(66);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add(">WnZfHE-T J-^dy?xoJU");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K5..\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wl|:Ys{C+VLE8a(");
      stringWriter0.write("wl|:Ys{C+VLE8a(");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add(">WnZfHE-T J-^dy?xoJU");
      arrayList1.add("K5..\"");
      arrayList1.add(">=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode1 = null;
      try {
        simpleNode1 = new SimpleNode((JavaParser) null, 66);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(101);
      simpleNode0.parser = null;
      simpleNode0.setIdentifier("x1m$K5Zrt z_Eub8r");
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3270204811135162
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LocalVFriableDBclaratio");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.RelationalExpression();
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      javaParser0.generateParseException();
      SimpleNode simpleNode0 = (SimpleNode)jJTJavaParserState0.peekNode();
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.trimToSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-120958784), (-1085407416));
      javaParser0.jj_input_stream = javaCharStream0;
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-1085407416), (-1085407416), (-1));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      arrayList0.add("gt");
      arrayList0.add("gt");
      SimpleNode simpleNode1 = new SimpleNode(javaParser1, (-1));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-481));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -481
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.add("~");
      arrayList0.add("~");
      StringWriter stringWriter0 = new StringWriter();
      arrayList0.add("VQZ,q_!^8A7Dzh4:");
      arrayList0.trimToSize();
      arrayList0.add("instanceof");
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList0.trimToSize();
      arrayList0.trimToSize();
      arrayList1.removeAll(arrayList0);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply("uAs`t^t9Ow.erSER");
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      arrayList1.add("VQZ,q_!^8A7Dzh4:");
      ArrayList<String> arrayList2 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(17);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-120958784));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6134788277392043
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(">>");
      arrayList0.add("&&");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Integer integer0 = new Integer((-2013578610));
      ArrayList<String> arrayList2 = new ArrayList<String>();
      Integer[] integerArray0 = new Integer[7];
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      Integer integer1 = new Integer((-2054177203));
      integerArray0[2] = integer1;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      arrayList2.toArray(integerArray0);
      Integer integer2 = new Integer(50);
      Integer integer3 = new Integer(0);
      Integer integer4 = new Integer((int) integerArray0[4]);
      Integer integer5 = new Integer(470);
      Integer integer6 = new Integer(470);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump("-tZW4W", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*rshft</identifier>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*rshft</identifier>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }
}
