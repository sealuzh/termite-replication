/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 08:18:12 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 294);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[5];
      stringWriter0.flush();
      CharBuffer.wrap(charArray0, 0, 0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "3");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("3");
      simpleNode1.dump("CompilationUnit", stringWriter0);
      stringWriter0.write(charArray0);
      simpleNode1.setIdentifier(";");
      StringReader stringReader0 = new StringReader("3");
      StringReader stringReader1 = new StringReader("PE-.U6XYI !og");
      simpleNode1.dump("aCEPHA$5(86,`t", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>3</identifier>\n</CompilationUnit>\n\u0000\u0000\u0000\u0000\u0000<CompilationUnit>\n  <identifier>3</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode1.toString();
      assertEquals("CompilationUnit : 3 : ;", string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SystemInUtil.addInputLine((String) null);
      StringWriter stringWriter0 = new StringWriter();
      SystemInUtil.addInputLine((String) null);
      stringWriter0.close();
      simpleNode0.setIdentifier("<=");
      stringWriter0.close();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      StringReader stringReader0 = new StringReader("<=");
      simpleNode0.dump(";", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*le</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      StringReader stringReader1 = new StringReader("|Z(>s4bogn;KY5v&JM");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString((String) null);
      String string0 = simpleNode0.toString("nci/7Zg=+}{tYfmdn;");
      assertEquals("nci/7Zg=+}{tYfmdn;PackageDeclaration : <=", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8470396385078469
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 294);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0, 0, 0);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.allocate(294);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write("3U<+Cx0sjf~;0hu(M");
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-7);
      pipedOutputStream1.close();
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-7);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.toString("3U<+Cx0sjf~;0hu(M");
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      pipedOutputStream0.write(103);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream(pipedOutputStream2);
      PipedInputStream pipedInputStream4 = new PipedInputStream();
      PipedInputStream pipedInputStream5 = null;
      try {
        pipedInputStream5 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3517839942896461
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("after : \"");
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter2 = new StringWriter();
      SystemInUtil.addInputLine("after : \"");
      StringWriter stringWriter3 = new StringWriter();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      stringWriter2.close();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.setIdentifier("}");
      StringReader stringReader0 = new StringReader("V\"\"");
      simpleNode1.dump("e+sj'pnWHi|z", stringWriter3);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter3.toString());
      
      String string0 = simpleNode1.toString((String) null);
      assertEquals("nullCompilationUnit : }", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0805738483648537
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer();
      char[] charArray0 = new char[5];
      stringBuffer0.insert(0, 0);
      charBuffer0.order();
      charArray0[1] = 'Y';
      charArray0[2] = ',';
      charArray0[3] = ',';
      CharBuffer charBuffer1 = CharBuffer.allocate('Y');
      char[] charArray1 = new char[8];
      charArray1[0] = '\u0085';
      stringBuffer0.append(';');
      CharBuffer.allocate(0);
      charBuffer1.append(',');
      charArray1[4] = ',';
      charArray1[5] = '\u0000';
      charArray1[6] = '\u0000';
      charArray1[7] = ',';
      CharBuffer.allocate('Y');
      charBuffer1.append((CharSequence) stringBuffer0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      simpleNode0.dump("\"H-\"", stringWriter0);
      assertEquals("<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("l_;&vhjfTJE");
      assertEquals("l_;&vhjfTJECompilationUnit : ", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 226);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.flush();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      stringWriter0.append((CharSequence) charBuffer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.identifiers = null;
      stringWriter1.flush();
      String string0 = ">=";
      String string1 = ">";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SystemInUtil.addInputLine((String) null);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('e');
      SystemInUtil.addInputLine((String) null);
      stringWriter0.close();
      simpleNode0.setIdentifier(">>");
      StringReader stringReader0 = new StringReader(">>");
      simpleNode0.dump(";", stringWriter0);
      char[] charArray0 = new char[5];
      stringWriter0.write(charArray0);
      String string0 = "|Z(>s4bogn;KY5v&JM";
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      stringWriter0.close();
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("after : \"");
      stringWriter0.flush();
      CharBuffer.wrap(charArray0, 0, 0);
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter2 = new StringWriter();
      SystemInUtil.addInputLine("after : \"");
      StringWriter stringWriter3 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      SystemInUtil.addInputLine("U ");
      simpleNode0.toString("after : \"");
      stringWriter2.write("line.separator");
      stringWriter2.write(0);
      stringWriter2.write(">=");
      stringWriter2.write(charArray0);
      simpleNode0.setIdentifier(">");
      StringReader stringReader0 = new StringReader("|Z(>s4bogn;KY5v&JM");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump(">=", stringWriter2);
      assertEquals("line.separator\u0000>=<CompilationUnit>\n  <identifier>*gt</identifier>\n</CompilationUnit>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charBuffer0.order();
      charArray0[1] = 'Y';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      CharBuffer charBuffer1 = CharBuffer.allocate('Y');
      char[] charArray1 = new char[8];
      charArray1[0] = '\u0085';
      StringBuffer stringBuffer2 = new StringBuffer(',');
      charArray1[1] = ',';
      charArray0[0] = ',';
      CharBuffer.allocate(0);
      charBuffer1.append(',');
      StringBuffer stringBuffer3 = new StringBuffer('\u0085');
      charArray1[4] = ',';
      charArray1[5] = ',';
      charArray1[6] = ',';
      charArray1[7] = ',';
      CharBuffer.allocate('Y');
      charBuffer1.append((CharSequence) stringBuffer0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">=");
      StringReader stringReader0 = new StringReader("J~MipW/lze_T3UT/n9m");
      simpleNode0.dump(":;7yBjXG&2(8D7:u", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*ge</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7549967581308246
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.parent = (Node) simpleNode0;
      String string0 = "<identifier>Literal Value</identifier>\n";
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.parent;
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode2.jjtAddChild(simpleNode0, 0);
      String string1 = ".,m^{E|X]$_qOtfQbl";
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("]t/|7/.zUpS");
      StringWriter stringWriter1 = new StringWriter(0);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode1;
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode2;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode2.children = nodeArray0;
      StringWriter stringWriter2 = new StringWriter();
      simpleNode1.dump(">", stringWriter0);
      SimpleNode simpleNode3 = (SimpleNode)simpleNode0.parent;
      simpleNode2.jjtSetParent(simpleNode1);
      simpleNode0.jjtAddChild(simpleNode2, 3391);
      // Undeclared exception!
      simpleNode3.dump((String) null, stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(30);
      StringWriter stringWriter0 = new StringWriter(30);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer();
      char[] charArray0 = new char[5];
      StringBuffer stringBuffer2 = stringBuffer0.insert(30, 30);
      charBuffer0.order();
      charArray0[1] = 'Y';
      stringBuffer0.insert(0, (Object) stringBuffer2);
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[2] = ',';
      CharBuffer charBuffer1 = CharBuffer.allocate('Y');
      char[] charArray1 = new char[8];
      charArray1[0] = '-';
      StringBuffer stringBuffer3 = new StringBuffer('j');
      charArray1[1] = ',';
      stringBuffer0.setLength(30);
      stringBuffer3.append(false);
      charBuffer1.append(',');
      charArray0[2] = ',';
      charArray1[7] = ',';
      StringBuffer stringBuffer4 = new StringBuffer(',');
      CharBuffer.allocate('Y');
      charBuffer1.append((CharSequence) stringBuffer3);
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier("t");
      simpleNode0.dump("\"-\"", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>t</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      simpleNode0.toString("l_;&vhjfTJE");
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceType : t", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.identifiers = null;
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      charArray0[1] = '!';
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter('K');
      charArray0[2] = '!';
      charArray0[3] = '!';
      simpleNode1.jjtGetChild(0);
      assertEquals(1, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StringWriter stringWriter0 = new StringWriter(0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer();
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      ByteOrder byteOrder0 = charBuffer0.order();
      charArray0[1] = 'Y';
      charArray0[2] = ',';
      charArray0[3] = ',';
      charArray0[4] = ',';
      CharBuffer charBuffer1 = CharBuffer.allocate('Y');
      char[] charArray1 = new char[8];
      charArray1[0] = '\u0085';
      StringBuffer stringBuffer2 = new StringBuffer(',');
      charArray1[1] = ',';
      charArray1[2] = ',';
      CharBuffer.allocate(0);
      charBuffer1.append(',');
      stringBuffer0.append((Object) byteOrder0);
      charArray1[4] = ',';
      charArray1[5] = 'Y';
      charArray1[6] = 'Y';
      charArray1[7] = ',';
      CharBuffer.allocate('Y');
      charBuffer1.append((CharSequence) stringBuffer0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">=");
      simpleNode0.identifiers = null;
      StringReader stringReader0 = new StringReader("J~MipW/lze_T3UT/n9m");
      // Undeclared exception!
      try { 
        simpleNode0.dump(":;7yBjXG&2(8D7:u", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(2783);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = "\"\"";
      simpleNode0.setIdentifier("\"\"");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      stringWriter0.flush();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P/f,[4M&g=z2>U");
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"\"", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8717814824679823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      stringWriter0.write("]t/|7/.zUpS");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.close();
      StringWriter stringWriter3 = stringWriter0.append('!');
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) null);
      StringWriter stringWriter5 = stringWriter4.append('!');
      stringWriter3.getBuffer();
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      stringWriter2.write("]t/|7/.zUpS");
      stringWriter1.write(56);
      charArray0[1] = '!';
      stringWriter2.flush();
      StringWriter stringWriter6 = new StringWriter('K');
      stringWriter1.append((CharSequence) "]t/|7/.zUpS");
      charArray0[2] = '!';
      stringWriter1.write(charArray0);
      simpleNode1.dump("Kreaf", stringWriter5);
      simpleNode0.jjtAddChild(simpleNode1, 117);
      simpleNode0.jjtGetChild(32);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(118, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node[] nodeArray0 = new Node[2];
      simpleNode0.children = nodeArray0;
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(nodeArray0[0], 10);
      simpleNode1.jjtAddChild(simpleNode0, 179);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.jjtGetNumChildren();
      SystemInUtil.addInputLine("Bo2t");
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(10);
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode2.jjtAddChild(simpleNode0, 0);
      SystemInUtil.addInputLine(".,m^{E|X]$_qOtfQbl");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) null);
      stringWriter0.write("]t/|7/.zUpS");
      simpleNode2.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter(1);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.append('!');
      simpleNode2.jjtAddChild(simpleNode1, 1);
      assertEquals(2, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      simpleNode0.jjtAddChild((Node) null, 10);
      StringWriter stringWriter0 = new StringWriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 10);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 10);
      Node node1 = simpleNode0.parent;
      simpleNode0.jjtAddChild(simpleNode0, 1);
      assertEquals(11, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.wrap((CharSequence) ".,m^{E|X]$_qOtfQbl");
      char[] charArray0 = new char[7];
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      String string0 = "]t/|7/.zUpS";
      stringWriter0.write("]t/|7/.zUpS");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.close();
      StringWriter stringWriter3 = stringWriter0.append('!');
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) null);
      StringWriter stringWriter5 = stringWriter4.append('!');
      stringWriter4.write("&&");
      stringWriter3.getBuffer();
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      stringWriter1.write(56);
      charArray0[1] = '!';
      stringWriter2.flush();
      char char0 = 'K';
      stringWriter3.close();
      StringWriter stringWriter6 = new StringWriter('K');
      StringWriter stringWriter7 = new StringWriter('!');
      charArray0[2] = '!';
      stringWriter1.write(charArray0);
      simpleNode1.dump("Kreaf", stringWriter5);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1737);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 226);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[0];
      stringWriter0.flush();
      long long0 = (-1383L);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(3830);
      JavaParser javaParser1 = new JavaParser(pipedInputStream1);
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier("</");
      pipedInputStream1.mark(411);
      simpleNode0.dump("</", stringWriter1);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
      PipedOutputStream pipedOutputStream3 = null;
      try {
        pipedOutputStream3 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6885673693022827
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null);
      stringWriter0.write("]t/|7/.zUpS");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.close();
      StringWriter stringWriter3 = stringWriter0.append('!');
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) null);
      StringWriter stringWriter5 = stringWriter4.append('!');
      stringWriter3.getBuffer();
      char[] charArray0 = new char[7];
      charArray0[0] = '!';
      stringWriter1.write(56);
      charArray0[1] = '!';
      stringWriter2.flush();
      StringWriter stringWriter6 = new StringWriter('K');
      StringWriter stringWriter7 = new StringWriter('!');
      charArray0[2] = '!';
      stringWriter1.write(charArray0);
      simpleNode1.dump("Kreaf", stringWriter5);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1148);
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 91
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-7));
      String string0 = " iB";
      StringWriter stringWriter0 = new StringWriter(442);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Y';
      SimpleNode simpleNode1 = new SimpleNode(256);
      simpleNode0.jjtAddChild(simpleNode1, 256);
      charArray0[1] = '(';
      charArray0[2] = 'F';
      charArray0[3] = 'w';
      charArray0[4] = 'w';
      charArray0[5] = 'Z';
      StringReader stringReader0 = new StringReader(" iB");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 442);
      simpleNode2.jjtSetParent(simpleNode1);
      simpleNode1.jjtSetParent(simpleNode2);
      simpleNode0.jjtSetParent(simpleNode2);
      simpleNode0.jjtClose();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtClose();
      Node node0 = simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        node0.jjtAddChild(simpleNode1, (-7));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.parent = (Node) simpleNode0;
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.parent;
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode2.jjtAddChild(simpleNode0, 0);
      SystemInUtil.addInputLine(".,m^{E|X]$_qOtfQbl");
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      charArray0[1] = 'v';
      charArray0[2] = 'v';
      stringWriter0.write(charArray0);
      simpleNode0.dump("", stringWriter0);
      SimpleNode simpleNode3 = new SimpleNode(72);
      simpleNode0.toString();
      int int0 = (-1558);
      SimpleNode simpleNode4 = new SimpleNode((-1329));
      simpleNode0.jjtGetParent();
      simpleNode3.jjtGetParent();
      SimpleNode simpleNode5 = new SimpleNode((-1));
      simpleNode5.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(72);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer();
      charBuffer0.order();
      CharBuffer.allocate('Y');
      char[] charArray0 = new char[8];
      charArray0[0] = 'Y';
      StringBuffer stringBuffer2 = new StringBuffer(',');
      charArray0[1] = ',';
      charArray0[2] = ',';
      CharBuffer.allocate(0);
      StringBuffer stringBuffer3 = new StringBuffer();
      charArray0[4] = ',';
      CharBuffer.wrap(charArray0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      StringReader stringReader0 = new StringReader("? %9j");
      SimpleNode simpleNode0 = new SimpleNode((-776));
      StringReader stringReader1 = new StringReader("? %9j");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        simpleNode0.toString("|");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -776
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      SimpleNode simpleNode0 = new SimpleNode(31);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[8] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (-2221));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)29;
      byteArray1[2] = (byte)29;
      byteArray1[4] = (byte)29;
      byteArray1[6] = (byte)29;
      byteArrayInputStream0.close();
      // Undeclared exception!
      try { 
        sequenceInputStream0.read(byteArray1, (-1414), 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-81);
      byte byte0 = (byte)29;
      byteArray0[2] = (byte)29;
      SimpleNode simpleNode0 = new SimpleNode((byte) (-81));
      simpleNode0.jjtOpen();
      SimpleNode simpleNode1 = new SimpleNode((byte)29);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (byte) (-81));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ccma`");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 19, 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 4069);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-44);
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte) (-105);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((byte) (-44));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -44
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      Node node1 = simpleNode0.parent;
      int int0 = 2332;
      SimpleNode simpleNode1 = new SimpleNode(2332);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild((Node) null, (-110));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -110
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ExplicitConstructorInvocation");
      stringReader0.markSupported();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      javaParser0.RelationalExpression();
      char[] charArray0 = new char[7];
      charArray0[0] = 't';
      charArray0[1] = '}';
      charArray0[2] = 'i';
      charArray0[3] = 'r';
      charArray0[5] = 'D';
      charArray0[6] = '\"';
      try { 
        stringReader0.read(charArray0, 45, (-348));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }
}
