/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 19:58:11 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2527144024446266
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, (-2471.5385957), 305.650834185, 1.7976931348623157E308, 1.7976931348623157E308);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", string0);
      
      TagValue tagValue0 = new TagValue((String) null, "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A");
      TagValue tagValue1 = new TagValue();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-1), "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", "BAG", (String) null, 1617.725050876855, "x@&;f", (String) null, (String) null, "BAG", "52WeekLow", vector0, "  It does not support what-if orders.", false, "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A", (String) null);
      Order order0 = new Order();
      Vector<Object> vector1 = new Vector<Object>();
      contract0.m_comboLegsDescrip = "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A";
      Vector<Object> vector2 = new Vector<Object>();
      vector2.remove((Object) vector0);
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(1326, contract0, order0, orderState0);
      String string1 = EWrapperMsgGenerator.tickOptionComputation(1610612736, 2470, 1.7976931348623157E308, 0.0, 3, Integer.MAX_VALUE);
      assertEquals("id=1610612736  unknown: vol = N/A delta = 0.0", string1);
      
      Execution execution0 = new Execution();
      String string2 = EWrapperMsgGenerator.execDetails(0, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 0\norderId = 0\nclientId = 0\nsymbol = id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A\nsecType = BAG\nexpiry = null\nstrike = 1617.725050876855\nright = x@&;f\ncontractExchange = null\ncurrency = BAG\nlocalSymbol = 52WeekLow\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string2);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(599, "OptionHistoricalVolatility", " o`y6;2]oPQHp#z'+k)", "si:7{,XwrZ:A#rx", 236.240310215717, "si:7{,XwrZ:A#rx", "si:7{,XwrZ:A#rx", "Error - ", "com.ib.client.ContractDetails", "OptionHistoricalVolatility", vector0, "~TO|vvBC'dI", true, "~TO|vvBC'dI", "~TO|vvBC'dI");
      Order order0 = new Order();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = 1219.908654608499;
      contract0.m_underComp = underComp0;
      underComp0.m_conId = 0;
      OrderState orderState0 = new OrderState("F!HriQq}$p$s", "id=102  modelOptComp: vol = 4961.048808657481 delta = N/A: modelPrice = 0.0: pvDividend = 13.0", "lastSize", "com.ib.client.ContractDetails", 1.0, (-1646.281015428), 1373.47374, "OptionHistoricalVolatility", "k%v>(P;k5.{d)|d");
      orderState0.m_equityWithLoan = "auctionVolume";
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(599, "OptionHistoricalVolatility", " o`y6;2]oPQHp#z'+k)", "si:7{,XwrZ:A#rx", 236.326, "si:7{,XwrZ:A#rx", "si:7{,XwrZ:A#rx", "Error - ", "com.ib.client.ContractDetails", "OptionHistoricalVolatility", vector0, "~TO|vvBC'dI", true, "~TO|vvBC'dI", "~TO|vvBC'dI");
      Order order0 = new Order();
      contract0.m_conId = (-678);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      order0.m_algoStrategy = " o`y6;2]oPQHp#z'+k)";
      contract0.m_expiry = null;
      OrderState orderState0 = new OrderState("F!HriQq}$p$s", "id=10  modelOptComp: vol = 4961.048808657481 delta = N/A: modelPrice = 0.0: pvDividend = 130", "lastSize", "com.ib.client.ContractDetails", 1.0, (-1646.281015428), 1373.47374, "OptionHistoricalVolatility", "k%v>(P;k5.{d)|d");
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      contract0.clone();
      OrderState orderState1 = new OrderState("D3\u0004#F{O[>X-sLD", "OptionBidExchStr", (String) null, "g8Hud", 0, (-2239.490204014), (-1.0), "d6", (String) null);
      orderState1.m_maxCommission = (double) 0;
      orderState1.m_equityWithLoan = null;
      String string1 = EWrapperMsgGenerator.openOrder(27, contract0, order0, orderState1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EWrapperMsgGenerator.tickString((-1610612734), (-725), " :: MsgType=");
      EWrapperMsgGenerator.tickSnapshotEnd(48);
      EWrapperMsgGenerator.tickSize(48, (-2146615114), 13);
      EWrapperMsgGenerator.updateAccountValue("1A", "NJ[mmMA~{o=hJ v", "id=48  unknown=13", " :: MsgType=");
      EWrapperMsgGenerator.tickGeneric((-1610612734), 48, 11.0);
      EWrapperMsgGenerator.nextValidId((-1030));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue("FA:", "FA:");
      tagValue0.m_value = "ptabl = ";
      tagValue0.m_value = "ptabl = ";
      tagValue0.m_tag = "  It does not spport notflR paameter.";
      vector0.iterator();
      vector0.add((Object) tagValue0);
      tagValue0.m_tag = "FA:";
      tagValue0.m_tag = "ptabl = ";
      tagValue0.m_value = "BAG";
      TagValue tagValue1 = new TagValue("%*%", "(o{_Ks@aBZ6");
      tagValue1.m_tag = "BAG";
      tagValue1.m_value = "Vxpj_Vz-NzR-g}V";
      tagValue1.m_tag = "ptabl = ";
      vector0.addElement(tagValue1);
      Contract contract0 = new Contract(3, "BAG", "BAG", "BAG", 1.7976931348623157E308, "ptabl = ", "FA:", "ptabl = ", "BAG", "FA:", vector0, "FA:", true, "  It does not spport notflR paameter.", "FA:");
      Order order0 = new Order();
      vector0.stream();
      tagValue0.m_value = "LF\"l>xy@hl.t[R";
      tagValue0.m_tag = "Ero< ";
      tagValue1.m_tag = "[ BU+XMw*o!i3]W;HF";
      tagValue0.m_value = "Ero< ";
      tagValue1.m_tag = "Ero< ";
      OrderState orderState0 = new OrderState();
      String string1 = EWrapperMsgGenerator.openOrder(1, contract0, order0, orderState0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue("FA:", "FA:");
      tagValue0.m_value = "ptabl = ";
      tagValue0.m_value = "ptabl = ";
      tagValue0.m_tag = "  It does not spport notfld paameter.";
      vector0.add((Object) tagValue0);
      tagValue0.m_tag = "FA:";
      tagValue0.m_tag = "ptabl = ";
      tagValue0.m_value = "BAG";
      TagValue tagValue1 = new TagValue("%N*%KS", "(o{_Ks@aBZ6");
      tagValue1.m_tag = "ptabl = ";
      tagValue1.m_value = "%N*%KS";
      tagValue1.m_tag = "%N*%KS";
      vector0.addElement(tagValue1);
      Contract contract0 = new Contract(3, "BAG", "BAG", "BAG", 1.7976931348623157E308, "ptabl = ", "FA:", "ptabl = ", "BAG", "FA:", vector0, "FA:", true, "  It does not spport notfld paameter.", "FA:");
      Order order0 = new Order();
      vector0.stream();
      tagValue1.m_tag = "[ BU+XMw*o!i3]W;HF";
      tagValue0.m_value = "ptabl = ";
      System.setCurrentTimeMillis(1195L);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(0, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, (-2471.5385957), (-2471.5385957), 796.58371, (-2471.5385957));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      assertTrue(hashMap8.isEmpty());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation((-4065), (-4065), 1.7976931348623157E308, (-722.6452), (-722.6452), (-4960.1608935532));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      assertTrue(hashMap7.isEmpty());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      TagValue tagValue0 = new TagValue();
      TagValue tagValue1 = new TagValue("n:F2G2:dX|Xc4\"`", (String) null);
      tagValue1.m_tag = "n:F2G2:dX|Xc4\"`";
      tagValue1.m_value = "6q(";
      tagValue1.m_value = "B,AG";
      tagValue0.m_value = null;
      tagValue0.m_value = "putable = ";
      tagValue1.m_value = "n:F2G2:dX|Xc4\"`";
      tagValue0.m_tag = "putable = ";
      tagValue0.m_value = "6q(";
      int int0 = 2146591755;
      EWrapperMsgGenerator.tickOptionComputation(2146591755, 11, 1.7976931348623157E308, (-1.0), 1.7976931348623157E308, 1.7976931348623157E308);
      int int1 = 1;
      double double0 = 1.0;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 1, 11, 1, 1.7976931348623157E308, 1.0, (-985.0799), "Y*If{uXP#8|8e}b~F");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.tickPrice(Integer.MAX_VALUE, (-3008), Integer.MAX_VALUE, (-696));
      assertEquals("id=2147483647  unknown=2.147483647E9  canAutoExecute", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(2236L);
      System.setCurrentTimeMillis(13);
      String string0 = EWrapperMsgGenerator.updateNewsBulletin((-70), (-200004860), ";$+%]W=p", "U*W)4aD+");
      assertEquals("MsgId=-70 :: MsgType=-200004860 :: Origin=U*W)4aD+ :: Message=;$+%]W=p", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 13, 0.0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) linkedList0, locale_FilteringMode1);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) linkedList0, locale_FilteringMode0);
      assertNotSame(list1, list0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(4052, 13, 1186.9225898593295, 13, (-1.0), (-3590.55587));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      assertTrue(hashMap8.equals((Object)hashMap0));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.clone();
      Integer integer0 = new Integer(1698);
      order0.m_lmtPrice = (double) (-678);
      vector0.add((Object) integer0);
      vector0.sort(comparator0);
      EWrapperMsgGenerator.tickSize(0, Integer.MAX_VALUE, Integer.MAX_VALUE);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(0);
      EWrapperMsgGenerator.tickPrice((-678), Integer.MAX_VALUE, 0, 0);
      System.setCurrentTimeMillis((-3399L));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      String string0 = EWrapperMsgGenerator.execDetailsEnd(13);
      assertEquals("reqId = 13 =============== end ===============", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis((-1123));
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 3155.5747723793575, (String) null, (String) null, (-1073741824), (String) null, "auctionImbalance", " discretionaryAmt=", "#_!zI", (String) null, (String) null, "~?", (String) null);
      String string0 = EWrapperMsgGenerator.contractDetails((-1), contractDetails0);
      assertEquals("reqId = -1 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 3155.5747723793575\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = -1073741824\nlongName = null\ncontractMonth = auctionImbalance\nindustry =  discretionaryAmt=\ncategory = #_!zI\nsubcategory = null\ntimeZoneId = null\ntradingHours = ~?\nliquidHours = null\n ---- Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue("FA:", "FA:");
      tagValue0.m_value = "ptabl = ";
      tagValue0.m_value = "FA:";
      tagValue0.m_tag = "FA:";
      vector0.iterator();
      vector0.add((Object) tagValue0);
      tagValue0.m_tag = "FA:";
      tagValue0.m_tag = "FA:";
      tagValue0.m_value = "BAG";
      TagValue tagValue1 = new TagValue("BAG", "ptabl = ");
      tagValue1.m_tag = "BAG";
      tagValue1.m_value = "Vxpj_Vz-NzR-g}V";
      tagValue1.m_tag = "FA:";
      vector0.addElement(tagValue1);
      Contract contract0 = new Contract(3, "BAG", "BAG", "BAG", 1.7976931348623157E308, "FA:", "FA:", "FA:", "BAG", "FA:", vector0, "FA:", true, "BAG", "FA:");
      Order order0 = new Order();
      vector0.stream();
      tagValue0.m_value = "LF\"l>xy@hl.t[R";
      tagValue0.m_tag = "Ero< ";
      tagValue1.m_tag = "Ero< ";
      tagValue0.m_value = "Ero< ";
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(0, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "%Cg8", "%Cg8", 278.88332832, "industry = ", "`{|}}Ld2>0uo", (-284), "industry = ", "%Cg8", "::C,(", "::C,(", "industry = ", "Connection Closed", "%Cg8", " legsStr=");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData((-284), (-284), contractDetails0, (String) null, (String) null, "EL,Oc$qA", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.orderStatus(0, "V;g,}g9;wZFb<.", 0, 21, (-1047.5765), 2, 109, 0, 109, "B+xqpM3=01M:Oh' Qf");
      assertEquals("order status: orderId=0 clientId=109 permId=2 status=V;g,}g9;wZFb<. filled=0 remaining=21 avgFillPrice=-1047.5765 lastFillPrice=0.0 parent Id=109 whyHeld=B+xqpM3=01M:Oh' Qf", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 13;
      EWrapperMsgGenerator.openOrderEnd();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange(" =============== end ===============", 3418.22083427);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=3418.22083427
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(2236L);
      System.setCurrentTimeMillis(13);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation((-1), (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = 1832.25890976;
      underComp0.m_price = 1.0;
      underComp0.m_price = 4961.048809;
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(102, underComp0);
      assertEquals("id = 102 underComp.conId =0 underComp.delta =0.0 underComp.price =4961.048809", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis(2236L);
      System.setCurrentTimeMillis(13);
      String string0 = EWrapperMsgGenerator.currentTime(4511L);
      assertEquals("current time = 4511 (Jan 1, 1970 1:15:11 AM)", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("  It does not support secIdType and secId parameters.");
      assertEquals("Connected : The list of managed accounts are : [  It does not support secIdType and secId parameters.]", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis(102);
      Execution execution0 = new Execution(102, (-2146657789), "auctionImbalance", "auctionImbalance", (String) null, (String) null, "auctionImbalance", 102, (-1.0), (-1733), (-1733), (-1161), 1036.0259);
      execution0.m_liquidation = (-1161);
      execution0.m_avgPrice = (double) (-2146657789);
      execution0.m_permId = (-1161);
      execution0.m_liquidation = 102;
      execution0.m_time = "auctionImbalance";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(102, (Contract) null, execution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(18, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Execution execution0 = new Execution();
      execution0.m_clientId = 38;
      String string0 = EWrapperMsgGenerator.fundamentalData(0, ">AI3YQ");
      assertEquals("id  = 0 len = 6\n>AI3YQ", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, (-3414.58), " referencePriceType=", "hy9Rv$RMX 0u)]", (-2509), "0b$7H-hzDy,", (String) null, (String) null, (String) null, (String) null, "(1>rck[c", "IK)WF>:vRHR", "OptionPutVolume");
      String string0 = EWrapperMsgGenerator.bondContractDetails(2146614762, contractDetails0);
      assertEquals("reqId = 2146614762 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = -3414.58\norderTypes =  referencePriceType=\nvalidExchanges = hy9Rv$RMX 0u)]\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = 0b$7H-hzDy,\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      double double0 = 1980.4878994976;
      EWrapperMsgGenerator.scannerDataEnd((-1504));
      String string0 = "FQ3\"3%Guz $LCfI%C(C";
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("FQ3\"3%Guz $LCfI%C(C", (-1504));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=-1504.0
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(1353, (-1934), "AkLO5o]sI", 224, 28, 1353, 108);
      assertEquals("updateMktDepth: 1353 -1934 AkLO5o]sI 224 28 1353.0 108", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EWrapperMsgGenerator.tickPrice(13, 13, 1.7976931348623157E308, 13);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "Y*If{uXP#8|8e}b~F");
      vector0.setSize(13);
      Vector<String> vector1 = new Vector<String>();
      Vector<String> vector2 = new Vector<String>();
      vector0.add((Object) vector2);
      Vector<Object> vector3 = new Vector<Object>();
      Vector<Object> vector4 = new Vector<Object>();
      vector3.add((Object) "Y*If{uXP#8|8e}b~F");
      vector3.sort((Comparator<? super Object>) null);
      Object object0 = new Object();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap9 = new HashMap<String, List<String>>();
      EWrapperMsgGenerator.tickPrice((-123), (-123440289), 305.656477331621, 898);
      System.setCurrentTimeMillis((-123440289));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue();
      tagValue0.m_value = "4EU%a";
      tagValue0.m_value = "4EU%a";
      tagValue0.m_tag = "  It does not spport notfld paameter.";
      vector0.iterator();
      vector0.add((Object) tagValue0);
      tagValue0.m_tag = "FA:";
      tagValue0.m_tag = "4EU%a";
      tagValue0.m_value = "AG";
      TagValue tagValue1 = new TagValue("AG", "(o{_Ks@aBZ6");
      tagValue1.m_tag = "(o{_Ks@aBZ6";
      tagValue1.m_tag = "4EU%a";
      vector0.addElement(tagValue1);
      Contract contract0 = new Contract(3, "AG", "AG", "AG", 1.7976931348623157E308, "4EU%a", "FA:", "4EU%a", "AG", "FA:", vector0, "FA:", true, "  It does not spport notfld paameter.", "FA:");
      Order order0 = new Order();
      vector0.stream();
      tagValue1.m_tag = "[ BU+XMw*o!i3]W;HF";
      tagValue1.m_tag = "AG";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(1, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OrderState orderState0 = new OrderState();
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract((-2147483647), (String) null, (String) null, "7GM:Xue2puYR!$", 2146591755, "7NC#j'B{WQ+He", "e@", (String) null, "SR>WY(", (String) null, vector0, (String) null, false, (String) null, "q(fNA");
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.openOrder(2146591755, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract(2147483645, "T\u0006}@_~}!R-W$8SFODt", "T\u0006}@_~}!R-W$8SFODt", "+:xqHn<9fxJZU=gm}&", 1.0, "gR", "KgP`0Sxm}A@?Yk", "T\u0006}@_~}!R-W$8SFODt", "k%v>(P;k5.{d)|d", "qf`gDU]SmL(Wbj:K", vector0, "}-Qlr", true, (String) null, "industry = ");
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 2147483645\nsymbol = T\u0006}@_~}!R-W$8SFODt\nsecType = T\u0006}@_~}!R-W$8SFODt\nexpiry = +:xqHn<9fxJZU=gm}&\nstrike = 1.0\nright = gR\nmultiplier = KgP`0Sxm}A@?Yk\nexchange = T\u0006}@_~}!R-W$8SFODt\nprimaryExch = }-Qlr\ncurrency = k%v>(P;k5.{d)|d\nlocalSymbol = qf`gDU]SmL(Wbj:K\n", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Vector<List<String>> vector0 = new Vector<List<String>>();
      Contract contract0 = new Contract(119, "m~hcOG~HYtpkAS[Vc", "m~hcOG~HYtpkAS[Vc", "cQ).p&K2+f", 11.0, "&zN {", "cQ).p&K2+f", "&zN {", "&zN {", "com.ib.client.Execution", vector0, "&", false, (String) null, "&");
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 119, 11.0, 1508.9662859873, 11.0, 342.8957175, 1.7976931348623157E308, "^,Ky5se>");
      assertEquals("updatePortfolio: conid = 119\nsymbol = m~hcOG~HYtpkAS[Vc\nsecType = m~hcOG~HYtpkAS[Vc\nexpiry = cQ).p&K2+f\nstrike = 11.0\nright = &zN {\nmultiplier = cQ).p&K2+f\nexchange = &zN {\nprimaryExch = &\ncurrency = &zN {\nlocalSymbol = com.ib.client.Execution\n119 11.0 1508.9662859873 11.0 342.8957175 1.7976931348623157E308 ^,Ky5se>", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System.setCurrentTimeMillis(2236L);
      System.setCurrentTimeMillis(13);
      String string0 = EWrapperMsgGenerator.tickEFP(1155, 1090, 1090, "  It does not support notHeld parameter.", 1155, 1509, "%:Tcxg", (-1454.87772), 1090);
      assertEquals("id=1155  unknown: basisPoints = 1090.0/  It does not support notHeld parameter. impliedFuture = 1155.0 holdDays = 1509 futureExpiry = %:Tcxg dividendImpact = -1454.87772 dividends to expiry = 1090.0", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) "6(3YJ+ST|fT-");
      Contract contract0 = new Contract(599, "6(3YJ+ST|fT-", "%s [id = %d, errorCode = %d]", "6(3YJ+ST|fT-", 0.0, "6(3YJ+ST|fT-", "6(3YJ+ST|fT-", "%s [id = %d, errorCode = %d]", "6(3YJ+ST|fT-", "6(3YJ+ST|fT-", vector0, "%s [id = %d, errorCode = %d]", true, "~GRO|vvBC'dI", "~GRO|vvBC'dI");
      Order order0 = new Order();
      vector0.add((Object) contract0);
      vector0.removeAllElements();
      contract0.m_conId = (-678);
      Vector<Object> vector1 = new Vector<Object>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = (-678);
      contract0.m_secId = "kv>(P;k5.{d)d";
      underComp0.m_delta = (-922.7184115996);
      contract0.m_underComp = underComp0;
      vector0.add((Object) "kv>(P;k5.{d)d");
      underComp0.m_conId = (-678);
      contract0.m_includeExpired = true;
      underComp0.m_price = (-3030.6);
      order0.m_algoStrategy = "%s [id = %d, errorCode = %d]";
      Object object0 = new Object();
      underComp0.m_conId = (-263);
      vector0.remove(object0);
      underComp0.m_conId = 1631;
      underComp0.m_conId = 0;
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, Integer.MAX_VALUE, 1.7976931348623157E308, 1.7976931348623157E308, 0, '?', 0, "");
      assertEquals("updatePortfolio: conid = -678\nsymbol = 6(3YJ+ST|fT-\nsecType = %s [id = %d, errorCode = %d]\nexpiry = 6(3YJ+ST|fT-\nstrike = 0.0\nright = 6(3YJ+ST|fT-\nmultiplier = 6(3YJ+ST|fT-\nexchange = %s [id = %d, errorCode = %d]\nprimaryExch = %s [id = %d, errorCode = %d]\ncurrency = 6(3YJ+ST|fT-\nlocalSymbol = 6(3YJ+ST|fT-\n2147483647 1.7976931348623157E308 1.7976931348623157E308 0.0 63.0 0.0 ", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      TagValue tagValue0 = new TagValue("FA:", "n:F2G2:dX|Xc4\"`");
      TagValue tagValue1 = new TagValue("T7u\n=8C+W1Q8", (String) null);
      tagValue0.m_value = null;
      tagValue0.m_value = "putable = ";
      tagValue1.m_value = "n:F2G2:dX|Xc4\"`";
      tagValue0.m_tag = "putable = ";
      tagValue0.m_value = "BAG";
      String string1 = EWrapperMsgGenerator.tickEFP((-110), 2, 1780.6466529508596, "k%v>(P;k5.{d)|d", (-1.0), (-110), "C(0BUX4x\"?@=;l,LKR", 2286.27484491457, 1.7976931348623157E308);
      assertEquals("id=-110  askPrice: basisPoints = 1780.6466529508596/k%v>(P;k5.{d)|d impliedFuture = -1.0 holdDays = -110 futureExpiry = C(0BUX4x\"?@=;l,LKR dividendImpact = 2286.27484491457 dividends to expiry = 1.7976931348623157E308", string1);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("m~hcfOGYtkpkAS[Vc");
      assertEquals("updateAccountTime: m~hcfOGYtkpkAS[Vc", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Order order0 = new Order();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      UnderComp underComp0 = new UnderComp();
      underComp0.m_delta = (-922.7184115996);
      underComp0.m_price = (-3030.6);
      Object object0 = new Object();
      String string0 = EWrapperMsgGenerator.updateMktDepth(1793, 0, (-2561), 0, (-3030.6), 0);
      assertEquals("updateMktDepth: 1793 0 -2561 0 -3030.6 0", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      EWrapperMsgGenerator.updateMktDepth(599, 599, (-2146662744), (-2146662744), (-2146662744), (-2146662744));
      Object object0 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Object object1 = new Object();
      Function.identity();
      Object object2 = new Object();
      Object object3 = unaryOperator0.apply(object2);
      assertSame(object2, object3);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters("  It does not support secIdType and secId parametes.");
      assertEquals("SCANNER PARAMETERS:\n  It does not support secIdType and secId parametes.", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EWrapperMsgGenerator.updateMktDepth(2147483625, 9, 2147483625, 9, 2147483625, 2147483625);
      int int0 = (-1725448779);
      String string0 = "n:F2G2v:dX|Xc4\"`1";
      String string1 = null;
      Vector<Object> vector0 = new Vector<Object>();
      // Undeclared exception!
      try { 
        Locale.LanguageRange.parse("updateMktDepth: 2147483625 9 2147483625 9 2.147483625E9 2147483625", (Map<String, List<String>>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=updatemktdepth:21474836259214748362592.147483625e92147483625
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.FINANCIAL_ADVISOR;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue("FA:", "n:F2G2:dX|Xc4\"`");
      tagValue0.m_value = null;
      tagValue0.m_value = "putable = ";
      vector0.add((Object) tagValue0);
      tagValue0.m_tag = "n:F2G2:dX|Xc4\"`";
      tagValue0.m_tag = "putable = ";
      tagValue0.m_value = "BAG";
      Contract contract0 = new Contract(3, "BAG", "BAG", "BAG", 1.7976931348623157E308, "putable = ", "n:F2G2:dX|Xc4\"`", "putable = ", "OptionHistoricalVolatility", "n:F2G2:dX|Xc4\"`", vector0, " account=", false, "  It does not spport notHld paXameter.", "n:F2G2:dX|Xc4\"`");
      Order order0 = new Order();
      vector0.stream();
      tagValue0.m_value = " account=";
      vector0.parallelStream();
      System.setCurrentTimeMillis(Integer.MAX_VALUE);
      String string1 = EWrapperMsgGenerator.contractDetailsEnd(825);
      assertEquals("reqId = 825 =============== end ===============", string1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Vector<Object> vector0 = new Vector<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) consumer0;
      objectArray0[1] = (Object) vector0;
      objectArray0[2] = (Object) consumer0;
      objectArray0[3] = (Object) vector0;
      objectArray0[4] = (Object) consumer0;
      objectArray0[5] = (Object) consumer0;
      vector0.toArray(objectArray0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      vector0.sort(comparator0);
      String string0 = EWrapperMsgGenerator.historicalData((-1128), (String) null, 1.7976931348623157E308, 27.0, (-2164.533327528), 1.7976931348623157E308, 3, 599, (-4451.849141), true);
      assertEquals("id=-1128 date = null open=1.7976931348623157E308 high=27.0 low=-2164.533327528 close=1.7976931348623157E308 volume=3 count=599 WAP=-4451.849141 hasGaps=true", string0);
      
      String string1 = EWrapperMsgGenerator.historicalData((-1128), "rpZ[k)Dht1Q", (-4451.849141), (-4451.849141), 102.0, 1.7976931348623157E308, (-1128), 3, (-694.6385011159701), true);
      assertEquals("id=-1128 date = rpZ[k)Dht1Q open=-4451.849141 high=-4451.849141 low=102.0 close=1.7976931348623157E308 volume=-1128 count=3 WAP=-694.6385011159701 hasGaps=true", string1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      String string0 = EWrapperMsgGenerator.receiveFA(Integer.MAX_VALUE, "lKr:<)rns@nqT");
      assertEquals("FA: null lKr:<)rns@nqT", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      Vector<Object> vector0 = new Vector<Object>();
      TagValue tagValue0 = new TagValue("SCANNER PARAMETERS:", "SCANNER PARAMETERS:");
      tagValue0.m_value = null;
      tagValue0.m_value = "ptabl = ";
      vector0.add((Object) tagValue0);
      tagValue0.m_tag = "SCANNER PARAMETERS:";
      tagValue0.m_tag = "ptabl = ";
      tagValue0.m_value = "BAG";
      TagValue tagValue1 = new TagValue("%N*%KS", "(o{_Ks@aBZ6");
      tagValue1.m_tag = "ptabl = ";
      vector0.addElement(tagValue1);
      Contract contract0 = new Contract(3, "BAG", "BAG", "BAG", 1.7976931348623157E308, "ptabl = ", "SCANNER PARAMETERS:", "ptabl = ", "BAG", "SCANNER PARAMETERS:", vector0, " account=", true, "SCANNER PARAMETERS:", "SCANNER PARAMETERS:");
      Order order0 = new Order();
      vector0.stream();
      tagValue0.m_value = " account=";
      String string1 = EWrapperMsgGenerator.realtimeBar(0, 1L, 1.7976931348623157E308, 1203.166901336363, 1L, (-1627.04), (-1L), (-1627.04), 2061584302);
      assertEquals("id=0 time = 1 open=1.7976931348623157E308 high=1203.166901336363 low=1.0 close=-1627.04 volume=-1 count=2061584302 WAP=-1627.04", string1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus((-2081), "executionExchange = ", 0, 20, 1.7976931348623157E308, 38, 0, (-2227.9479572745), 373, "LP__#bw`VK^D&v#=q");
      assertEquals("order status: orderId=-2081 clientId=373 permId=38 status=executionExchange =  filled=0 remaining=20 avgFillPrice=1.7976931348623157E308 lastFillPrice=-2227.9479572745 parent Id=0 whyHeld=LP__#bw`VK^D&v#=q", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-1910849634), (-1910849634), (-1910849634), 2929.0576356, (-1910849634), 3.0, 0L, 2929.0576356, 958);
      assertEquals("id=-1910849634 time = -1910849634 open=-1.910849634E9 high=2929.0576356 low=-1.910849634E9 close=3.0 volume=0 count=958 WAP=2929.0576356", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EWrapperMsgGenerator.orderStatus(13, "]x", (-1349), (-1349), 0.0, (-1123), 2144326122, 377.17, 2144326122, "0(_YGL");
      System.setCurrentTimeMillis(1640L);
      System.setCurrentTimeMillis(13);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      assertEquals(" =============== end ===============", eWrapperMsgGenerator0.openOrderEnd());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 42, (-1627.269352298502), 305.656477331621, (-1627.269352298502), 305.656477331621);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      assertTrue(hashMap8.equals((Object)hashMap6));
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 1, 0.0, (-1.0), 13, 1.0);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap8.size());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 305.656477331621, 1.7976931348623157E308, 1.7976931348623157E308);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      assertTrue(hashMap8.equals((Object)hashMap7));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(102, 13, 4961.048808657481, 0.0, 0.0, 13);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) list0, locale_FilteringMode1);
      assertEquals(0, list1.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, (-2065238560), (-2958.7113418083), 1103.48408356, 1.7976931348623157E308, (-2753.596));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap2 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap3 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap4 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap5 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap6 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap7 = new HashMap<String, List<String>>();
      HashMap<String, List<String>> hashMap8 = new HashMap<String, List<String>>();
      assertTrue(hashMap8.isEmpty());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData(13, (-121), contractDetails0, ".P", "4h`;`vo8b", "xp/ey}K;#m~R&qP%ep6", "nextOptionPartial = ");
      assertEquals("id = 13 rank=-121 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=.P benchmark=4h`;`vo8b projection=xp/ey}K;#m~R&qP%ep6 legsStr=nextOptionPartial = ", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("  It does not support secIdType and secId parameters.");
      assertEquals("accountDownloadEnd:   It does not support secIdType and secId parameters.", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 305.650834185, 305.650834185, 1.7976931348623157E308);
      UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      // Undeclared exception!
      try { 
        unaryOperator0.compose((Function<? super Object, ? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }
}
