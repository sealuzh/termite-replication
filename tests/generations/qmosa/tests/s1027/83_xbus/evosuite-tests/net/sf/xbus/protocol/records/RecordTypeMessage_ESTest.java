/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 18:49:32 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.datatransfer.DataFlavor;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.time.Instant;
import java.time.temporal.TemporalAdjuster;
import java.util.Date;
import java.util.Hashtable;
import javax.xml.soap.MimeHeaders;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.deployment.wsdd.WSDDDeployableItem;
import org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration;
import org.apache.axis.transport.mail.Handler;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLFormElementImpl;
import org.apache.html.dom.HTMLLIElementImpl;
import org.apache.html.dom.HTMLLegendElementImpl;
import org.apache.html.dom.HTMLParagraphElementImpl;
import org.apache.html.dom.HTMLSelectElementImpl;
import org.apache.html.dom.HTMLTableCellElementImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.util.SymbolTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.events.EventListener;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)124;
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)43;
      byteArray0[2] = (byte) (-5);
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      coreDocumentImpl0.removeEventListener("~o=zxdzta wrE`b0q", eventListener0, false);
      coreDocumentImpl0.toString();
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      Node node0 = pSVIDocumentImpl0.cloneNode(false);
      coreDocumentImpl0.compareTreePosition(node0);
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl(coreDocumentImpl0);
      recordTypeMessage0.setResponseDocument(coreDocumentImpl0, (XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("$VARIABLE_", (XBUSSystem) null, "no(armDesc");
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "no(armDesc");
      hTMLSelectElementImpl0.setLang("UQ5hh");
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "no(armDesc");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "UQ5hh", "", "td");
      recordTypeMessage0.setResponseDocument(coreDocumentImpl0, (XBUSSystem) null);
      documentTypeImpl0.getNodeName();
      recordTypeMessage0.getResponseObject();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl1, "568WI");
      hTMLSelectElementImpl0.getForm();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(hTMLDocumentImpl2, "UQ5hh", "", "Z~l><xW?DeRz$");
      CoreDocumentImpl coreDocumentImpl1 = new CoreDocumentImpl(documentTypeImpl0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      hTMLDocumentImpl1.item((-1504));
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      hTMLDocumentImpl4.getElementById("568WI");
      hTMLDocumentImpl4.getLastChild();
      HTMLLegendElementImpl hTMLLegendElementImpl1 = new HTMLLegendElementImpl(hTMLDocumentImpl4, "Z~l><xW?DeRz$");
      hTMLLegendElementImpl1.getForm();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(coreDocumentImpl1, "");
      recordTypeMessage0.getResponseText();
      DataFlavor dataFlavor0 = DataFlavor.allHtmlFlavor;
      assertFalse(dataFlavor0.isRepresentationClassByteBuffer());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte)0;
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-20), (-8), 0, (-8), 2865, 1);
      Instant instant0 = mockDate0.toInstant();
      MockDate mockDate2 = new MockDate((-1856), 152, (byte)0, 193, (-3908), (-1718));
      mockDate1.getTime();
      MockDate mockDate3 = new MockDate((-1856));
      mockDate3.setTime(0L);
      long long0 = new Integer(0);
      MockDate mockDate4 = (MockDate)mockDate3.clone();
      mockDate2.clone();
      mockDate1.setTime(1036L);
      Date.from(instant0);
      mockDate4.after(mockDate1);
      mockDate0.getTime();
      mockDate1.before(mockDate4);
      mockDate1.after(mockDate3);
      mockDate2.toInstant();
      mockDate0.getTime();
      MockDate mockDate5 = new MockDate();
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream((PipedOutputStream) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("02", (XBUSSystem) null, "O6*:Y");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("02", (XBUSSystem) null, "O6*:Y");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[2] = (byte)77;
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("02", (XBUSSystem) null, "O6*:Y");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)77;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      StringReader stringReader0 = new StringReader("Sn0-w:lf9hC@%OB5");
      StringReader stringReader1 = new StringReader("O6*:Y");
      StringReader stringReader2 = new StringReader("O6*:Y");
      DataFlavor dataFlavor0 = DataFlavor.fragmentHtmlFlavor;
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("");
      DataFlavor dataFlavor1 = DataFlavor.allHtmlFlavor;
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-111);
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "/4*#tPGmqWxud>'7=");
      hTMLSelectElementImpl0.setLang(")w1}9$Ksew");
      hTMLSelectElementImpl0.getNamespaceURI();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "/4*#tPGmqMsWxud>'7=");
      hTMLSelectElementImpl0.setReadOnly(false, false);
      hTMLFormElementImpl0.getAcceptCharset();
      hTMLFormElementImpl0.isSameNode(hTMLSelectElementImpl0);
      hTMLDocumentImpl0.getErrorChecking();
      hTMLSelectElementImpl0.getName();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "LMLDistElementIpl");
      hTMLDocumentImpl0.compareTreePosition(hTMLSelectElementImpl0);
      hTMLSelectElementImpl0.setSize((short)0);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      hTMLFormElementImpl0.getAction();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      hTMLSelectElementImpl0.isSupported("RC_ZK", "Qk");
      hTMLDocumentImpl0.putIdentifier("", (Element) null);
      hTMLSelectElementImpl0.getSize();
      HTMLFormElementImpl hTMLFormElementImpl1 = new HTMLFormElementImpl(hTMLDocumentImpl0, "sendXsiTypes");
      ByteArrayList byteArrayList1 = new ByteArrayList();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, ")w1}9$Ksew");
      hTMLSelectElementImpl0.getId();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "sendXsiTypes");
      HTMLLegendElementImpl hTMLLegendElementImpl1 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      HTMLFormElementImpl hTMLFormElementImpl2 = new HTMLFormElementImpl(hTMLDocumentImpl0, "U#Eb*0#");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      int int0 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLSelectElementImpl hTMLSelectElementImpl0 = new HTMLSelectElementImpl(hTMLDocumentImpl0, "/4*#tPGmqWxud>'7=");
      hTMLSelectElementImpl0.setLang(")w1}9$Ksew");
      hTMLSelectElementImpl0.getNamespaceURI();
      HTMLFormElementImpl hTMLFormElementImpl0 = new HTMLFormElementImpl(hTMLDocumentImpl0, "/4*#tPGmqWxud>'7=");
      hTMLSelectElementImpl0.setReadOnly(false, false);
      hTMLFormElementImpl0.getAcceptCharset();
      hTMLFormElementImpl0.isSameNode(hTMLSelectElementImpl0);
      hTMLSelectElementImpl0.getName();
      hTMLDocumentImpl0.getDoctype();
      HTMLTableCellElementImpl hTMLTableCellElementImpl0 = new HTMLTableCellElementImpl(hTMLDocumentImpl0, "HLMLDListElementIpl");
      hTMLDocumentImpl0.compareTreePosition(hTMLSelectElementImpl0);
      hTMLSelectElementImpl0.setSize((short)0);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      hTMLFormElementImpl0.getAction();
      HTMLLegendElementImpl hTMLLegendElementImpl0 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      hTMLSelectElementImpl0.isSupported("RC_ZK", "/");
      hTMLDocumentImpl0.putIdentifier("RC_ZK", (Element) null);
      hTMLSelectElementImpl0.getSize();
      HTMLFormElementImpl hTMLFormElementImpl1 = new HTMLFormElementImpl(hTMLDocumentImpl0, "sendXsiTypes");
      ByteArrayList byteArrayList1 = new ByteArrayList();
      HTMLParagraphElementImpl hTMLParagraphElementImpl0 = new HTMLParagraphElementImpl(hTMLDocumentImpl0, ")w1}9$Ksew");
      hTMLSelectElementImpl0.getId();
      HTMLLIElementImpl hTMLLIElementImpl0 = new HTMLLIElementImpl(hTMLDocumentImpl0, "sendXsiTypes");
      HTMLLegendElementImpl hTMLLegendElementImpl1 = new HTMLLegendElementImpl(hTMLDocumentImpl0, "");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      try { 
        recordTypeMessage0.setRequestObject(hTMLLIElementImpl0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 org.apache.html.dom.HTMLLIElementImpl cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setReturncode("");
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[5] = (byte)0;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList.createByteArrayList(byteArray0, 2439);
      Hashtable<Integer, Object> hashtable0 = new Hashtable<Integer, Object>();
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      assertEquals(0, WSDDDeployableItem.SCOPE_PER_ACCESS);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-20);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)5;
      byteArray1[1] = (byte) (-123);
      byteArray1[2] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Object object0 = new Object();
      try { 
        recordTypeMessage0.setResponseObject(object0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Object cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "$VKARIABLE_";
      String string1 = "L4[:I>hCI";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("L4[:I>hCI", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte)0;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList.createByteArrayList(byteArray0, (byte)0);
      byteArrayList0.add(byteArray0);
      StringReader stringReader0 = new StringReader("O6*:Y");
      StringReader stringReader1 = new StringReader("O6*:Y");
      StringReader stringReader2 = new StringReader("O6*:Y");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("02", (XBUSSystem) null, "O6*:Y");
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)77;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)77;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toByteArray();
      byteArrayList0.iterator();
      byteArrayList0.add(byteArray0);
      StringReader stringReader0 = new StringReader("Sn0-w:lf9hC@%OB5");
      StringReader stringReader1 = new StringReader("O6*:Y");
      StringReader stringReader2 = new StringReader("O6*:Y");
      DataFlavor dataFlavor0 = DataFlavor.fragmentHtmlFlavor;
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("");
      DataFlavor dataFlavor1 = DataFlavor.allHtmlFlavor;
      assertTrue(dataFlavor1.isRepresentationClassSerializable());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Object object0 = new Object();
      FileSystemHandling.shouldAllThrowIOExceptions();
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.setErrorcode(11);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      System.setCurrentTimeMillis((-2690));
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-1830), (-1830), (-1830), (-1830), (-1830));
      mockDate1.toInstant();
      mockDate1.after(mockDate0);
      MockDate.UTC((-1830), (-1830), (-1830), (-1830), (-1830), (-1830));
      MockDate mockDate2 = new MockDate((-1830));
      mockDate1.getTime();
      MockDate mockDate3 = new MockDate((-1830), (-1830), (-1830));
      MockDate.UTC((-1830), (-1830), (-1830), (-2473), (-1830), (-1830));
      MockDate mockDate4 = new MockDate((-2473), (-1830), (-1830), (-2473), (-2473));
      MockDate mockDate5 = (MockDate)mockDate3.clone();
      MockDate mockDate6 = new MockDate();
      mockDate5.after(mockDate6);
      mockDate5.toInstant();
      mockDate3.after(mockDate0);
      mockDate1.after(mockDate2);
      mockDate1.toInstant();
      mockDate5.getTime();
      MockDate.UTC((-2473), 372, 372, 2833, 19, 2833);
      mockDate2.after(mockDate3);
      mockDate1.toInstant();
      mockDate2.toInstant();
      MockDate mockDate7 = new MockDate(19, (-2473), (-1830));
      MockDate mockDate8 = new MockDate((-1830), (-1830), 2833);
      MockDate mockDate9 = new MockDate();
      mockDate0.getTime();
      mockDate1.before(mockDate2);
      mockDate1.before(mockDate5);
      mockDate1.after(mockDate3);
      mockDate2.toInstant();
      mockDate0.getTime();
      MockDate mockDate10 = new MockDate(19);
      MockDate mockDate11 = new MockDate((-1830), (-1830), (-1830), (-1830), (-1830));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      int int0 = (-2858);
      Hashtable<Integer, Object> hashtable0 = new Hashtable<Integer, Object>();
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[7];
      ByteArrayList byteArrayList0 = new ByteArrayList();
      int int0 = (-2858);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      Hashtable<Integer, Object> hashtable0 = new Hashtable<Integer, Object>();
      int int1 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("zC]U)-Us,e}eh/wjx*'", (XBUSSystem) null, "y\"");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      MockDate mockDate0 = new MockDate((byte)0, (byte)0, (byte)0, 206, (byte)0, (byte)0);
      MockDate mockDate1 = new MockDate((byte)0, (byte)0, 2304, 15, (-1194), 4);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 37);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/acsNUTo");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("/acsNUTo", (XBUSSystem) null, "02");
      SymbolTable symbolTable0 = new SymbolTable(2808, 2808);
      symbolTable0.addSymbol("0 ");
      symbolTable0.hash("02");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dH");
      StringReader stringReader0 = new StringReader("org.apache.axis.wsdl.symbolTable.SymbolTable");
      DataFlavor dataFlavor0 = DataFlavor.selectionHtmlFlavor;
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0 ");
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-48);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader2 = new StringReader("");
      DataFlavor dataFlavor1 = DataFlavor.allHtmlFlavor;
      Handler handler0 = new Handler();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader3 = new StringReader("*NEk)tuN");
      StringReader stringReader4 = new StringReader("");
      DataFlavor dataFlavor2 = DataFlavor.allHtmlFlavor;
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(2876, (-1856), (-1856));
      Instant instant0 = mockDate0.toInstant();
      mockDate1.after(mockDate0);
      MockDate.UTC((-1856), 10, 141, (-3908), 10, (-1856));
      mockDate1.setTime((-3908));
      MockDate mockDate2 = new MockDate(1704);
      MockDate mockDate3 = new MockDate((-1856));
      mockDate3.setTime(1);
      mockDate3.getTime();
      MockDate mockDate4 = (MockDate)mockDate3.clone();
      mockDate2.after(mockDate3);
      MockDate.UTC(1, (-1856), 111, 18, (-855), 0);
      mockDate4.setTime(2147483647L);
      Instant instant1 = mockDate3.toInstant();
      MockInstant.with(instant0, (TemporalAdjuster) instant1);
      MockDate mockDate5 = new MockDate();
      mockDate1.setTime(1007L);
      mockDate0.getTime();
      mockDate1.before(mockDate4);
      mockDate1.after(mockDate3);
      mockDate2.toInstant();
      long long0 = new Integer(1704);
      MockDate mockDate6 = new MockDate();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("zAhIkUM=X9", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }
}
