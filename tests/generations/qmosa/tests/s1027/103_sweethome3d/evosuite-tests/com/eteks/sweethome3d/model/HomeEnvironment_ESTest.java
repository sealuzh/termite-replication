/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 21:10:40 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera camera0 = new Camera(3, 3, (-2265.2F), 2247.879F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      linkedList1.add(camera1);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera2 = new Camera(2.0F, (-2280.0198F), 0L, 2.0F, (-1882.0F), 1318.152F, 3, camera_Lens0);
      camera2.setTime(0L);
      Camera camera3 = camera2.clone();
      linkedList1.add(camera3);
      linkedList0.sort((Comparator<? super Camera>) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList5 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment1.clone();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Fjn7", (String) null, uRLContent0, 0.0F, 0.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, homeTexture0, 3, homeTexture0, (-594), 0.0F);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-594), int0);
      
      homeEnvironment0.getDrawingMode();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(7, homeEnvironment1.getGroundColor());
      assertEquals(3, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.878666739983584
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(979, (HomeTexture) null, (-432), 979, (-432));
      homeEnvironment0.setWallsAlpha(979);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight((-432));
      homeEnvironment0.setGroundColor(1351);
      homeEnvironment0.setPhotoWidth(979);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoQuality((-921));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CatalogTexture catalogTexture0 = new CatalogTexture("(#F#u/}", "(#F#u/}", (Content) null, (-1676.7767F), 755.4F, "(#F#u/}", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1416, homeTexture0, 1416, homeTexture0, 320, (-1676.7767F));
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      int int0 = 1983;
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(320, homeTexture0, 1416, homeTexture1, 1983, (-1676.7767F));
      homeEnvironment1.clone();
      HomeTexture homeTexture2 = new HomeTexture(homeTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment1.setSkyTexture(homeTexture2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("}SB", "}SB", (Content) null, (-777.813F), (-758.87F), "}SB", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("QU)'o4pmMgp'e");
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.setCategory(texturesCategory0);
      Camera camera0 = new Camera(3, 400, 926, 926, 926, 1051.382F);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "}SB", (Object) null, homeTexture0);
      Object object2 = new Object();
      Object object3 = new Object();
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(926, homeTexture0, 13684944, homeTexture1, 17, 926);
      // Undeclared exception!
      try { 
        homeEnvironment0.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-1025.3701F), 2.0F, 0L, (-876.69F), 0L, 0L, 2017L, camera_Lens0);
      linkedList0.add(camera0);
      Comparator<Camera> comparator1 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-54));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      Random.setNextRandom((-2142524100));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(2064.8047F, 2760.0F, (-1.0F), (-1.0F), 3, 2.0F, 0L, camera_Lens0);
      linkedList0.add(camera0);
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("4bodzFA", (Content) null, 0, 1899.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 6, 13427964, 13427964);
      assertEquals(6, homeEnvironment0.getSkyColor());
      
      homeEnvironment0.setSkyColor(13427964);
      homeEnvironment0.getGroundTexture();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(979, (HomeTexture) null, (-432), 979, (-432));
      homeEnvironment0.setSubpartSizeUnderLight(979);
      homeEnvironment0.setWallsAlpha(979);
      homeEnvironment0.setAllLevelsVisible(true);
      // Undeclared exception!
      try { 
        homeEnvironment0.addPropertyChangeListener((HomeEnvironment.Property) null, (PropertyChangeListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6NM.-g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(#F#u/}");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-2082408384));
      homeEnvironment0.clone();
      assertEquals((-2082408384), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.344282324621489
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-39));
      homeEnvironment0.setVideoQuality((-39));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "os.name");
      homeEnvironment0.setVideoFrameRate(720);
      homeEnvironment0.setCeillingLightColor((-39));
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.clone();
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getPhotoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(720);
      homeEnvironment1.getGroundTexture();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "k", temporaryURLContent0, 6, 0.0F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(6, homeTexture0, 8, homeTexture0, 6, 1.7777778F);
      homeEnvironment0.setLightColor((-23));
      homeEnvironment0.getSkyTexture();
      assertEquals((-23), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      homeEnvironment0.setPhotoHeight((-2069));
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis((-1577));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals((-2069), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G KhXP|R.");
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, (-1.0F), 1.0F, 2.0F, 0L, camera_Lens0);
      linkedList0.add(camera0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("G KhXP|R.", temporaryURLContent0, (-3033.344F), 0L, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(417, homeTexture0, 1471, homeTexture0, (-1632), 310.45566F);
      homeEnvironment0.getGroundTexture();
      assertEquals(1471, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(310.45566F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1632), homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(417, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.5185951110432594
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(996, (HomeTexture) null, (-432), 996, (-432));
      homeEnvironment0.setWallsAlpha(996);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight((-432));
      homeEnvironment0.setGroundColor(1351);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(672);
      homeEnvironment0.setPhotoWidth(996);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setGroundColor(996);
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(672, (HomeTexture) null, (-432), (HomeTexture) null, 33, (-432.0F));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment3.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.getVideoHeight();
      homeEnvironment2.getVideoQuality();
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment2.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(996);
      homeEnvironment2.getPhotoAspectRatio();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.644212133431436
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(979, (HomeTexture) null, (-432), 979, (-432));
      homeEnvironment0.setWallsAlpha(979);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight((-432));
      homeEnvironment0.setGroundColor(1351);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(672);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setGroundColor(1351);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoWidth(926);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getVideoHeight();
      homeEnvironment3.getVideoQuality();
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment2.setCeillingLightColor(240);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      homeEnvironment3.setSkyColor(979);
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.getSubpartSizeUnderLight();
      int int0 = homeEnvironment3.getVideoHeight();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-15));
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis(1795L);
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 5, 5, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, homeTexture0, 0, homeTexture0, 0, (-1608.4313F));
      homeEnvironment0.clone();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("SKY_COLOR", "SKY_COLOR", 0, "", uRLStreamHandler0);
      try { 
        MockURL.URL((URL) null, "$VALUES");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: $VALUES
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.642983933971844
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(979, (HomeTexture) null, (-432), 979, (-432));
      homeEnvironment0.setWallsAlpha(979);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight((-432));
      homeEnvironment0.setGroundColor(1351);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setGroundColor(1351);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getVideoHeight();
      homeEnvironment3.getVideoQuality();
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment2.setCeillingLightColor(240);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      homeEnvironment3.setSkyColor(979);
      System.setCurrentTimeMillis(0L);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-432.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = (-1);
      homeEnvironment0.setVideoWidth((-1));
      String string0 = "@D\"jx]bQwBjT/`|";
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("@D\"jx]bQwBjT/`|", (PropertyChangeListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-1), (-1), (-1), (-1), 640.0F, 640.0F, (-5687L), camera_Lens0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("@D\"jx]bQwBjT/`|", "@D\"jx]bQwBjT/`|", camera0, (Object) null);
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, (-35), 4471.52F, "WW 0 Lu8j)", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-35), homeTexture0, 678, homeTexture0, 2175, 678);
      homeEnvironment0.getSkyTexture();
      assertEquals(2175, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(678.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(678, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-35), homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("-w$fe?62;9@n<", "-w$fe?62;9@n<", (Content) null, 46, 46, "-M;Yi%d2", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(46, homeTexture0, (-1959), homeTexture0, (-1959), 46);
      homeEnvironment0.getGroundTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1959), homeEnvironment0.getSkyColor());
      assertEquals(46.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1959), homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(46, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(46, (HomeTexture) null, (-432), 46, (-432));
      homeEnvironment0.setWallsAlpha(46);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.isAllLevelsVisible();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.364013431487703
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(18);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setCeillingLightColor((-2399));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(3452);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getVideoHeight();
      homeEnvironment0.getVideoQuality();
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment2.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(240, (HomeTexture) null, 0, 240, 0.0F);
      homeEnvironment3.clone();
      HomeEnvironment homeEnvironment4 = new HomeEnvironment(396, (HomeTexture) null, 11, 971, 0);
      homeEnvironment4.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment5 = homeEnvironment4.clone();
      homeEnvironment5.getVideoCameraPath();
      homeEnvironment0.setGroundColor(1707);
      assertEquals(0, homeEnvironment0.getSkyColor());
      
      int int0 = homeEnvironment3.getPhotoQuality();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("x\\+=Ae[cg'", "x\\+=Ae[cg'", (Content) null, 20.0F, (-758.87F), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-456), homeTexture0, 210, homeTexture0, (-1173), 20.0F);
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-456), homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(210, homeEnvironment0.getSkyColor());
      assertEquals(20.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1173), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("}SB", "}SB", (Content) null, (-777.813F), (-758.87F), "}SB", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, 3, 3, (-777.813F));
      homeEnvironment0.setVideoQuality(926);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Camera camera0 = new Camera(0, (-758.87F), (-758.87F), 926, (-758.87F), 3);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Object object0 = new Object();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "QU)'o4pmMgp'e", object0, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("}SB", (String) null, object1, homeEnvironment0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(400);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      linkedList1.pollFirst();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      Camera camera0 = new Camera(3076.676F, (-2516.94F), 636.97F, 1.0F, (-2530.7F), (-1.0F));
      Object object0 = new Object();
      Integer integer0 = new Integer(3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(integer0, "1{d4qpU=JL", (Object) null, homeEnvironment0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Integer integer1 = new Integer(986);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(integer1, (String) null, object2, (Object) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      int int0 = homeEnvironment1.getLightColor();
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Random.setNextRandom((-1235));
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1235), (HomeTexture) null, 979, (-1235), (-1235));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(979);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.setSkyColor(710);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getGroundColor();
      homeEnvironment1.getLightColor();
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(710, homeEnvironment0.getSkyColor());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Camera camera0 = new Camera(483.55344F, 483.55344F, 483.55344F, 1.5F, 483.55344F, 1789.0F);
      linkedList2.push(camera0);
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(2589.898F, 0L, 3268.3672F, 2589.898F, 278.2657F, 2.0F, 0L, camera_Lens0);
      Camera camera2 = camera1.clone();
      linkedList1.add(camera2);
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      linkedList4.sort((Comparator<? super Camera>) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList5 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList6 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2.0F);
      homeEnvironment0.clone();
      assertEquals(2.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setSubpartSizeUnderLight(1418.052F);
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.isAllLevelsVisible();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.getPhotoHeight();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(HomeEnvironment.DrawingMode.FILL_AND_OUTLINE, homeEnvironment0.getDrawingMode());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9383113296830845
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1295));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      Object object0 = new Object();
      Camera camera0 = new Camera(103.0F, (-2012.45F), 0.0F, 0.0F, 1861.8735F, (-1295));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      homeEnvironment0.clone();
      assertEquals((-1295), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6NM.-g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(#F#u/}");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(14);
      homeEnvironment0.setGroundColor(11053224);
      homeEnvironment0.clone();
      assertEquals(14, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-1204));
      homeEnvironment0.setVideoQuality((-1204));
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.clone();
      assertEquals((-1204), homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(#F#u/}");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1472.0997F));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals((-1472.0997F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.422119371442078
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(979, (HomeTexture) null, (-432), 979, (-432));
      homeEnvironment0.setWallsAlpha(979);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight((-432));
      homeEnvironment0.setGroundColor(1351);
      homeEnvironment0.setPhotoWidth(979);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoQuality((-921));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2140896274, (HomeTexture) null, 1, (HomeTexture) null, (-2930), 2.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.setPhotoHeight((-247));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setCeillingLightColor((-432));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.setGroundColor(3339);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-432.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-921), int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera camera0 = new Camera(3, 3, (-2265.2F), 2247.879F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      linkedList1.add(camera1);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera2 = new Camera(2.0F, (-2280.0198F), 0L, 2.0F, (-1882.0F), 1318.152F, 3, camera_Lens0);
      camera2.setTime(0L);
      Camera camera3 = camera2.clone();
      linkedList1.add(camera3);
      linkedList0.sort((Comparator<? super Camera>) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2414, (HomeTexture) null, 1043, 2414, (-537.819F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals((-537.819F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(2414, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(2414, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(1043, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("ayw%6I?^`[a|p]", "NKv", uRLContent0, (-73), 672.18286F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("ayw%6I?^`[a|p]", "NKv", uRLContent0, 14, 672.18286F, (String) null, false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture0, (-2142953090), homeTexture0, 2146236155, (-1.0F));
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-73));
      homeEnvironment0.getSkyColor();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      System.setCurrentTimeMillis(0L);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("}SB", "}SB", (Content) null, (-777.813F), (-758.87F), "}SB", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, 3, 3, (-777.813F));
      homeEnvironment0.setVideoQuality(3);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setVideoQuality(3);
      TexturesCategory texturesCategory0 = new TexturesCategory("}SB");
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.setSkyColor(240);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(240, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1700);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(1700);
      homeEnvironment1.setVideoWidth(1700);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(1700, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 0.0F, 1.3333334F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, homeTexture0, 1, homeTexture0, 1, 1);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1, homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1, homeEnvironment0.getGroundColor());
      assertEquals(1, homeEnvironment0.getSkyColor());
      assertEquals(1.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "}SB";
      CatalogTexture catalogTexture0 = new CatalogTexture("}SB", "}SB", (Content) null, (-777.813F), (-758.87F), "}SB", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 9, 9, (-777.813F));
      homeEnvironment0.setVideoQuality(926);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setVideoQuality(9);
      TexturesCategory texturesCategory0 = new TexturesCategory("}SB");
      catalogTexture0.setCategory(texturesCategory0);
      homeEnvironment0.setSkyColor(240);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("java.version", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      Camera camera0 = new Camera(926, 926, (-758.87F), 9, (-2516.94F), 9);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, (String) null, homeTexture0, homeEnvironment0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = null;
      try {
        propertyChangeEvent1 = new PropertyChangeEvent((Object) null, "java.version", camera0, propertyChangeListenerProxy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("bwZCrVk", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setPhotoQuality(12);
      homeEnvironment0.setLightColor(12);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(12, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.939792811164566
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.pollFirst();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, (String) null, object1, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object2, (String) null, "d/mUGmQ0<Rk?0u", homeEnvironment_Property0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getGroundTexture();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setCeillingLightColor((-826));
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setSkyColor(0);
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = null;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("@D\"jx]bQwBjT/`|", (PropertyChangeListener) null);
      String string0 = "";
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 3055L, camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "@D\"jx]bQwBjT/`|", object0, object1);
      propertyChangeEvent0.toString();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSubpartSizeUnderLight();
      camera0.setYaw(1636.595F);
      propertyChangeEvent0.toString();
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.831673301904631
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1295));
      homeEnvironment0.setPhotoHeight((-1295));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("J<- p8m={b", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(103.0F, (-2012.45F), 0.0F, 0.0F, 1861.8735F, (-1295));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "x*A:j,x!dX~r*2tT53", object0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      System.setCurrentTimeMillis(227L);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(300.0F, (-184.664F), (-184.664F), (-4254.93F), 2.0F, 3, 0L, camera_Lens0);
      Camera camera1 = new Camera(0L, (-184.664F), 300.0F, (-184.664F), 300.0F, 300.0F, 3, camera_Lens0);
      camera1.setTime(0L);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera2 = new Camera((-1936.6F), 501.9734F, (-320.4001F), 2.0F, (-184.664F), 3, (-2702L), camera_Lens1);
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      linkedList4.sort((Comparator<? super Camera>) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList5 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList6 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Random.setNextRandom(3);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(2140896274);
      int int0 = 1252;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      String string0 = "Ug)QfQo2y=";
      URLStreamHandler uRLStreamHandler1 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("com.eteks.sweethome3d.tools.ResgurceURLCoVtent", "Ug)QfQo2y=", 1252, "com.eteks.sweethome3d.tools.ResgurceURLCoVtent", uRLStreamHandler1);
      URLStreamHandler uRLStreamHandler2 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      try { 
        MockURL.URL((URL) null, "X", uRLStreamHandler2);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: X
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = null;
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("@D\"jx]bQwBjT/`|", (PropertyChangeListener) null);
      String string0 = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.getSkyTexture();
      Object object0 = new Object();
      Object object1 = new Object();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setWallsAlpha(0.0F);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "@D\"jx]bQwBjT/`|", object2, "@D\"jx]bQwBjT/`|");
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G KhXP|R.");
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, (-1.0F), 1.0F, 2.0F, 0L, camera_Lens0);
      linkedList0.add(camera0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1603));
      homeEnvironment0.setVideoWidth(1008);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("G KhXP|R.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.G KhXP|R.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(300.0F, (-184.664F), (-184.664F), (-4254.93F), 2.0F, 3, 0L, camera_Lens0);
      Camera camera1 = new Camera(0L, 46.0F, (-184.664F), 3, 2.0F, (-1487.5215F));
      camera1.setTime(0L);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera2 = new Camera((-1936.6F), 0L, (-320.4001F), 2.0F, (-184.664F), 3, (-2702L), camera_Lens1);
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      linkedList4.sort((Comparator<? super Camera>) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList5 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList6 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1339, (HomeTexture) null, (-1126), (-1126), (-1126));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals((-1126.0F), homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(1339, homeEnvironment2.getGroundColor());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals((-1126), homeEnvironment2.getSkyColor());
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(320, homeEnvironment2.getVideoWidth());
      assertEquals((-1126), homeEnvironment2.getLightColor());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("jar", (Content) null, (-758.87F), (-5707.843F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1376, homeTexture0, 1376, homeTexture0, 3521, (-411.0F));
      homeEnvironment0.getGroundTexture();
      assertEquals((-411.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1376, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1376, homeEnvironment0.getSkyColor());
      assertEquals(3521, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6NM.-g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6NM.-g");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth(1495);
      homeEnvironment0.clone();
      assertEquals(1495, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      linkedList2.pollFirst();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(11);
      homeEnvironment0.setVideoWidth(11);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(1505);
      Camera camera0 = new Camera(1.0F, 1505, 979.0F, 1649.8602F, 2.0F, 454.482F);
      homeEnvironment0.getVideoWidth();
      assertEquals(8, homeEnvironment0.getVideoHeight());
      
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(11, (HomeTexture) null, 1965, 20, 11);
      homeEnvironment2.getWallsAlpha();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment2.getPhotoWidth();
      homeEnvironment1.getVideoAspectRatio();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setCeillingLightColor(7);
      homeEnvironment0.getSkyColor();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.getVideoQuality();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("w3~d0SJ*[q?F?", (Content) null, 8, 8);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(8, homeTexture0, (-247), homeTexture0, (-247), (-642.5F));
      homeEnvironment0.setVideoQuality(435);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setWallsAlpha(8);
      CatalogTexture catalogTexture1 = new CatalogTexture("w3~d0SJ*[q?F?", (Content) null, (-642.5F), 8, true);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setVideoWidth((-4351));
      catalogTexture1.compareTo(catalogTexture0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      catalogTexture0.compareTo(catalogTexture1);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1897.0F, (-357.1F), 1897.0F, (-357.1F), 1897.0F, (-416.80872F), 528L, camera_Lens0);
      camera0.setYaw(528L);
      try { 
        MockURL.URL((URL) null, "");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: 
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.9410699503727393
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(996, (HomeTexture) null, (-432), 996, (-432));
      homeEnvironment0.setWallsAlpha(996);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "N)Ji", (Object) null, "N)Ji");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setSubpartSizeUnderLight((-432));
      homeEnvironment0.setGroundColor((-432));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth((-432));
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.clone();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      String string0 = "@D\"jx]bQwBjT/`|";
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("@D\"jx]bQwBjT/`|", (PropertyChangeListener) null);
      float float0 = 0.0F;
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, 0.0F, 640.0F, 640.0F, (-5687L), camera_Lens0);
      camera0.setZ(640.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "", camera0, (Object) null);
      homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2813));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals(160, homeEnvironment1.getVideoHeight());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("816-E{R)2~<h{-", (Content) null, (-1140.1785F), (-414.0F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1430, homeTexture0, 18, homeTexture0, (-1056), (-1140.1785F));
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-1056), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1140.1785F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(18, homeEnvironment0.getSkyColor());
      assertEquals(1430, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("QU)'o4pmMgp'e");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("QU)'o4pmMgp'e", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      Camera camera0 = new Camera(3, 400, 926, 926, 926, 1051.382F);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object4 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("}SB", "RATIO_16_9", (Object) null, object4);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      boolean boolean0 = homeEnvironment1.isObserverCameraElevationAdjusted();
      assertFalse(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("-M;Yi%d2", propertyChangeListener0);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(boolean0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(400, (HomeTexture) null, 0, (HomeTexture) null, 400, 1018.0F);
      homeEnvironment0.clone();
      int int0 = 1281;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL("com.eteks.sweethoe3d.tools.ResgurceURLCoVtent", "com.eteks.sweethoe3d.tools.ResgurceURLCoVtent", 0, "xm-'%[P", uRLStreamHandler0);
      try { 
        MockURL.URL(uRL0, "x|2\"");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: com.eteks.sweethoe3d.tools.resgurceurlcovtent
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      PropertyChangeListener propertyChangeListener0 = null;
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("@D\"jx]bQwBjT/`|", (PropertyChangeListener) null);
      String string0 = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.getSkyTexture();
      Object object0 = new Object();
      Object object1 = new Object();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setWallsAlpha((-5687L));
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "@D\"jx]bQwBjT/`|", object2, "@D\"jx]bQwBjT/`|");
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8104399097753396
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.pollFirst();
      linkedList0.add((Camera) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, 13427964, (HomeTexture) null, (-1), 7.0F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      homeEnvironment2.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment3.getCeillingLightColor());
      assertEquals(300, homeEnvironment3.getPhotoHeight());
      assertEquals(11053224, homeEnvironment3.getGroundColor());
      assertEquals(13684944, homeEnvironment3.getLightColor());
      assertEquals(25, homeEnvironment3.getVideoFrameRate());
      assertTrue(homeEnvironment3.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment3.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment3.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment3.getSkyColor());
      assertEquals(240, homeEnvironment3.getVideoHeight());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8104399097753396
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, 13427964, (HomeTexture) null, (-1), 7.0F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment3.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment3.getLightColor());
      assertEquals(300, homeEnvironment3.getPhotoHeight());
      assertTrue(homeEnvironment3.isObserverCameraElevationAdjusted());
      assertEquals(11053224, homeEnvironment3.getGroundColor());
      assertEquals(0.0F, homeEnvironment3.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment3.getPhotoWidth());
      assertEquals(240, homeEnvironment3.getVideoHeight());
      assertEquals(25, homeEnvironment3.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment3.getSkyColor());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      URL uRL1 = MockURL.URL(uRL0, "");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      assertFalse(temporaryURLContent0.isJAREntry());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(uRL0, ",kF>pH<V(:z6", uRLStreamHandler0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL1, false);
      CatalogTexture catalogTexture0 = new CatalogTexture(",kF>pH<V(:z6", ",kF>pH<V(:z6", resourceURLContent0, 209.08907F, 209.08907F, "E}hUl[!C\"4);$5@");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis(221L);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(300.0F, (-184.664F), (-184.664F), (-4254.93F), 2.0F, 3, 0L, camera_Lens0);
      Camera camera1 = camera0.clone();
      camera0.setCamera(camera1);
      Camera camera2 = new Camera(0L, 46.0F, (-184.664F), 3, 2.0F, 3);
      camera2.setTime(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-1603), (HomeTexture) null, 3, (-1603), 2.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertEquals(3, homeEnvironment2.getSkyColor());
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(320, homeEnvironment2.getVideoWidth());
      assertEquals(2.0F, homeEnvironment2.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("jar", (Content) null, 498.4F, (-5707.843F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1376, homeTexture0, 1376, homeTexture0, 3521, (-411.0F));
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(1376, homeEnvironment0.getSkyColor());
      assertEquals((-411.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(3521, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1376, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera camera0 = new Camera(3, 3, (-2265.2F), 2247.879F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      linkedList1.add(camera1);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera2 = new Camera(2.0F, (-2280.0198F), 0L, 2.0F, (-1882.0F), 1318.152F, 3, camera_Lens0);
      camera2.setTime(0L);
      Camera camera3 = camera2.clone();
      linkedList1.add(camera3);
      linkedList2.sort((Comparator<? super Camera>) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList5 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Random.setNextRandom(4015);
      Random.setNextRandom(4015);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("Unsupported aspect ratio ", uRLContent0, 4087.0F, 1.3333334F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Comparator<Camera> comparator0 = (Comparator<Camera>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort(comparator0);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      Camera camera0 = new Camera(3, 3, (-2265.2F), 2247.879F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      linkedList1.add(camera1);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera2 = new Camera(2.0F, (-2280.0198F), 0L, 2.0F, (-1882.0F), 1318.152F, 3, camera_Lens0);
      camera2.setTime(0L);
      Camera camera3 = camera2.clone();
      linkedList1.add(camera3);
      linkedList0.sort((Comparator<? super Camera>) null);
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture(" A7QB//TLY.`u", "%,ZnsOpAsFW48T#5j", temporaryURLContent0, (-809.0F), (-4444.224F), "%,ZnsOpAsFW48T#5j");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 3, homeTexture0, 1307, 1.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(1307, homeEnvironment1.getLightColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(1.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(3, homeEnvironment1.getSkyColor());
      assertEquals(9, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      String string0 = "@D\"jx]bQwBjT/`|";
      PropertyChangeListener propertyChangeListener0 = null;
      homeEnvironment0.setCeillingLightColor((-2142524100));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("@D\"jx]bQwBjT/`|", (PropertyChangeListener) null);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.setLightColor(13427964);
      homeEnvironment1.getSkyTexture();
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera((-0.33465675F), (-0.33465675F), (-0.33465675F), (-0.33465675F), (-0.33465675F), (-0.33465675F), 3055L, camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "@D\"jx]bQwBjT/`|", object0, object1);
      propertyChangeEvent0.toString();
      camera0.setYaw(1636.595F);
      propertyChangeEvent0.toString();
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.beans.PropertyChangeListenerProxy", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(400, (HomeTexture) null, 400, 3828, 400);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(3828);
      homeEnvironment1.setLightColor(3828);
      homeEnvironment1.setCeillingLightColor((-1813));
      homeEnvironment1.getPhotoAspectRatio();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      int int0 = homeEnvironment2.getLightColor();
      assertEquals(3828, homeEnvironment1.getVideoQuality());
      assertEquals(3828, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2145962767);
      Random.setNextRandom(155);
      Random.setNextRandom(155);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("#H\"ZO", propertyChangeListener0);
      URL uRL0 = MockURL.getFileExample();
      MockURL.URL(uRL0, "w");
      MockURL.URL(uRL0, "");
      URL uRL1 = MockURL.URL(uRL0, "Eka%q.V");
      MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      assertFalse(temporaryURLContent0.isJAREntry());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.012918014656615
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(720);
      homeEnvironment0.setCeillingLightColor(16);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getVideoHeight();
      homeEnvironment2.setCeillingLightColor(16);
      homeEnvironment1.getVideoQuality();
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(720);
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(213, homeEnvironment0.getVideoHeight());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6NM.-g");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6NM.-g");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(396);
      homeEnvironment0.setPhotoQuality(14);
      homeEnvironment0.clone();
      assertEquals(14, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.3449077154907823
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight(2);
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setVideoFrameRate(720);
      homeEnvironment0.setCeillingLightColor(2);
      homeEnvironment0.setGroundColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.getVideoQuality();
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.getPhotoAspectRatio();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyColor(720);
      assertEquals(720, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CatalogTexture catalogTexture0 = new CatalogTexture("}SB", "}SB", (Content) null, (-777.813F), (-758.87F), "}SB", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, 3, 3, (-777.813F));
      homeEnvironment0.setVideoQuality(926);
      homeEnvironment0.setVideoFrameRate(3);
      TexturesCategory texturesCategory0 = new TexturesCategory("QU)'o4pmMgp'e");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("QU)'o4pmMgp'e", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListenerProxy0);
      Camera camera0 = new Camera(3, 400, 926, 926, 926, 1051.382F);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "}SB", (Object) null, homeTexture0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Object object2 = new Object();
      Object object3 = new Object();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(homeEnvironment0, "}SB", object3, homeEnvironment1);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment1.getVideoCameraPath();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(926, int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.423448716739519
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoQuality(675);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.setVideoQuality(3731);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoFrameRate(3731);
      homeEnvironment0.setCeillingLightColor(16);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.getPhotoHeight();
      homeEnvironment2.setGroundColor(3);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      HomeEnvironment homeEnvironment4 = homeEnvironment1.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment2.getVideoHeight();
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment4.getPhotoAspectRatio();
      homeEnvironment4.setCeillingLightColor(3);
      homeEnvironment3.getVideoCameraPath();
      homeEnvironment4.setGroundColor(0);
      homeEnvironment1.getPhotoQuality();
      int int0 = homeEnvironment4.getPhotoQuality();
      assertEquals(3731, homeEnvironment0.getVideoQuality());
      assertEquals(675, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(11053224);
      homeEnvironment0.setPhotoHeight(2106);
      Random.setNextRandom(210);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("}SB", "}SB", (Content) null, (-777.813F), (-758.87F), "}SB", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, 3, 3, (-777.813F));
      homeEnvironment0.setVideoQuality(926);
      homeEnvironment0.getVideoHeight();
      TexturesCategory texturesCategory0 = new TexturesCategory("QU)'o4pmMgp'e");
      catalogTexture0.setCategory(texturesCategory0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("QU)'o4pmMgp'e", propertyChangeListenerProxy0);
      Object object0 = new Object();
      Camera camera0 = new Camera(0.0F, 0.0F, (-2229.5464F), (-1.0F), 0.0F, 0.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("*:j,x!dX~r*2tT53", "", propertyChangeListenerProxy0, "}SB");
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(926, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(3006);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(3006, int0);
  }
}
