/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 20:32:20 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0099848357643504
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-padText";
      stringArray0[1] = "KqO55";
      stringArray0[2] = "-xhtmlv";
      stringArray0[3] = "-xhtmlv";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewlines(false);
      assertFalse(outputFormat1.isNewlines());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1332734375316855
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "";
      stringArray0[2] = "-expandEmpty-trimText";
      stringArray0[3] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1654496561804675
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-indentSize";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0490638632693567
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(672);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "=(y\"( l1d6L";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndent("-xhtml-xhtmlv");
      outputFormat0.setIndent("/N/1IiCd)_mz&*'Ijnh");
      outputFormat0.setIndent("-indentSize");
      assertEquals("-indentSize", outputFormat0.getIndent());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7079520766053928
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      boolean boolean0 = true;
      OutputFormat outputFormat1 = new OutputFormat("4^!v;2`JOi}D@r_w", true);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.setEncoding((String) null);
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setEncoding("-encoding");
      outputFormat1.setEncoding((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-encoding";
      stringArray0[2] = null;
      stringArray0[3] = "-encoding";
      stringArray0[4] = "4^!v;2`JOi}D@r_w";
      stringArray0[5] = "-expandE#mty-triTexK";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.181614937964844
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhtml-xhtmS3SN P", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml-xhtml-xhtmS3SN P";
      stringArray0[1] = "-xhtml-xhtml-xhtmS3SN P";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "M#OU)dmatM(}p!##%";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", false, "R-Kj!OD1q=XijtV>%");
      outputFormat0.setLineSeparator("");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "4^!v6;2f`JOi\\}D@r_w";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      int int0 = 2147483645;
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.405452149809925
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(2009);
      String[] stringArray0 = new String[6];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setEncoding("-padText");
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat("HR$4W'V=)-s}f=(3p:q", true, "P_~c^Fo7)C39");
      outputFormat1.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat1.isOmitEncoding();
      outputFormat1.parseOptions(stringArray0, 2009);
      outputFormat1.getAttributeQuoteCharacter();
      outputFormat0.setIndent((String) null);
      assertEquals("-padText", outputFormat0.getEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat("-padText", false, (String) null);
      outputFormat2.parseOptions(stringArray0, 2009);
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.getEncoding();
      outputFormat2.getEncoding();
      assertFalse(outputFormat2.isTrimText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1603612188091095
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat("l%w<0b^N");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-xhtmlv";
      stringArray0[1] = "-indent";
      stringArray0[2] = "l%w<0b^N";
      stringArray0[3] = "-xhtmlv";
      stringArray0[4] = "-xhtmlv";
      stringArray0[5] = "-xhtmlv";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.249242953770811
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-indent";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6627680084259993
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isPadText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isXHTML());
      assertEquals("  ", outputFormat2.getIndent());
      assertTrue(outputFormat2.isPadText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertTrue(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isOmitEncoding());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.124133230068866
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlv";
      stringArray0[1] = "HSg~GN/jQCZpH";
      stringArray0[2] = "L\"0_?4b:(";
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.183857030584623
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty-xhtmly!<~}";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-xhtmlv";
      stringArray0[3] = "-xhtmlv";
      outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat1.isXHTML());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.1021170635140374
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",|k)j%,s!>.Up30);", false, "-expandEmpty");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setExpandEmptyElements(false);
      OutputFormat outputFormat2 = new OutputFormat((String) null, false, "'4(");
      outputFormat2.setLineSeparator("'4(");
      outputFormat2.setNewlines(true);
      outputFormat2.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat2.isSuppressDeclaration();
      outputFormat2.isOmitEncoding();
      outputFormat2.setTrimText(true);
      boolean boolean0 = outputFormat2.isExpandEmptyElements();
      assertEquals("'4(", outputFormat2.getLineSeparator());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1531782505128936
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.setIndent("sw4.*c]j:9t");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "sw4.*c]j:9t";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = ":`8/)h]6@hJ";
      stringArray0[3] = "-expandEmpty";
      outputFormat0.setNewLineAfterNTags(560);
      outputFormat0.setIndent((String) null);
      outputFormat0.parseOptions(stringArray0, 560);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(560);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.92819476520619
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat((String) null, false);
      outputFormat1.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".R*wsn|xfN\"Sy7";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[4] = null;
      outputFormat0.setIndent((String) null);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertEquals("UTF-8", outputFormat2.getEncoding());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9146622966201674
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      String string0 = ".R*wsn|xfN\"Sy7";
      int int0 = 2220;
      outputFormat0.setIndentSize(2220);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isXHTML();
      String string1 = "-suppr";
      outputFormat0.setOmitEncoding(false);
      String string2 = "Oexc4ding";
      OutputFormat outputFormat1 = new OutputFormat("-suppr", true, "Oexc4ding");
      outputFormat1.setIndent(true);
      outputFormat1.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8258652199743604
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(2009);
      String[] stringArray0 = new String[6];
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(true);
      stringArray0[0] = "y!</}";
      stringArray0[1] = "";
      stringArray0[3] = "qMbo^W{?p";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isXHTML();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ImyEwkd%!?6T=Ys", true, "fI?");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1451));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("np AulFKS1m+R", true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "np AulFKS1m+R";
      stringArray0[2] = "np AulFKS1m+R";
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("np AulFKS1m+R");
      assertEquals("np AulFKS1m+R", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("vGp]?(4+Ve(CWm&yn", true, "-xhtml\n");
      String string0 = outputFormat0.getLineSeparator();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-xhtml\n", outputFormat0.getEncoding());
      assertEquals("vGp]?(4+Ve(CWm&yn", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Wg5Rm", false, "Wg5Rm");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "Wg5Rm";
      stringArray0[2] = "P_~c^Fo7)C39";
      stringArray0[3] = "Wg5Rm";
      stringArray0[4] = "Wg5Rm";
      stringArray0[5] = "Wg5Rm";
      stringArray0[6] = "Wg5Rm";
      stringArray0[7] = "Wg5Rm";
      stringArray0[8] = "Wg5Rm";
      outputFormat0.setNewLineAfterNTags((-1));
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(1346);
      outputFormat0.setTrimText(false);
      assertEquals(1346, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3635396101183592
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("7", false);
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding((String) null);
      outputFormat1.setExpandEmptyElements(false);
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.setTrimText(false);
      outputFormat1.setEncoding((String) null);
      outputFormat1.setNewLineAfterNTags(0);
      outputFormat0.setEncoding((String) null);
      outputFormat1.setTrimText(true);
      outputFormat0.setXHTML(false);
      outputFormat1.isPadText();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent((String) null);
      outputFormat1.setTrimText(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.isPadText();
      outputFormat0.setTrimText(false);
      outputFormat0.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat0.getIndent();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setXHTML(false);
      OutputFormat outputFormat2 = new OutputFormat("");
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9169550471066779
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4^!v6;2f`J9i}D@r_w", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4^!v6;2f`J9i}D@r_w";
      stringArray0[1] = "4^!v6;2f`J9i}D@r_w";
      outputFormat0.setEncoding("4^!v6;2f`J9i}D@r_w");
      stringArray0[2] = "Wg5Rm";
      stringArray0[3] = "4^!v6;2f`J9i}D@r_w";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray1 = new String[7];
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setEncoding("-newlines");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("R-Kj!OD1=Xijt>%");
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[6];
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[1] = null;
      stringArray0[2] = "R-Kj!OD1=Xijt>%";
      stringArray0[4] = null;
      stringArray0[5] = "=2h0~])?3`-6f";
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      String string0 = outputFormat0.getIndent();
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("", string0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-omitEncoding", true);
      String string0 = outputFormat0.getIndent();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("-omitEncoding", string0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertFalse(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(true);
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("np AulFKS1m+R", false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize((-3));
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator("np AulFKS1m+R");
      outputFormat0.setIndent("np AulFKS1m+R");
      assertTrue(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setIndentSize(1739);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setPadText(true);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isPadText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2465761078026745
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("  ", outputFormat1.getIndent());
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isPadText());
      assertFalse(outputFormat1.isSuppressDeclaration());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.423972598477201
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndentSize((-193));
      outputFormat0.setIndentSize((-193));
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "E_:@Nklu~oRy";
      stringArray0[1] = "1";
      outputFormat0.setLineSeparator("VJbVWR?");
      stringArray0[2] = "";
      stringArray0[3] = ")eAv'\"[ydp@J";
      stringArray0[4] = "";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat1.setEncoding("");
      outputFormat0.getNewLineAfterNTags();
      assertEquals("VJbVWR?", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isPadText();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("-xhtml-xhtmlbSN P");
      outputFormat0.setEncoding("-xhtmly!</");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("-xhtmly!</}");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      assertEquals("-xhtml-xhtmlbSN P", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("]b~v4*RD./rn", true);
      char char0 = '\u0017';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\u0017');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\u0017)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-expandEmpty";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "?K'F+=?";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.isNewlines();
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isXHTML();
      outputFormat0.isXHTML();
      outputFormat0.setLineSeparator(".R*wsn|xfN\"Sy7");
      assertEquals(".R*wsn|xfN\"Sy7", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty", false, "R-Kj!OD1q=XijtV>%");
      assertEquals("-expandEmpty", outputFormat1.getIndent());
      assertEquals("R-Kj!OD1q=XijtV>%", outputFormat1.getEncoding());
      
      outputFormat0.setLineSeparator((String) null);
      OutputFormat outputFormat2 = new OutputFormat("MRepXJQG:=", false, "MRepXJQG:=");
      assertFalse(outputFormat2.isXHTML());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isPadText());
      assertFalse(outputFormat2.isNewlines());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isExpandEmptyElements());
      
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[3] = "vGp]?(4+Ve(CWm&yn";
      stringArray0[4] = "";
      stringArray0[5] = "vGp]?(4+Ve(CWm&yn";
      OutputFormat outputFormat0 = new OutputFormat("");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('V');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (V)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7476224947602566
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, ".R*wsn|xfN\"Sy7");
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".R*wsn|xfN\"Sy7";
      stringArray0[4] = null;
      outputFormat0.setIndent(".R*wsn|xfN\"Sy7");
      assertEquals(".R*wsn|xfN\"Sy7", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(stringArray0[2]);
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "y!<X}";
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent(stringArray0[0]);
      outputFormat0.setIndent(stringArray0[0]);
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("fI?", true);
      outputFormat0.setNewlines(true);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("fI?", outputFormat0.getIndent());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7099578008946406
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Wg5Rm", false, "Wg5Rm");
      OutputFormat outputFormat1 = new OutputFormat("Wg5Rm", false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Wg5Rm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("7#y4oM%5<s|V5pj7");
      outputFormat0.setSuppressDeclaration(true);
      assertEquals("7#y4oM%5<s|V5pj7", outputFormat0.getEncoding());
      
      OutputFormat outputFormat2 = new OutputFormat("Wg5Rm", true);
      OutputFormat outputFormat3 = new OutputFormat("1'd5#gS|}8lc", false, "Wg5Rm");
      outputFormat3.setEncoding("Wg5Rm");
      outputFormat3.setLineSeparator("-lineSeparator");
      String string0 = outputFormat3.getEncoding();
      assertEquals("Wg5Rm", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.3342298951481277
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4^!v6;2f`JOi}D@r_w", false);
      outputFormat0.setIndent("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "-!&8X7";
      stringArray0[4] = "";
      outputFormat0.setIndentSize((-708));
      stringArray0[5] = "4^!v6;2f`JOi}D@r_w";
      outputFormat0.setIndentSize((-1));
      stringArray0[5] = "";
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("1Ygh$/0{{4)v>$r;;.|");
      assertEquals("1Ygh$/0{{4)v>$r;;.|", outputFormat0.getIndent());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "xF:wHrp";
      stringArray0[1] = "R-Kj!OD1q=XijtV>%";
      stringArray0[2] = "xF:wHrp";
      stringArray0[3] = "xF:wHrp";
      OutputFormat outputFormat0 = new OutputFormat("xF:wHrp", true);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("xF:wHrp", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, int0);
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("@}cE9rrB{BdlMeB", false, "@ZGK5U6gh6LyCo.");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "@}cE9rrB{BdlMeB";
      stringArray0[1] = "@}cE9rrB{BdlMeB";
      stringArray0[2] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1292));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1292
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[1] = "4^!v6;2f`JOi}D@r_w";
      stringArray0[2] = null;
      stringArray0[3] = "-expandEmpty";
      OutputFormat outputFormat0 = new OutputFormat("%8)Uu/uRHZ^^oQK.NO");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("kHKY|a>gkD l");
      assertEquals("kHKY|a>gkD l", outputFormat0.getIndent());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.802199401730308
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "-xhtmly!</}";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0347522396959996
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Wg5Rm", false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Wg5Rm";
      stringArray0[1] = "Wg5Rm";
      stringArray0[2] = "Wg5Rm";
      stringArray0[3] = "Wg5Rm";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isTrimText();
      outputFormat0.setEncoding("");
      outputFormat0.setLineSeparator("k{ys7cGBT");
      outputFormat0.getEncoding();
      assertEquals("k{ys7cGBT", outputFormat0.getLineSeparator());
  }
}
