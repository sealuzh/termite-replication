/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 20:26:00 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.event.ActionListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.TextListener;
import java.awt.geom.Point2D;
import java.io.FileFilter;
import java.io.FilenameFilter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Properties;
import java.util.Stack;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JRadioButton;
import javax.swing.JTabbedPane;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalRootPaneUI;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.util.file.FileSuffixFilter;
import org.jfree.ui.FilesystemFilter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      sQLAlias1.addPropertyChangeListener(metalRootPaneUI0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias1.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      sQLAliasConnectionProperties0.setKeepAliveSleepTimeSeconds(2334);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2334);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ITableInfo iTableInfo0 = null;
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      doReturn(0).when(connection0).getTransactionIsolation();
      DBUtil.setLastStatementValues("] not found.");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getWebSite();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      sQLConnection0.getTransactionIsolation();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, " XF'xYZF}`gq82<", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.ScriptWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DBUtil.typesAreEquivalent(2, 2767);
      System.setCurrentTimeMillis(2767);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("We'$Mean1/a0{", 2767, (-2451), (-2451));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("51]DpzUSC}'\"7", "w;7]h", "w;7]h", "w;7]h", 0, " to 128.", 2006, 0, (-3148), 0, ", ", " to 128.", 0, (-3148), "w;7]h");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      ComponentOrientation componentOrientation0 = ComponentOrientation.RIGHT_TO_LEFT;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("w;7]h");
      DatabaseObjectType.createNewDatabaseObjectType("1|\"", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("w;7]h");
      DatabaseObjectType.createNewDatabaseObjectType("1|\"", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("%oC=", (Icon) imageIcon0);
      imageIcon0.getIconWidth();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "TRUNCATE TABLE ", 2807, "+hIs-*7(!r[~Zu/5.\"", 1003, (-1779), 1003, 2807, "<,SrPd#c+2MKI)lec", "1", 1003, 999999999, "TRUNCATE TABL6E ");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "TZMTCow/l{d}7l!xwy";
      objectArray0[2] = (Object) "TZMTCow/l{d}7l!xwy";
      DatabaseObjectType.createNewDatabaseObjectType("()N*QO");
      DatabaseObjectType.createNewDatabaseObjectType("()N*QO");
      Object object0 = new Object();
      objectArray0[3] = object0;
      boolean boolean0 = true;
      JRadioButton jRadioButton0 = new JRadioButton("vQ{sI+ZNSqhLVh<;jXL", true);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Sp `Ce,*#[qCoCue>", "Sp `Ce,*#[qCoCue>");
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addMouseMotionListener((MouseMotionListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5?1h#j(F5&win");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eU_n'w.s");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.jf~ee.dataSxy.XYBarDataset", "+rk=W", "qh#-f", "n9t,'Xgfi4_fR", (-1080), "n9t,'Xgfi4_fR", (-1512), 860, 0, 0, "5?1h#j(F5&win", "oracle.jdbc.driver.OracleTypes", 0, 860, " ADD FOEGN EY (");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(856L);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2199, (-1437), 316, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      doReturn(0).when(connection0).getTransactionIsolation();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias1.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = new SQLAliasConnectionProperties();
      int int0 = 2334;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2334);
      SQLAlias sQLAlias2 = new SQLAlias(integerIdentifier0);
      sQLAlias2.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLConnection0.getTransactionIsolation();
      sQLDriverPropertyCollection0.removeDriverProperty("#wX3yB-Dajgl");
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "lLh9S0q)n8v:3", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.fixCase((ISession) null, "");
      System.setCurrentTimeMillis(1084);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "Ox8k H{(k .;c>>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(stack0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "[N!g&*Br fW@";
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      String string1 = "<,SrPd#c+2MKI)l\\ec";
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "<,SrPd#c+2MKI)lec", "<,SrPd#c+2MKI)lec", " NOT NULL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "", "");
      String string0 = "[0nl^RX~!]O2y/81=";
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "[0nl^RX~!]O2y/81=");
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[4];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("4BT", "4BT");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("[0nl^RX~!]O2y/81=", "");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("", "qh#-f");
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("AUSe6n", "4BT");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      // Undeclared exception!
      try { 
        sQLDriverPropertyCollection0.getDriverProperty(32511);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32511, Size: 4
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("java.protocol.handler.pkgs");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte) (-1);
      byteArray0[5] = (byte) (-32);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(";u9Tp$+h2LfNd0?JB{6", (String) null, (String) null, "^c6Fa$>A;Y?;P", (byte) (-31), "{6  SD^MTRRgV+X$X", 2517, 2517, (-3097), (-2154), (String) null, "A", 92, (-2154), "TRUNCATE TABLE ");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseEvent mouseEvent0 = new MouseEvent(defaultTreeCellRenderer1, 386, 1L, 0, 386, 0, 0, true, 0);
      defaultCaret0.mouseEntered(mouseEvent0);
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.addMouseMotionListener(defaultCaret0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "3*3/'DjlVH\"U";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "3*3/'DjlVH\"U", "3*3/'DjlVH\"U");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 603);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, (-14));
      int int0 = 979;
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      UnaryOperator<ITableInfo> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("TZMTCow/l{d}7l!xwy", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("&#5x~i$v?WC0AuW");
      DatabaseObjectType.createNewDatabaseObjectType("&#5x~i$v?WC0AuW");
      Object object0 = new Object();
      JRadioButton jRadioButton0 = new JRadioButton(",\n\tPRIMARY KEY ", true);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROC_TYPE_DBO;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".s}`~ab", ".s}`~ab", ".s}`~ab", "/f=NZ", 160, "Requires 'xSamples' > 0", (-959), 16, 1338, 7, "()N*QO", "TZMTCow/l{d}7l!xwy", (-624), 479, "E{8:E#9.Fwr5");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("/f=NZ", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("%!~9nYz");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("DBtil.inf.bindblobfile");
      DatabaseObjectType.createNewDatabaseObjectType("V:[H");
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      LinkedBlockingQueue<IndexInfo> linkedBlockingQueue0 = new LinkedBlockingQueue<IndexInfo>();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.add((IDatabaseObjectInfo) foreignKeyInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$1804612348 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("=`_YuipE2)7G@z");
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperImpl1.getAbsoluteFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl3.deleteOnExit();
      fileWrapperImpl3.listFiles();
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("cbcOBAVg");
      fileWrapperImpl0.renameTo(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl3);
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter((String[]) null);
      fileWrapperImpl1.listFiles((FileFilter) fileSuffixFilter0);
      fileWrapperImpl3.mkdir();
      fileWrapperImpl1.setReadOnly();
      fileWrapperImpl0.toURI();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl6 = (FileWrapperImpl)applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      fileWrapperImpl6.mkdir();
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl("cbcOBAVg");
      fileWrapperImpl3.getAbsolutePath();
      FileWrapperImpl fileWrapperImpl8 = new FileWrapperImpl("/home/ubuntu/.squirrel-sql/editWhereCols.xml", "cbcOBAVg");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      DBUtil.typesAreEquivalent(16, 13);
      System.setCurrentTimeMillis(13);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl1.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("org.jfree.ui.ExtensionFileFilter", "org.jfree.ui.ExtensionFileFilter");
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl("cbcOBAVg");
      fileWrapperImpl1.setReadOnly();
      fileWrapperImpl0.toURI();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl1.getWelcomeFile();
      fileWrapperImpl2.getAbsolutePath();
      FileWrapperImpl.createTempFile("^brm", "Column add not yet supported");
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("1.15", dBCopyPlugin0.getVersion());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getUpdateDirectory();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("s/j", "s/j", "s/j", "s/j", (-1959), "s/j", (-1959), (-1909), (-2800), 58, "s/j", "|k", (-305), (-2800), "|k");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      ComponentOrientation componentOrientation0 = ComponentOrientation.RIGHT_TO_LEFT;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(";", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("78m?Arf");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("}aD~wx~@cVtR", (Icon) imageIcon0);
      imageIcon0.getIconWidth();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.FUNCTION;
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1959), int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "hZIo(", "E(usbPY\"dV/?e", "43Z7+V:0eDjZ", (-3), "E(usbPY\"dV/?e", (-3), (-6), (-3952), (-3952), "1}9xS5< GaUNt{Y", "com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuDragMouseHandler", 2059, (-3907), "net.sourceforge.squirrel_sql.client.FontInfoStore");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("numeric($p,$s)");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBUtil.isBinaryType(tableColumnInfo0);
      JTabbedPane jTabbedPane0 = new JTabbedPane(1);
      assertFalse(jTabbedPane0.isFocusCycleRoot());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 20);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias0.getDriverPropertiesClone();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias2.getDriverPropertiesClone();
      sQLDriverPropertyCollection1.applyTo((Properties) null);
      sQLDriverProperty0.setIsSpecified(true);
      String string0 = "@M\\/':,fmK<B";
      int int0 = 32000;
      // Undeclared exception!
      try { 
        sQLDriverPropertyCollection1.getDriverProperty(32000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32000, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "TZMTCow/l{d}7l!xwy";
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-32);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("()N*QO", "key", "key", "NO", (-4), "DBUtil.error.bindblobfailure", 16, 2055, (-6), (byte) (-1), "R>l^&'0<2b/WzOi}S", "DBUtil.error.bindblobfailure", 93, (-2), "NO");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("1|\"", "where v.SCHEMAID = s.SCHEMAID ", (String) null, "Skipping FK (", (-2), "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", 708, (-6), (-2), (-1932735280), "1aR", "E{8:E#9.Fwr5", (-6), 6206, "dd MMMM yyyy");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 16;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".s}`~ab", ".s}`~ab", ".s}`~ab", "/f=NZ", 160, "Requires 'xSamples' > 0", (-959), 16, 1338, 7, "()N*QO", "TZMTCow/l{d}7l!xwy", (-624), 479, "E{8:E#9.Fwr5");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("%!~9nYz");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("DBtil.inf.bindblobfile");
      DatabaseObjectType.createNewDatabaseObjectType("V:[H");
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "ERROR", "{6  SD^MTRRgV+X$X", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("=`_YuipE2)7G@z");
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)fileWrapperImpl1.getAbsoluteFile();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl3.deleteOnExit();
      fileWrapperImpl3.listFiles();
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("cbcOBAVg");
      fileWrapperImpl0.renameTo(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl3);
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter((String[]) null);
      fileWrapperImpl1.listFiles((FileFilter) fileSuffixFilter0);
      fileWrapperImpl3.mkdir();
      fileWrapperImpl1.setReadOnly();
      fileWrapperImpl0.toURI();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl6 = (FileWrapperImpl)applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      fileWrapperImpl6.mkdir();
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl("cbcOBAVg");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("=`_YuipE2)7G@z", " z3oHt", "=`_YuipE2)7G@z", "(", 93, "replaceOtherDataType: unexpected exception - ", 41, 128, 322, 322, " z3oHt", "[++PRT_s,Ye~I", 2380, 32739, " z3oHt");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals(" z3oHt", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "l0 J.j/}>]", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "seies", "seies");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 23020);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      System.setCurrentTimeMillis((-3606L));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "k<5Tub", "y+", (String) null, 2742, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2690), (-1108), (-2690), 1730, (String) null, "y+", 145, 667, "H]9&");
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(2742, tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.setLastStatementValues("");
      DBUtil.getLastStatementValues();
      ISQLConnection iSQLConnection0 = null;
      String string0 = "\\Y%L}r";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "", "1aR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gA3XFC{h`");
      DBUtil.typesAreEquivalent((-7), (-7));
      System.setCurrentTimeMillis((-7));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "bC,W@,$rJElX`Pvk6";
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-889), (-889));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "!U(Bnj=", "Null item not allowed.", (String) null, 1, "sKhw&q", 1, 1, (-4), 1, " CHAR(10) )", "blob", 1111, 454, "h3`:FY!W");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      assertEquals(0, sQLDriverPropertyCollection0.size());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "1hWG";
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "1hWG", "1hWG", "1hWG", (-1537));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      String string0 = "i=IeS3G\\H";
      DBUtil.setLastStatementValues("] not found.");
      dBCopyPlugin0.getSourceSession();
      DBUtil.getLastStatementValues();
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-102);
      int int1 = 3481;
      DBUtil.typesAreEquivalent((-102), 3481);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias0.getDriverPropertiesClone();
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      sQLDriverPropertyCollection1.applyTo((Properties) null);
      sQLDriverProperty0.setIsSpecified(true);
      String string0 = "@M\\/':fmKbB";
      // Undeclared exception!
      try { 
        sQLDriverPropertyCollection1.getDriverProperty(32000);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32000, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getActionMap();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("java.protocol.handler.pkgs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte) (-31);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NO");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("y7Ai;@N}+*", "DBUtil.error.bindblobfailure", "B-.", "DBUtil.error.bindblobfailure", (-6), "#%nvrhaUY", (-1316), 2162, (byte) (-31), (-7), "o6$iawP}E33 E*g", "~.Ce+cUK!*vwI64$", 9, (-7), "myMopS6:$");
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("org.jfree.ui.ExtensionFileFilter", "org.jfree.ui.ExtensionFileFilter");
      fileWrapperImpl1.getAbsoluteFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl2.deleteOnExit();
      FileWrapperImpl.listRoots();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl("cbcOBAVg");
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl2);
      fileWrapperImpl2.mkdir();
      fileWrapperImpl1.setReadOnly();
      fileWrapperImpl0.toURI();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl("cbcOBAVg");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, " and table_schema = ? ", "DBUtil.error.bindblobfailure", ".V\"}8,)BF#`VMF~,", (-6), "cbcOBAVg", 132, (-1932735280), 91, 132, "R>l^&'0<2b/WzOi}S", "cbcOBAVg", (-6), (-4766), "DBUtil.error.bindblobfailure");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(750, (-3681));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyForeignKeys(true);
      dBCopyPreferenceBean0.setWriteScript(true);
      dBCopyPreferenceBean0.setPromptForDialect(true);
      dBCopyPreferenceBean0.setClientName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPreferenceBean0.setSelectFetchSize(1758);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      assertTrue(dBCopyPreferenceBean0.isCommitAfterTableDefs());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl1.getPluginsDirectory();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      fileWrapperImpl0.getCanonicalFile();
      fileWrapperImpl1.listFiles((FilenameFilter) null);
      fileWrapperImpl1.getCanonicalFile();
      fileWrapperImpl1.getParentFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getDestSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "eU_n'w.s");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.jfree.data.xy.XYBarDataset");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Lkf+o.U1 -,", "Lkf+o.U1 -,", "eU_n'w.s", "qh#-f", 860, "eU_n'w.s", (-1080), 14, 860, (-128), "index", "eU_n'w.s", (-1512), 14, " ADD FOEGN EY (");
      DBUtil.replaceDistinctDataType((-3868), tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(14);
      System.setCurrentTimeMillis((-1080));
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserSettingsDirectory();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getPluginsUserSettingsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("h3`:FY!W", "sKhw&q", "sKhw&q", (String) null, 2039, "&#5x~i$v?WC0AuW", 1, 2039, 11, 1441, " seems to already have it defined.", " seems to already have it defined.", 2, 476, "mHl ]p:MCbSw");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      ComponentOrientation componentOrientation0 = ComponentOrientation.RIGHT_TO_LEFT;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(" and at-log ", (Icon) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("<,SrPd#c+2MKI)lec");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2039, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{6  SD^MTRRgV+X$X", "{6  SD^MTRRgV+X$X", "{6  SD^MTRRgV+X$X", "{6  SD^MTRRgV+X$X", 1085, "51]DpzU\"SC}'\"7", 1, 1085, 927, 2039, "{6  SD^MTRRgV+X$X", "{6  SD^MTRRgV+X$X", 2, 476, "{6  SD^MTRRgV+X$X");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      ComponentOrientation componentOrientation0 = ComponentOrientation.RIGHT_TO_LEFT;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("78m?Arf", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("NO,+!N}f4Y`");
      imageIcon0.getIconWidth();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1085, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "TZMTCow/l{d}7l!xwy";
      DatabaseObjectType.createNewDatabaseObjectType("()N*QO");
      Object object0 = new Object();
      objectArray0[3] = object0;
      JRadioButton jRadioButton0 = new JRadioButton("vQ{sI+ZNSqhLVh<;jXL", true);
      objectArray0[4] = (Object) databaseObjectType0;
      objectArray0[6] = (Object) databaseObjectType0;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROC_TYPE_DBO;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "^}<JgY.ob2sp+V)i", "TZMTCow/l{d}7l!xwy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "h3`:\\FY!W";
      DBUtil dBUtil0 = new DBUtil();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.getDriverPropertiesClone();
      sQLAlias1.getDriverPropertiesClone();
      int int0 = (-6);
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias1.getDriverPropertiesClone();
      // Undeclared exception!
      try { 
        sQLDriverPropertyCollection1.getDriverProperty(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((ActionListener) aWTEventMulticaster4, (ActionListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster4);
      applicationFiles0.getChangeLogFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("z@w>c.}8", "8DO6<B", "z@w>c.}8", (ForeignKeyInfo) null, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("java.protocol.handler.pkgs");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte) (-31);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byteArray0[5] = (byte) (-32);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Zn&?^sb");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("v#10BEFJ", "NO", "R>l^&'0<2b/WzOi}S", "y7Ai;@N}+*", 2005, "1|\"", 2517, 2517, (byte) (-31), (byte) (-31), "R>l^&'0<2b/WzOi}S", "DBUtil.error.bindblobfailure", (byte) (-31), (-6), "A");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl1.getPluginsDirectory();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      FilesystemFilter filesystemFilter0 = new FilesystemFilter("Y(`|!tB-zs", "v!RDmtg~ONMbA{!Q");
      fileWrapperImpl0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapperImpl fileWrapperImpl2 = (FileWrapperImpl)applicationFileWrappersImpl1.getFwJarFile();
      FileWrapperImpl.listRoots();
      FileWrapperImpl.listRoots();
      applicationFileWrappersImpl1.getChangeLogFile();
      fileWrapperImpl2.getCanonicalFile();
      fileWrapperImpl1.listFiles((FilenameFilter) null);
      fileWrapperImpl1.getCanonicalFile();
      fileWrapperImpl1.getParentFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getDestSession();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "kXT(7Y'MiH%2$h%.2T");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "eU_n'w.s");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "qh#-f");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.jf~ee.dataSxy.XYBarDataset");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Lkf+o.U1 -,", "Lkf+o.U1 -,", "eU_n'w.s", "qh#-f", 860, "eU_n'w.s", (-1080), (-1080), 860, (-128), "org.jf~ee.dataSxy.XYBarDataset", "eU_n'w.s", (-1511), (-1080), " ADD FOEGN EY (");
      DBUtil.replaceDistinctDataType(2003, tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis(2003);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "}\"Zrq]H*", "}\"Zrq]H*", "DZbmLO:<}xL0ad", 231);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" schema = ", " schema = ", " schema = ", "", 1643, "", (-4026), (-4026), 1643, 504, "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", 504, 312, "null SQLConnection passed");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getLabelFor();
      defaultTreeCellRenderer1.getInsets((Insets) null);
      defaultTreeCellRenderer1.setFocusTraversalPolicyProvider(true);
      Dimension dimension0 = new Dimension();
      defaultTreeCellRenderer1.list();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point2D.Float point2D_Float0 = new Point2D.Float(0, (-1165.1571F));
      defaultCaret0.add((Point2D) point2D_Float0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.fw.sql.UDTInfo", " ADD FOEGN EY (", "net.sourceforge.squirrel_sql.fw.sql.UDTInfo", " ADD FOEGN EY (", 1728, " ADD FOEGN EY (", 0, 0, (-983), (-983), " ADD FOEGN EY (", " ADD FOEGN EY (", 0, (-216), " ADD FOEGN EY (");
      DBUtil.replaceDistinctDataType(710, tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis((-1086L));
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      LinkedBlockingQueue<IndexInfo> linkedBlockingQueue0 = new LinkedBlockingQueue<IndexInfo>();
      linkedBlockingQueue0.poll();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType("&#5x~i$v?WC0AuW", (Icon) null);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) "TZMTCow/l{d}7l!xwy";
      objectArray0[2] = (Object) "TZMTCow/l{d}7l!xwy";
      DatabaseObjectType.createNewDatabaseObjectType("()N*QO");
      Object object0 = new Object();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("&#5x~i$v?WC0AuW", "()N*QO", "TZMTCow/l{d}7l!xwy", "mS%?v#OCV8/IJ&Bs", (-676), ":LP<`4cRl|z;:b", (-1293), (-45), 300, (-45), "cQ", ":LP<`4cRl|z;:b", 689, (-676), "cQ");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("()N*QO", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-4), (-3681));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener3);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener5);
      HierarchyBoundsListener hierarchyBoundsListener7 = AWTEventMulticaster.add(hierarchyBoundsListener6, hierarchyBoundsListener2);
      AWTEventMulticaster.add(hierarchyBoundsListener7, hierarchyBoundsListener4);
      HierarchyBoundsListener hierarchyBoundsListener8 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener7, hierarchyBoundsListener5);
      HierarchyBoundsListener hierarchyBoundsListener9 = AWTEventMulticaster.remove(hierarchyBoundsListener5, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener9);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener10 = AWTEventMulticaster.remove(hierarchyBoundsListener8, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener10);
      defaultTreeCellRenderer0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "long byte", (ITableInfo) null, 2002);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("-4b6abada:16e85506773:-7bb2", uidIdentifier1.toString());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Insets insets0 = defaultTreeCellRenderer1.getInsets((Insets) null);
      insets0.bottom = (-1431655763);
      defaultTreeCellRenderer1.getMaximumSize();
      insets0.right = 0;
      insets0.bottom = 0;
      insets0.left = 0;
      defaultTreeCellRenderer0.list();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "t>Z!zjC0oYT");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getLabelFor();
      defaultTreeCellRenderer1.setFocusTraversalPolicyProvider(true);
      defaultTreeCellRenderer1.getMaximumSize();
      defaultTreeCellRenderer1.list();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, "+hIs-*7(!r[~u/5.\"", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.isFocusable();
      defaultTreeCellRenderer0.list();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      System.setCurrentTimeMillis((-4270L));
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      List<IDatabaseObjectInfo> list0 = new ArrayList<IDatabaseObjectInfo>();
      DBUtil.convertObjectToTableList(list0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("sA{#bbL^A\"k{Xt", (-1295), (-1295), 577);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getUpdateDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Insets insets0 = defaultTreeCellRenderer1.getInsets((Insets) null);
      insets0.bottom = (-1431655763);
      Dimension dimension0 = defaultTreeCellRenderer1.getMaximumSize();
      insets0.right = 0;
      insets0.bottom = 0;
      insets0.left = 0;
      dimension0.setSize(0.0, (double) 0);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("] to Level.", "$:^u~YXfQ~N[Bh", "PMZIz3I*W#(", (ISession) null, true, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener4);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.add(hierarchyBoundsListener5, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener7 = AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener6);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener4);
      HierarchyBoundsListener hierarchyBoundsListener8 = AWTEventMulticaster.add(hierarchyBoundsListener7, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener7);
      AWTEventMulticaster.add(hierarchyBoundsListener6, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add(hierarchyBoundsListener6, hierarchyBoundsListener4);
      AWTEventMulticaster.add(hierarchyBoundsListener8, hierarchyBoundsListener8);
      AWTEventMulticaster.remove(hierarchyBoundsListener4, hierarchyBoundsListener4);
      AWTEventMulticaster.remove(hierarchyBoundsListener8, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener9 = AWTEventMulticaster.remove(hierarchyBoundsListener7, (HierarchyBoundsListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AWTEventMulticaster.remove(hierarchyBoundsListener9, hierarchyBoundsListener3);
      AWTEventMulticaster.remove(hierarchyBoundsListener5, hierarchyBoundsListener6);
      defaultTreeCellRenderer0.removeHierarchyBoundsListener(hierarchyBoundsListener1);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getRootPane();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("axion", (String) null, "axion", "", 121, "setSelectedDatabaseObjects: IDatabaseObjectInfo[", 1157, 121, 0, 1157, "$kpH", "l+[6.LArXa)/.#>A+", 1157, 1157, "`ow");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("axion");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType.createNewDatabaseObjectType("S<6.");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType.createNewDatabaseObjectType("9$fiPJOmh0B>", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("i^n~,xccauf<y]", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType(" from ", (Icon) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType(" from ");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "fd|", "wi1Kg&UaX");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.setLastStatement(" and catalog ");
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties0 = sQLAlias0.getColorProperties();
      sQLAlias0.setColorProperties(sQLAliasColorProperties0);
      sQLAlias0.getDriverPropertiesClone();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1111);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("1.15", dBCopyPlugin0.getVersion());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Insets insets0 = defaultTreeCellRenderer0.getInsets((Insets) null);
      insets0.right = 0;
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "V", "] to Level.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      JComponent.isLightweightComponent(defaultTreeCellRenderer1);
      defaultCaret0.setFrame(0.0, (double) (-947), (-368.8791024314), 0.0);
      MouseEvent mouseEvent0 = new MouseEvent(defaultTreeCellRenderer1, (-369), (-947), (-369), (-369), (-947), 0, true);
      defaultTreeCellRenderer1.isOptimizedDrawingEnabled();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      defaultCaret1.mouseEntered(mouseEvent0);
      defaultCaret1.setBlinkRate(0);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      DefaultCaret defaultCaret3 = new DefaultCaret();
      defaultTreeCellRenderer1.addMouseMotionListener(defaultCaret3);
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "{|s{fhSTP2", "AVIxR3");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
