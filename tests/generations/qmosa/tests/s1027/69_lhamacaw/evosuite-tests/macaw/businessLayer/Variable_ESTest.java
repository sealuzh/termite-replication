/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 19:59:03 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.Date;
import java.util.LinkedList;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7096433954525274
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("F");
      assertEquals("F", derivedVariable0.getLabel());
      
      User user0 = new User("L9<t/|_)0dc{Y*fsQ1", "L9<t/|_)0dc{Y*fsQ1");
      user0.setStatus("edGjX2L$");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      derivedVariable1.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, (Variable) null);
      User user1 = new User();
      user0.setCity("F");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getAlternativeVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable5.setSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable5.getCategory());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.6859829887501045
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("F");
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      User user0 = new User("F", "xgb|/'yZ^m=+mY^&_1J");
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      User user1 = new User();
      derivedVariable3.setName("xgb|/'yZ^m=+mY^&_1J");
      user1.setCity("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable3);
      rawVariable0.getAlternativeVariable();
      assertEquals("F", rawVariable0.getLabel());
      
      derivedVariable1.getLabel();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.685797743531747
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("F");
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      User user0 = new User("F", "xgb|/'yZ^m=+mY^&_1J");
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      User user1 = new User();
      user1.setCity("UNABLE_TO_FILTER_ONTOLOGY_TERMS");
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable3);
      rawVariable0.getAlternativeVariable();
      assertEquals("F", rawVariable0.getLabel());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7894273460941865
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.removeIf(predicate2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm2);
      boolean boolean0 = derivedVariable1.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber((String) null);
      System.setCurrentTimeMillis((-1131L));
      derivedVariable1.updateOntologyTerm(ontologyTerm5);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList2);
      String string0 = rawVariable1.getFilePath();
      assertNotNull(string0);
      
      ArrayList<String> arrayList3 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList3.size());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5719579500515657
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd((String) null);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setColumnStart(">");
      rawVariable0.getYear();
      Variable.validateFields(rawVariable0);
      assertEquals(">", rawVariable0.getColumnStart());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setIdentifier((-3649));
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("s%Q3Pj");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields((DerivedVariable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      user0.setCity("Y:\"j");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "]}";
      User user1 = new User("Y:\"j", "Y:\"j");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getAvailability();
      assertEquals("]}", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.getDisplayName();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      derivedVariable1.setSourceVariables(arrayList1);
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("=");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCodeBookNumber("=");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1522175094749185
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlias("USER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      derivedVariable0.setIdentifier((-2067947214));
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.setAlias("variable.codeBookNumber.label");
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      macawChangeEvent1.setChangedObjectIdentifier(0);
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) macawChangeEvent1);
      Predicate<OntologyTerm> predicate1 = predicate0.negate();
      macawChangeEvent1.setChangedObjectIdentifier((-2067947214));
      Predicate<OntologyTerm> predicate2 = predicate1.and(predicate0);
      Predicate<OntologyTerm> predicate3 = predicate2.or(predicate1);
      arrayList2.removeIf(predicate3);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      System.setCurrentTimeMillis((-1));
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariables(arrayList1);
      rawVariable0.getFilePath();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("variable.codeBookNumber.label", derivedVariable0.getAlias());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) valueLabel1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate6 = predicate0.or(predicate1);
      predicate1.negate();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate.isEqual((Object) valueLabel1);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate8 = predicate6.negate();
      Predicate<Object> predicate9 = Predicate.isEqual((Object) predicate4);
      predicate7.or(predicate9);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(101);
      Predicate<Object> predicate10 = predicate6.negate();
      predicate8.or(predicate7);
      Integer integer0 = new Integer(2461);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Predicate.isEqual((Object) predicate3);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      predicate5.test(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeIf(predicate10);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis(101);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1171019303194956
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEvent0.getVariableOwnerID();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) ontologyTerm0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate2.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate1.negate();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) macawChangeEvent1);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate3);
      predicate0.negate();
      Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate8 = predicate1.or(predicate0);
      ontologyTerm0.setIdentifier(101);
      predicate8.negate();
      predicate1.or(predicate5);
      Integer integer0 = new Integer(1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Predicate.isEqual((Object) derivedVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      predicate7.test(supportingDocument0);
      arrayList0.removeIf(predicate4);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      boolean boolean1 = derivedVariable1.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean1 == boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis(101);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate0.or(predicate2);
      Predicate<Object> predicate3 = predicate2.negate();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) valueLabel0);
      predicate1.negate();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "(w3t]PVg");
      predicate6.or(predicate0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1755));
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate8 = predicate7.or(predicate6);
      predicate8.negate();
      Predicate<Object> predicate9 = predicate8.or(predicate5);
      Integer integer0 = new Integer(17);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Predicate.isEqual((Object) predicate9);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      predicate7.test(predicate3);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeIf(predicate2);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis((-1755));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Y:\"j", (String) null);
      rawVariable0.setColumnStart((String) null);
      user0.setUserID((String) null);
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals(0, arrayList0.size());
      
      System.setCurrentTimeMillis(0L);
      rawVariable0.getCodeBookNumber();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.3809682098476954
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Object object0 = ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) object0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEvent0.getVariableOwnerID();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) ontologyTerm0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate2.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) predicate2);
      predicate3.or(predicate1);
      Predicate<Object> predicate4 = predicate1.negate();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Predicate<Object> predicate5 = Predicate.isEqual((Object) macawChangeEvent1);
      Predicate.isEqual((Object) predicate3);
      predicate0.negate();
      Predicate.isEqual((Object) predicate5);
      predicate1.or(predicate0);
      ontologyTerm0.setIdentifier(101);
      predicate1.or(predicate4);
      arrayList0.removeIf(predicate1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList0.trimToSize();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(object0));
      
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.056626503244594
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      User user0 = new User();
      user0.setLastName("#");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("[a*R=u=!");
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setAvailability("[a*R=u=!");
      derivedVariable0.setName("#");
      derivedVariable0.setNotes((String) null);
      ValueLabel valueLabel3 = new ValueLabel();
      derivedVariable0.isCleaned();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      User user1 = new User("[a*R=u=!", "(l<D{7G lj7/");
      System.setCurrentTimeMillis((-1087L));
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getNotes();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7914234446919735
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "UNABLE_TO_GET_AVAILABILITY_STATE_NAME";
      derivedVariable0.getIdentifier();
      derivedVariable0.setIdentifier((-2286));
      derivedVariable0.columnStart = "Sk}8E`\"$glNv";
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setCodeBookNumber("general.fieldValue.unknown");
      derivedVariable0.getSupportingDocuments();
      System.setCurrentTimeMillis(0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.getCodeBookNumber();
      assertEquals("-2286", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.021294734707494
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setIdentifier(120);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("F");
      derivedVariable1.setColumnStart("F");
      derivedVariable1.setNotes("\"FW$f&bL9g*R\"Y<X");
      derivedVariable0.setNotes("F");
      derivedVariable1.isCleaned();
      derivedVariable1.getFilePath();
      User user0 = new User("4,q!~y>wb'rStr", "");
      User user1 = new User();
      User.detectFieldChanges(user0, user0, user1);
      System.setCurrentTimeMillis(2045L);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getFilePath();
      User user2 = new User("4,q!~y>wb'rStr", "");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable2);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.476194898259473
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      user1.setLastName("");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("I~xEu");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setAvailability("2%{");
      derivedVariable0.setName("");
      derivedVariable0.setNotes("2%{");
      ValueLabel valueLabel2 = new ValueLabel();
      System.setCurrentTimeMillis(373L);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariables(arrayList0);
      derivedVariable0.getNotes();
      assertEquals("2%{", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User("uk{`k]ACLE$tcx(:", "general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.0145773655411636
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setValue("R8X");
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setQuestionNumber("R8X");
      rawVariable0.getQuestionNumber();
      User user0 = new User("&J-NHM)s|:U4zoY7", "variable.cleaningDescription.label");
      user0.setAddressLine2("2%{");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.getAlternativeVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.7380367044365133
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "YR]+(bV/O8|.";
      derivedVariable0.setCleaningStatus("YR]+(bV/O8|.");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setCoded(true);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      user0.setAddressLine1("YR]+(bV/O8|.");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.notes = "YR]+(bV/O8|.";
      rawVariable1.setColumnEnd("YR]+(bV/O8|.");
      user0.setEmail("YR]+(bV/O8|.");
      derivedVariable0.getSourceVariables();
      rawVariable0.isCoded();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable1.getLabel();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      rawVariable1.cloneAttributes(derivedVariable0);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.getForm();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getIdentifier();
      derivedVariable0.getFilePath();
      assertEquals("YR]+(bV/O8|.", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.633585788115004
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("9F");
      derivedVariable0.setCleaned(true);
      derivedVariable0.setNotes("GW2B5>ehJbVU");
      derivedVariable0.isCleaned();
      derivedVariable0.getFilePath();
      User user1 = new User("IPH=Tj+uH[qB.L^E]'", "");
      User user2 = new User();
      User.detectFieldChanges(user0, user2, user0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      User user3 = new User("", "GW2B5>ehJbVU");
      user3.setPassword("(#dI\u0006zU;0m!bc5s ");
      Variable.detectFieldChanges(user3, derivedVariable1, derivedVariable1);
      System.setCurrentTimeMillis(1L);
      derivedVariable0.cloneAttributes(derivedVariable1);
      Variable.detectFieldChanges(user3, derivedVariable0, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals("", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1694267446959503
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel2 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) user0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate<OntologyTerm> predicate4 = predicate0.and(predicate3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.removeIf(predicate4);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      predicate0.or(predicate1);
      arrayList1.removeIf(predicate4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm4);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis((-1757L));
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9756246229366328
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(63);
      User user0 = new User("", "my d`wnu");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Integer integer0 = new Integer(63);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) macawChangeEvent0);
      predicate1.and(predicate0);
      predicate0.or(predicate1);
      Predicate<OntologyTerm> predicate2 = Predicate.isEqual((Object) ontologyTerm1);
      predicate2.and(predicate0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeIf(predicate0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.notes = "$";
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable0.getCleaningDescription();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setYear("I");
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertEquals("I", derivedVariable0.getYear());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setIdentifier((-2067947214));
      derivedVariable0.setName("9F");
      derivedVariable0.setNotes("GW2B5>ehJbVU");
      derivedVariable0.isCleaned();
      derivedVariable0.getFilePath();
      User user1 = new User("F;WU57.J+!k`zmB&", ".O\u0004");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList2);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getSupportingDocuments();
      assertEquals("GW2B5>ehJbVU", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.7087930156379163
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.getNotes();
      rawVariable0.codeBookNumber = "/Y,* U0`lmo";
      rawVariable0.setIsNewRecord(true);
      SupportingDocument supportingDocument0 = null;
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getAlias();
      rawVariable0.setName("");
      rawVariable0.isNewRecord();
      rawVariable0.setAlias("3Lo` z@G*");
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "macaw.businessLayer.Va\"iable");
      user0.setUserID((String) null);
      rawVariable0.setFilePath("3Lo` z@G*");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setCleaned(true);
      derivedVariable0.getSourceVariables();
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.689146238092495
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel valueLabel0 = new ValueLabel();
      User.checkValidUserIDField("A");
      user0.setStatus("A");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
      derivedVariable1.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable5, derivedVariable5);
      User user1 = new User();
      user1.setCity("A");
      Variable.detectFieldChanges(user1, derivedVariable5, derivedVariable0);
      assertEquals("A", derivedVariable0.getName());
      
      rawVariable1.getAlternativeVariable();
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1506719848487332
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("Y:\"j");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel2 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("Y:\"j");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.842324604726158
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      User.checkValidUserIDField("A");
      user0.setStatus("A");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, (Variable) null);
      User user2 = new User();
      System.setCurrentTimeMillis((-944L));
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      derivedVariable0.getName();
      assertEquals("A", derivedVariable0.getName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.9177312411772705
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("UNABLE_TO_GET_ORIGINAL_USER");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(691);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel.validateFields(valueLabel0);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.stream();
      arrayList0.add(valueLabel0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getName();
      derivedVariable0.getAvailability();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.isCoded();
      derivedVariable0.setAvailability("");
      derivedVariable0.setName("ALIAS_FILE_PATH");
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("$c");
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable1.isCleaned();
      derivedVariable0.getFilePath();
      User user0 = new User("RN/gM", "ALIAS_FILE_PATH");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      System.setCurrentTimeMillis(494L);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7024753694130217
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      Object object0 = ontologyTerm0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) object0);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) arrayList0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      predicate1.test(ontologyTerm0);
      Predicate<Object> predicate4 = predicate2.or(predicate3);
      predicate4.test(ontologyTerm0);
      predicate4.negate();
      Predicate<Object> predicate5 = predicate4.and(predicate3);
      predicate0.negate();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Predicate.isEqual((Object) predicate5);
      predicate4.negate();
      arrayList0.removeIf(predicate0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm3);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("USER", "USER");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier((-1));
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.addAll((Collection<? extends SupportingDocument>) arrayList2);
      derivedVariable0.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSupportingDocuments();
      rawVariable0.getIdentifier();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("-1", derivedVariable0.getDisplayItemIdentifier());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7126066807514175
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setFirstName("variable.isCleaned.saveChanges.changedToNotClean");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setForm("macaw.businessLayer.Variable");
      derivedVariable0.setAlias("USER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setIdentifier((-2067947214));
      derivedVariable0.getSupportingDocuments();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable1.getAlternativeVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertEquals((-2067947214), int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(685);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setIdentifier(685);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setValue("[a*R=u=!");
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertEquals(685, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.687269387963461
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlias("USER");
      derivedVariable0.setIdentifier((-2067947214));
      derivedVariable0.setName("9F");
      derivedVariable0.setCodeBookNumber("USER");
      derivedVariable0.setNotes("4,q!~y>wb'rStr");
      derivedVariable0.isCleaned();
      derivedVariable0.getFilePath();
      User user1 = new User("IPH=Tj+uH[qB.L^E]'", " h");
      User user2 = new User();
      User user3 = new User();
      User user4 = new User();
      User.detectFieldChanges(user0, user4, user2);
      System.setCurrentTimeMillis(2409L);
      user1.setPostCode(": JA<&PV#x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      User user5 = new User("", "");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      System.setCurrentTimeMillis((-2067947214));
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable2.addValueLabel(valueLabel0);
      derivedVariable2.cloneAttributes(derivedVariable0);
      derivedVariable2.hasSameDisplayName(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
      
      derivedVariable2.getCodeBookNumber();
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.880122670980867
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlias("USER");
      derivedVariable0.setIdentifier((-2067947214));
      derivedVariable0.setName("9F");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user1 = new User("f]=#Rw", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Integer integer0 = new Integer((-2067947214));
      User user2 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable2);
      Predicate.isEqual((Object) macawChangeEvent2);
      assertEquals("-2067947214", derivedVariable0.getDisplayItemIdentifier());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm4);
      derivedVariable1.removeOntologyTerm(ontologyTerm2);
      derivedVariable1.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      predicate0.negate();
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      ValueLabel valueLabel2 = new ValueLabel();
      System.setCurrentTimeMillis(389L);
      User user1 = new User("/,9%8YPT+]", "cX)5-XQ$c+ln");
      System.setCurrentTimeMillis((-1627L));
      User user2 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.7917347232192533
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("a");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) null);
      Predicate<OntologyTerm> predicate1 = predicate0.negate();
      Predicate<OntologyTerm> predicate2 = predicate0.or(predicate1);
      predicate1.and(predicate2);
      arrayList0.removeIf(predicate2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm5);
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.6323696466003557
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnStart("macaw.businessLayer.Va\"iable");
      User user0 = new User("macaw.businessLayer.Va\"iable", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getForm();
      assertEquals("macaw.businessLayer.Va\"iable", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.5923203336382117
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "UNABLE_TO_GET_ORIGINAL_USER";
      rawVariable0.clone();
      rawVariable0.setColumnStart("UNABLE_TO_GET_ORIGINAL_USER");
      User user0 = new User();
      user0.setStatus("UNABLE_TO_GET_ORIGINAL_USER");
      user0.setLastName("+^Ta3^U-qU]c");
      user0.setCounty("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      rawVariable0.setForm("+^Ta3^U-qU]c");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("z[i!");
      rawVariable0.addSupportingDocument(supportingDocument0);
      user0.setIdentifier((-1530));
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCategory();
      rawVariable0.getIdentifier();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus("GTv*");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      Variable.validateFields(rawVariable0);
      assertEquals("UNABLE_TO_GET_ORIGINAL_USER", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) "UE");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Predicate<Object> predicate4 = predicate1.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate4.or(predicate1);
      Predicate<Object> predicate7 = predicate5.or(predicate6);
      Predicate<Object> predicate8 = predicate2.negate();
      predicate4.and(predicate7);
      predicate0.and(predicate1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      predicate8.negate();
      arrayList0.removeIf(predicate3);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.7025789650942826
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("A", derivedVariable0.getName());
      
      ValueLabel valueLabel0 = new ValueLabel();
      User.checkValidUserIDField("A");
      user0.setStatus("UNABLE_TO_CREATE_AVAILABILITY_STATE");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      derivedVariable1.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable4);
      User user1 = new User();
      user1.setPhone("A");
      User user2 = new User();
      user2.setCity("}kIv.bv2BSY*?W");
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      rawVariable1.getAlternativeVariable();
      derivedVariable2.setSourceVariables((ArrayList<Variable>) null);
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("UE", "UE");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user1 = new User("JkrsKUR +'G", "UE");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable1.getQuestionNumber();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.71937583504642
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      User.checkValidUserIDField("A");
      user0.setStatus("A");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.setAvailability("");
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
      derivedVariable1.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable5, derivedVariable0);
      assertEquals("A", derivedVariable0.getName());
      
      user0.setCity("1");
      derivedVariable1.getLabel();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.662546483016078
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("Y:\"j");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("user.userID.label");
      ValueLabel valueLabel2 = new ValueLabel();
      derivedVariable0.form = "<{%kVY?H{@r7G>qR9";
      ValueLabel valueLabel3 = new ValueLabel();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel4 = new ValueLabel();
      System.setCurrentTimeMillis((-1L));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getFilePath();
      User user1 = new User((String) null, "UNABLE_TO_CHECK_VARIABLE_EXISTS");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("<{%kVY?H{@r7G>qR9", derivedVariable0.getForm());
      
      System.setCurrentTimeMillis(1L);
      derivedVariable1.cloneAttributes(derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.getAlternativeVariable();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.3126328398468408
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel2 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) user0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate.isEqual((Object) arrayList0);
      Predicate<OntologyTerm> predicate4 = predicate0.and(predicate3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.removeIf(predicate4);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Integer integer0 = new Integer((-1610612734));
      Predicate.isEqual((Object) integer0);
      Predicate.isEqual((Object) user0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm6);
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      System.setCurrentTimeMillis(1L);
      String string0 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6941436911581897
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user1 = new User("UE", "UE");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument1);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0561336131959296
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList2.addAll((Collection<? extends SupportingDocument>) arrayList0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.add(supportingDocument0);
      arrayList3.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.632197381311811
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("macaw.businessLayer.User", (String) null);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getForm();
      assertEquals("macaw.businessLayer.Va\"iable", rawVariable0.getForm());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlias("USER");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel.validateFields(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.stream();
      arrayList0.add(valueLabel0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getLabel();
      derivedVariable0.isNewRecord();
      derivedVariable1.removeValueLabel(valueLabel1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.getFilePath();
      derivedVariable3.getYear();
      derivedVariable0.getValueLabels();
      assertEquals("USER", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.0209944644642754
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("general.fieldValue.unknown");
      rawVariable0.setQuestionNumber("general.fieldValue.unknown");
      User user0 = new User((String) null, (String) null);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      rawVariable1.getForm();
      assertEquals("general.fieldValue.unknown", rawVariable1.getAlias());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2408656151624737
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlias("USER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      derivedVariable0.setIdentifier((-2067947214));
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("variable.codeBookNumber.label");
      derivedVariable0.getSourceVariables();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      predicate3.test(macawChangeEvent0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.removeIf(predicate0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      arrayList1.trimToSize();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.removeOntologyTerms(arrayList1);
      assertEquals("-2067947214", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>(127);
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.setIdentifier(127);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.stream();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList3.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.7353390710828336
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("UE", "UE");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user1 = new User("JxP%E9", "JxP%E9");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      derivedVariable1.getSourceVariables();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getDisplayName();
      int int0 = derivedVariable1.getIdentifier();
      assertEquals(0, int0);
      
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      derivedVariable0.setIdentifier((-2594));
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias((String) null);
      derivedVariable0.getSourceVariables();
      User user0 = new User("@ [b)CPq$e&*S@>'V", (String) null);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getSupportingDocuments();
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals((-2594), derivedVariable0.getIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.923157117740961
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "ayAWlly`J";
      derivedVariable0.questionNumber = "user.city.saveChanges";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setIdentifier(1067);
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIdentifier(1067);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList0 = derivedVariable2.getValueLabels();
      arrayList0.stream();
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable2.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.isNewRecord();
      derivedVariable2.getAvailability();
      derivedVariable1.removeValueLabel(valueLabel1);
      assertEquals("1067", derivedVariable0.getDisplayItemIdentifier());
      
      derivedVariable3.isCleaned();
      derivedVariable3.getFilePath();
      derivedVariable3.getLabel();
      assertEquals("Unknown", derivedVariable3.getAvailability());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.931649727634578
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEvent0.getVariableOwnerID();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) ontologyTerm0);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate0);
      predicate0.or(predicate4);
      Predicate<Object> predicate5 = predicate1.or(predicate0);
      predicate5.negate();
      ontologyTerm1.clone();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate5);
      predicate6.or(predicate1);
      Predicate.isEqual((Object) ontologyTerm1);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setNotes((String) null);
      derivedVariable0.setAvailability("cX*8rvHx");
      derivedVariable0.getYear();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear("cX*8rvHx");
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getForm();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable2.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.clone();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.6748391070177
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setIdentifier((-2067947214));
      derivedVariable0.setName("9F");
      derivedVariable0.setNotes("USER");
      derivedVariable0.isCleaned();
      User user1 = new User("IPH=Tj+uH[qB.L^E]'", " h");
      User user2 = new User();
      User.detectFieldChanges(user2, user2, user2);
      user1.setStatus("IPH=Tj+uH[qB.L^E]'");
      User user3 = new User();
      User user4 = new User("supportingDocument.title.label", "USER");
      User.detectFieldChanges(user1, user3, user4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getFilePath();
      User user5 = new User("PM2tt;}rf!H=", "wTe`.JCEjXqUBB/");
      Variable.detectFieldChanges(user3, derivedVariable1, derivedVariable1);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.cloneAttributes(derivedVariable1);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable1);
      assertEquals("USER", derivedVariable1.getNotes());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.685797743531747
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("Y:\"j");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      User user0 = new User("C/8+`C^3Qe_!.F*wid<", "F");
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable2);
      User user1 = new User();
      user0.setCity((String) null);
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("Y:\"j", rawVariable0.getLabel());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setColumnEnd("Fe3_");
      Variable.validateFields(rawVariable0);
      rawVariable0.getColumnEnd();
      rawVariable0.getCleaningStatus();
      rawVariable0.getCleaningDescription();
      assertEquals("Fe3_", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("eD}<4)&uu(%&bt&T=K9");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      predicate1.negate();
      Predicate<Object> predicate2 = Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) macawChangeEvent1);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) predicate2);
      Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate6 = predicate0.or(predicate0);
      predicate6.negate();
      predicate0.or(predicate0);
      Integer integer0 = new Integer(1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Predicate.isEqual((Object) derivedVariable1);
      derivedVariable1.setYear((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      predicate5.test(supportingDocument0);
      arrayList0.removeIf(predicate3);
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      arrayList0.trimToSize();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("J*[q?F?Si|;lCfKw}M", "LHA");
      user0.setAddressLine2((String) null);
      UnaryOperator.identity();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      arrayList0.add(supportingDocument0);
      supportingDocument0.setFileName("");
      unaryOperator0.apply(supportingDocument0);
      arrayList0.replaceAll(unaryOperator0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.isNewRecord();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList2);
      rawVariable0.setAlias("general.error.promotesSecurityRisk");
      rawVariable0.getAlias();
      assertEquals("general.error.promotesSecurityRisk", rawVariable0.getAlias());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.9108636168082933
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.setSupportingDocuments(arrayList2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setCoded(true);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.033245652182213
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEvent0.getVariableOwnerID();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) ontologyTerm0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate2.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) predicate2);
      predicate3.negate();
      Integer integer0 = new Integer((-1500));
      Predicate.isEqual((Object) null);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      predicate2.test(ontologyTerm3);
      arrayList0.removeIf(predicate1);
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      arrayList0.trimToSize();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      assertEquals(1, arrayList1.size());
      
      derivedVariable1.getNotes();
      derivedVariable1.getAvailability();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      boolean boolean0 = derivedVariable1.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.9111939941470046
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList2.addAll((Collection<? extends SupportingDocument>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList3.add(supportingDocument1);
      arrayList3.add(supportingDocument0);
      arrayList3.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList3);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User((String) null, "6bbZ Bm*Sgk");
      System.setCurrentTimeMillis(3547L);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.717624218412938
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      User.checkValidUserIDField("A");
      user0.setStatus("A");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      assertEquals("A", derivedVariable0.getName());
      
      derivedVariable1.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable5, derivedVariable5);
      User user1 = new User();
      user1.setCity("}kIv.bv2BSY*?W");
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable2);
      rawVariable1.getAlternativeVariable();
      derivedVariable4.setSourceVariables((ArrayList<Variable>) null);
      assertEquals("Unknown", derivedVariable4.getCategory());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user1 = new User("w/", "w/");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.3092813506787335
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.add(supportingDocument1);
      arrayList2.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setIdentifier((-2004318069));
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      assertFalse(boolean0);
      
      rawVariable0.getValueLabels();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.6631874162148153
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User.checkValidUserIDField("A");
      user0.setStatus("A");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
      derivedVariable1.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable5, derivedVariable5);
      User user1 = new User();
      User user2 = new User();
      derivedVariable5.notes = "A";
      user2.setCity("1");
      Variable.detectFieldChanges(user2, derivedVariable1, derivedVariable5);
      derivedVariable5.removeSourceVariable(derivedVariable2);
      assertEquals("A", derivedVariable5.getNotes());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.620795178839221
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "o(gBHt6O@@*TU=Y$";
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setSourceVariables(arrayList0);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      User user0 = new User("o(gBHt6O@@*TU=Y$", (String) null);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList2);
      derivedVariable0.getYear();
      assertEquals("o(gBHt6O@@*TU=Y$", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.9388014048600133
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlias("USER");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      derivedVariable0.setIdentifier((-2067947214));
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      derivedVariable0.getSourceVariables();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getNotes();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("-2067947214", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail(">Y bBsg");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.codeBookNumber = "C<WHHORS}oa?A'6";
      RawVariable rawVariable2 = new RawVariable();
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      Variable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      assertEquals("C<WHHORS}oa?A'6", rawVariable1.getCodeBookNumber());
      
      rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.7269110076302976
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      User user0 = new User("7%wki4%", "6bbZ Bm*Sgk");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("yu$gtqW[CZ");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.NEW;
      rawVariable0.setAvailability("$Xeq");
      rawVariable0.setQuestionNumber("$Xeq");
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType1);
      rawVariable0.getYear();
      assertEquals("$Xeq", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.0002932271481244
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("UE", "UE");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setLabel("UE");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel2 = new ValueLabel();
      System.setCurrentTimeMillis(2111L);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      arrayList2.add(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable2.containsSupportingDocument(supportingDocument3);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.9512667872451708
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      arrayList4.add(supportingDocument0);
      arrayList4.add(supportingDocument1);
      arrayList3.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument4);
      assertTrue(boolean0);
      
      SupportingDocument supportingDocument5 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument5);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(boolean1);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.821978374837229
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setQuestionNumber("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList2.addAll((Collection<? extends SupportingDocument>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.add(supportingDocument2);
      arrayList2.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.cloneAttributes(rawVariable0);
      derivedVariable2.removeSupportingDocuments(arrayList1);
      derivedVariable2.getSupportingDocuments();
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCleaned());
      
      derivedVariable2.createVariableSummary();
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("Y:\"j");
      User user1 = new User("Y:\"j", "Y:\"j");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Y:\"j", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      User user1 = new User("|/", (String) null);
      derivedVariable0.removeSupportingDocument((SupportingDocument) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList2.add((SupportingDocument) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("=6wO;x");
      LinkedList<SupportingDocument> linkedList0 = new LinkedList<SupportingDocument>();
      arrayList1.addAll((Collection<? extends SupportingDocument>) linkedList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      rawVariable1.addSupportingDocuments(arrayList2);
      derivedVariable0.setSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.6891045340659714
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      User.checkValidUserIDField("A");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      User user1 = new User("xIlviMFu\"Kt@1", "A");
      derivedVariable0.cloneAttributes(derivedVariable1);
      assertEquals("A", derivedVariable1.getName());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable2, derivedVariable4);
      User user3 = new User();
      user1.setCity("variable.columnEnd.label");
      Variable.detectFieldChanges(user1, derivedVariable4, derivedVariable3);
      rawVariable0.getAlternativeVariable();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.676163160658848
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      System.setCurrentTimeMillis(27L);
      User user1 = new User("3W|trGr~Ms:D.zv", ",N\"");
      User.checkValidUserIDField("");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, derivedVariable0);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("A", derivedVariable0.getName());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable.validateFields(rawVariable1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.7400292625018015
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("UE", "UE");
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user1 = new User("JxP%E9", "JxP%E9");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(derivedVariable0.isNewRecord());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocuments(arrayList0);
      derivedVariable1.getSupportingDocuments();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable1.clone();
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.1499732228295376
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setName("A");
      user0.setEmail("UNABLE_TO_CREATE_CHANGE_EVENT");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable1);
      assertEquals("A", derivedVariable0.getName());
      
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAvailability("~}Dv76P");
      rawVariable0.questionNumber = "fNNdrJh";
      rawVariable0.createVariableSummary();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "variable.codeBookNumber.label";
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      rawVariable0.setAvailability("variable.codeBookNumber.label");
      rawVariable0.setLabel("variable.codeBookNumber.label");
      rawVariable0.createVariableSummary();
      rawVariable0.setColumnEnd("variable.codeBookNumber.label");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.662800354685759
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("R>i\"!F)>6LH");
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertEquals("R>i\"!F)>6LH", rawVariable0.getForm());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("I");
      valueLabel1.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("I");
      rawVariable0.createVariableSummary();
      assertEquals("I", rawVariable0.getNotes());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.9927407212717037
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("UE", "UE");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      supportingDocument0.setFilePath(">s");
      arrayList2.addAll((Collection<? extends SupportingDocument>) arrayList1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCategory("b");
      rawVariable0.setColumnStart((String) null);
      rawVariable1.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle(">s");
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.747174004791234
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.setForm((String) null);
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable1.setFilePath("q{89XwARcwoK");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      arrayList0.parallelStream();
      rawVariable1.removeSupportingDocuments(arrayList0);
      rawVariable1.getYear();
      rawVariable0.getCodeBookNumber();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      // Undeclared exception!
      try { 
        rawVariable1.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.containsSourceVariable(derivedVariable0);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("macaw.businessLayer.Va\"iable");
      assertEquals("macaw.businessLayer.Va\"iable", derivedVariable0.getForm());
      
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      predicate0.test(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      arrayList0.removeIf(predicate0);
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      arrayList0.trimToSize();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "[U";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("#");
      rawVariable0.setColumnStart("8&<TM<5RS-B[8g]t");
      rawVariable0.setCoded(true);
      rawVariable0.codeBookNumber = "8&<TM<5RS-B[8g]t";
      derivedVariable0.removeSourceVariable(rawVariable0);
      boolean boolean0 = rawVariable0.isCoded();
      assertEquals("8&<TM<5RS-B[8g]t", rawVariable0.getColumnStart());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.columnStart = "+^Ta3^U-qU]c";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("", derivedVariable1.getLabel());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getFilePath());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("+^Ta3^U-qU]c", derivedVariable1.getColumnStart());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.7272244703254174
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      user0.setEmail(">Y bBsg");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.codeBookNumber = "C<WHHORS}oa?A'6";
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable2);
      User user1 = new User();
      user1.setCity("C<WHHORS}oa?A'6");
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable0);
      rawVariable1.getAlternativeVariable();
      assertEquals("C<WHHORS}oa?A'6", rawVariable1.getCodeBookNumber());
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setSourceVariables((ArrayList<Variable>) null);
      String string0 = derivedVariable3.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.8816224050082146
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("F");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable1.setFilePath("F");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.6636433473095735
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.columnEnd = "P(A4yIQn{`(";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      User.checkValidUserIDField("variable.alias.label");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.getAlternativeVariable();
      assertEquals("P(A4yIQn{`(", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.7873780055103263
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      arrayList1.add(supportingDocument0);
      derivedVariable0.addValueLabel((ValueLabel) null);
      arrayList0.addAll((Collection<? extends SupportingDocument>) arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable0.setSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel1 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Object object0 = new Object();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate1.test(ontologyTerm1);
      predicate1.or(predicate2);
      predicate2.test((Object) null);
      Predicate<Object> predicate3 = predicate1.negate();
      predicate2.and(predicate2);
      predicate0.negate();
      Predicate.isEqual((Object) predicate3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      arrayList0.removeIf(predicate4);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm4);
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      System.setCurrentTimeMillis((-1332L));
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Object object0 = ontologyTerm0.clone();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) object0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEvent0.getVariableOwnerID();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) ontologyTerm0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate2.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) predicate2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.setNotes("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE");
      Predicate<Object> predicate4 = predicate3.negate();
      predicate4.or(predicate3);
      Integer integer0 = new Integer(3);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      Predicate.isEqual((Object) ontologyTerm2);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEvent1.setDate((Date) null);
      predicate1.test(macawChangeEvent1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.removeIf(predicate4);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm2);
      assertEquals("UNABLE_TO_CHECK_CLEANING_STATE_DUPLICATE", derivedVariable1.getNotes());
      
      arrayList1.trimToSize();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList1);
      derivedVariable2.updateOntologyTerm(ontologyTerm3);
      assertFalse(derivedVariable2.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAvailability("GTv*");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getCleaningDescription();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setOntologyName("");
      derivedVariable0.codeBookNumber = "o(gBHt6O@@*TU=Y$";
      ontologyTerm0.setIdentifier((-1514));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "GTv*");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate<OntologyTerm> predicate4 = Predicate.isEqual((Object) "");
      Predicate<OntologyTerm> predicate5 = predicate4.and(predicate3);
      Predicate<OntologyTerm> predicate6 = predicate5.or(predicate4);
      predicate6.and(predicate4);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeIf(predicate1);
      assertTrue(arrayList1.equals((Object)arrayList0));
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable0.removeOntologyTerms(arrayList1);
      assertEquals("GTv*", derivedVariable0.getAvailability());
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.9111939941470046
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setCleaningStatus("T6)#J?^JW@/3");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      arrayList2.addAll((Collection<? extends SupportingDocument>) arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      arrayList3.add(supportingDocument0);
      arrayList3.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.7752772339746286
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("a");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ValueLabel valueLabel2 = new ValueLabel();
      Predicate<OntologyTerm> predicate0 = Predicate.isEqual((Object) null);
      Predicate<OntologyTerm> predicate1 = predicate0.negate();
      Predicate<OntologyTerm> predicate2 = predicate0.or(predicate1);
      predicate1.and(predicate2);
      arrayList0.removeIf(predicate2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm5);
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.6634768436297365
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      arrayList0.add(supportingDocument2);
      arrayList1.addAll((Collection<? extends SupportingDocument>) arrayList2);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      arrayList4.add(supportingDocument2);
      arrayList3.add(supportingDocument2);
      derivedVariable0.setSupportingDocuments(arrayList4);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument5);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel3, valueLabel2);
      valueLabel3.setValue("");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.getYear();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.747103882725531
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.setSupportingDocuments(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>(arrayList0);
      rawVariable0.addOntologyTerms(arrayList2);
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("kIp+KY~2GeAybjJi;^:");
      derivedVariable0.columnStart = "";
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList3);
      derivedVariable0.setAvailability("");
      rawVariable0.setNotes("");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      rawVariable0.clone();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.749133660274397
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addOntologyTerms(arrayList0);
      User user0 = new User("user.city.saveChanges", "user.city.saveChanges");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.notes = "variable.name.label";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Integer integer0 = new Integer((-1625127504));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) rawVariable0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate1.or(predicate2);
      Integer integer1 = new Integer((-1625127504));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      Predicate.isEqual((Object) ontologyTerm2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      predicate4.test(derivedVariable2);
      arrayList0.removeIf(predicate3);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      assertEquals("variable.name.label", derivedVariable0.getNotes());
      
      arrayList1.trimToSize();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("Y:\"j");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
}
