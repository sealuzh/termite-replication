/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 21:44:13 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte)0;
      byte byte0 = (byte) (-110);
      byteArray0[3] = (byte) (-110);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "ull";
      Object[] objectArray0 = new Object[15];
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("?l", (Object) null, (Object) null, (Object) "?l");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = object0;
      objectArray0[1] = object2;
      objectArray0[2] = object0;
      objectArray0[3] = object2;
      objectArray0[4] = object3;
      objectArray0[5] = object3;
      objectArray0[6] = object2;
      objectArray0[7] = object3;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard", object3);
      messageFormatter0.myLastException = (Throwable) applicationException0;
      messageFormatter0.temp();
      messageFormatter0.getLastException();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("~)Zy1*jHL", "~)Zy1*jHL");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9593337382266454
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("zZ~VY<");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[6];
      MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      objectArray0[0] = (Object) "hP]";
      messageFormatter0.formatMessage("zZ~VY<", objectArray0);
      LinkedList<PipedInputStream> linkedList0 = new LinkedList<PipedInputStream>();
      Integer integer0 = new Integer((-3660));
      LinkedList<String> linkedList1 = new LinkedList<String>();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      linkedList1.replaceAll(unaryOperator0);
      assertEquals(0, linkedList1.size());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "u5`Jh!t&~K(a#", pipedInputStream1, pipedInputStream1);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) applicationException0;
      objectArray0[1] = (Object) applicationException0;
      objectArray0[2] = (Object) pipedInputStream1;
      objectArray0[3] = (Object) "u5`Jh!t&~K(a#";
      objectArray0[4] = (Object) dataInputStream0;
      objectArray0[5] = (Object) pipedOutputStream0;
      applicationException0.initialize("i*VK[x_5ba", objectArray0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "ON9");
      String string0 = "zZ~VY<";
      StringReader stringReader0 = new StringReader("zZ~VY<");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("qy8", applicationException1);
      linkedList0.add(messageFormatter_LoadBundleError0);
      messageFormatter1.createLoadException(linkedList0);
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.UK;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add((String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8885995049191862
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      pipedOutputStream0.write((-1382));
      pipedOutputStream0.flush();
      pipedInputStream0.markSupported();
      pipedOutputStream0.flush();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) pipedInputStream0;
      messageFormatter0.formatMessage("1n`PRelT", objectArray0, (ResourceBundle) propertyResourceBundle0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("$c %YR");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-110);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = "ull";
      Object[] objectArray0 = new Object[15];
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("ull", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip((-1L));
      pipedOutputStream0.flush();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "u5`Jh!t&~K(a#", pipedInputStream2, "u5`Jh!t&~K(a#");
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) pipedInputStream1;
      Object object0 = new Object();
      objectArray0[1] = object0;
      Object object1 = new Object();
      objectArray0[2] = object1;
      applicationException0.initialize("u5`Jh!t&~K(a#", objectArray0);
      String string0 = "ON9";
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "ON9");
      StringReader stringReader0 = new StringReader("i*VK[x_5ba");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      try { 
        messageFormatter0.formatMessage("Q0ov!Oq<.?A'R", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Locale locale0 = Locale.CANADA_FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list2, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list2, locale_FilteringMode3);
      try { 
        messageFormatter0.initializeResourceBundle(list0, (List<String>) null, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: null; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte) (-29);
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-104);
      byteArray0[8] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), (-286));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      pushbackInputStream0.markSupported();
      ApplicationException applicationException0 = new ApplicationException("com.lts.application.errors.optionSwitchNotAtEnd", pushbackInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", applicationException0);
      linkedList0.push(messageFormatter_LoadBundleError0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.lts.application.international.MessageFormatter$LoadBundleError cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<PropertyResourceBundle> linkedList0 = new LinkedList<PropertyResourceBundle>();
      String string0 = "/";
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      StringReader stringReader1 = new StringReader("/");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string1 = "null";
      messageFormatter0.formatMessage("null", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.setClassAssertionStatus((String) null, true);
      classLoader1.setPackageAssertionStatus("", true);
      classLoader1.setClassAssertionStatus("/", true);
      ClassLoader.getSystemClassLoader();
      boolean boolean0 = false;
      try { 
        messageFormatter0.getMessage("/", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator0);
      unaryOperator0.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator.identity();
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function0);
      UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator2);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("'N");
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "[;g_VM'!96p70rA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = new Locale("h}Y80^=PQ", "h}Y80^=PQ", "h}Y80^=PQ");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      locale0.getScript();
      locale0.getDisplayLanguage();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "critcal.error.unknown");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer(2723);
      integerArray0[1] = integer0;
      Integer integer1 = new Integer((-339));
      integerArray0[2] = integer1;
      Integer integer2 = new Integer(2723);
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator1.apply("");
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator0);
      Integer integer0 = new Integer((-1994091956));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Integer integer0 = new Integer((-2474));
      MockThrowable mockThrowable0 = new MockThrowable("com.lts.LTSRuntimeException");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.formatMessage("resources.messages.standard", objectArray0, (ResourceBundle) propertyResourceBundle0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("resources.messages.standard", false);
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus("J.?8Q21J|BCl", false);
      assertSame(classLoader0, classLoader1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("MWbr3l`qf/ms");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("", "");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "", "", applicationException0);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "");
      MockThrowable mockThrowable0 = new MockThrowable("", applicationException2);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("", applicationException1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException3 = new ApplicationException("", "");
      MockThrowable mockThrowable1 = new MockThrowable(applicationException3);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[1] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = new Locale("] = ", "2^C6{Wiz KY,ZBNc", "Rl7gwz{O");
      Locale locale1 = Locale.TAIWAN;
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      Locale locale2 = Locale.FRENCH;
      locale0.getDisplayLanguage();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list2, locale_FilteringMode2);
      List<String> list3 = ResourceBundle.Control.FORMAT_PROPERTIES;
      List list4 = messageFormatter0.loadCriticalBundles();
      assertTrue(list4.isEmpty());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Function.identity();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super String, ? extends String>) unaryOperator2);
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      unaryOperator4.apply("XZ_");
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      Function<String, String> function0 = unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator5);
      unaryOperator4.compose((Function<? super String, ? extends String>) function0);
      UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator5);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("LRwt:f2mFye)ShW~y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<String, String> function1 = unaryOperator0.compose((Function<? super String, ? extends String>) function0);
      unaryOperator0.compose((Function<? super String, ? extends String>) function1);
      unaryOperator0.compose((Function<? super String, ? extends String>) function1);
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator2);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setClassAssertionStatus("'J1EN!", false);
      messageFormatter0.getLastException();
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, "resources.messages.standard");
      MockThrowable mockThrowable0 = new MockThrowable("fy_eU2,S]GLs%,)", applicationException0);
      MockThrowable mockThrowable1 = new MockThrowable(applicationException0);
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader2 = classLoader1.getParent();
      classLoader2.setClassAssertionStatus("fy_eU2,S]GLs%,)", false);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      classLoader3.setPackageAssertionStatus("'J1EN!", true);
      assertSame(classLoader3, classLoader1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/Delete");
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.apply("com.lts.application.errors.repository.writing");
      unaryOperator0.compose((Function<? super String, ? extends String>) unaryOperator1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      unaryOperator0.apply((String) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Integer integer0 = new Integer((-2070787801));
      Integer integer1 = new Integer((-350));
      Integer integer2 = new Integer(2147483634);
      Integer integer3 = new Integer(2732);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object object3 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("app.repository.file", object3, object1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(2);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) pipedInputStream0, (Object) "", (Object) pipedInputStream1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-123);
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte) (-123);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("5B", "x3osM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Locale locale0 = Locale.CHINA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList0, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      locale0.getDisplayLanguage();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0, locale_FilteringMode2);
      List<String> list2 = ResourceBundle.Control.FORMAT_PROPERTIES;
      try { 
        messageFormatter0.initializeResourceBundle(list1, list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator1);
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator1);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      Function<Integer, String> function0 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      Function<String, PropertyResourceBundle> function1 = (Function<String, PropertyResourceBundle>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator5.andThen((Function<? super String, ? extends PropertyResourceBundle>) function1);
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator0);
      unaryOperator4.compose((Function<? super String, ? extends String>) unaryOperator5);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.CHINESE;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) null, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator1);
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator1);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator4.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      unaryOperator3.compose((Function<? super String, ? extends String>) unaryOperator1);
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator5);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("6s5^FA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = "com.lts.event.ListenerHelper";
      String string1 = "app.files.lastFile";
      MockThrowable mockThrowable0 = new MockThrowable("app.files.lastFile");
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "com.lts.event.ListenerHelper");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator0);
      unaryOperator0.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("'N");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      List list0 = messageFormatter0.listResources("/5", classLoader0);
      assertTrue(list0.isEmpty());
  }
}
