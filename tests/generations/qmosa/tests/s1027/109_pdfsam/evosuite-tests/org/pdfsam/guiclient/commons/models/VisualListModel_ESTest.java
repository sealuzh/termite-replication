/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 19:14:15 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.RenderingHints;
import java.awt.color.ICC_ColorSpace;
import java.awt.color.ICC_Profile;
import java.awt.event.ActionEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.awt.image.renderable.ParameterBlock;
import java.beans.PropertyChangeListener;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SyncFailedException;
import java.text.AttributedCharacterIterator;
import java.text.Format;
import java.time.Month;
import java.time.temporal.Temporal;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.event.ListDataListener;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.4904032277870636
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add(0, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      stack2.listIterator();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack2.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      stack2.forEach(consumer0);
      stack2.ensureCapacity(1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = visualPageListItemArray0[2];
      visualPageListItemArray0[6] = visualPageListItemArray0[4];
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.moveUpIndex(78);
      visualListModel0.elementChanged(visualPageListItemArray0[4]);
      visualListModel0.moveDownIndex(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 78;
      intArray0[2] = 78;
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 1;
      intArray0[6] = 78;
      intArray0[7] = 0;
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndex(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.252108628662699
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack1 = new Stack<Object>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Stack<Integer> stack2 = new Stack<Integer>();
      Stack<Integer> stack3 = new Stack<Integer>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack2, stack3);
      defaultTableModel0.getColumnClass(4654);
      Stack<DefaultTableModel> stack4 = new Stack<DefaultTableModel>();
      stack4.push(defaultTableModel0);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel1);
      Class<DefaultEditorKit.PasteAction> class0 = DefaultEditorKit.PasteAction.class;
      defaultTableModel0.getListeners(class0);
      defaultTableModel1.getRowCount();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      JTable jTable1 = new JTable(vector0, stack3);
      defaultTableModel1.removeTableModelListener(jTable1);
      defaultTableModel1.fireTableStructureChanged();
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(0, 704);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to org.pdfsam.guiclient.dto.VisualPageListItem
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key1);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "2;M'u9frq00dr", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9495745057165774
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int0 = 380;
      stack0.setSize(380);
      int[] intArray0 = new int[8];
      intArray0[0] = 10;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      arrayDeque0.retainAll(stack0);
      ListDataListener listDataListener0 = null;
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.888599504919186
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.listIterator();
      stack0.setSize(1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      KeyStroke.getKeyStroke("");
      KeyStroke.getKeyStroke(2456, 255, true);
      stack0.remove((Object) null);
      stack1.add((VisualPageListItem) null);
      stack1.ensureCapacity((-1034));
      visualListModel0.removeElements(1, 1, true);
      visualListModel0.getSize();
      visualListModel0.clearData();
      AffineTransform affineTransform0 = new AffineTransform();
      HashMap<RenderingHints.Key, InputStream> hashMap0 = new HashMap<RenderingHints.Key, InputStream>(1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte) (-113);
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)53;
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      hashMap0.put((RenderingHints.Key) null, dataInputStream0);
      affineTransform0.invert();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      // Undeclared exception!
      try { 
        renderingHints0.put(stack0, stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Stack cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6332004508871008
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(3013);
      int[] intArray0 = new int[3];
      intArray0[0] = 360;
      intArray0[1] = 360;
      intArray0[2] = (-767);
      visualListModel0.rotateClockwiseElements(intArray0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -767
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 19;
      int int1 = (-1);
      boolean boolean0 = false;
      Vector<VisualPageListItem> vector0 = null;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(19, (-1), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(0, (VisualPageListItem) null);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      stack0.setSize(360);
      visualListModel0.addAllElements(360, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      KeyStroke.getKeyStroke("");
      stack2.remove((Object) null);
      stack2.ensureCapacity((-1034));
      visualListModel0.moveUpIndex(360);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.888599504919186
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(360);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      KeyStroke.getKeyStroke("VIvXo(rHCa");
      KeyStroke.getKeyStroke('5');
      KeyStroke.getKeyStroke("VIvXo(rHCa");
      stack0.remove((Object) null);
      Boolean boolean0 = new Boolean(true);
      stack0.ensureCapacity((-1034));
      visualListModel0.removeElements(1, 360, true);
      visualListModel0.getSize();
      visualListModel0.clearData();
      AffineTransform affineTransform0 = new AffineTransform();
      HashMap<RenderingHints.Key, InputStream> hashMap0 = new HashMap<RenderingHints.Key, InputStream>(1);
      byte[] byteArray0 = new byte[6];
      affineTransform0.scale(1, 1);
      affineTransform0.rotate(0.0, 1.0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2232, 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2232);
      affineTransform0.invert();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      // Undeclared exception!
      try { 
        renderingHints0.put(dataInputStream0, affineTransform0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.DataInputStream cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3341032213076938
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(23);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(23);
      int[] intArray0 = new int[8];
      stack0.add((VisualPageListItem) null);
      intArray0[0] = 23;
      intArray0[2] = 23;
      intArray0[3] = 23;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[4] = 23;
      intArray0[5] = 23;
      intArray0[6] = 23;
      intArray0[7] = 23;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Stack<Integer> stack1 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      visualListModel0.reverseElements(intArray0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction0.addPropertyChangeListener((PropertyChangeListener) null);
      defaultComboBoxModel0.setSelectedItem(defaultEditorKit_PasteAction0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      integerArray0[7] = integer7;
      Integer integer8 = JLayeredPane.MODAL_LAYER;
      integerArray0[8] = integer8;
      stack0.toArray(integerArray0);
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Stack<Integer> stack1 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Integer integer9 = new Integer(1366);
      visualListModel0.removeElementAt(2, true);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.092337566124105
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Stack<Integer> stack1 = new Stack<Integer>();
      stack1.add(integer0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack1);
      Object object0 = new Object();
      stack1.add((Integer) 1366);
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>(10);
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector1);
      Vector<Object> vector2 = parameterBlock0.getSources();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector2);
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      Object object1 = new Object();
      defaultComboBoxModel0.setSelectedItem(object1);
      visualListModel0.getListDataListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(stack1);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel1);
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      int[] intArray2 = new int[1];
      intArray2[0] = (-19);
      try { 
        visualListModel0.removeElements(intArray2, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -19
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0447969209589383
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      EvoSuiteFile evoSuiteFile0 = null;
      stack0.add((VisualPageListItem) null);
      stack0.remove(1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      String string0 = "%7+]`AT$,LU";
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2291128987525686
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack1 = new Stack<Object>();
      Stack<Object> stack2 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack1);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      stack2.parallelStream();
      ParameterBlock parameterBlock1 = new ParameterBlock(stack2, vector0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      stack1.add((Object) attributedCharacterIterator_Attribute0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      stack1.pop();
      stack1.add((Object) sunHints_LCDContrastKey0);
      parameterBlock0.add((byte) (-1));
      ParameterBlock parameterBlock2 = new ParameterBlock(stack1, stack2);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Stack<Object> stack3 = new Stack<Object>();
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0);
      ParameterBlock parameterBlock4 = new ParameterBlock(stack2);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4497927527284427
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.ensureCapacity(1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      visualListModel0.moveDownIndex(1);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253033464521958
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.getListDataListeners();
      String string0 = "zan~b";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zan~b");
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.updateElementAt(360, (VisualPageListItem) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 360;
      intArray0[1] = 360;
      intArray0[2] = 14;
      intArray0[3] = 360;
      intArray0[4] = 360;
      intArray0[5] = 360;
      intArray0[6] = (-2553);
      intArray0[7] = 360;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity((-2833));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 360
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1331337395597156
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      String string0 = "znb";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "znb");
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0596183237189774
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack1 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack1);
      ParameterBlock parameterBlock1 = new ParameterBlock(stack1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack1.forEach(consumer0);
      visualListModel0.moveDownIndexes(intArray0);
      Vector<Object> vector0 = new Vector<Object>();
      Stack<Object> stack2 = new Stack<Object>();
      vector0.add((Object) stack1);
      Vector<Object> vector1 = new Vector<Object>();
      stack1.add((Object) stack2);
      ParameterBlock parameterBlock2 = new ParameterBlock();
      ParameterBlock parameterBlock3 = new ParameterBlock(vector1, vector0);
      parameterBlock3.setParameters(stack2);
      parameterBlock3.getParameters();
      int[] intArray1 = new int[5];
      intArray1[0] = 1146;
      intArray1[1] = (-583);
      intArray1[2] = 3;
      intArray1[3] = 381;
      intArray1[4] = (-1609);
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1145
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7490906203903507
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(15);
      int[] intArray0 = new int[8];
      intArray0[0] = 15;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 15
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6888133206245313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(380);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      arrayDeque0.retainAll(stack0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      String string0 = "KX";
      Float float0 = new Float((double) 1);
      float[] floatArray0 = new float[6];
      floatArray0[0] = 1658.7F;
      floatArray0[1] = (float) 1;
      floatArray0[2] = (float) 1;
      floatArray0[3] = (float) 1;
      floatArray0[4] = (-573.172F);
      floatArray0[5] = (float) 1;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float(417.0F, 1.0F, (-573.172F), 0.0F);
      AffineTransform.getTranslateInstance((-573.172F), 1.0F);
      Float float1 = null;
      try { 
        ICC_Profile.getInstance(").");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Cannot open file ).
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3074153952359477
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      visualListModel0.reverseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      Month[] monthArray0 = new Month[0];
      stack1.toArray(monthArray0);
      stack0.add((VisualPageListItem) null);
      stack1.ensureCapacity(6);
      stack1.ensureCapacity((-96));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.moveUpIndexes(intArray0);
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4337793456508745
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(23);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(23);
      int[] intArray0 = new int[4];
      intArray0[0] = 8;
      intArray0[1] = 23;
      intArray0[2] = 23;
      intArray0[3] = 23;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      Stack<Integer> stack2 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      stack2.add(integer0);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack2);
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>();
      defaultComboBoxModel0.getListDataListeners();
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel2 = new DefaultComboBoxModel<Integer>(vector0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 24
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4092847159802613
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack1 = new Stack<Object>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Stack<Integer> stack2 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      Object object0 = new Object();
      stack2.add(integer0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) stack2);
      defaultComboBoxModel0.removeAllElements();
      Vector<Object> vector1 = new Vector<Object>(10);
      defaultComboBoxModel0.getSelectedItem();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector1, vector0);
      parameterBlock0.getSources();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector1);
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      Object object1 = new Object();
      defaultComboBoxModel0.setSelectedItem(integer0);
      visualListModel0.getListDataListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(stack2);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel1);
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2423100046004967
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack1 = new Stack<Object>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Stack<Integer> stack2 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      Object object0 = new Object();
      stack2.add(integer0);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.add((Object) stack2);
      defaultComboBoxModel0.removeAllElements();
      Vector<Object> vector1 = new Vector<Object>(10);
      defaultComboBoxModel0.getSelectedItem();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector1, vector0);
      parameterBlock0.getSources();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector1);
      defaultComboBoxModel0.removeListDataListener(jComboBox0);
      Object object1 = new Object();
      defaultComboBoxModel0.setSelectedItem(integer0);
      visualListModel0.getListDataListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel1 = new DefaultComboBoxModel<Integer>(stack2);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel1);
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.stream();
      Boolean boolean0 = new Boolean(true);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<VisualPageListItem> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.apply((VisualPageListItem) null);
      unaryOperator1.apply((VisualPageListItem) null);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Temporal> function0 = (Function<Object, Temporal>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator2.andThen((Function<? super Object, ? extends Temporal>) function0);
      Function<Object, VisualPageListItem> function1 = (Function<Object, VisualPageListItem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, VisualPageListItem> function2 = unaryOperator0.compose((Function<? super Object, ? extends VisualPageListItem>) function1);
      Function<Object, VisualPageListItem> function3 = unaryOperator2.andThen((Function<? super Object, ? extends VisualPageListItem>) function2);
      Function<Object, Integer> function4 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.compose((Function<? super Object, ? extends VisualPageListItem>) function3);
      unaryOperator1.apply((VisualPageListItem) null);
      UnaryOperator.identity();
      byte[] byteArray0 = new byte[0];
      UnaryOperator.identity();
      UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super VisualPageListItem, ?>) unaryOperator1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack1.replaceAll(unaryOperator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9862458545686053
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[26];
      intArray0[1] = 1453;
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      intArray0[18] = 1453;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(1453);
      int[] intArray1 = new int[7];
      intArray1[0] = 1453;
      intArray1[1] = 1453;
      intArray1[2] = 1453;
      intArray1[3] = 1453;
      intArray1[4] = 1453;
      intArray1[5] = 1453;
      intArray1[6] = 1453;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1453
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.181731920758287
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      integerArray0[6] = integer6;
      Integer integer7 = JLayeredPane.PALETTE_LAYER;
      integerArray0[7] = integer7;
      Integer integer8 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[8] = integer8;
      stack0.toArray(integerArray0);
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Stack<Integer> stack1 = new Stack<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(stack1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Integer integer9 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(2, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.3080570415126394
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      visualListModel0.reverseElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Object> stack1 = new Stack<Object>();
      Stack<Object> stack2 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack2);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      stack2.parallelStream();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      stack1.add((Object) sunHints_LCDContrastKey0);
      vector0.removeElement(stack1);
      parameterBlock0.add((byte)3);
      int int0 = 34;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Stack<Object> stack3 = new Stack<Object>();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0);
      ParameterBlock parameterBlock3 = new ParameterBlock(stack2);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9226853935616632
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1180895882351156
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<Format.Field> stack0 = new Stack<Format.Field>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) arrayDeque0);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3152097116596204
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = (-1);
      visualListModel0.getElements();
      intArray0[1] = (-1102);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.clearData();
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) stack0);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<VisualPageListItem> predicate2 = predicate0.and(predicate1);
      Predicate<VisualPageListItem> predicate3 = predicate2.or(predicate0);
      Predicate<VisualPageListItem> predicate4 = predicate3.negate();
      stack0.removeIf(predicate4);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      boolean boolean0 = new Boolean(true);
      stack1.ensureCapacity(1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[4] = visualPageListItemArray0[1];
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.moveUpIndex(1);
      visualListModel0.elementChanged(visualPageListItemArray0[0]);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.stream();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TreeSet<Object> treeSet0 = new TreeSet<Object>(stack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<VisualPageListItem> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.apply((VisualPageListItem) null);
      unaryOperator0.compose((Function<? super VisualPageListItem, ? extends VisualPageListItem>) unaryOperator1);
      UnaryOperator.identity();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack1.replaceAll(unaryOperator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.iterator();
      visualListModel0.prependAllElements(stack0);
      assertEquals(2, stack0.size());
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.237966169824137
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int int0 = 1366;
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      Stack<Integer> stack1 = new Stack<Integer>();
      Boolean boolean0 = new Boolean(true);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      Month[] monthArray0 = new Month[4];
      Month month0 = Month.NOVEMBER;
      monthArray0[0] = month0;
      Month month1 = Month.DECEMBER;
      monthArray0[1] = month1;
      Month month2 = Month.SEPTEMBER;
      monthArray0[2] = month2;
      Month month3 = Month.NOVEMBER;
      monthArray0[3] = month3;
      arrayDeque0.toArray(monthArray0);
      BufferedImage bufferedImage0 = null;
      // Undeclared exception!
      try { 
        arrayDeque0.offerLast(visualPageListItemArray0[3]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(23);
      int[] intArray0 = new int[8];
      intArray0[2] = 23;
      intArray0[3] = 23;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[4] = 23;
      intArray0[5] = 23;
      intArray0[6] = 23;
      intArray0[7] = 23;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 23
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 6);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) stack0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) defaultTableModel0;
      Object object0 = new Object();
      Object[] objectArray1 = stack0.toArray(objectArray0);
      Object[][] objectArray2 = new Object[9][2];
      objectArray2[0] = objectArray0;
      objectArray2[1] = objectArray1;
      objectArray2[2] = objectArray1;
      objectArray2[6] = objectArray0;
      objectArray2[5] = objectArray0;
      objectArray2[6] = objectArray1;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) stack0;
      objectArray3[1] = (Object) defaultTableModel0;
      objectArray2[7] = objectArray3;
      objectArray2[8] = objectArray1;
      Object[] objectArray4 = new Object[9];
      objectArray4[0] = object0;
      objectArray4[1] = (Object) integer0;
      objectArray4[2] = object0;
      objectArray4[3] = (Object) vector0;
      objectArray4[4] = (Object) visualListModel0;
      objectArray4[5] = (Object) stack0;
      objectArray4[6] = (Object) stack0;
      objectArray4[7] = (Object) stack0;
      objectArray4[8] = (Object) defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray2, objectArray4);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.setSize(6);
      visualListModel0.setData(vector1);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(330);
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>(stack1);
      arrayDeque0.retainAll(stack0);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.391924549260069
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.clone();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.ensureCapacity(1366);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[9];
      intArray1[0] = 1366;
      intArray1[1] = 1366;
      intArray1[2] = (-13);
      intArray1[3] = 1366;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      intArray1[7] = 989;
      intArray1[8] = 1366;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertEquals(10, visualListModel0.getSize());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.stream();
      Boolean boolean0 = new Boolean(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<VisualPageListItem> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.apply((VisualPageListItem) null);
      unaryOperator1.apply((VisualPageListItem) null);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Temporal> function0 = (Function<Object, Temporal>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator2.andThen((Function<? super Object, ? extends Temporal>) function0);
      Function<Object, VisualPageListItem> function1 = (Function<Object, VisualPageListItem>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, VisualPageListItem> function2 = unaryOperator0.compose((Function<? super Object, ? extends VisualPageListItem>) function1);
      Function<Object, VisualPageListItem> function3 = unaryOperator2.andThen((Function<? super Object, ? extends VisualPageListItem>) function2);
      unaryOperator1.compose((Function<? super Object, ? extends VisualPageListItem>) function3);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ql");
      unaryOperator1.apply((VisualPageListItem) null);
      UnaryOperator.identity();
      byte[] byteArray0 = new byte[0];
      UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super VisualPageListItem, ?>) unaryOperator1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack1.replaceAll(unaryOperator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addElement((VisualPageListItem) null);
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[22];
      intArray0[6] = 1453;
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      intArray0[18] = 1453;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Setting category factory to [");
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int[] intArray1 = new int[0];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Setting category factory to [");
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.reverseElements(intArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray0 = new byte[3];
      mockFileInputStream0.markSupported();
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)3;
      mockFileInputStream0.read(byteArray0, (int) (byte)3, (-1076));
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer integer6 = new Integer((-1264));
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned(39, (-232));
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer10 = JLayeredPane.PALETTE_LAYER;
      Integer integer11 = JLayeredPane.DEFAULT_LAYER;
      Integer integer12 = JLayeredPane.MODAL_LAYER;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer13 = new Integer((-5043));
      ParameterBlock parameterBlock0 = new ParameterBlock();
      int[] intArray1 = new int[0];
      visualListModel0.moveUpIndexes(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned(1365, 30000);
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(2082);
      Integer integer4 = new Integer(2577);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.min(30000, 362);
      Integer integer5 = new Integer(362);
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Integer.toUnsignedLong(873);
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer integer8 = new Integer(2692);
      Integer.divideUnsigned(1905, 2082);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(39);
      Integer.divideUnsigned((-1267), 29985);
      Integer.divideUnsigned((-1128), 10016);
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer integer8 = JLayeredPane.POPUP_LAYER;
      Integer.compareUnsigned(39, (-232));
      Integer.divideUnsigned(143237, (-2137));
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer11 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.toUnsignedString(2020);
      Integer integer12 = JLayeredPane.DEFAULT_LAYER;
      Integer integer13 = JLayeredPane.MODAL_LAYER;
      Integer.compare((int) integer3, (-2466));
      Integer.sum(2564, (int) integer11);
      Integer integer14 = JLayeredPane.PALETTE_LAYER;
      Integer integer15 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer16 = JLayeredPane.FRAME_CONTENT_LAYER;
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = (-1820);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel1.addAllElements((Collection<VisualPageListItem>) stack0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel1.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4933967647088213
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[22];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-73);
      byteArray0[4] = (byte) (-109);
      byteArray0[5] = (byte) (-48);
      byteArray0[6] = (byte)34;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      intArray0[6] = 1453;
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      intArray0[18] = 1453;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Setting category factory to [");
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int[] intArray1 = new int[0];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Setting category factory to [");
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.reverseElements(intArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      byte[] byteArray1 = new byte[3];
      mockFileInputStream0.markSupported();
      byteArray1[0] = (byte)0;
      byteArray1[2] = (byte)3;
      mockFileInputStream0.read(byteArray1, (int) (byte)3, (-1076));
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)122;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray2);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      visualListModel0.removeElements(intArray1, false);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "] cannot be instantiated due to access restrictions");
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = (-573);
      intArray0[1] = 962;
      intArray0[2] = (-3391);
      intArray0[3] = (-1307);
      intArray0[4] = 10;
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      visualListModel0.getElementAt(0);
      try { 
        fileDescriptor1.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      stack0.parallelStream();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModel0.getColumnClass(5000);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      JScrollPane jScrollPane0 = new JScrollPane();
      jTable0.createVolatileImage(5000, 1);
      JScrollBar jScrollBar0 = jScrollPane0.getVerticalScrollBar();
      jScrollPane0.grabFocus();
      jTable0.getScrollableTracksViewportHeight();
      jScrollBar0.getMinimumSize();
      jScrollBar0.getAutoscrolls();
      Integer.toUnsignedLong(5);
      Integer.max(767, 1275);
      Integer.min((-2971), 1);
      Integer.toUnsignedString(5);
      Integer.sum(38, 1145);
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer.max(1145, 1);
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger("org.pdfsam.guiclient.commons.models.VisualListModel", integer2);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 6);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      Object[] objectArray0 = new Object[9];
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(22, (Collection<VisualPageListItem>) null);
      objectArray0[0] = (Object) stack0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) defaultTableModel0;
      Object object0 = new Object();
      Object[] objectArray1 = stack0.toArray(objectArray0);
      Object[][] objectArray2 = new Object[9][2];
      objectArray2[0] = objectArray0;
      objectArray2[1] = objectArray1;
      objectArray2[2] = objectArray1;
      objectArray2[6] = objectArray0;
      objectArray2[5] = objectArray0;
      objectArray2[6] = objectArray1;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) stack0;
      objectArray3[1] = (Object) defaultTableModel0;
      objectArray2[7] = objectArray3;
      objectArray2[8] = objectArray1;
      Object[] objectArray4 = new Object[9];
      objectArray4[0] = object0;
      objectArray4[1] = (Object) integer0;
      objectArray4[2] = object0;
      objectArray4[3] = (Object) vector0;
      objectArray4[4] = (Object) visualListModel0;
      objectArray4[5] = (Object) stack0;
      objectArray0[3] = (Object) stack0;
      objectArray4[7] = (Object) stack0;
      objectArray4[8] = (Object) defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray2, objectArray4);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.listIterator();
      stack0.setSize(360);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      KeyStroke.getKeyStroke("");
      stack0.remove((Object) null);
      stack1.ensureCapacity((-1034));
      visualListModel0.getSize();
      visualListModel0.clearData();
      AffineTransform affineTransform0 = new AffineTransform();
      HashMap<RenderingHints.Key, InputStream> hashMap0 = new HashMap<RenderingHints.Key, InputStream>(1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)46;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 360);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      hashMap0.put((RenderingHints.Key) null, dataInputStream0);
      affineTransform0.invert();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      // Undeclared exception!
      try { 
        renderingHints0.put(stack0, stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Stack cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5173267679886693
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(0, 0, false);
      int[] intArray1 = new int[4];
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      assertEquals(4, intArray1.length);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-7));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      try { 
        fileDescriptor1.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B.E(iSCD");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.remainderUnsigned(29985, 29985);
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer.divideUnsigned((-1267), 29985);
      Integer.divideUnsigned((-1141), 9999);
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer integer8 = JLayeredPane.MODAL_LAYER;
      Integer integer9 = new Integer((-1267));
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer11 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.min((-1267), (-1141));
      Integer integer12 = new Integer((int) integer9);
      Integer.getInteger("log4j.rootCategory", 1358);
      Integer.toUnsignedString(1975);
      Integer integer13 = JLayeredPane.PALETTE_LAYER;
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(7, (Collection<VisualPageListItem>) arrayDeque0);
      Integer integer14 = JLayeredPane.DRAG_LAYER;
      Integer integer15 = new Integer(0);
      Integer.sum(2634, (int) integer12);
      Integer integer16 = new Integer(1367);
      Integer integer17 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer18 = JLayeredPane.POPUP_LAYER;
      Integer integer19 = JLayeredPane.DRAG_LAYER;
      Integer integer20 = JLayeredPane.PALETTE_LAYER;
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-4498);
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[7];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      DefaultTableModel defaultTableModel2 = new DefaultTableModel((Vector) null, (Vector) null);
      defaultTableModelArray0[2] = defaultTableModel2;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      DefaultTableModel defaultTableModel4 = new DefaultTableModel(defaultTableModelArray0, 200);
      defaultTableModelArray0[4] = defaultTableModel4;
      DefaultTableModel defaultTableModel5 = new DefaultTableModel((Vector) null, 200);
      defaultTableModel5.getColumnClass(200);
      visualListModel0.removeElements(200, 0, true);
      defaultTableModelArray0[5] = defaultTableModel5;
      // Undeclared exception!
      try { 
        defaultTableModel2.moveRow((-4498), 200, (-1128));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.238349707583447
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 19;
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[5];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      defaultTableModelArray0[0] = defaultTableModel0;
      defaultTableModel0.fireTableStructureChanged();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(19, 19);
      defaultTableModelArray0[1] = defaultTableModel1;
      Object[][] objectArray0 = new Object[1][2];
      objectArray0[0] = (Object[]) defaultTableModelArray0;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(objectArray0, defaultTableModelArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = 19;
      intArray1[1] = 19;
      intArray1[2] = 19;
      intArray1[3] = 610;
      intArray1[4] = 0;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.removeElements(0, 2548, true);
      int[] intArray2 = new int[7];
      intArray2[0] = 0;
      intArray2[1] = 0;
      intArray2[2] = 2548;
      intArray2[3] = 0;
      intArray2[4] = 2548;
      intArray2[5] = 0;
      intArray2[6] = 2548;
      visualListModel0.moveUpIndexes(intArray2);
      assertEquals(7, intArray2.length);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(82, 82, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.addAllElements((-112), (Collection<VisualPageListItem>) linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned(1269, 1269);
      Integer integer1 = new Integer(1);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(1269);
      Integer integer3 = new Integer(1269);
      int int0 = Integer.min(873, 7);
      Integer.compareUnsigned(881, 2618);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.max(2062, (-1));
      Integer.getInteger("1269");
      Integer.max(2618, 3048);
      Integer.remainderUnsigned(2062, 1);
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger("", integer3);
      Integer integer8 = JLayeredPane.POPUP_LAYER;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      int int1 = visualListModel0.getSize();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = new Integer(1905);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned(1365, 29975);
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(0);
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer.divideUnsigned((-1286), 29975);
      Integer.divideUnsigned((-1141), 9999);
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      Integer integer7 = JLayeredPane.DEFAULT_LAYER;
      Integer.compareUnsigned(39, (-211));
      Integer integer8 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("g([Uyybjd");
      Integer.sum(2550, 143284);
      Integer.getInteger("Bad option value [", 429539);
      Integer.max(833, 34);
      Integer.getInteger((String) null, (Integer) null);
      Integer integer10 = JLayeredPane.DEFAULT_LAYER;
      Object object0 = visualListModel0.getElementAt(7);
      assertNull(object0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.remainderUnsigned(29985, 29985);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer.divideUnsigned(29985, 29985);
      Integer.divideUnsigned((-1141), 9999);
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer integer8 = new Integer(29985);
      Integer integer9 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer11 = new Integer(9999);
      Integer integer12 = new Integer((int) integer8);
      Integer integer13 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedString(1975);
      Integer integer14 = JLayeredPane.PALETTE_LAYER;
      Integer integer15 = JLayeredPane.DRAG_LAYER;
      Integer.compareUnsigned(29985, (-155));
      Integer integer16 = new Integer(0);
      Integer.getInteger("1975", (Integer) null);
      Integer.getInteger("", integer0);
      Integer.sum(2634, (int) integer12);
      Integer integer17 = new Integer(32619);
      Integer integer18 = JLayeredPane.POPUP_LAYER;
      Integer integer19 = JLayeredPane.DRAG_LAYER;
      Integer integer20 = JLayeredPane.PALETTE_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(defaultTableModelArray0, 825);
      defaultTableModelArray0[0] = defaultTableModel0;
      defaultTableModel0.getColumnClass(1);
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      vector0.add(defaultTableModel0);
      defaultTableModel0.addColumn((Object) defaultTableModel0, (Vector) vector0);
      defaultTableModel0.setColumnCount(825);
      defaultTableModelArray0[2] = defaultTableModel0;
      Object[][] objectArray0 = new Object[9][2];
      objectArray0[8] = (Object[]) defaultTableModelArray0;
      vector0.add(defaultTableModelArray0[1]);
      defaultTableModel0.findColumn("wE^,`Y:/d?C*V`u9Jy");
      objectArray0[1] = (Object[]) defaultTableModelArray0;
      objectArray0[2] = (Object[]) defaultTableModelArray0;
      Vector vector1 = (Vector)vector0.clone();
      objectArray0[3] = (Object[]) defaultTableModelArray0;
      objectArray0[4] = (Object[]) defaultTableModelArray0;
      objectArray0[5] = (Object[]) defaultTableModelArray0;
      vector0.add(defaultTableModel0);
      objectArray0[1] = (Object[]) defaultTableModelArray0;
      objectArray0[7] = (Object[]) defaultTableModelArray0;
      objectArray0[8] = (Object[]) defaultTableModelArray0;
      vector0.containsAll(vector1);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, objectArray0[8]);
      defaultTableModel1.addColumn((Object) defaultTableModel0, (Vector) vector0);
      defaultTableModel1.addRow(objectArray0[5]);
      defaultTableModel1.findColumn("wE^,`Y:/d?C*V`u9Jy");
      defaultTableModel1.getColumnClass(825);
      defaultTableModelArray0[2] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(objectArray0[7], 825);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(defaultTableModelArray0, 825);
      defaultTableModelArray0[0] = defaultTableModel0;
      TableModelEvent tableModelEvent0 = new TableModelEvent(defaultTableModel0, 825, 331);
      defaultTableModel0.newRowsAdded(tableModelEvent0);
      defaultTableModel0.getColumnClass(1);
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      vector0.add(defaultTableModel0);
      defaultTableModel0.addColumn((Object) defaultTableModel0, (Vector) vector0);
      defaultTableModel0.setColumnCount(825);
      defaultTableModelArray0[2] = defaultTableModel0;
      Object[][] objectArray0 = new Object[9][2];
      objectArray0[8] = (Object[]) defaultTableModelArray0;
      vector0.add(defaultTableModelArray0[1]);
      defaultTableModel0.findColumn("wE^,`Y:/d?C*V`u9Jy");
      objectArray0[1] = (Object[]) defaultTableModelArray0;
      objectArray0[2] = (Object[]) defaultTableModelArray0;
      Vector vector1 = (Vector)vector0.clone();
      objectArray0[3] = (Object[]) defaultTableModelArray0;
      objectArray0[4] = (Object[]) defaultTableModelArray0;
      objectArray0[5] = (Object[]) defaultTableModelArray0;
      vector0.add(defaultTableModel0);
      objectArray0[1] = (Object[]) defaultTableModelArray0;
      objectArray0[7] = (Object[]) defaultTableModelArray0;
      objectArray0[8] = (Object[]) defaultTableModelArray0;
      vector0.containsAll(vector1);
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray0, objectArray0[8]);
      defaultTableModel1.addColumn((Object) defaultTableModel0, (Vector) vector0);
      defaultTableModel1.addRow(objectArray0[5]);
      defaultTableModel1.findColumn("wE^,`Y:/d?C*V`u9Jy");
      defaultTableModel1.getColumnClass(825);
      defaultTableModelArray0[2] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(objectArray0[7], 825);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(6, 6);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) stack0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) defaultTableModel0;
      Object object0 = new Object();
      Object[] objectArray1 = stack0.toArray(objectArray0);
      Object[][] objectArray2 = new Object[9][2];
      objectArray2[8] = objectArray0;
      objectArray2[1] = objectArray1;
      objectArray2[2] = objectArray1;
      objectArray2[6] = objectArray0;
      objectArray2[5] = objectArray0;
      objectArray2[6] = objectArray1;
      Object[] objectArray3 = new Object[2];
      objectArray3[0] = (Object) stack0;
      objectArray3[1] = (Object) defaultTableModel0;
      objectArray2[7] = objectArray3;
      objectArray2[8] = objectArray1;
      Object[] objectArray4 = new Object[9];
      objectArray4[0] = object0;
      objectArray4[1] = (Object) integer0;
      Object[][] objectArray5 = new Object[0][6];
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray5, objectArray0);
      defaultTableModel0.addColumn(objectArray0[1], vector0);
      defaultTableModel0.addRow(objectArray0);
      defaultTableModel1.findColumn("");
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(objectArray5, objectArray0);
      defaultTableModel2.getColumnClass(6);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5802615437584318
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add(0, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      visualListModel0.updateElementAt(78, (VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      stack2.add((VisualPageListItem) null);
      stack2.listIterator();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      assertNotNull(collection0);
      
      stack2.add((VisualPageListItem) null);
      stack2.forEach(consumer0);
      stack2.ensureCapacity(1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = visualPageListItemArray0[2];
      visualPageListItemArray0[6] = visualPageListItemArray0[4];
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.moveUpIndex(78);
      visualListModel0.elementChanged(visualPageListItemArray0[4]);
      visualListModel0.moveDownIndex(0);
      visualListModel0.removeElements(1047, 1047, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9549478780836425
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(121, 767, true);
      VisualListModel visualListModel2 = new VisualListModel();
      Vector<Integer> vector0 = new Vector<Integer>();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(vector0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel2.removeListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(121, (-1846), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(121) > toIndex(-1846)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.885150328612323
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.elementsChanged();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[6];
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction1;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[3] = defaultEditorKit_PasteAction2;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction3;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      Month month0 = Month.FEBRUARY;
      ActionEvent actionEvent0 = new ActionEvent(month0, 356, "", (-2553));
      actionEvent0.paramString();
      actionEvent0.paramString();
      defaultEditorKit_PasteAction3.actionPerformed(actionEvent0);
      defaultEditorKit_PasteActionArray0[5] = defaultEditorKit_PasteAction4;
      int[] intArray0 = new int[2];
      intArray0[0] = 356;
      intArray0[1] = (-2553);
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 356
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = new Integer(29985);
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer integer6 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(39);
      Integer.divideUnsigned((-1267), 29985);
      Integer.divideUnsigned((-1128), 10016);
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer integer8 = JLayeredPane.MODAL_LAYER;
      Integer.compareUnsigned(39, (-232));
      Integer.divideUnsigned(1, (-2137));
      Integer integer9 = JLayeredPane.POPUP_LAYER;
      Integer integer10 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer11 = new Integer((-1));
      Integer.toUnsignedString(2020);
      Integer integer12 = JLayeredPane.DEFAULT_LAYER;
      Integer.getInteger("%8+c!uf\"d|yo");
      Integer.compare((int) integer3, (-2466));
      Integer.sum(2628, (int) integer11);
      Integer integer13 = new Integer(2627);
      Integer integer14 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer15 = JLayeredPane.POPUP_LAYER;
      int[] intArray0 = new int[1];
      intArray0[0] = (-1128);
      visualListModel0.removeElements(intArray0, true);
      assertArrayEquals(new int[] {(-1128)}, intArray0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-555), (-296), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)110;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte) (-1);
      byteArray0[8] = (byte) (-96);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = 19;
      visualListModel0.removeElements(19, (-1), false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      try { 
        fileDescriptor1.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.522316124449607
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.subList(4, 4);
      visualListModel0.subList(0, 0, true);
      int[] intArray1 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addListDataListener((ListDataListener) null);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      assertEquals(4, intArray1.length);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.addListDataListener((ListDataListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.subList(116, 3928, true);
      visualListModel0.addListDataListener((ListDataListener) null);
      VisualListModel visualListModel2 = new VisualListModel();
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Vector<DefaultTableModel> vector0 = new Vector<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(vector0, 6);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      Stream<DefaultTableModel> stream0 = stack0.parallelStream();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) stack0;
      objectArray0[1] = (Object) integer0;
      objectArray0[2] = (Object) defaultTableModel0;
      objectArray0[3] = (Object) stack0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) stream0;
      objectArray0[7] = (Object) defaultTableModel0;
      Object[] objectArray1 = vector0.toArray(objectArray0);
      Object[][] objectArray2 = new Object[8][4];
      Object[] objectArray3 = new Object[0];
      objectArray2[0] = objectArray3;
      objectArray2[1] = objectArray1;
      objectArray2[2] = objectArray1;
      objectArray2[3] = objectArray1;
      objectArray2[4] = objectArray1;
      objectArray2[5] = objectArray1;
      objectArray2[6] = objectArray1;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(objectArray2, objectArray1);
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(116, 0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(116, 116, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = new Integer(1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned((-4485), 1031);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("#do%=cHA]", 1031);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned((-1575), (-4485));
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-1196), 357, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-4485);
      Integer integer0 = new Integer(1);
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      int int1 = 1031;
      Integer.divideUnsigned((-4485), 1031);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1031, (-4485));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1031) > toIndex(-4485)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.4497927527284427
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.data = vector0;
      intArray0[0] = (-1);
      intArray0[1] = (-1102);
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clear();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      int[] intArray1 = new int[8];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 0;
      intArray1[6] = 0;
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.updateElementAt(0, (VisualPageListItem) null);
      visualListModel0.prependAllElements(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.148815922340797
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      visualListModel0.updateElementAt(356, (VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.spliterator();
      visualListModel0.elementsChanged();
      DefaultEditorKit.PasteAction[] defaultEditorKit_PasteActionArray0 = new DefaultEditorKit.PasteAction[6];
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[0] = defaultEditorKit_PasteAction0;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction1 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[1] = defaultEditorKit_PasteAction1;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction2 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[2] = defaultEditorKit_PasteAction2;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction3 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction4 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteActionArray0[4] = defaultEditorKit_PasteAction4;
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction5 = new DefaultEditorKit.PasteAction();
      Month month0 = Month.FEBRUARY;
      ActionEvent actionEvent0 = new ActionEvent(month0, 356, "", (-2553));
      defaultEditorKit_PasteActionArray0[5] = defaultEditorKit_PasteAction5;
      stack0.toArray(defaultEditorKit_PasteActionArray0);
      stack0.add(visualPageListItemArray0[1]);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      int[] intArray0 = new int[2];
      intArray0[0] = (-2553);
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(5, visualListModel0.getSize());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2761809225159486
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveUpIndexes(intArray0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.appendAllElements(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = new Integer(1905);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned(12, 1729);
      Integer integer3 = new Integer(1031);
      Integer integer4 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(1905);
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer.divideUnsigned((byte) (-59), (-116));
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = JLayeredPane.MODAL_LAYER;
      Integer.divideUnsigned((-1898), (-480));
      Integer integer10 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(65535, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 65535
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned(1269, 1269);
      Integer integer1 = new Integer(1);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer.toUnsignedString(1269);
      Integer integer3 = new Integer(1269);
      Integer.min(873, 7);
      Integer.compareUnsigned(881, 2618);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      Integer.max(2062, (-1));
      Integer.getInteger("1269");
      Integer.max(2618, 3048);
      Integer.remainderUnsigned(2062, 1);
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger("", integer3);
      Integer integer8 = JLayeredPane.POPUP_LAYER;
      Integer integer9 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.compareUnsigned(881, 754);
      Integer integer10 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey", integer10);
      Integer integer11 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(7, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 7
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = new Integer(1);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned((-4485), 1031);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("#do%=cHA]", 1031);
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.divideUnsigned((-1611), (-4485));
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      visualListModel0.moveUpIndex((-1611));
      ICC_ColorSpace iCC_ColorSpace0 = null;
      try {
        iCC_ColorSpace0 = new ICC_ColorSpace((ICC_Profile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.color.ICC_ColorSpace", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(13);
      visualListModel0.moveDownIndex(0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      String string0 = "";
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }
}
