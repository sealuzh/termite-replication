/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 08:17:45 GMT 2020
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((byte)95, "", "state.Party", (-21504));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "state.Party");
      byte[] byteArray0 = player0.pack();
      System.setCurrentTimeMillis((-2310L));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 1091);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-21504), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(95, player0.getId());
      assertEquals("state.Party", player0.getName());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player1.next = (Party) player0;
      float float0 = Player.MOVE_DISTANCE;
      player0.setDead();
      player2.pack();
      player0.unpack(byteArray0);
      player0.setMoney((-264));
      player0.getZ();
      player2.setDead();
      player2.setMoney(0.1F);
      player0.isJoinOK(player2, false);
      player0.type();
      Player player3 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      player1.setJoinOK(player3, false);
      float float1 = player0.getMoney();
      assertTrue(player0.isDead());
      assertEquals((-264.0F), float1, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(1, "", (-4));
      player0.setJoinOK(player0, true);
      player0.isJoinOK(player0, true);
      player0.setZ(532.0F);
      player0.getZ();
      player0.pack();
      assertEquals(532.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte byte0 = (byte) (-31);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark((-1));
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "Q+7Nj*(X~");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player0.setZ(0.0F);
      Party party0 = new Party((short)4919);
      player0.head = party0;
      player0.next = party0;
      player0.pack();
      player0.head.head = party0;
      player0.type();
      party0.boss = player0.head;
      player0.getY();
      player0.getX();
      player0.getX();
      Player player1 = new Player(5, "7cJZW", "7cJZW", 5, 5);
      Party party1 = new Party();
      party0.head = party1;
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player1.getX();
      System.setCurrentTimeMillis((short)4919);
      player0.getY();
      player0.pack();
      assertEquals(5, player0.type());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(3063, "Player.unpack(): *** WARNING *** data is ;ot of proper type!", (-8737));
      player0.setDead((long) (-8737), false);
      player0.getY();
      player0.getTimeOfDeath();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** data is ;ot of proper type!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      player0.getZ();
      player0.getY();
      player0.getY();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayInputStream0.skip((-891L));
      byteArrayInputStream0.mark((-8737));
      int int0 = Packable.ACTION;
      int int1 = player0.type();
      assertEquals((-8737L), player0.getTimeOfDeath());
      assertEquals(5, int1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3114234446919735
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte) (-109);
      Player player0 = new Player(2112, (String) null, "IY _wK]/mL%Uv|z5", 3072, (byte)0);
      Player player1 = new Player((byte)0, "IY _wK]/mL%Uv|z5", (String) null, (-2));
      player0.setJoinOK(player1, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(boolean0);
      assertEquals(1, player1.getStrength());
      
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.pack();
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(3072, player0.getPictureId());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(2076, "Mdv5;", 2076);
      player0.next = (Party) player1;
      player0.getY();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte) (-35);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-60), (short)4919);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.markSupported();
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(888L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      player0.setConnected(true);
      player0.setDead(888L, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      player0.getY();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0904599236161974
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.boss = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player1.pack();
      player0.unpack(byteArray0);
      player0.setMoney((short)4919);
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      player1.getZ();
      player1.pack();
      player1.setX(0.0F);
      player0.getTimeOfDeath();
      player0.getY();
      player1.type();
      player0.getIP();
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player2.pack();
      player0.unpack(byteArray0);
      player0.setMoney((-264));
      player0.getZ();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player3 = new Player((short)4919, "state.Player$JoinInfo", "", 154, (-19958));
      player3.pack();
      player3.getStrength();
      player3.getZ();
      player2.getTimeOfDeath();
      player2.isJoinOK(player1, true);
      player2.isJoinOK(player3, true);
      assertEquals(0.0F, player3.getY(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3yd. -N1SG3h*u*");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Player player1 = new Player((-14070), "3yd. -N1SG3h*u*", "n>WQH.JZ&`UoM9BZ23_", (byte)0);
      Player player2 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)107;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player();
      Player player1 = new Player((byte)107, "", "", (byte)107);
      player1.setConnected(false);
      player1.setJoinOK(player0, false);
      player1.setJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      float float0 = Player.MOVE_DISTANCE;
      player0.pack();
      assertTrue(player0.isConnected());
      
      boolean boolean0 = player1.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player((-763), "Kg/tZ", ",:B2,7Dp\"Z{5o/X'b", (-763), (-763));
      player0.setMoney(0.0F);
      Player player1 = new Player((short)4919, (String) null, "state.Player$JoinInfo", (short)4919);
      player0.add(player1);
      player0.setZ((-763));
      float float0 = player0.getZ();
      assertEquals((-763.0F), float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-4010), (String) null, (-4010));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, (InputStream) null);
      int int0 = Packable.UNDEFINED;
      Player player1 = new Player(2183, "", "", 0);
      assertEquals(0, player1.getPictureId());
      
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-4010), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-2622L));
      Player player0 = new Player(2, "", "", 4);
      player0.setDead();
      Player player1 = new Player((-1324), ".*[.]class$", (String) null, 4);
      player0.setJoinOK(player1, false);
      Player player2 = new Player((short)4919, "Y]{%k`uQOkv-]INm", "Y]{%k`uQOkv-]INm", 253);
      player0.prev = (Party) player2;
      player0.getSubparty();
      player0.toString();
      player0.getZ();
      System.setCurrentTimeMillis((-17L));
      player0.getName();
      assertTrue(player0.isDead());
      
      player2.pack();
      assertEquals(253, player2.getPictureId());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray1[0] = (byte) (-126);
      byteArray1[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setJoinOK(player0, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      player0.isJoinOK(player0, false);
      System.setCurrentTimeMillis(8334);
      System.setCurrentTimeMillis(1392409281320L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 3293;
      Player player0 = new Player(282, "\"YHmN4wN[}5V5Cf2u", 3293);
      player0.setZ(3293);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1354942159291497
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      int int0 = Packable.TEXT_MESSAGE;
      Player player2 = new Player(1, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player2.pack();
      player0.unpack(byteArray0);
      player0.setMoney(1);
      player0.getZ();
      Player player3 = new Player((-723), "", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-19958));
      player1.setJoinOK(player3, true);
      player1.setZ((-1.0F));
      player0.isDead();
      player2.getZ();
      player2.pack();
      player1.getY();
      assertEquals((-1.0F), player1.getZ(), 0.01F);
      
      int int1 = player3.type();
      assertEquals(5, int1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0910424533583143
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player2.pack();
      player0.unpack(byteArray0);
      player0.setMoney((-264));
      player0.getZ();
      player2.setDead();
      player2.setMoney(0.0F);
      player0.isJoinOK(player2, false);
      player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      Player player3 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", 0);
      player1.setJoinOK(player3, false);
      assertEquals(0.0F, player1.getZ(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[6];
      pipedInputStream0.mark(4);
      byteArray0[0] = (byte)12;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)12;
      pipedInputStream0.markSupported();
      byteArray0[4] = (byte) (-3);
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Player player0 = new Player(4, "u;YeLt", "u;YeLt", (byte)12);
      player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(12, player0.getPictureId());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0);
      player0.setDead();
      player0.getName();
      player0.getX();
      player0.gangStrength();
      Party party0 = player0.gangBoss();
      Party party1 = player0.gangBoss();
      party0.remove(party1);
      player0.add(party0);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player2.pack();
      player0.unpack(byteArray0);
      player0.setMoney((-264));
      player0.getZ();
      player2.setDead();
      Player player3 = new Player((short)4919, "", "}", 154, (-19958));
      player3.pack();
      player3.getStrength();
      player3.getZ();
      player2.getTimeOfDeath();
      player2.isJoinOK(player1, true);
      player2.isJoinOK(player3, true);
      player0.isJoinOK(player2, true);
      assertTrue(player2.isDead());
      assertEquals((-264), player0.getPictureId());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = (-1);
      Player player0 = new Player((-1), (String) null, (-1));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player1.getX();
      player0.setY((-236));
      player1.getPictureId();
      Player player2 = new Player((-2344), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (short)4919);
      player1.getMoney();
      player0.setDead();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(5);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-35);
      byteArray0[1] = (byte) (-31);
      byteArray0[3] = (byte)55;
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      pipedInputStream1.markSupported();
      player0.unpack(byteArray0);
      player0.unpack(dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream1);
      player0.unpack(byteArray0);
      DataInputStream dataInputStream2 = new DataInputStream(pipedInputStream0);
      assertFalse(dataInputStream2.equals((Object)dataInputStream1));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1639556568820564
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player((-2967), "0.0.0.0", "0.0.0.0", (-2967), (-2967));
      int int0 = player0.gangStrength();
      assertEquals((-2967), int0);
      
      player0.pack();
      Player player1 = new Player((-273), (String) null, ".*[.]class$", (-2967));
      player0.boss = (Party) player1;
      assertEquals(1, player1.getStrength());
      assertEquals((-2967), player1.getPictureId());
      
      player0.pack();
      int int1 = player0.type();
      assertEquals(5, int1);
      
      player0.pack();
      float float0 = player0.getY();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player((-2713), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-2713), 3188);
      player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-2713), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(3188, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5649493574615376
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      float float0 = player0.getY();
      Player player1 = new Player();
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.setJoinOK(player0, true);
      assertEquals((-723), player2.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      float float2 = player1.getZ();
      assertEquals(float2, float0, 0.01F);
      
      player1.pack();
      String string0 = player1.getIP();
      assertEquals(0, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.getName());
      assertEquals("0.0.0.0", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(1, "", "l#+9$)", 1);
      Party party0 = new Party(1);
      player0.prev = party0;
      party0.id = 5;
      player0.getPictureId();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(1, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Player player0 = new Player(0, "", "6M.st5phuR4Fzz", 1479);
      System.setCurrentTimeMillis(1L);
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals("", string0);
      assertTrue(player0.isConnected());
      assertEquals(1479, player0.getPictureId());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-109);
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(20224, "6Mt.st5phuR4Fzz", "6Mt.st5phuR4Fzz", (-1446));
      Player player1 = new Player((short)4919, "6Mt.st5phuR4Fzz", "0.0.0.0", 0, (-1633));
      player0.head = (Party) player1;
      player0.setConnected(true);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.599301927099795
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player((-1), "0.0.0.0", (-1));
      player0.id = 2;
      player0.setDead();
      player0.reset(false);
      player0.isDead();
      player0.type();
      player0.gangStrength();
      player0.reset(true);
      Player player1 = new Player();
      player1.add(player0);
      player1.gangStrength();
      player1.setDead();
      player0.setJoinOK(player1, false);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)127;
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark(1851);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.mark(1851);
      PipedInputStream pipedInputStream2 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream2);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-35);
      byteArray0[1] = (byte) (-35);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte) (-35);
      byteArray0[5] = (byte)11;
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream2);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(3, ";9dI7:eQ~rq|jihg", ";9dI7:eQ~rq|jihg", 3);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX((-1.0F));
      Player player1 = new Player(Integer.MAX_VALUE, "`2fM`Yei/`0d/~", "U!,^cT=7*d(fku", 1857);
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark(1851);
      MockFile mockFile0 = new MockFile("%%S7");
      MockFile mockFile1 = new MockFile(mockFile0, "Ly Fif!~jS*u!x\"k");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte) (-37);
      mockFileOutputStream0.write(byteArray0);
      mockPrintStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0982737395252498
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte) (-126);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-126);
      byteArray0[4] = (byte) (-126);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.reset(false);
      Player player1 = new Player((-14070), "c>o", "c>o", (byte)0);
      player1.setJoinOK(player0, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(0, player0.getPictureId());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      
      System.setCurrentTimeMillis((byte) (-126));
      System.setCurrentTimeMillis((byte) (-126));
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-21504), "state.Party", (String) null, (-21504));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.2188758248681983
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-264), "", (-264));
      player0.reset(true);
      player0.getY();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.getX();
      byte[] byteArray0 = player0.pack();
      player0.setY(0.0F);
      player0.getPictureId();
      Player player2 = new Player((-264), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (-723));
      player0.boss = (Party) player2;
      player2.next = (Party) player0;
      player0.getMoney();
      player0.setDead();
      player2.pack();
      player0.unpack(byteArray0);
      Player player3 = new Player((short)4919, "", "", 5, (-309));
      player0.pack();
      player0.getStrength();
      Player player4 = new Player((short)4919, "state.Player$JoinInfo", "", 1, (short)4919);
      player4.getZ();
      player3.getTimeOfDeath();
      player0.isJoinOK(player4, true);
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      
      int int0 = player3.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3yd. -N1SG3h*u*");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-14070), "c>o", "c>o", (byte)0);
      player0.isConnected();
      System.setCurrentTimeMillis((byte) (-109));
      System.setCurrentTimeMillis(4048L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(3);
      String string0 = player0.getName();
      assertEquals("Player3", string0);
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getZ();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(float1, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player0 = new Player(1158);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player1158", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3yd. -N1SG3h*u*");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3yd. -N1SG3h*u*");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis((byte)0);
      System.setCurrentTimeMillis(4048L);
      Player player0 = new Player((byte)0, "3yd. -N1SG3h*u*", "", 1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(222, "state.Party", (String) null, 222);
      player0.setDead((-531L));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "k");
      System.setCurrentTimeMillis((-21504));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.9785084205272367
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(823, "joIzD}}h 8F]4", "itu[]vCbAK#_", 823, 0);
      player0.pack();
      player0.gangStrength();
      Player player1 = new Player(823, "qzVXe", "qzVXe", (-580), 1148);
      player1.setDead(0L);
      player1.gangStrength();
      player1.setMoney(0);
      player0.setY((-1370.4F));
      player1.setY(0.2F);
      player1.setX(10.0F);
      player1.id = 1;
      player0.id = 1;
      player1.setConnected(false);
      player1.gangStrength();
      player0.setJoinOK(player1, false);
      player0.getStrength();
      player0.getTimeOfDeath();
      player1.head = (Party) player0;
      player1.setDead(2967L, true);
      player1.isJoinOK(player0, false);
      player1.pack();
      player0.reset(false);
      assertEquals((-1370.4F), player0.getY(), 0.01F);
      
      player1.setZ(1);
      player1.setDead((long) 0);
      assertTrue(player1.isDead());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4583113296830845
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      player0.setMoney((-255));
      Player player1 = new Player(0, ".*[.]class$", ".*[.]class$", (-255), (short)4919);
      player0.boss = (Party) player1;
      player0.setZ(0.2F);
      player0.setY(0.0F);
      player1.type();
      player1.setY(0.2F);
      int int0 = player1.gangStrength();
      assertEquals(0.2F, player1.getY(), 0.01F);
      assertEquals(4919, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-2250));
      player0.isJoinOK(player0, true);
      System.setCurrentTimeMillis(908L);
      System.setCurrentTimeMillis((-21504));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark((-1149));
      PipedInputStream pipedInputStream1 = new PipedInputStream(5);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)12;
      byteArray0[15] = (byte) (-27);
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(byteArray0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis((byte)55);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(5);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream1);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-35);
      byteArray0[1] = (byte) (-31);
      byteArray0[3] = (byte)55;
      pipedOutputStream0.write(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      pipedInputStream1.markSupported();
      player0.unpack(byteArray0);
      player0.unpack(dataInputStream0);
      // Undeclared exception!
      try { 
        pipedOutputStream0.write((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.OutputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "\\uEw(.p,y:jMLKXV`'H";
      Player player0 = new Player((-261), string0, string0, 3843, 3843);
      player0.id = (-261);
      player0.setMoney(3843);
      player0.setMoney(879.45746F);
      player0.getSubparty();
      player0.getMoney();
      player0.pack();
      assertEquals(879.45746F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-126);
      byteArray1[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(8334, "c>o", "c>o", (byte) (-126));
      player0.setDead((long) (byte)0, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      System.setCurrentTimeMillis(8334);
      System.setCurrentTimeMillis((byte)0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)37;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((byte)95, "t]LML#gyYAs", "a", 481);
      player0.gangStrength();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t]LML#gyYAs");
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-4010), (String) null, (-4010));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, (InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }
}
