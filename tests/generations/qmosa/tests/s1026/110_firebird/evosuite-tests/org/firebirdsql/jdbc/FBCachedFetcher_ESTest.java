/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 16:42:55 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.SQLWarning;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.SynchronousQueue;
import java.util.function.Predicate;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.AbstractStatement;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.232252446083317
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[27];
      fBBlobFieldArray1[0] = fBBlobFieldArray0[5];
      fBBlobFieldArray1[3] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[5] = fBBlobFieldArray0[2];
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.push((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.clear();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.isLast();
      System.setCurrentTimeMillis((byte) (-8));
      fBCachedFetcher0.relative(1);
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      boolean boolean0 = fBCachedFetcher0.absolute((-2596));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8670361289208373
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      byte[][] byteArray0 = linkedList0.pollLast();
      linkedList0.pollLast();
      linkedList0.pollLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][][] byteArray1 = new byte[1][2][8];
      byteArray1[0] = null;
      linkedList0.toArray(byteArray1);
      Integer integer0 = new Integer(2580);
      Integer integer1 = new Integer(400);
      Integer.getInteger("WEDSXb#/P<");
      Integer integer2 = new Integer(2580);
      Integer integer3 = new Integer(2580);
      Integer[] integerArray0 = new Integer[1];
      Integer.toUnsignedString(186);
      integerArray0[0] = integer1;
      linkedList0.toArray(integerArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis(400);
      fBCachedFetcher0.updateRow(byteArray0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.isAfterLast();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3136613304310054
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedList0.pollLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(400);
      Integer integer1 = new Integer((-943));
      Integer.toUnsignedString(186);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.deleteRow();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)82;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.469607282976206
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.pollLast();
      linkedList0.pollLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][][] byteArray0 = new byte[1][2][8];
      linkedList0.toArray(byteArray0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Integer integer0 = new Integer(400);
      Integer integer1 = new Integer(1349);
      Integer integer2 = new Integer(1349);
      Integer integer3 = new Integer((-943));
      Integer[] integerArray0 = new Integer[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Integer.toUnsignedString(186);
      Integer.sum(400, (-22));
      integerArray0[0] = integer0;
      linkedList0.toArray(integerArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis(400);
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7474267520402167
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.pollLast();
      linkedList0.pollLast();
      linkedList0.pollLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add((byte[][]) null);
      byte[][][] byteArray0 = new byte[1][2][8];
      byteArray0[0] = null;
      linkedList0.toArray(byteArray0);
      Integer integer0 = new Integer(2580);
      Integer integer1 = new Integer(400);
      Integer.getInteger("WEDSXb#/P<");
      Integer integer2 = new Integer(2580);
      Integer integer3 = new Integer((-943));
      Integer[] integerArray0 = new Integer[1];
      Integer.toUnsignedString(186);
      integerArray0[0] = integer1;
      linkedList0.toArray(integerArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((-943));
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8651455544591458
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobField0;
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[27];
      fBBlobFieldArray1[20] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[18] = fBBlobFieldArray0[2];
      fBBlobFieldArray1[6] = fBBlobFieldArray0[4];
      fBBlobFieldArray1[23] = fBBlobFieldArray0[0];
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      byte[][] byteArray1 = new byte[8][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-37);
      byteArray2[1] = (byte) (-37);
      byteArray2[2] = (byte) (-37);
      byteArray2[3] = (byte) (-37);
      byteArray2[4] = (byte) (-37);
      byteArray2[5] = (byte) (-37);
      byteArray2[6] = (byte) (-37);
      byteArray1[4] = byteArray2;
      byteArray1[5] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.last();
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.296633050074456
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-41);
      byteArray1[1] = (byte)35;
      byteArray1[2] = (byte)33;
      byteArray1[3] = (byte) (-2);
      byteArray1[4] = (byte)100;
      byteArray1[5] = (byte) (-112);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)17;
      byteArray2[1] = (byte) (-41);
      byteArray2[2] = (byte)35;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)100;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte)17;
      byteArray4[1] = (byte)100;
      byteArray4[2] = (byte)33;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      linkedList0.add((byte[][]) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.next();
      linkedList0.addLast(fBResultSet0.row);
      fBCachedFetcher0.absolute(400);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.absolute((-2));
      fBCachedFetcher0.isFirst();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3271046605602583
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      Integer integer0 = new Integer((-943));
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        internalTransactionCoordinator0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[27];
      fBBlobFieldArray1[20] = fBBlobFieldArray0[5];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[18] = fBBlobFieldArray0[2];
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[4][1];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl4);
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl5);
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue0 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      Integer integer0 = new Integer(5);
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue1 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 1, 2, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4903130054153437
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.pollLast();
      linkedList0.pollLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute(2386);
      fBCachedFetcher0.setFetchSize((-286));
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      fBCachedFetcher0.getFetchSize();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7413926873721288
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[27];
      fBBlobFieldArray1[20] = fBBlobFieldArray0[5];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[18] = fBBlobFieldArray0[2];
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-37);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.offerLast((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.5327559493328096
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      linkedList0.pollLast();
      linkedList0.pollLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      Integer integer0 = new Integer(2580);
      linkedList0.add((byte[][]) null);
      Integer integer1 = new Integer(400);
      Integer integer2 = new Integer(1349);
      Integer integer3 = new Integer((-943));
      Integer[] integerArray0 = new Integer[1];
      integerArray0[0] = integer1;
      linkedList0.toArray(integerArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(1015);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertEquals(3, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.498884008557752
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[7];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[8];
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[5] = fBBlobField0;
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      Subject subject0 = new Subject();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      Integer[] integerArray0 = new Integer[0];
      linkedList0.toArray(integerArray0);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.deleteRow();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.531290747867608
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.offer(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer((-943));
      Integer.toUnsignedString(186);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.relative(186);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      SynchronousQueue<AbstractStatement> synchronousQueue0 = new SynchronousQueue<AbstractStatement>();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5187144856941974
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.offer(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer((-943));
      Integer.toUnsignedString(186);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      internalTransactionCoordinator0.getSynchronizationObject();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        internalTransactionCoordinator0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3590322051199313
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[9];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[27];
      fBBlobFieldArray1[0] = fBBlobFieldArray0[5];
      fBBlobFieldArray1[3] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[5] = fBBlobFieldArray0[2];
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.clear();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isLast();
      System.setCurrentTimeMillis(2123L);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl2 = isc_blob_handle_impl0.getTr();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl1.setTr(isc_tr_handle_impl3);
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl1.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl4);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.getTransactions();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue0 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_tr_handle_impl2.forgetResultSets();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.unregisterTransaction();
      isc_stmt_handle_impl2.ensureCapacity(4);
      isc_stmt_handle_impl2.ensureCapacity(1);
      isc_stmt_handle_impl2.setRsr_id(3);
      isc_stmt_handle_impl2.setRsr_id(0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)49;
      byteArray1[2] = (byte)15;
      byteArray1[3] = (byte) (-112);
      byteArray1[4] = (byte) (-54);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-54);
      byteArray2[1] = (byte)15;
      byteArray2[2] = (byte) (-112);
      byteArray2[3] = (byte) (-112);
      byteArray2[4] = (byte)46;
      byteArray2[5] = (byte) (-54);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte)1;
      byteArray3[1] = (byte)49;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte) (-112);
      byteArray5[1] = (byte) (-54);
      byteArray5[2] = (byte)15;
      byteArray5[3] = (byte) (-54);
      byteArray5[4] = (byte)49;
      byteArray5[5] = (byte) (-54);
      byteArray5[6] = (byte)49;
      byteArray5[7] = (byte) (-112);
      byteArray5[8] = (byte) (-54);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte)49;
      byteArray6[1] = (byte) (-112);
      byteArray6[2] = (byte)82;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte)82;
      byteArray7[1] = (byte)49;
      byteArray7[2] = (byte) (-54);
      byteArray7[3] = (byte) (-54);
      byteArray7[4] = (byte) (-54);
      byteArray7[5] = (byte) (-54);
      byteArray7[6] = (byte)49;
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = new Integer(540);
      integerArray0[0] = integer0;
      int int0 = 72;
      Integer integer1 = new Integer(72);
      integerArray0[1] = integer1;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer.min((-852), 1140);
      integerArray0[2] = (Integer) int0;
      Integer integer2 = new Integer(2386);
      Integer integer3 = new Integer((-1594));
      Integer.getInteger("WBxK", integer3);
      integerArray0[3] = integer2;
      integerArray0[4] = integer2;
      Integer.sum((-2792), (-204));
      Integer integer4 = new Integer(540);
      Integer.remainderUnsigned((-239), 1349);
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.forgetResultSets();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl1);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl1.setDialect(3);
      isc_db_handle_impl0.getTransactions();
      isc_db_handle_impl1.getRdbId();
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue0 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      isc_tr_handle_impl4.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl7 = isc_blob_handle_impl0.getTr();
      isc_tr_handle_impl7.forgetResultSets();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(5);
      isc_stmt_handle_impl1.ensureCapacity(3597);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setRsr_id(2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][8];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)102;
      byteArray1[1] = (byte)117;
      byteArray1[2] = (byte) (-51);
      byteArray1[3] = (byte) (-101);
      byteArray1[4] = (byte)40;
      byteArray1[5] = (byte)123;
      byteArray1[6] = (byte) (-128);
      byteArray1[7] = (byte)110;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte)123;
      byteArray2[2] = (byte)40;
      byteArray2[3] = (byte)102;
      byteArray2[4] = (byte)117;
      byteArray2[5] = (byte) (-116);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)40;
      byteArray3[1] = (byte) (-116);
      byteArray3[2] = (byte)117;
      byteArray3[3] = (byte) (-128);
      byteArray3[4] = (byte) (-128);
      byteArray3[5] = (byte)110;
      byteArray3[6] = (byte)117;
      byteArray3[7] = (byte)110;
      byteArray3[8] = (byte) (-51);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte)102;
      byteArray4[1] = (byte) (-116);
      byteArray4[2] = (byte) (-101);
      byteArray4[3] = (byte)123;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte)102;
      byteArray5[1] = (byte) (-29);
      byteArray5[2] = (byte)40;
      byteArray5[3] = (byte)81;
      byteArray5[4] = (byte) (-128);
      byteArray5[5] = (byte) (-101);
      byteArray5[6] = (byte) (-101);
      byteArray5[7] = (byte)40;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)40;
      byteArray6[1] = (byte)117;
      byteArray6[2] = (byte)123;
      byteArray6[3] = (byte)117;
      byteArray6[4] = (byte)40;
      byteArray6[5] = (byte) (-128);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte) (-128);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte)123;
      byteArray8[1] = (byte) (-128);
      byteArray8[2] = (byte) (-128);
      byteArray8[3] = (byte)40;
      byteArray8[4] = (byte)78;
      byteArray8[5] = (byte)81;
      byteArray0[7] = byteArray8;
      linkedList0.push(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][5];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-16);
      byteArray1[1] = (byte) (-38);
      byteArray1[2] = (byte)69;
      byteArray1[3] = (byte)70;
      byteArray1[4] = (byte) (-123);
      byteArray1[5] = (byte)33;
      byteArray1[6] = (byte)33;
      byteArray1[7] = (byte) (-31);
      byteArray1[8] = (byte)51;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-38);
      byteArray2[1] = (byte)33;
      byteArray2[2] = (byte) (-38);
      byteArray2[3] = (byte)69;
      byteArray2[4] = (byte) (-123);
      byteArray2[5] = (byte)33;
      byteArray2[6] = (byte) (-78);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-16);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)51;
      byteArray4[1] = (byte) (-16);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)51;
      byteArray5[1] = (byte)33;
      byteArray5[2] = (byte)70;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte)33;
      byteArray6[1] = (byte) (-123);
      byteArray6[2] = (byte)33;
      byteArray6[3] = (byte)69;
      byteArray6[4] = (byte) (-16);
      byteArray6[5] = (byte)58;
      byteArray6[6] = (byte) (-16);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte)33;
      byteArray7[1] = (byte) (-16);
      byteArray7[2] = (byte) (-78);
      byteArray7[3] = (byte) (-31);
      byteArray7[4] = (byte) (-123);
      byteArray7[5] = (byte)32;
      byteArray7[6] = (byte)33;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte)32;
      byteArray8[1] = (byte)0;
      byteArray8[2] = (byte)33;
      byteArray8[3] = (byte)32;
      byteArray8[4] = (byte) (-78);
      byteArray8[5] = (byte)70;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[4];
      byteArray9[0] = (byte)33;
      byteArray9[1] = (byte)0;
      byteArray9[2] = (byte)93;
      byteArray9[3] = (byte) (-78);
      byteArray0[8] = byteArray9;
      linkedList0.offer(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jEa{M$");
      linkedList0.offerFirst((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer(240);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add((byte[][]) null);
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      linkedList0.add((byte[][]) null);
      isc_blob_handle_impl1.setRblId(810);
      isc_blob_handle_impl1.setRblId(62);
      isc_blob_handle_impl0.setBlobId(62);
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl1.setRblId(63);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl2.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl2.setRblId(2);
      isc_blob_handle_impl2.getDb();
      isc_blob_handle_impl isc_blob_handle_impl5 = new isc_blob_handle_impl();
      isc_blob_handle_impl5.setDb((isc_db_handle_impl) null);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[7];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[8];
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[2] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[5] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobField0;
      Subject subject0 = new Subject();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertFalse(fBCachedFetcher0.isFirst());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[7];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[2] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobFieldArray0[2];
      fBBlobFieldArray0[4] = fBBlobFieldArray0[3];
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[27];
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobFieldArray0[4];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray1[5] = fBBlobFieldArray0[2];
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      Subject subject0 = new Subject();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      SQLWarning sQLWarning0 = new SQLWarning("", "");
      sQLWarning0.getLocalizedMessage();
      SQLWarning sQLWarning1 = new SQLWarning("Result set is TYPE_FORWARD_ONLY", "", 665, sQLWarning0);
      sQLWarning1.setNextWarning(sQLWarning0);
      sQLWarning0.setNextException(sQLWarning1);
      linkedList0.add((byte[][]) null);
      sQLWarning0.getLocalizedMessage();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[7];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[1] = fBBlobField0;
      fBBlobFieldArray0[2] = fBBlobField0;
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobField0;
      fBBlobFieldArray0[6] = fBBlobField0;
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[8];
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobField0;
      fBBlobFieldArray1[4] = fBBlobField0;
      fBBlobFieldArray1[5] = fBBlobField0;
      fBBlobFieldArray1[6] = fBBlobField0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jEa{M$");
      fBBlobFieldArray0[4] = fBBlobField0;
      linkedList0.toArray(fBBlobFieldArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[7];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[17];
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[11] = fBBlobField0;
      fBBlobFieldArray1[2] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobField0;
      fBBlobFieldArray1[4] = fBBlobField0;
      fBBlobFieldArray1[4] = fBBlobField0;
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobField0;
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-32);
      byteArray0[3] = (byte) (-83);
      byteArray0[3] = (byte) (-32);
      byteArray0[4] = (byte) (-32);
      byte[][] byteArray1 = new byte[8][8];
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-83);
      byteArray1[0] = byteArray2;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-32);
      byteArray1[6] = byteArray3;
      byteArray1[7] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[5] = (byte) (-83);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedList0.clear();
      linkedList0.pollLast();
      linkedList0.pollLast();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      linkedList0.pollLast();
      linkedList0.add((byte[][]) null);
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList0.pollLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 2386;
      fBCachedFetcher0.absolute(2386);
      fBCachedFetcher0.setFetchSize(1140);
      int int1 = 540;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.pollLast();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl1.setRblId(4341);
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl2.setBlobId((-135));
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl4.setRblId(91);
      isc_blob_handle_impl3.setBlobId(4341);
      isc_blob_handle_impl4.setBlobId((-1866L));
      isc_blob_handle_impl isc_blob_handle_impl5 = new isc_blob_handle_impl();
      isc_blob_handle_impl1.getTr();
      isc_blob_handle_impl0.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl3.setRblId(134217728);
      isc_blob_handle_impl1.getDb();
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      linkedList1.offerFirst((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-5);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[3][8];
      byteArray1[0] = byteArray0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8837032868393835
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.close();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.next();
      fBCachedFetcher1.previous();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher2.afterLast();
      fBCachedFetcher2.isAfterLast();
      fBCachedFetcher1.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher2.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_id((-2));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setUpdateCount(0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) isc_stmt_handle_impl2);
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate0.or(predicate5);
      Predicate<Object> predicate6 = predicate0.and(predicate2);
      predicate2.or(predicate6);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate8 = predicate1.or(predicate7);
      linkedList0.removeIf(predicate8);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      isc_stmt_handle_impl1.ensureCapacity(0);
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setRsr_id((-2519));
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute((-1285));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl0.setTr((isc_tr_handle_impl) null);
      isc_tr_handle_impl0.forgetResultSets();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl1.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl1.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl2);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl1.getTransactions();
      isc_db_handle_impl1.getRdbId();
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue0 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_tr_handle_impl1.forgetResultSets();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.unregisterTransaction();
      isc_stmt_handle_impl1.ensureCapacity(4);
      isc_stmt_handle_impl1.ensureCapacity(1);
      isc_stmt_handle_impl1.setRsr_id(3);
      isc_stmt_handle_impl1.setRsr_id(0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][3];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte) (-76);
      byteArray1[2] = (byte) (-125);
      byteArray1[3] = (byte) (-85);
      byteArray1[4] = (byte) (-47);
      byteArray1[5] = (byte)5;
      byteArray1[6] = (byte) (-112);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-37);
      byteArray2[2] = (byte) (-47);
      byteArray2[3] = (byte) (-125);
      byteArray2[4] = (byte) (-47);
      byteArray2[5] = (byte)5;
      byteArray2[6] = (byte)118;
      byteArray2[7] = (byte) (-76);
      byteArray2[8] = (byte) (-76);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-125);
      byteArray3[1] = (byte) (-112);
      byteArray3[2] = (byte) (-112);
      byteArray3[3] = (byte) (-94);
      byteArray3[4] = (byte) (-112);
      byteArray3[5] = (byte) (-94);
      byteArray3[6] = (byte) (-112);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-112);
      byteArray4[1] = (byte) (-112);
      byteArray4[2] = (byte) (-112);
      byteArray4[3] = (byte) (-125);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-37);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte) (-85);
      byteArray6[1] = (byte)118;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte) (-125);
      byteArray7[1] = (byte) (-37);
      byteArray7[2] = (byte) (-47);
      byteArray7[3] = (byte) (-85);
      byteArray7[4] = (byte) (-112);
      byteArray7[5] = (byte)5;
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.forgetResultSets();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl1);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl1.setDialect(3);
      isc_db_handle_impl0.getTransactions();
      isc_db_handle_impl1.getRdbId();
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue0 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      isc_tr_handle_impl4.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl7 = isc_blob_handle_impl0.getTr();
      isc_tr_handle_impl7.forgetResultSets();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(5);
      isc_stmt_handle_impl1.ensureCapacity(3597);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setRsr_id(2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FBBlobField[] fBBlobFieldArray0 = new FBBlobField[7];
      FBBlobField fBBlobField0 = mock(FBBlobField.class, new ViolatedAssumptionAnswer());
      fBBlobFieldArray0[0] = fBBlobField0;
      fBBlobFieldArray0[0] = fBBlobFieldArray0[1];
      fBBlobFieldArray0[3] = fBBlobField0;
      fBBlobFieldArray0[4] = fBBlobField0;
      fBBlobFieldArray0[5] = fBBlobFieldArray0[6];
      fBBlobFieldArray0[6] = fBBlobFieldArray0[5];
      FBBlobField[] fBBlobFieldArray1 = new FBBlobField[17];
      fBBlobFieldArray1[0] = fBBlobField0;
      fBBlobFieldArray1[1] = fBBlobField0;
      fBBlobFieldArray1[2] = fBBlobField0;
      fBBlobFieldArray1[3] = fBBlobField0;
      fBBlobFieldArray1[4] = fBBlobField0;
      fBBlobFieldArray1[4] = fBBlobField0;
      fBBlobFieldArray1[6] = fBBlobField0;
      fBBlobFieldArray1[7] = fBBlobFieldArray0[0];
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-83);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-83);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator1 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator1 = null;
      try {
        internalTransactionCoordinator_MetaDataTransactionCoordinator1 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator(internalTransactionCoordinator1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.forgetResultSets();
      isc_tr_handle_impl isc_tr_handle_impl4 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl3);
      isc_tr_handle_impl isc_tr_handle_impl5 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl6 = new isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl7 = isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl7);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl1);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl1.setDialect(3);
      isc_db_handle_impl0.getTransactions();
      isc_db_handle_impl1.getRdbId();
      PriorityBlockingQueue<AbstractIscTrHandle> priorityBlockingQueue0 = new PriorityBlockingQueue<AbstractIscTrHandle>();
      isc_tr_handle_impl4.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl8 = isc_blob_handle_impl0.getTr();
      isc_tr_handle_impl8.forgetResultSets();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.unregisterTransaction();
      isc_stmt_handle_impl1.ensureCapacity(5);
      isc_stmt_handle_impl1.ensureCapacity(3597);
      isc_stmt_handle_impl0.setRsr_id(2319);
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setRsr_id(2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollLast();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5555666420118905
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer(552);
      integerArray0[0] = integer0;
      int int0 = 72;
      Integer integer1 = new Integer(72);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      Integer.compareUnsigned(14, 0);
      Integer.getInteger("^!7|x6h", integer2);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer3 = new Integer(int0);
      Integer.getInteger("^!7|x6h", integer3);
      fBCachedFetcher0.relative(14);
      integerArray0[2] = (Integer) int0;
      Integer.compare(3259, (-674));
      Integer.remainderUnsigned((-674), (-1059));
      fBCachedFetcher0.relative(0);
      try { 
        Integer.valueOf("^!7|x6h");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"^!7|x6h\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setRsr_id((-2));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setUpdateCount(0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) isc_stmt_handle_impl2);
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate0.or(predicate5);
      Predicate<Object> predicate6 = predicate0.and(predicate2);
      predicate2.or(predicate6);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate8 = predicate1.or(predicate7);
      linkedList0.removeIf(predicate8);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList1);
      isc_stmt_handle_impl1.ensureCapacity(0);
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setRsr_id(0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
