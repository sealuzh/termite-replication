/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 05:36:45 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3517839942896461
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Reader reader0 = null;
      int int0 = 13;
      int int1 = (-2159);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 13, (-2159));
      javaCharStream0.adjustBeginLineColumn((-3873), 8);
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = null;
      javaCharStream0.buffer = null;
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VIc*u\"S3gLbN]at");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("C<R0^l\"~GhIR");
      javaCharStream0.getColumn();
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte) (-102);
      byteArray0[2] = (byte) (-22);
      pipedOutputStream0.write(byteArray0);
      pipedOutputStream0.write((-537));
      StringReader stringReader0 = new StringReader("nbQ,z>57XA>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-22), 243);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C&.QzXTL)>I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("C&.QzXTL)>I");
      stringReader1.markSupported();
      stringReader1.reset();
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-9), 42, 0);
      StringReader stringReader2 = new StringReader("\u0007");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 513, 2048, 2048);
      String string0 = javaCharStream1.GetImage();
      assertEquals("", string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream(520);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 108, 1859, 1859);
      javaCharStream0.bufsize = 520;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "\\e8h+~p~?\"s";
      StringReader stringReader0 = new StringReader("e8h+~p~?\"s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 86);
      javaCharStream0.ReadByte();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(1635);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1549
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.9675446070142595
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e8h+kp~\"s");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-12), (-12), 86);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginColumn();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 870, 870, 0);
      StringReader stringReader0 = new StringReader(".w5xU3|");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-1), 47);
      javaCharStream0.adjustBeginLineColumn(870, 5);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      assertEquals(5, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0228085294147036
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 192, 59, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 7, 0, 0);
      StringReader stringReader1 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      stringReader1.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      stringReader1.markSupported();
      charArray0[1] = '^';
      stringReader1.read(charArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(7, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1565), 13);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1565), (-1565), 55);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4371246463145226
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      String string0 = "Go(PUu";
      StringReader stringReader0 = new StringReader("Go(PUu");
      javaCharStream0.ReInit((Reader) stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2834, 1);
      javaCharStream1.backup(1);
      javaCharStream0.FillBuff();
      javaCharStream1.BeginToken();
      javaCharStream1.getEndColumn();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":~\"kHM.Si^=S4+");
      javaCharStream0.ReInit((Reader) stringReader0, 2834, 1, 99);
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VIc*u\"S3gLbN]at");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader("VIc*u\"S3gLbN]at");
      StringReader stringReader2 = new StringReader("VIc*u\"S3gLbN]at");
      StringReader stringReader3 = new StringReader("C<R0^l\"~GhIR");
      char[] charArray0 = new char[0];
      stringReader2.read(charArray0);
      javaCharStream0.GetSuffix(1518);
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.002048871561054
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e8h+~p~?\"s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 86);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("B lQUexNsk7a.a`_eT");
      javaCharStream0.adjustBeginLineColumn(0, 70);
      javaCharStream0.GetImage();
      assertEquals(86, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 192, 59, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 7, 0, 1);
      StringReader stringReader1 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      stringReader1.ready();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$iGkYX^P`Hh[ ,vuL ");
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = '^';
      int int0 = stringReader1.read(charArray0);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.831353549917586
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup((-1));
      javaCharStream1.BeginToken();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.470751182135193
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.getBeginColumn();
      javaCharStream1.ReInit((Reader) stringReader0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      javaCharStream1.backup((-2441));
      javaCharStream1.BeginToken();
      javaCharStream1.adjustBeginLineColumn(0, 86);
      javaCharStream1.Done();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0, 818, 568);
      // Undeclared exception!
      try { 
        javaCharStream1.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9852314110718625
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_OmDAyaClc,yB ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sV<DgYx(B9i");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.prevCharIsCR = true;
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(9, 1);
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("_OmDAyaClc,yB ", "_OmDAyaClc,yB ");
      MockFile mockFile1 = new MockFile("");
      String string0 = "";
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        MockFile.createTempFile("", "m4c&*PXeYzS4", (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 870, 870, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = " column ";
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 86, 0);
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0620851908220947
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "\\e8h+~p~?\"s";
      StringReader stringReader0 = new StringReader("e8h+~p~?\"s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 86);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      JavaCharStream.hexval('8');
      try { 
        JavaCharStream.hexval(' ');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2875, 2875, 2199);
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringReader1.ready();
      char[] charArray0 = new char[2];
      javaCharStream0.bufpos = (int) 'e';
      charArray0[1] = '[';
      stringReader1.read(charArray0);
      char[] charArray1 = javaCharStream0.GetSuffix(2199);
      assertEquals(2199, charArray1.length);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.read();
      StringReader stringReader1 = new StringReader(" column ");
      stringReader1.ready();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2879, 2879, 2199);
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      stringReader1.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = '[';
      char char0 = '3';
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.5430396622282272
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.getBeginColumn();
      StringReader stringReader0 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)5;
      sequenceInputStream1.read(byteArray0);
      sequenceInputStream0.read(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(k6C");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = ':';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.604543816410304
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.getBeginColumn();
      javaCharStream1.ReInit((Reader) stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream1.backup((-2441));
      javaCharStream1.BeginToken();
      javaCharStream1.adjustBeginLineColumn(0, 86);
      javaCharStream0.ReInit((Reader) stringReader0, 818, 568);
      javaCharStream1.getLine();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = '`';
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2012358029788215
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "\\e8h+~p~?\"s";
      StringReader stringReader0 = new StringReader("e8h+~p~?\"s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 3, (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e8h+~p~?\"s");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.backup(2896);
      javaCharStream1.BeginToken();
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'e';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[2] = 'e';
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0198149924929463
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1017, 89);
      javaCharStream0.ReInit((Reader) null, 1, 0, 0);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2879, 2879);
      javaCharStream0.adjustBeginLineColumn((-1819), 2171);
      javaCharStream0.adjustBeginLineColumn(2901, 2901);
      assertEquals(2901, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8609685009034056
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e8h+~p~?\"s");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 86);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      stringReader0.skip(0);
      pipedInputStream0.skip((-1104L));
      pipedInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ExpandBuff(true);
      stringReader0.skip(0);
      StringReader stringReader1 = new StringReader("e8h+~p~?\"s");
      stringReader0.markSupported();
      stringReader1.markSupported();
      char[] charArray0 = new char[3];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      stringReader1.read(charArray0);
      stringReader0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte) (-85);
      byteArray0[4] = (byte)61;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-4);
      byteArray0[11] = (byte)87;
      sequenceInputStream0.read(byteArray0);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 870, 870, 0);
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.reset();
      javaCharStream0.adjustBeginLineColumn(11, 3514);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(3514, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Reader reader0 = null;
      int int0 = 4;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4, 4);
      javaCharStream0.ReInit((Reader) null, 4, 1185);
      int int1 = 9;
      int int2 = 71;
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VIc*u\"S3gLbN]at");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j `5o=56'1OMeq]D/#");
      stringReader0.read();
      stringReader0.skip(0L);
      char[] charArray0 = new char[8];
      charArray0[0] = 'g';
      charArray0[1] = '';
      charArray0[2] = 't';
      stringReader0.ready();
      stringReader0.read();
      charArray0[3] = ' ';
      charArray0[4] = 'h';
      charArray0[5] = 'l';
      charArray0[6] = '~';
      charArray0[7] = '3';
      stringReader0.read(charArray0);
      char[] charArray1 = new char[0];
      stringReader0.read(charArray1);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
      
      int int1 = JavaCharStream.hexval('1');
      assertEquals(1, int1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String string0 = "3%6";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3%6");
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = " column ";
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      char[] charArray0 = new char[11];
      charArray0[0] = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      char[] charArray0 = new char[2];
      charArray0[0] = 'X';
      charArray0[1] = '[';
      JavaCharStream.hexval('4');
      StringReader stringReader0 = new StringReader("");
      stringReader0.read(charArray0);
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-986);
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)57;
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte) (-45);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      char char0 = '6';
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.156905477713466
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("_OmDyaClc,yB ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      MockFile mockFile0 = new MockFile("h", "HX[^");
      String string0 = null;
      MockFile mockFile1 = new MockFile((String) null, ">(^7K2#zH");
      javaCharStream0.GetImage();
      MockFile mockFile2 = new MockFile("*^[ig^i#2Cw%%-uD", ">(^7K2#zH");
      MockFile mockFile3 = new MockFile("_SMhQFQj3[?X");
      MockFile mockFile4 = new MockFile("_SM+hQFQj3[?X");
      javaCharStream0.getEndLine();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, ";Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \";Y\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[4];
      charArray0[1] = 'u';
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'a';
      charArray0[1] = 'i';
      charArray0[2] = '7';
      charArray0[3] = '\'';
      javaCharStream0.Done();
      charArray0[4] = '>';
      charArray0[5] = '`';
      charArray0[6] = 'j';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      char[] charArray0 = new char[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      charArray0[0] = 'e';
      charArray0[1] = '[';
      JavaCharStream.hexval('3');
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C&.QzXTL)>I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C&.QzXTL)>I");
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = '+';
      charArray0[2] = '[';
      charArray0[3] = ':';
      charArray0[4] = '+';
      charArray0[6] = '[';
      stringReader0.skip(1271L);
      charArray0[8] = ':';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('b');
      try { 
        JavaCharStream.hexval('.');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('B');
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 890, 890, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2320555836111624
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("sWe`^@|Iw[@l<UO");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-113));
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader(";");
      stringReader0.read();
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader1, (-113), (-4352));
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getLine();
      assertEquals((-4352), javaCharStream0.getBeginColumn());
      assertEquals((-113), int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      charArray0[4] = '[';
      StringReader stringReader0 = new StringReader("3%6");
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 3, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.5235789306391931
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 0, 0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(k6C");
      StringReader stringReader0 = new StringReader("(k6C");
      char[] charArray0 = new char[1];
      charArray0[0] = 'q';
      sequenceInputStream0.available();
      stringReader0.read(charArray0);
      JavaCharStream.hexval('6');
      JavaCharStream.hexval('5');
      try { 
        JavaCharStream.hexval('(');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.2804809771382422
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g$");
      javaCharStream0.getBeginColumn();
      javaCharStream1.backup((-2441));
      javaCharStream1.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader0, 818, 568);
      javaCharStream1.getLine();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte) (-74);
      byteArray0[2] = (byte) (-38);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-113);
      sequenceInputStream0.read(byteArray0);
      byte[] byteArray1 = new byte[0];
      sequenceInputStream0.read(byteArray1);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 192, 59, 7);
      javaCharStream0.ReInit((Reader) stringReader0, 14, 0, 0);
      StringReader stringReader1 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      stringReader1.ready();
      char[] charArray0 = new char[2];
      stringReader1.markSupported();
      stringReader1.read(charArray0);
      stringReader0.close();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.96667338624826
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("_OmDyaClc,yB ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.UpdateLineColumn('a');
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(1, (-1));
      javaCharStream0.BeginToken();
      MockFile mockFile0 = new MockFile("LrRV Q`", "");
      MockFile mockFile1 = new MockFile("");
      try { 
        MockFile.createTempFile("", "LrRV Q`", (File) mockFile1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 514, 102, 14);
      StringReader stringReader1 = new StringReader(" column ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      stringReader1.ready();
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 'e';
      stringReader1.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5084391173553278
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.getBeginColumn();
      javaCharStream1.ReInit((Reader) stringReader0);
      stringReader0.skip(0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      javaCharStream1.BeginToken();
      javaCharStream1.adjustBeginLineColumn(0, 86);
      javaCharStream0.ReInit((Reader) stringReader0, 818, 568);
      javaCharStream1.getLine();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(2048, 0);
      javaCharStream0.inBuf = (-2310);
      javaCharStream1.ExpandBuff(true);
      javaCharStream1.ExpandBuff(false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8213144407101967
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C&.QzXTL)>I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("C&.QzXTL)>I");
      stringReader1.reset();
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader2 = new StringReader(" column ");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("F[UYKE;Wi/94M");
      javaCharStream0.adjustBeginLineColumn((-669), 80);
      assertEquals((-669), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.427201947024318
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.getBeginColumn();
      javaCharStream1.ReInit((Reader) stringReader0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      javaCharStream1.backup((-2441));
      javaCharStream1.BeginToken();
      javaCharStream1.adjustBeginLineColumn(0, 86);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      javaCharStream0.ReInit((Reader) stringReader0, 818, 568);
      javaCharStream1.getLine();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(2048, 1);
      String string0 = "9GRd$h1gMd4";
      String string1 = "VsjN)";
      MockFile mockFile0 = new MockFile("VsjN)", "QI8f?t~dih*");
      File file0 = MockFile.createTempFile(" column ", "9GRd$h1gMd4", (File) mockFile0);
      MockFile mockFile1 = null;
      try {
        mockFile1 = new MockFile(file0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.184660488307191
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C&.QzXTL)>I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("C&.QzXTL)>I");
      stringReader1.reset();
      stringReader1.read();
      stringReader1.read();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.nextCharInd = 67;
      javaCharStream0.backup(0);
      javaCharStream0.BeginToken();
      stringReader1.skip(1L);
      javaCharStream0.adjustBeginLineColumn(0, 86);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.read();
      javaCharStream0.ReInit((Reader) stringReader1, (-134), 0, 1352);
      StringReader stringReader2 = new StringReader("5+(OHlm5:ypH SnR");
      StringReader stringReader3 = new StringReader("C&.QzXTL)>I");
      stringReader3.mark(5);
      stringReader3.ready();
      stringReader3.markSupported();
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      stringReader2.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8150981131141763
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2875, 2875, 2199);
      StringReader stringReader1 = new StringReader(" column ");
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = '[';
      javaCharStream0.adjustBeginLineColumn(4096, 2199);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1201), 4096);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('A');
      try { 
        JavaCharStream.hexval('w');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.256611695827187
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.BeginToken();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 13, 13);
      StringReader stringReader1 = new StringReader(",OJ]J>)N M8XZ!~1@O");
      StringReader stringReader2 = new StringReader(",OJ]J>)N M8XZ!~1@O");
      javaCharStream0.ReInit((Reader) stringReader2);
      JavaCharStream.hexval('9');
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1613, (-1533), (-1261));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j `5o=56'OMeq]Dw#");
      stringReader0.read();
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      assertEquals((-1), javaCharStream1.bufpos);
      
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[2];
      charArray0[0] = '$';
      charArray0[1] = '$';
      stringReader1.read(charArray0);
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C&.QzXTL)>I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-1));
      assertEquals((-1), javaCharStream1.bufpos);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C&.QzXTL)>I");
      StringReader stringReader2 = new StringReader("C&.QzXTL)>I");
      char[] charArray0 = new char[1];
      stringReader1.read(charArray0);
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("+$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-1), (-1), 675);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1904, 1904, 1904);
      JavaCharStream.hexval('D');
      int int0 = 0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int1 = (-1);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = '[';
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
      
      int int1 = JavaCharStream.hexval('d');
      assertEquals(13, int1);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(87);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 793);
      javaCharStream0.adjustBeginLineColumn(0, (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("u");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 65, 0);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 870, 1, 870);
      javaCharStream0.ReInit((Reader) null, 0, 2048, 1419);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("tC[Qlk~ru[{3au");
      stringReader1.ready();
      char[] charArray0 = new char[6];
      charArray0[0] = 't';
      charArray0[1] = 'T';
      charArray0[2] = 'x';
      charArray0[3] = 'a';
      charArray0[4] = 'o';
      charArray0[5] = '5';
      int int0 = stringReader0.read(charArray0);
      assertEquals(6, int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7738855787232595
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OR[2n:@OsT?a#7,Cld");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, 102, 1449);
      StringReader stringReader1 = new StringReader("OR[2n:@OsT?a#7,Cld");
      javaCharStream0.adjustBeginLineColumn(294, 1);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(1, 2199);
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.996030985958194
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("_OmDyaClc,yB ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup((-1284));
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      MockFile mockFile0 = new MockFile("_OmDyaClc,yB ", "_OmDyaClc,yB ");
      MockFile mockFile1 = new MockFile(" column ", "_OmDyaClc,yB ");
      MockFile mockFile2 = new MockFile("", "");
      String string0 = "Nj>D;z>l6r4k$j";
      MockFile mockFile3 = new MockFile("Nj>D;z>l6r4k$j");
      mockFile2.setWritable(false, true);
      MockFile mockFile4 = new MockFile("");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile2, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.897367567113771
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("_OmDyaClc,yB ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      MockFile mockFile0 = new MockFile("h", "HX[^");
      String string0 = null;
      MockFile mockFile1 = new MockFile((String) null, ">(^7K2#zH");
      MockFile mockFile2 = new MockFile("*^[ig^i#2Cw%%-uD", ">(^7K2#zH");
      mockFile0.delete();
      MockFile mockFile3 = new MockFile("_SMhQFQj3[?X");
      MockFile mockFile4 = new MockFile("_SMhQFQj3[?X");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, ";Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \";Y\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = '`';
      charArray0[3] = 'R';
      charArray0[4] = 'L';
      charArray0[5] = 'L';
      charArray0[6] = 'L';
      stringReader0.read(charArray0);
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1904, 1904, 1904);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      javaCharStream0.Done();
      javaCharStream0.Done();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 7, (byte)80);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.read();
      javaCharStream0.GetImage();
      javaCharStream0.line = (int) (byte)80;
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 870, 870, 0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 870, 0);
      javaCharStream1.GetImage();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(870, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9960309859581935
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 192, 59, 1);
      javaCharStream0.ReInit((Reader) stringReader0, 7, 0, 0);
      StringReader stringReader1 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      stringReader1.ready();
      char[] charArray0 = new char[8];
      charArray0[0] = 'T';
      charArray0[1] = 's';
      charArray0[2] = 'A';
      charArray0[3] = '}';
      charArray0[4] = '<';
      charArray0[5] = '%';
      charArray0[6] = '%';
      charArray0[7] = '`';
      stringReader1.read(charArray0, 3, 1);
      javaCharStream0.nextCharInd = 0;
      char[] charArray1 = new char[2];
      charArray1[0] = 'e';
      stringReader1.markSupported();
      charArray1[1] = '^';
      stringReader1.read(charArray1);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(7, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.GetSuffix(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      char[] charArray0 = new char[9];
      char char0 = 'P';
      charArray0[1] = '#';
      charArray0[2] = 'P';
      charArray0[3] = 'C';
      charArray0[4] = 'P';
      charArray0[5] = '[';
      charArray0[6] = '%';
      charArray0[7] = '+';
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 'P');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-122);
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)44;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1981, 14, (byte)86);
      int[] intArray0 = new int[7];
      intArray0[0] = 689;
      intArray0[1] = (int) (byte)44;
      intArray0[2] = (-1);
      intArray0[3] = (int) (byte)86;
      intArray0[4] = (int) (byte) (-122);
      intArray0[5] = (int) (byte)44;
      intArray0[6] = (int) (byte)44;
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      StringReader stringReader0 = new StringReader("nbQ,z>57XAE>");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-586), (-586), (-1563));
      javaCharStream0.ExpandBuff(false);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      String string0 = "_OmDyaClc,yB ";
      StringReader stringReader0 = new StringReader("_OmDyaClc,yB ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.ReadByte();
      javaCharStream0.AdjustBuffSize();
      MockFile mockFile0 = new MockFile("_OmDyaClc,yB ", ">(^7K2#zH");
      MockFile mockFile1 = new MockFile("", "_OmDyaClc,yB ");
      MockFile mockFile2 = new MockFile("_OmDyaClc,yB ", "_OmDyaClc,yB ");
      MockFile mockFile3 = new MockFile("Nj>D;z>l6r4k$j");
      MockFile mockFile4 = new MockFile(">(^7K2#zH");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile3, "_OmDyaClc,yB ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"_OmDyaClc,yB \" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\u0007");
      stringReader0.skip(2199);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 513, 2048, 2048);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 870, 1235);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 8, 8, (-323));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$iGkYX^P`Hh[ ,vuL ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-353), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MockFile mockFile0 = new MockFile("g=XR", "T^=bFNr{");
      MockFile mockFile1 = new MockFile("T^=bFNr{");
      File file0 = MockFile.createTempFile("T^=bFNr{", "T^=bFNr{", (File) mockFile1);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFile1.setWritable(false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      String string0 = ".";
      StringReader stringReader0 = new StringReader(".");
      stringReader0.reset();
      mockFile1.setExecutable(true, true);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.GetSuffix(0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      char[] charArray0 = new char[11];
      stringReader0.reset();
      intArray0[0] = (int) '@';
      stringReader0.close();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(0);
      StringReader stringReader0 = new StringReader("nbQ,z>57XAE>");
      stringReader0.markSupported();
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 90, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      char[] charArray1 = javaCharStream0.GetSuffix(0);
      assertEquals(0, pipedInputStream0.available());
      assertArrayEquals(new char[] {}, charArray1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1, 1);
      StringReader stringReader0 = new StringReader("?aRp~27^8>B\"S:[0&");
      char[] charArray0 = new char[2];
      charArray0[0] = 'e';
      charArray0[1] = 'L';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(4076);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("e}poJlC '`ot6ad");
      stringReader0.mark(1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1045, 1045);
      javaCharStream0.backup(89);
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      int int0 = 109;
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1045, 109);
      javaCharStream1.AdjustBuffSize();
      MockFile mockFile0 = new MockFile("JI(IPgr>~v2`Tn0'&", "JI(IPgr>~v2`Tn0'&");
      stringReader0.markSupported();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.5660857389596289
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      String string0 = "_OmDAyaClc,yB ";
      StringReader stringReader0 = new StringReader("_OmDAyaClc,yB ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sV<DgYx(B9i");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.prevCharIsCR = true;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('*');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, 1, 0, (-15));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.read();
      stringReader0.skip(32);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 958, (-4004));
      javaCharStream0.Done();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 32, 958, (-853));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[8];
      charArray0[0] = ')';
      charArray0[1] = '\\';
      stringReader0.mark(381);
      charArray0[2] = 'V';
      charArray0[3] = 'J';
      charArray0[4] = '>';
      charArray0[5] = 'V';
      charArray0[6] = 'B';
      charArray0[7] = '.';
      stringReader0.read(charArray0, 1, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("vU5PSn");
      int int0 = 735;
      int int1 = 7;
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 735, 7);
      javaCharStream0.ReInit((Reader) stringReader0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      javaCharStream0.nextCharInd = 64;
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 38, 38);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 0, 38, 67);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-93);
      byteArray0[0] = (byte) (-93);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Reader reader0 = null;
      int int0 = (-216);
      int int1 = 1061;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-216), 1061);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'e';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[2] = 'e';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = 'e';
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("h8*UFd8");
      stringReader1.ready();
      StringReader stringReader2 = new StringReader("@Z-!55S%");
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = '^';
      charArray0[2] = '^';
      charArray0[3] = 'e';
      charArray0[4] = '^';
      charArray0[5] = 'e';
      charArray0[6] = 'e';
      charArray0[7] = 'e';
      stringReader2.read(charArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)83;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1680, (byte) (-8));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-8), 6139, 80);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)88, 80);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, 74);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("g$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-1));
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = JavaCharStream.staticFlag;
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('g', char0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.7565367399084864
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.write(870);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 870, 870, 870);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 870, 870);
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("C&.QzXTL)>I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("C&.QzXTL)>I");
      stringReader1.reset();
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-9), 42, 0);
      StringReader stringReader2 = new StringReader("\u0007");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 513, 2048, 2048);
      // Undeclared exception!
      try { 
        javaCharStream1.adjustBeginLineColumn(2199, 917);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      int int0 = (-1);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)54;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-28);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-28), 563);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 1, 1769);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }
}
