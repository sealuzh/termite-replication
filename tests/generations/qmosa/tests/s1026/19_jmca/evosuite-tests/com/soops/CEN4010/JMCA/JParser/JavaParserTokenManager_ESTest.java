/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 17:34:28 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3299825171242272
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("\r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1160, 40);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.mark(1999);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      StringReader stringReader1 = new StringReader("&.] Q;Q;");
      stringReader1.reset();
      stringReader1.markSupported();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte) (-64);
      byteArray0[5] = (byte)49;
      byteArray0[6] = (byte) (-64);
      stringReader1.ready();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      stringReader1.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9681719376689124
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("xzyZhC&}M0)or");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("xzyZhC");
      stringReader1.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = token_GTToken0.next;
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(")", token1.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.481499414074992
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("if");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3398), 36);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(36, javaCharStream0.getBeginColumn());
      assertEquals("if", token0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7644276939070827
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]8}7#(2qP3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 22);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = '@';
      charArray0[2] = '@';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte) (-13);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("=r|#");
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "8");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      Token.newToken(22);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 3.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.966347251245115
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("b+A=>UyC.Q\" ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1999, (-2116));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(9);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream2);
      stringReader0.reset();
      stringReader0.markSupported();
      stringReader0.reset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals((-2112), javaCharStream0.getBeginColumn());
      assertEquals(4, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9396151973900038
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("b+A=>UyC.Q\" ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1999, (-2116));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(9);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream1);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream2);
      stringReader0.reset();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      stringReader0.markSupported();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals((-2115), javaCharStream0.getBeginColumn());
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5322378912704626
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      StringReader stringReader1 = new StringReader("E.n3jXUg(:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1160, (-2147483647));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.mark(10);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      stringReader1.reset();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)49;
      byteArray0[5] = (byte)49;
      byteArray0[6] = (byte)49;
      byteArray0[7] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream0);
      stringReader1.markSupported();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1160, column -2147483646.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9824022738284666
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]K!-<wY^Qr5$OSS*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 25);
      javaCharStream0.line = 72;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(33, javaCharStream0.getBeginColumn());
      assertEquals(39, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0043239968679085
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("P1V.c2e|o([)L'xkA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1001, 1001);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      stringReader0.skip(281474976710656L);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.curChar = '1';
      stringReader1.markSupported();
      Token token0 = javaParserTokenManager1.getNextToken();
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token1 = javaParserTokenManager2.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager3.lengthOfMatch = 95;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 22, 2915, 29);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream1);
      stringReader0.markSupported();
      MockPrintStream mockPrintStream0 = new MockPrintStream("0~?W=cVdSy4.y");
      mockPrintStream0.print((long) 2915);
      javaParserTokenManager2.getNextToken();
      JavaParserTokenManager javaParserTokenManager5 = new JavaParserTokenManager(javaCharStream0);
      token1.endLine = 18;
      javaParserTokenManager3.getNextToken();
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token1);
      javaParserTokenManager3.TokenLexicalActions(token0);
      javaParserTokenManager5.SkipLexicalActions(token0);
      assertEquals(1010, javaCharStream0.getBeginColumn());
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.009977040289719
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("P1V.c2e|o([)L'xkA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1001, 1001);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      stringReader0.skip(281474976710656L);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.curChar = '1';
      stringReader1.markSupported();
      javaParserTokenManager1.getNextToken();
      stringReader0.ready();
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaParserTokenManager3.lengthOfMatch = 95;
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager4 = null;
      try {
        javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream0, (-3258));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -3258. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4323659452765574
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3398), 36);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte)47;
      byteArray0[4] = (byte) (-108);
      byteArray0[5] = (byte)106;
      byteArray0[6] = (byte)105;
      byteArray0[7] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 24, 34);
      byteArrayInputStream0.skip((byte)47);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      StringReader stringReader1 = new StringReader("private");
      stringReader1.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(47, token0.kind);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.067084837727967
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "goto";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "goto");
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 112, 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 112);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 112. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6357260277017707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("synchronized");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2140, (-454));
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("synchronized");
      stringReader1.mark(33);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      StringReader stringReader2 = new StringReader("synchronized");
      stringReader2.reset();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      stringReader1.markSupported();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5090265423559037
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qP?S6_z%Z~StoN13~e6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 50);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 50, (-485));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      stringReader0.markSupported();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qP");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(52, javaCharStream0.getBeginColumn());
      assertEquals(2, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3821179479027328
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "import");
      String string0 = "\"neT?";
      StringReader stringReader0 = new StringReader("\"neT?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-59), (-59));
      int[] intArray0 = new int[4];
      intArray0[0] = (-3690);
      intArray0[1] = (-59);
      intArray0[2] = 3146;
      intArray0[3] = (-59);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8718369577835259
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2977, 2977, 2977);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = '\'';
      charArray0[2] = '|';
      charArray0[3] = 'o';
      charArray0[4] = '}';
      charArray0[5] = 'd';
      charArray0[6] = '7';
      charArray0[7] = 'I';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.bufpos = 2977;
      StringReader stringReader0 = new StringReader("x ^dplsw<GsST>-P**G");
      javaCharStream0.inputStream = (Reader) stringReader0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("x ^dplsw<GsST>-P**G");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      mockPrintStream0.print(0L);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9508030977299895
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2977, 2977, 2977);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedInputStream0.connect(pipedOutputStream0);
      javaCharStream0.bufpos = 2977;
      StringReader stringReader0 = new StringReader("x ^dplsw<GsST>-P**G");
      javaCharStream0.inputStream = (Reader) stringReader0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("x ^dplsw<GsST>-P**G");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'q';
      charArray0[1] = 'U';
      charArray0[2] = 'Z';
      stringReader0.read(charArray0);
      mockPrintStream0.print(0L);
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2987, javaCharStream0.getBeginColumn());
      assertEquals(2987, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.346219474337729
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      MockFile.createTempFile("com.soops.CEN4010.JMCA.JParser.TokenMgrError", ".M");
      StringReader stringReader1 = new StringReader("Ki6lqEX");
      javaCharStream0.maxNextCharInd = 38;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 38, 116);
      javaCharStream1.column = (-1);
      javaCharStream1.maxNextCharInd = 1048;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 38, column 0.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5130719471734237
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "DEFAULT";
      StringReader stringReader0 = new StringReader("DEFAULT");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1500, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5583780077868705
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@M");
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.soops.CEN4010.JMCA.JParser.JavaParserConstants");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 15, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5053383168413812
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, 53);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("I*HQ0 <:p#g%~");
      stringReader1.ready();
      stringReader1.mark(555);
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4155976516127589
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "import");
      StringReader stringReader0 = new StringReader("\"neT?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-59), (-59));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -59, column -54.  Encountered: <EOF> after : \"\\\"neT?\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6094355653407617
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("L;7 8RI776SZ+|#DBLH%");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 63, (-2064), 91);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader2 = new StringReader("Cu7)+vJtX");
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      
      Token.GTToken token_GTToken2 = new Token.GTToken();
      Token token0 = token_GTToken2.next;
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals("7", token1.toString());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9538393238748126
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 2977, 2977, 2977);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      javaCharStream0.bufpos = 2977;
      StringReader stringReader0 = new StringReader("x ^dplsw<GsST>-P**G");
      javaCharStream0.inputStream = (Reader) stringReader0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("x ^dplsw<GsST>-P**G");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      mockPrintStream0.print(0L);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte) (-37);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      StringReader stringReader1 = new StringReader("D;");
      stringReader1.markSupported();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2979, javaCharStream0.getBeginColumn());
      assertEquals(107, token0.kind);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4918088040183395
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("\"im` Lplements\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2623), 91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      javaParserTokenManager0.getNextToken();
      StringReader stringReader1 = new StringReader("\"im` Lplements\"");
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-2623));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9843665651110174
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*HQ <:p#g%~");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjnewStateCnt = 1240;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)2;
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 8.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9814685222074462
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      StringReader stringReader1 = new StringReader("&.] Q;Q;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1999, 1999);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaCharStream0.prevCharIsCR = false;
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1999, column 2002.  Encountered: \"\\u007f\" (127), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String string0 = "\"im` Lplements\"";
      StringReader stringReader0 = new StringReader("\"im` Lplements\"");
      int int0 = (-2623);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2623), 91);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-96);
      byteArray0[6] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-96), 92);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 50, 101);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(17);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 17. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9845080000851691
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]K!-<wY^Qr5$OSS*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 25, 25);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      stringReader0.ready();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken3 = new Token.GTToken();
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = token_GTToken1.next;
      Token token1 = javaParserTokenManager0.getNextToken();
      assertEquals(28, javaCharStream0.getBeginColumn());
      assertEquals("-", token1.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5393680959953489
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("?IdDo:ND`Oj6[w!DG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 294, 26);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      token1.specialToken = token0;
      Token.GTToken token_GTToken0 = new Token.GTToken();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("IdDo");
      stringReader1.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken2 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 294, column 34.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      PrintStream printStream0 = javaParserTokenManager0.debugStream;
      javaParserTokenManager0.setDebugStream(printStream0);
      javaParserTokenManager0.MoreLexicalActions();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8243743671917843
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("L;7 8RI776SZ+|#DBLH%");
      stringReader1.markSupported();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"...\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 63, (-2064), 91);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)20;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)0;
      byteArray0[0] = (byte)39;
      byteArray0[3] = (byte)110;
      byteArray0[4] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 63, column -2044.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1912166159288355
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@M");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      Token token0 = javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("@M");
      stringReader1.mark(0);
      StringReader stringReader2 = new StringReader("lw/i'aD<");
      stringReader2.ready();
      stringReader2.close();
      javaParserTokenManager0.jjFillToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.SkipLexicalActions(token_GTToken0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      Token token1 = token_GTToken1.next;
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      javaParserTokenManager0.TokenLexicalActions(token0);
      javaParserTokenManager0.SwitchTo(0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-1));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2315358766924036
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "com.soops.CEN4010.JMCA.JParser.TokenMgrError";
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaCharStream javaCharStream1 = null;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager0.ReInit(javaCharStream0, 3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 74);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 74. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      StringReader stringReader1 = new StringReader("&.] Q;Q;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1999, 1999);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(1160);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      stringReader0.reset();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)113;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-64);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 128);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 128. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)75;
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)126, (byte)75);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("L;7 8RI776SZ+|#DBLH%");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 91, 2647);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.markSupported();
      stringReader1.mark(2647);
      StringReader stringReader2 = new StringReader("L;7 8RI776SZ+|#DBLH%");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      stringReader1.ready();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager2.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.175130563539781
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(17, javaCharStream0.bufpos);
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.TokenMgrError");
      MockFile.createTempFile("com.soops.CEN4010.JMCA.JParser.TokenMgrError", ".M");
      StringReader stringReader1 = new StringReader("Ki6lqEX");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      token_GTToken0.realKind = 17;
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(0, token_GTToken0.endColumn);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8243743671917843
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("L;7 8RI776SZ+|#DBLH%");
      stringReader1.markSupported();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"...\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 63, (-2064), 91);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)20;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)0;
      byteArray0[0] = (byte)39;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 63, column -2044.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5184997087130165
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I*HQ0 <:p#g%~");
      StringReader stringReader1 = new StringReader("P1V.c2e|o([)L'xkA");
      stringReader1.markSupported();
      MockPrintStream mockPrintStream0 = new MockPrintStream("\"...\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 63, (-2064), 91);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "P1V.c2e|o([)L'xkA");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)20;
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[1] = (byte)0;
      byteArray0[0] = (byte)39;
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, (byte)0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("P1V", token0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5460135909912487
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]8}7#(2qP3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, (-4));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = '@';
      charArray0[2] = 's';
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 11, column 0.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9729089946033271
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1160, 1160);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      stringReader0.skip(1160);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.markSupported();
      javaParserTokenManager1.getNextToken();
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9919491380114764
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r9/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1157, 1157);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(1810);
      javaParserTokenManager0.getNextToken();
      stringReader0.markSupported();
      javaParserTokenManager0.getNextToken();
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9452451759085316
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("\r");
      StringReader stringReader1 = new StringReader("&.] Q;Q;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1160, 40);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader1.mark(1999);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      StringReader stringReader2 = new StringReader("&.] Q;Q;");
      stringReader2.reset();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)113;
      byteArray0[5] = (byte)49;
      byteArray0[6] = (byte) (-64);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream0);
      stringReader2.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(41, javaCharStream0.getBeginColumn());
      assertEquals(".", token0.toString());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5862254369754956
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader("mfoCbt`j");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-120), (-120));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 27);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      stringReader0.markSupported();
      javaParserTokenManager0.getNextToken();
      stringReader0.ready();
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mfoCbt`j");
      byte[] byteArray1 = new byte[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mfoCbt`j");
      byteArray1[0] = (byte)46;
      byteArray1[1] = (byte)35;
      byteArray1[2] = (byte)43;
      byteArray1[3] = (byte)11;
      byteArray1[4] = (byte)11;
      byteArray1[5] = (byte)98;
      byteArray1[6] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (-271));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -271. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
