/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 15:46:17 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "eaM0-?E63=Df0gEn";
      Player player0 = new Player(5, "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", 2617, 5);
      boolean boolean0 = false;
      player0.reset(false);
      int int0 = (-995);
      Player player1 = new Player((-995), "eaM0-?E63=Df0gEn", (-995));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3, (String) null, "", (-25427), 3);
      player0.setY((-25427));
      player0.setJoinOK(player0, false);
      player0.setX(3);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isJoinOK(player0, false);
      player0.getZ();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3, (String) null, "", (-25427), 3);
      player0.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.setX(3);
      player0.setY(3);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isJoinOK(player0, false);
      player0.getZ();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(0.0F);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player();
      player0.isJoinOK(player1, true);
      player1.getZ();
      MockFile mockFile0 = new MockFile("dlxD6iKWb6?");
      MockFile mockFile1 = new MockFile("dlxD6iKWb6?", "");
      MockFile mockFile2 = new MockFile("./P", "");
      mockFile1.getAbsoluteFile();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SkUU5jqb4l$Yb<#-");
      MockFile mockFile3 = new MockFile(".*[.]classs$");
      mockFile3.delete();
      MockFile mockFile4 = new MockFile(mockFile1, "dlxD6iKWb6?");
      mockFile3.setReadable(true);
      MockFile mockFile5 = new MockFile(")qT>PL\u0000");
      MockFile mockFile6 = new MockFile(mockFile5, ".*[.]classs$");
      mockFile3.setWritable(true, false);
      MockFile mockFile7 = new MockFile("./P", "O");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      player0.getX();
      System.setCurrentTimeMillis((-3626L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(1363, "k7", "k7", 1363, 1363);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)115;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1672), (byte)116);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "";
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(3, (String) null, "", (-25427), 3);
      player0.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.setX(17.73713F);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.getIP();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      player0.getZ();
      String string1 = "";
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3, (String) null, "", (-25427), 3);
      player0.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.setZ((-2723.852F));
      player0.setX(3);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isJoinOK(player0, false);
      player0.getZ();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player((-23552));
      player0.setDead((long) (-23552), true);
      player0.getSubparty();
      Party party0 = new Party();
      player0.remove(party0);
      player0.setDead((long) (-23552), true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player0.type();
      player0.getTimeOfDeath();
      player0.pack();
      float float0 = player0.getY();
      assertEquals((-23552L), player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(Integer.MAX_VALUE);
      String string0 = "";
      player0.id = Integer.MAX_VALUE;
      int int0 = (-856);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.730800565577398
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.id = 1445;
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.add(party0);
      Player player1 = new Player((-995), "", (-995));
      player1.setJoinOK(player0, false);
      player0.setX(0.0F);
      player0.getY();
      player0.getIP();
      player1.isJoinOK(player0, false);
      player0.getZ();
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(1445);
      Player player2 = new Player();
      Player player3 = new Player((-1961));
      player3.isJoinOK(player2, false);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-2825));
      Party party0 = new Party((short)4919);
      player0.setConnected(false);
      party0.id = (-2825);
      player0.add(party0);
      player0.isConnected();
      System.setCurrentTimeMillis((-2825));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3295549708905474
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(5, "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", 2617, 5);
      player0.reset(false);
      Player player1 = new Player((-995), "eaM0-?E63=Df0gEn", (-995));
      player0.setDead();
      player0.setJoinOK(player1, false);
      player0.setX((-2736.4744F));
      player0.getY();
      player1.toString();
      player0.getIP();
      player0.isJoinOK(player1, false);
      player1.getZ();
      System.setCurrentTimeMillis((-27L));
      player1.pack();
      player0.getTimeOfDeath();
      assertEquals((-2736.4744F), player0.getX(), 0.01F);
      
      Player player2 = new Player(2617, "s]S(JF:/!\"", "s]S(JF:/!\"", (-995), 0);
      int int0 = Packable.GAME_STATE;
      player2.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(3890, "OZ[Qx|56\"Sn=G:A", "OZ[Qx|56\"Sn=G:A", 0, 0);
      player0.setZ(3890);
      player0.getY();
      byte[] byteArray0 = new byte[6];
      player0.setConnected(true);
      byteArray0[1] = (byte) (-83);
      float float0 = Player.MOVE_DISTANCE;
      Player player1 = new Player((-1), "qL", 242);
      byte[] byteArray1 = player0.pack();
      System.setCurrentTimeMillis((byte) (-83));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(3890.0F, player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(3930, "OZ[Qx|56\"Sn=G:A", "OZ[Qx|56\"Sn=G:A", 0, 0);
      player0.setZ(3930);
      player0.getY();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-124);
      player0.getMoney();
      player0.getIP();
      player0.setDead((long) 0, false);
      player0.type();
      player0.isDead();
      Player player1 = new Player(23627, (String) null, 0);
      player1.unpack(byteArray0);
      player1.isJoinOK(player0, false);
      assertEquals(3930.0F, player0.getZ(), 0.01F);
      
      float float0 = Player.MOVE_DISTANCE;
      player1.getName();
      assertEquals(0.0F, player1.getMoney(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0575080090236013
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(3, (String) null, "", (-25427), (-25427));
      Player player1 = new Player(3, "", 3278);
      player0.setJoinOK(player1, false);
      player1.setX(0.0F);
      player1.getY();
      Player player2 = new Player((-3898), (String) null, 5849);
      player2.setJoinOK(player1, false);
      player0.setX(0.0F);
      player2.getY();
      player0.setZ(0.0F);
      player2.toString();
      player0.getIP();
      player2.isJoinOK(player0, false);
      Player player3 = new Player(3, (String) null, "eeZ$]A", (-1), (short)4919);
      player2.isJoinOK(player0, false);
      // Undeclared exception!
      try { 
        player2.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7268441941800825
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(28, "module.ModuleBrowserDialog$ModuleFilter", 0);
      player0.reset(true);
      Player player1 = new Player(4919, "7.d3d~p.c1", "", (-1986));
      player0.setJoinOK(player1, true);
      player1.setX((short)4919);
      player0.getY();
      player1.toString();
      player1.isJoinOK(player0, true);
      player0.getZ();
      System.setCurrentTimeMillis(28);
      player0.isJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(4919.0F, player1.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6630963206863236
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5, 5);
      Player player1 = new Player((short)4919, "+", "5yVMzFN>r", 5, 5);
      player0.setJoinOK(player1, false);
      player0.setX((-1.4871411F));
      player1.getY();
      player1.getIP();
      player0.isJoinOK(player1, false);
      player0.getZ();
      System.setCurrentTimeMillis((short)4919);
      player1.getZ();
      Player player2 = new Player(1500, "5yVMzFN>r", "", 0, 0);
      player2.setJoinOK(player0, true);
      int int0 = Packable.GAME_STATE;
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-1L));
      player1.isJoinOK(player0, true);
      assertEquals((-1.4871411F), player0.getX(), 0.01F);
      
      Player player3 = new Player(5, "5yVMzFN>r", "+", (short)4919, 2585);
      boolean boolean0 = player2.isJoinOK(player3, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.8901268971014353
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5, 5);
      Player player1 = new Player((short)4919, "+", "5yVMzFN>r", 5, 5);
      player0.setJoinOK(player1, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      player1.getY();
      player1.getIP();
      player0.isJoinOK(player1, false);
      player0.getZ();
      System.setCurrentTimeMillis((short)4919);
      player1.getZ();
      player1.getIP();
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7896843142571908
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3, (String) null, "", (-25427), 3);
      player0.setJoinOK(player0, false);
      player0.setZ(2597.607F);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.setX(3);
      player0.getY();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.isJoinOK(player0, false);
      player0.getZ();
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)55;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      
      player0.pack();
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5231918705451206
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(4161, "module.ModuleBrowserDialog$ModuleFilter", 4161);
      Player player1 = new Player((short)4919, "", "module.ModuleBrowserDialog$ModuleFilter", 4161);
      player0.prev = (Party) player1;
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      player1.next = (Party) player0;
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      
      player0.getZ();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
      
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, (short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      float float2 = player1.getZ();
      assertEquals("", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, float2, 0.01F);
      assertEquals(4161, player1.getPictureId());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(3930, "", "", 3930, (-2));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7.d3d~p.c1");
      MockFile mockFile0 = new MockFile("7.d3d~p.c1", "rU:lQ{*");
      MockFile mockFile1 = new MockFile(mockFile0, "z@ARsv~`aE$A|W$h ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(3930, player0.getPictureId());
      assertEquals((-2), int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(3930, "", "", 0, 0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7.d3d~p.c1");
      MockFile mockFile0 = new MockFile("7.d3d~p.c1", "rU:lQ{*");
      MockFile mockFile1 = new MockFile(mockFile0, "z$*M");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, true);
      int int0 = player0.gangStrength();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = 3;
      Player player0 = new Player(3, "", "", 3, 3);
      MockFile mockFile0 = new MockFile("", "module.ModuleBrowserDialog$ModuleFilter");
      MockFile mockFile1 = new MockFile("rU:lQ{T");
      MockFile mockFile2 = new MockFile("", "rU:lQ{T");
      File file0 = mockFile2.getCanonicalFile();
      mockFile2.delete();
      MockFile mockFile3 = new MockFile(file0, "");
      MockFile mockFile4 = new MockFile(mockFile3, "");
      mockFile4.getCanonicalPath();
      File file1 = file0.getAbsoluteFile();
      mockFile4.toPath();
      File file2 = MockFile.createTempFile("module.ModuleBrowserDialog$ModuleFilter", "", file1);
      file2.delete();
      String string0 = "[Gn^I6$a";
      String string1 = "O*{P>.TXN<TW~l|bk";
      String string2 = "?;o:M`}}";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/rU:lQ{T/module.ModuleBrowserDialog$ModuleFilter0");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String string3 = "r;";
      String string4 = "";
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(4, "OZ[Qx|56\"Sn=G:A", "OZ[Qx|56\"Sn=G:A", 1363, 0);
      player0.gangStrength();
      File file0 = MockFile.createTempFile("{%ir%sXYB~1}1", "{%ir%sXYB~1}1");
      MockFile mockFile0 = new MockFile(file0, "");
      File file1 = MockFile.createTempFile("OZ[Qx|56\"Sn=G:A", (String) null);
      file1.mkdirs();
      file1.deleteOnExit();
      file1.setExecutable(false, true);
      player0.getPictureId();
      player0.getIP();
      player0.setDead((long) 1363, false);
      assertEquals(1363L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, "eaM20-?E63=Df0gEn", (-23552));
      player0.setMoney(563.7945F);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      player0.getPictureId();
      System.setCurrentTimeMillis((-23552));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(3, "", "", 3, 3);
      MockFile mockFile0 = new MockFile("", "module.ModuleBrowserDialog$ModuleFilter");
      MockFile mockFile1 = new MockFile("rU:lQ{T");
      MockFile mockFile2 = new MockFile("", "rU:lQ{T");
      File file0 = mockFile2.getCanonicalFile();
      mockFile2.delete();
      MockFile mockFile3 = new MockFile(file0, "");
      MockFile mockFile4 = new MockFile(mockFile3, "");
      file0.setReadOnly();
      File file1 = mockFile4.getAbsoluteFile();
      mockFile3.toPath();
      file0.deleteOnExit();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile.createTempFile("module.ModuleBrowserDialog$ModuleFilter", "", (File) mockFile4);
      mockFile2.delete();
      MockFile mockFile5 = new MockFile(file1, "");
      Player player1 = new Player((short)4919, ".*[.]class$", "rU:lQ{T", (short)4919);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(1, "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", (-31689), (-3539));
      long long0 = player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-31689), player0.getPictureId());
      assertEquals(0L, long0);
      assertEquals((-3539), player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(14117, "", "", 14117, 14117);
      Player player1 = new Player(14117, "5yVMzFN>r", "state.Player$JoinInfo", (-1641), (short)4919);
      player1.setJoinOK(player0, false);
      player0.setX((-1641));
      player0.getY();
      player0.getIP();
      player0.isJoinOK(player1, false);
      player0.getZ();
      System.setCurrentTimeMillis(0L);
      player1.getZ();
      player0.getIP();
      player0.getX();
      player0.pack();
      assertEquals((-1641.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(1273);
      player0.setY(1273);
      player0.reset(true);
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-2825));
      Party party0 = new Party((short)4919);
      party0.id = (-2825);
      player0.add(party0);
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("Player-2825", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(0, ")yZu6U@{", "0q(@Xu\"3)", 0, 0);
      int int0 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(")yZu6U@{", player0.getIP());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-995), "5F)}+6%\"0ub", (-255));
      Player player1 = new Player(5, "", "", (-255), 1363);
      player1.setJoinOK(player0, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player1.isConnected());
      assertEquals((-255), player1.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(1363, player1.getStrength());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(3, "", "", 3, 3);
      player0.setDead((long) 3);
      MockFile mockFile0 = new MockFile("", "");
      MockFile mockFile1 = new MockFile("");
      assertFalse(mockFile1.equals((Object)mockFile0));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(170, (String) null, (String) null, 170);
      player0.gangStrength();
      player0.setMoney(805.86975F);
      player0.getMoney();
      int int0 = player0.getStrength();
      assertEquals(805.86975F, player0.getMoney(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-2333), "6s:GO>ga:", (-2333));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      dataOutputStream0.writeBytes("vhdTB).");
      dataOutputStream0.writeChar(1700);
      player0.pack(dataOutputStream0);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)86;
      player0.setMoney((-521.0F));
      player0.getMoney();
      player0.getStrength();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(3, "", "", 3, 3);
      player0.setMoney(3);
      MockFile mockFile0 = new MockFile("", "module.ModuleBrowserDialog$ModuleFilter");
      MockFile mockFile1 = new MockFile("rU:lQ{T");
      MockFile mockFile2 = new MockFile("", "rU:lQ{T");
      File file0 = mockFile2.getCanonicalFile();
      mockFile2.delete();
      MockFile mockFile3 = new MockFile(file0, "");
      MockFile mockFile4 = new MockFile(mockFile3, "");
      mockFile4.getCanonicalFile();
      File file1 = file0.getAbsoluteFile();
      File file2 = MockFile.createTempFile("module.ModuleBrowserDialog$ModuleFilter", "", file1);
      file2.delete();
      file1.mkdirs();
      MockFile mockFile5 = new MockFile(mockFile4, "O*{P>.TXN<TW~l|bk");
      File file3 = MockFile.createTempFile("{D;=n=K![##Z", "", file1);
      MockFile mockFile6 = new MockFile("pao62IN");
      MockFile mockFile7 = new MockFile(file3, "7jMq,|hM-V9O6");
      try { 
        MockFile.createTempFile("^4]Z!a#@Y:P", "", (File) mockFile7);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player((-9), "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", (-9), (-2915));
      int int0 = player0.getStrength();
      assertEquals((-2915), int0);
      assertTrue(player0.isConnected());
      assertEquals((-9), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(367, "0)x6Qo1Yy-%[91=.p", ",~i; z)1a0f", 714, 2053);
      player0.setX((-1008.1553F));
      byte[] byteArray0 = player0.pack();
      player0.reset(true);
      player0.setX((-1008.1553F));
      boolean boolean0 = false;
      player0.setConnected(false);
      player0.unpack(byteArray0);
      player0.setY(0.0F);
      int int0 = (-1224);
      Party party0 = player0.head;
      player0.next = null;
      BufferedOutputStream bufferedOutputStream0 = null;
      try {
        bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, (-1224));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "eaM0-?E63=Df0gEn";
      Player player0 = new Player(2617, "eaM0-?E63=Df0gEn", "eaM0-?E63=Df0gEn", 5);
      player0.reset(false);
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile("eaM0-?E63=Df0gEn", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = 3;
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(3, (String) null, "", (-25427), 3);
      boolean boolean0 = false;
      player0.setJoinOK(player0, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e^");
      Party party0 = new Party(0);
      Player player0 = new Player(0, "", 0);
      player0.prev = party0;
      player0.pack();
      player0.getName();
      int int0 = player0.getPictureId();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, int0);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "7.d3d~p.c1");
      MockFile mockFile0 = new MockFile("rU:lQ{*", "rU:lQ{*");
      MockFile mockFile1 = new MockFile(mockFile0, "NSr5.R>GR[ ");
      Player player0 = new Player(0);
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player0", player0.toString());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(K%Dl)s");
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-1", string0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player(3, "", "", 3, 3);
      MockFile mockFile0 = new MockFile("", "&|=&XZh?8]l+sSIhj");
      MockFile mockFile1 = new MockFile("");
      MockFile mockFile2 = new MockFile("", "");
      File file0 = mockFile2.getCanonicalFile();
      mockFile2.delete();
      MockFile mockFile3 = new MockFile(file0, "");
      MockFile mockFile4 = new MockFile(mockFile3, "");
      mockFile4.getCanonicalFile();
      File file1 = file0.getAbsoluteFile();
      File file2 = MockFile.createTempFile("&|=&XZh?8]l+sSIhj", "", file1);
      file2.renameTo(mockFile4);
      file2.delete();
      file1.mkdirs();
      MockFile mockFile5 = new MockFile(mockFile4, "O*{P>.TXN<TW~l|bk");
      MockFile mockFile6 = new MockFile("pao62IN");
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(3, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(3, player0.getPictureId());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(1, "", "", 1349);
      player0.setZ(1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte) (-48);
      player0.unpack(byteArray0);
      player0.next = null;
      player0.setY(2301.0F);
      float float0 = player0.getX();
      assertEquals(2301.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(1372, "eaM0-?E63=Df0gEn", "1Sk' 6.-uy'MMkA`", 0, 0);
      player0.setDead();
      MockFile mockFile0 = new MockFile("module.ModuleBrowserDialog$ModuleFilter", "|{y5){-p3l>/@AK");
      MockFile mockFile1 = new MockFile("w.M-kgVZIwz1Ff)w");
      mockFile0.delete();
      MockFile mockFile2 = new MockFile("");
      MockFile mockFile3 = new MockFile(mockFile2, " ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|{y5){-p3l>/@AK", false);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)63;
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte) (-53);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)85;
      byteArray0[7] = (byte)113;
      player0.unpack(byteArray0);
      player0.id = 1445;
      Party party0 = new Party();
      assertTrue(party0.isBoss());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(2241, "WNQ6j) O}69]h^", 2764);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(2764, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.mark((byte) (-124));
      byteArrayInputStream0.mark((byte) (-83));
      byteArrayInputStream0.mark(30234);
      byteArrayInputStream0.skip((byte) (-124));
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-83), 1438);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-124);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byteArray1[1] = (byte) (-83);
      byteArray1[2] = (byte) (-83);
      byteArray1[3] = (byte) (-124);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, 1, (byte) (-83));
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1, 1, (byte) (-83));
      byteArrayInputStream3.mark(1438);
      byteArrayInputStream3.markSupported();
      byteArrayInputStream3.read();
      byteArrayInputStream3.read();
      byteArrayInputStream3.skip(2349L);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream3);
      System.setCurrentTimeMillis((byte) (-124));
      Player player0 = new Player(478, "", "", (-7740));
      player0.pack();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-7740), player0.getPictureId());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("state.Player$JoinInfo");
      mockFileOutputStream0.write(23654);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "");
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      mockFile1.setWritable(false);
      mockFile0.setReadOnly();
      mockFile1.renameTo(mockFile0);
      mockFile0.setReadOnly();
      MockFile mockFile2 = new MockFile(mockFile1, "AY");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile.createTempFile("oJlC '`o", "", (File) mockFile1);
      MockFile mockFile3 = new MockFile("[~9d&", "AY");
      MockFileOutputStream mockFileOutputStream1 = null;
      try {
        mockFileOutputStream1 = new MockFileOutputStream(mockFile3, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-124);
      Player player0 = new Player((byte) (-124), "}mpWO", "", (byte) (-124), (-1207));
      Player player1 = new Player((byte) (-124));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals((-124), player0.getPictureId());
      assertFalse(boolean0);
      assertFalse(player1.isDead());
      assertEquals("Player-124", player1.getName());
      assertEquals("}mpWO", player0.getIP());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals((-1207), player0.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.skip((byte) (-124));
      byteArrayInputStream0.skip((byte) (-124));
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-83), 1438);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-124);
      byteArray1[1] = (byte) (-83);
      byteArray1[2] = (byte) (-83);
      byteArray1[3] = (byte) (-124);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, 1, (-6168));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream2);
      Player player0 = new Player(22071, "A=H#(TA<rQ2A4P.", (byte) (-83));
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-83), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player(3930, "OZ[Qx|56\"Sn=G:A", "OZ[Qx|56\"Sn=G:A", 3930, 3930);
      player0.setZ(3930);
      player0.getY();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-124);
      float float0 = player0.getMoney();
      assertEquals(3930.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(3930, "OZ[Qx|56\"Sn=G:A", "OZ[Qx|56\"Sn=G:A", 0, 0);
      player0.setZ(3930);
      player0.getY();
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-124);
      player0.getMoney();
      player0.getIP();
      player0.type();
      player0.isDead();
      assertEquals(3930.0F, player0.getZ(), 0.01F);
      
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      Player player1 = new Player(23654, (String) null, 0);
      float float0 = player1.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byteArrayInputStream0.mark((byte) (-83));
      byteArrayInputStream0.mark(30213);
      byteArrayInputStream0.skip((byte) (-124));
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-83), 1438);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-124);
      byteArray1[1] = (byte) (-83);
      byteArray1[2] = (byte) (-83);
      byteArray1[3] = (byte) (-124);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1, 1, (byte) (-83));
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1, 1, (byte) (-83));
      System.setCurrentTimeMillis(2437L);
      Player player0 = new Player(9);
      player0.setDead(0L, false);
      player0.getSubparty();
      assertTrue(player0.isDead());
      
      Player player1 = new Player();
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      System.setCurrentTimeMillis(2617L);
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player(638, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 638, 638);
      int int0 = player0.type();
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(638, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(5, int0);
      assertEquals(638, player0.getStrength());
  }
}
