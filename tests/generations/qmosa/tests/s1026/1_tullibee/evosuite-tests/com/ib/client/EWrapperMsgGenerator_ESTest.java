/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 16:42:40 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.LinkedList;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("7,.Qc~8pNLLd");
      Contract contract0 = new Contract(5, "s'_c/zjb~Tcp5=`&-FC", "BAG", "BAG", 5, (String) null, "s'_c/zjb~Tcp5=`&-FC", "'9-@E#B|zPv:axT@", "BAG", "BAG", vector0, "7,.Qc~8pNLLd", false, "category = ", "e!H{gd");
      Contract contract1 = (Contract)contract0.clone();
      contract0.m_right = "'9-@E#B|zPv:axT@";
      contract1.m_underComp = null;
      vector0.add("BAG");
      Contract contract2 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState("-l(|i>Ve=", " dPWce", "z~K0vEBw", " nbboPriceCap=", 1, 0.0, 1.7976931348623157E308, "id=2135573245  bidSize=-792.0", "zMT LL6N/GF3");
      OrderState orderState1 = new OrderState();
      order0.m_basisPoints = 231.2214996678479;
      orderState1.m_commissionCurrency = null;
      String string0 = EWrapperMsgGenerator.openOrder(1304, contract1, order0, orderState1);
      assertNotNull(string0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1314060210417678
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      int int0 = (-2147483647);
      vector0.add("BAG");
      Contract contract0 = new Contract((-2147483647), "BAG", "BAG", "BAG", (-2147483647), "BAG", "BAG", "BAG", "BAG", "5PCK!$_SD3/m{C2WG", vector0, "1qZN$&V(ytYqlp", false, "|e1taM[eZPdrDb%", "|e1taM[eZPdrDb%");
      Order order0 = new Order();
      LinkedList<TagValue> linkedList0 = new LinkedList<TagValue>();
      vector0.removeAll(linkedList0);
      contract0.m_comboLegsDescrip = "bidExch";
      order0.m_whatIf = false;
      OrderState orderState0 = new OrderState();
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 8, 1.7976931348623157E308, 1.7976931348623157E308, 1.7976931348623157E308, (-2562.787842));
      System.setCurrentTimeMillis(0);
      order0.m_action = null;
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(0, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      orderState0.m_status = "multiplier = ";
      Contract contract0 = new Contract();
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = Integer.MAX_VALUE;
      contract0.m_underComp = underComp0;
      String string0 = EWrapperMsgGenerator.openOrder((-109), contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      predicate2.and(predicate3);
      Predicate<Object> predicate4 = predicate0.and(predicate2);
      Predicate<Object> predicate5 = predicate4.or(predicate1);
      Predicate<Object> predicate6 = predicate2.negate();
      Predicate<Object> predicate7 = predicate1.and(predicate6);
      Predicate<Object> predicate8 = predicate7.and(predicate5);
      Integer integer0 = new Integer(13);
      predicate1.negate();
      Predicate<Object> predicate9 = Predicate.isEqual((Object) predicate8);
      Predicate<Object> predicate10 = predicate4.and(predicate2);
      predicate10.negate();
      Predicate<Object> predicate11 = predicate1.negate();
      Predicate<Object> predicate12 = predicate2.and(predicate9);
      TagValue tagValue0 = new TagValue();
      Predicate.isEqual((Object) tagValue0);
      predicate9.and(predicate11);
      predicate7.and(predicate10);
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate13.or(predicate7);
      Predicate<Object> predicate15 = Predicate.isEqual((Object) predicate12);
      predicate0.and(predicate15);
      predicate2.or(predicate14);
      Vector<String> vector0 = new Vector<String>();
      vector0.add("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A");
      assertTrue(vector0.contains(string0));
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, 1829.0, 1.7976931348623157E308, 0.0);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 0.0", string1);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.equals("8G{|AtsGq;~");
      Order order0 = new Order();
      order0.m_stockRangeLower = (double) Integer.MAX_VALUE;
      order0.m_algoStrategy = "s|3\"z^/~x";
      Contract contract1 = new Contract();
      Integer integer0 = new Integer(Integer.MAX_VALUE);
      contract1.m_comboLegsDescrip = null;
      Contract contract2 = new Contract(0, "T!mg", (String) null, (String) null, 2040.44, (String) null, (String) null, (String) null, " deltaNeutralOrderType=", "M9", contract1.m_comboLegs, (String) null, false, (String) null, " deltaNeutralOrderType=");
      contract1.m_underComp = null;
      contract2.m_primaryExch = null;
      contract1.m_comboLegsDescrip = "T!mg";
      contract2.m_secIdType = null;
      contract2.m_underComp = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(1, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.equals("8G{|AtsGq;~");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_stockRangeLower = (double) Integer.MAX_VALUE;
      order0.m_algoStrategy = "s|3\"z^/~x";
      Contract contract1 = new Contract(Integer.MAX_VALUE, "longName = ", "ZV$_h)7", (String) null, 0, (String) null, "OptionPutVolume", (String) null, (String) null, " underComp.delta =", (Vector) null, "auctionVolume", false, "o>}|4~`1w^i", "LNO");
      Vector<String> vector0 = new Vector<String>();
      vector0.add("BAG");
      vector0.stream();
      vector0.add((String) null);
      Order order1 = new Order();
      OrderState orderState1 = new OrderState();
      String string0 = EWrapperMsgGenerator.openOrder(0, contract1, order0, orderState1);
      assertNotNull(string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData((-2447), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "s|3\"#z^/~x";
      Contract contract0 = new Contract();
      contract0.m_currency = null;
      contract0.m_comboLegsDescrip = "2X{I";
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 1.7976931348623157E308, 0.0, 0, 5.0);
      assertEquals("id=0  modelOptComp: vol = N/A delta = 0.0: modelPrice = 0.0: pvDividend = 5.0", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(Integer.MAX_VALUE, 1, 0.0, 1.7976931348623157E308, 1.0, 880.0);
      assertEquals("id=2147483647  bidPrice: vol = 0.0 delta = N/A", string1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = 2144084470;
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, ",Qg*PwH41", ",Qg*PwH41", 290.78894408, ",Qg*PwH41", ",Qg*PwH41", 1, "~9GZ2w?", "%jes=e", "&m 3&", "  ", "  ", "%jes=e", "markPrice", (String) null);
      String string0 = "JNV(f";
      String string1 = "XTM";
      contractDetails0.m_liquidHours = "+Q/L@(";
      String string2 = "longName = ";
      contractDetails0.m_descAppend = " percentOffset=";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "6h9'MRAFGSO3Ll$O-*{", "+Q", (-808.71781), "time = ", "time = ", 10, "  It does not support API scanner subscription.", "{AP+3/", "$\"u+\u0005_i,C]", "\"zQrh$Ky", "lWbZW{V]<2:0", "_M6|kul$;`o", "_M6|kul$;`o", "bidPrice");
      contractDetails0.m_summary = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(2726, contractDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, (-1963.92242981), (-2011.0), (-1963.92242981));
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      predicate4.negate();
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate<Object> predicate6 = predicate4.negate();
      predicate6.and(predicate5);
      Integer integer0 = new Integer(10);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate2);
      predicate3.or(predicate7);
      predicate5.and(predicate1);
      predicate6.and(predicate5);
      Vector<String> vector0 = new Vector<String>();
      vector0.removeIf(predicate3);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function<Integer, Integer> function0 = Function.identity();
      assertNotNull(function0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      EWrapperMsgGenerator.tickOptionComputation(0, (-2540), (-2000.4819135), 0, (-2000.4819135), (-3101.66));
      Integer integer0 = new Integer(2102744405);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      predicate1.and(predicate4);
      predicate0.negate();
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate2.and(predicate5);
      predicate1.and(predicate6);
      Vector<String> vector1 = new Vector<String>();
      vector1.removeIf(predicate1);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function<Integer, Integer> function0 = Function.identity();
      assertNotNull(function0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TagValue tagValue0 = new TagValue(" symbol=", (String) null);
      Predicate<String> predicate0 = Predicate.isEqual((Object) tagValue0);
      Predicate<String> predicate1 = predicate0.negate();
      Predicate<String> predicate2 = predicate0.and(predicate1);
      predicate0.or(predicate2);
      predicate1.negate();
      tagValue0.equals((Object) null);
      predicate1.negate();
      TagValue tagValue1 = new TagValue((String) null, " symbol=");
      EWrapperMsgGenerator.tickOptionComputation((-883), (-883), (-883), (-1.0), (-883), (-1.0));
      System.setCurrentTimeMillis((-883));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.equals("8G{|AtsGq;~");
      Order order0 = new Order();
      order0.m_auxPrice = 154.257059683576;
      OrderState orderState0 = new OrderState();
      order0.m_stockRangeLower = (double) Integer.MAX_VALUE;
      EWrapperMsgGenerator.tickPrice(0, 3, (-3551.0), 0);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "s|3\"z^/~x";
      order0.m_nbboPriceCap = 0.0;
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 13, 0.0, 13.0, 'y', 1715.0);
      assertEquals("id=0  modelOptComp: vol = 0.0 delta = N/A: modelPrice = 121.0: pvDividend = 1715.0", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 2146306728, 2146306728, 2146306728, 970.0, (-1006.65422), 2146306728, "pgHH:'=5Hehk");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, ",Qg*PwH41", ",Qg*PwH41", 290.78894408, ",Qg*PwH41", ",Qg*PwH41", 1, "~9GZ2w?", "%jes=e", "&m 3&", "  ", "  ", "%jes=e", "markPrice", (String) null);
      contractDetails0.m_liquidHours = "+Q/L@(";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(2144084470, 2144084470, contractDetails0, "%jes=e", "XTM", "longName = ", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Predicate<String> predicate0 = Predicate.isEqual((Object) vector0);
      Predicate<String> predicate1 = predicate0.negate();
      vector0.removeIf(predicate1);
      vector0.removeElement("com.ib.hlie<t.eClientSocket");
      vector0.ensureCapacity(43);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator2.andThen((Function<? super Object, ? extends String>) function0);
      Function<String, String> function2 = unaryOperator1.andThen((Function<? super String, ? extends String>) function1);
      Function<String, Object> function3 = unaryOperator0.andThen((Function<? super String, ?>) unaryOperator1);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      Function<String, Object> function4 = unaryOperator1.andThen((Function<? super String, ?>) function2);
      function1.compose((Function<? super String, ?>) function4);
      unaryOperator2.apply(unaryOperator1);
      Function.identity();
      Function<String, Object> function5 = unaryOperator0.andThen((Function<? super String, ?>) function3);
      function1.andThen((Function<? super String, ?>) function5);
      Function<Object, Integer> function6 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function7 = unaryOperator3.andThen((Function<? super Object, ? extends Integer>) function6);
      Object object0 = new Object();
      unaryOperator2.apply(object0);
      Function.identity();
      function7.compose((Function<? super Object, ?>) function1);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function7);
      vector0.replaceAll(unaryOperator0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.openOrder((-292), contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "4:Dc*&`$|7?";
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract(26, "13WeekLow", "4:Dc*&`$|7?", "4:Dc*&`$|7?", 26, "4:Dc*&`$|7?", "/_g(qDw?", (String) null, "/_g(qDw?", (String) null, vector0, "d'ip@m0Qf2", false, "bidEFP", "close");
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(26, contract0, order0, (OrderState) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("BAG");
      Contract contract0 = new Contract((-2147483647), "BAG", "BAG", "BAG", (-2147483647), "BAG", "BAG", "BAG", "BAG", "5PCK!$_SD3/m{C2WG", vector0, "1qZN$&V(ytYqlp", false, "|e1taM[eZPdrDb%", "|e1taM[eZPdrDb%");
      Order order0 = new Order();
      LinkedList<TagValue> linkedList0 = new LinkedList<TagValue>();
      vector0.removeAll(linkedList0);
      OrderState orderState0 = new OrderState("", "1qZN$&V(ytYqlp", (String) null, (String) null, 0, 'm', Integer.MAX_VALUE, (String) null, (String) null);
      String string0 = EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState0);
      assertFalse(vector0.contains(string0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 13, 13, 13, 13);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "id=13  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 13.0: pvDividend = 13.0");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Integer integer0 = new Integer((-1014));
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate3.or(predicate1);
      Predicate<Object> predicate8 = predicate7.and(predicate0);
      predicate2.or(predicate0);
      Predicate<Object> predicate9 = predicate6.negate();
      predicate8.and(predicate0);
      Predicate<Object> predicate10 = predicate4.negate();
      predicate7.and(predicate5);
      predicate10.negate();
      Predicate<Object> predicate11 = predicate10.negate();
      predicate11.or(predicate8);
      Predicate<Object> predicate12 = predicate5.and(predicate9);
      Predicate<Object> predicate13 = predicate3.negate();
      Predicate<Object> predicate14 = predicate13.or(predicate4);
      Predicate<Object> predicate15 = predicate13.negate();
      predicate12.or(predicate10);
      Predicate<Object> predicate16 = predicate15.negate();
      predicate16.negate();
      predicate12.negate();
      predicate8.negate();
      predicate15.negate();
      predicate7.or(predicate14);
      predicate3.test(predicate6);
      Vector<String> vector0 = new Vector<String>();
      predicate4.and(predicate9);
      // Undeclared exception!
      try { 
        vector0.set(10, "gg{`L<!2fFIO+");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 10
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue("4UE", "13WeekLow", (String) null, "_FbL");
      assertEquals("updateAccountValue: 4UE 13WeekLow null _FbL", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.removeElement("com.ib.client.EClientSocket");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Function<TagValue, TagValue> function2 = Function.identity();
      function2.andThen((Function<? super TagValue, ? extends Integer>) function1);
      function1.compose((Function<? super TagValue, ?>) function2);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function1);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function.identity();
      Function<Object, Integer> function3 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function4 = unaryOperator2.andThen((Function<? super Object, ? extends Integer>) function3);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function4);
      vector0.replaceAll(unaryOperator0);
      String string0 = EWrapperMsgGenerator.tickPrice(48, (-1660), 1.7976931348623157E308, (-1));
      assertEquals("id=48  unknown=1.7976931348623157E308  canAutoExecute", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "s|3\"#z^/~x";
      Contract contract1 = new Contract();
      contract1.m_currency = null;
      contract1.m_comboLegsDescrip = "2X{I";
      Contract contract2 = new Contract(0, "T!mg", (String) null, (String) null, 2040.44, (String) null, (String) null, (String) null, " deltaNeutralOrderType=", "M9", contract1.m_comboLegs, (String) null, false, (String) null, " deltaNeutralOrderType=");
      contract1.m_underComp = null;
      contract2.m_secId = "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A";
      Contract contract3 = new Contract();
      contract1.m_comboLegsDescrip = "T!mg";
      contract1.m_exchange = "M9";
      contract3.m_secType = null;
      contract3.m_currency = "7)h!]<HM";
      contract2.m_secIdType = null;
      contract0.m_localSymbol = null;
      contract2.m_underComp = null;
      Function.identity();
      String string0 = EWrapperMsgGenerator.tickSize(121, 42, 3088);
      assertEquals("id=121  highEFP=3088", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(109, ";Ox!Ps#RPO7?j8`", "BAG", "BAG", 109, "BAG", ";Ox!Ps#RPO7?j8`", "currency = ", "8UgE", "]&f", vector0, "]&f", true, "BAG", "OptionBidExchStr");
      ContractDetails contractDetails0 = new ContractDetails(contract0, "BAG", (String) null, 13.0, "8UgE", "8UE", 109, "]&f", "currency = ", "~YHXgojxxcydA", "~YHXgojxxcydA", "currency = ", "aUX", "p/F", "tradingHours = ");
      String string0 = EWrapperMsgGenerator.scannerData(109, 109, contractDetails0, (String) null, "tyi]NqCUS|c ", "CfFF/Aiz].9L^Kyl J", "U");
      assertEquals("id = 109 rank=109 symbol=;Ox!Ps#RPO7?j8` secType=BAG expiry=BAG strike=109.0 right=BAG exchange=currency =  currency=8UgE localSymbol=]&f marketName=BAG tradingClass=null distance=null benchmark=tyi]NqCUS|c  projection=CfFF/Aiz].9L^Kyl J legsStr=U", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<String> vector0 = new Vector<String>();
      Vector<Integer> vector1 = new Vector<Integer>();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, (-817.525), "accountDownloadEnd: ", (String) null, (-1), (String) null, "ht&PxNU#[li+", (String) null, "!YsQl;t>JB8wjj", "<wY^Qr5$OSS*P|n4]", " commission=", "_wv.mZ=`:|eb|b|jv#", (String) null);
      ContractDetails contractDetails1 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.scannerData((-1), (-2021638437), contractDetails1, (String) null, (String) null, (String) null, (String) null);
      assertEquals("id = -1 rank=-2021638437 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance=null benchmark=null projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Function.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Object object0 = new Object();
      String string0 = EWrapperMsgGenerator.currentTime((-1907L));
      assertEquals("current time = -1907 (Dec 31, 1969 11:28:13 PM)", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.removeElement("com.ib.client.EClientSocket");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function1);
      vector0.replaceAll(unaryOperator0);
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(40, Integer.MAX_VALUE, "com.ib.client.EClientSocket", ")DiZu<2[`e:[;4");
      assertEquals("MsgId=40 :: MsgType=2147483647 :: Origin=)DiZu<2[`e:[;4 :: Message=com.ib.client.EClientSocket", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(109, 147, "YD|09 %3@hE\"", 6679, 301, (-2130.480500524987), 147);
      assertEquals("updateMktDepth: 109 147 YD|09 %3@hE\" 6679 301 -2130.480500524987 147", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.removeElement("ye5qDm:TR5<<OsX3h7");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Integer, Integer> function0 = Function.identity();
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function2 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function2.compose((Function<? super Integer, ?>) function0);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function2);
      vector0.replaceAll(unaryOperator0);
      String string0 = EWrapperMsgGenerator.contractDetailsEnd((-1681));
      assertEquals("reqId = -1681 =============== end ===============", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(1637, "vU!6Nom{OG", " dPWce", "vU!6Nom{OG", 1637, "vU!6Nom{OG", "vU!6Nom{OG", "vU!6Nom{OG", "8G{|AtsGq;~", "jEA7j\"_%N", vector0, "", false, "", "vU!6Nom{OG");
      contract0.equals("8G{|AtsGq;~");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(2145239673, contract0, (Execution) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_currency = null;
      Contract contract1 = new Contract();
      contract0.m_underComp = null;
      contract1.m_secId = null;
      Contract contract2 = new Contract();
      contract1.equals(contract0);
      contract0.m_comboLegsDescrip = "price magnifier = ";
      contract2.m_exchange = "y";
      contract1.m_secType = null;
      Vector<Object> vector0 = new Vector<Object>();
      contract0.m_comboLegsDescrip = " impliedFuture = ";
      contract1.m_comboLegs = contract2.m_comboLegs;
      contract2.m_comboLegs = vector0;
      contract2.m_secType = null;
      contract1.m_expiry = null;
      contract2.m_currency = " impliedFuture = ";
      Contract contract3 = new Contract();
      String string0 = EWrapperMsgGenerator.contractMsg(contract3);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution();
      execution0.m_avgPrice = (-1.0);
      execution0.m_avgPrice = 0.0;
      String string0 = EWrapperMsgGenerator.execDetails(26, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 26\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = null\nacctNumber = null\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 0\nliquidation = 0\ncumQty = 0\navgPrice = 0.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Object, ?>) unaryOperator0);
      String string0 = EWrapperMsgGenerator.managedAccounts("CT|Ihjx8/5");
      assertEquals("Connected : The list of managed accounts are : [CT|Ihjx8/5]", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_expiry = "l~\"`E|a#f";
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 1, 542.85518, 1.7976931348623157E308, (-735.8698584445247), (-3284.0), 0.0, (String) null);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = l~\"`E|a#f\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n1 542.85518 1.7976931348623157E308 -735.8698584445247 -3284.0 0.0 null", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd((-3126));
      assertEquals("id=-3126 =============== end ===============", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Contract contract0 = new Contract((-1022), "13WeekLow", (String) null, "?-E?%>]wjZC-G", (-889.7248746492625), "fyy6B?ad'kpaM3.d", "fyy6B?ad'kpaM3.d", (String) null, "OptionCallVolume", (String) null, vector0, "OptionCallVolume", false, "$KY9gKv.", "f/0/");
      UnderComp underComp0 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(26, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickString(26, (-2045755346), "B^h_*3^UtL^GA_b{^");
      assertEquals("id=26  unknown=B^h_*3^UtL^GA_b{^", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) " dPWce");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate2.negate();
      predicate6.and(predicate5);
      predicate6.test("yaX<>'bd2ZfL*OT");
      Vector<String> vector1 = new Vector<String>();
      vector0.removeIf(predicate6);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(2778, 13, 1637, (-1268.14107618493), 1637, 874.7311137022645);
      assertEquals("id=2778  modelOptComp: vol = 1637.0 delta = N/A: modelPrice = 1637.0: pvDividend = 874.7311137022645", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Integer integer0 = new Integer((-1620351321));
      Predicate.isEqual((Object) integer0);
      String string0 = EWrapperMsgGenerator.realtimeBar((-1259), (-1259), (-1259), (-754.4634441546452), 1.7976931348623157E308, 8.0, (-1620351321), 1290.313441, 531);
      assertEquals("id=-1259 time = -1259 open=-1259.0 high=-754.4634441546452 low=1.7976931348623157E308 close=8.0 volume=-1620351321 count=531 WAP=1290.313441", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TagValue tagValue0 = new TagValue(" symbol=", (String) null);
      Predicate<String> predicate0 = Predicate.isEqual((Object) tagValue0);
      Predicate<String> predicate1 = predicate0.negate();
      Predicate<String> predicate2 = predicate0.and(predicate1);
      Predicate<String> predicate3 = predicate0.or(predicate2);
      Predicate<String> predicate4 = predicate1.negate();
      Predicate<String> predicate5 = predicate1.or(predicate2);
      tagValue0.equals((Object) null);
      Predicate<String> predicate6 = predicate5.negate();
      TagValue tagValue1 = new TagValue((String) null, " symbol=");
      Predicate<String> predicate7 = Predicate.isEqual((Object) tagValue1);
      predicate5.or(predicate4);
      predicate7.or(predicate1);
      predicate0.or(predicate1);
      Vector<String> vector0 = new Vector<String>();
      Predicate<Object> predicate8 = Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate9 = predicate8.negate();
      predicate8.and(predicate9);
      vector0.removeIf(predicate6);
      UnaryOperator.identity();
      Function.identity();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1360, 2111692253, 59.06102458859804, (-236.7), 1360, (-236.7));
      assertEquals("id=1360  unknown: vol = 59.06102458859804 delta = N/A", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TagValue tagValue0 = new TagValue(" symbol=", (String) null);
      Predicate<String> predicate0 = Predicate.isEqual((Object) tagValue0);
      Predicate<String> predicate1 = predicate0.negate();
      Predicate<String> predicate2 = predicate0.and(predicate1);
      Predicate<String> predicate3 = predicate0.or(predicate2);
      predicate1.negate();
      Predicate<String> predicate4 = predicate1.or(predicate2);
      Predicate<String> predicate5 = predicate4.negate();
      TagValue tagValue1 = new TagValue((String) null, " symbol=");
      Predicate<String> predicate6 = Predicate.isEqual((Object) tagValue1);
      predicate6.or(predicate1);
      predicate0.or(predicate1);
      Vector<String> vector0 = new Vector<String>();
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate8 = predicate7.negate();
      predicate7.and(predicate8);
      vector0.removeIf(predicate5);
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      Vector<Object> vector1 = new Vector<Object>();
      TagValue tagValue2 = new TagValue();
      vector1.add((Object) unaryOperator0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1911), 538, 104.37, (-628.2788879), 104.37, 1.7976931348623157E308);
      assertEquals("id=-1911  unknown: vol = 104.37 delta = N/A", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(13, 13, (-561.044), 13, (-561.044), (-561.044));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      predicate6.and(predicate4);
      Integer integer0 = new Integer(13);
      Predicate<Object> predicate7 = predicate0.negate();
      Predicate<Object> predicate8 = predicate3.and(predicate2);
      Predicate<Object> predicate9 = predicate8.negate();
      predicate7.or(predicate0);
      predicate1.negate();
      Predicate<Object> predicate10 = predicate2.and(predicate7);
      predicate2.negate();
      predicate6.and(predicate8);
      Predicate<Object> predicate11 = predicate10.negate();
      Predicate<Object> predicate12 = predicate11.or(predicate6);
      Predicate<Object> predicate13 = Predicate.isEqual((Object) predicate10);
      Predicate<Object> predicate14 = predicate0.and(predicate13);
      Predicate<Object> predicate15 = predicate2.or(predicate12);
      predicate6.negate();
      predicate15.negate();
      Predicate<Object> predicate16 = predicate14.negate();
      Predicate<Object> predicate17 = predicate1.and(predicate16);
      predicate11.test(predicate9);
      Vector<String> vector0 = new Vector<String>();
      predicate7.and(predicate17);
      // Undeclared exception!
      try { 
        vector0.set((-1131), "id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = N/A");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1131
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(48, 48, 1.7976931348623157E308, 48, 1.7976931348623157E308, 1.7976931348623157E308);
      Integer integer0 = new Integer((-1014));
      Vector<String> vector0 = new Vector<String>();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) vector0;
      objectArray0[1] = (Object) vector0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "gg{`L<!2fFIO+";
      vector0.toArray(objectArray0);
      // Undeclared exception!
      try { 
        vector0.set(10, "gg{`L<!2fFIO+");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 10
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EWrapperMsgGenerator.execDetailsEnd(13);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "reqId = 13 =============== end ===============");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate0);
      Predicate<Object> predicate5 = predicate3.negate();
      Integer integer0 = new Integer((-1014));
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate3.or(predicate1);
      Predicate<Object> predicate8 = predicate7.and(predicate0);
      predicate2.or(predicate0);
      Predicate<Object> predicate9 = predicate6.negate();
      predicate8.and(predicate0);
      Predicate<Object> predicate10 = predicate0.negate();
      predicate7.and(predicate5);
      predicate10.negate();
      Predicate<Object> predicate11 = predicate10.negate();
      predicate11.test("reqId = 13 =============== end ===============");
      predicate11.or(predicate8);
      Predicate<Object> predicate12 = predicate5.and(predicate9);
      Predicate<Object> predicate13 = predicate3.negate();
      Predicate<Object> predicate14 = predicate13.or(predicate4);
      Predicate<Object> predicate15 = predicate13.negate();
      predicate12.or(predicate10);
      Predicate<Object> predicate16 = predicate15.negate();
      predicate16.or(predicate4);
      predicate16.negate();
      predicate12.negate();
      predicate15.negate();
      predicate7.or(predicate14);
      predicate3.test(predicate6);
      Vector<String> vector0 = new Vector<String>();
      predicate4.and(predicate9);
      // Undeclared exception!
      try { 
        vector0.set(10, "gg{`L<!2fFIO+");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 10
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.removeElement("com.ib.client.EClientSocket");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function1);
      unaryOperator0.compose((Function<? super Integer, ? extends String>) function2);
      unaryOperator1.compose((Function<? super String, ?>) unaryOperator0);
      Function<Object, Integer> function3 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      function3.compose((Function<? super Object, ?>) function2);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function3);
      vector0.replaceAll(unaryOperator0);
      String string0 = EWrapperMsgGenerator.tickGeneric((-1480), Integer.MAX_VALUE, (-1480));
      assertEquals("id=-1480  unknown=-1480.0", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation(45, underComp0);
      assertEquals("id = 45 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(107, "sHgjijJ*'NjZq$hlr%E");
      assertEquals("id  = 107 len = 19\nsHgjijJ*'NjZq$hlr%E", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.removeElement("com.ib.client.EClientSocket");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      unaryOperator0.andThen((Function<? super String, ? extends Integer>) function1);
      vector0.replaceAll(unaryOperator0);
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(4142, 40, ")DiZu<2[`e:[;4", Integer.MAX_VALUE, 40, 4142, 0);
      assertEquals("updateMktDepth: 4142 40 )DiZu<2[`e:[;4 2147483647 40 4142.0 0", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_expiry = "l~\"`E|a#f";
      UnderComp underComp0 = contract0.m_underComp;
      contract0.m_underComp = null;
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 0, 542.85518, 1.7976931348623157E308, (-735.8698584445247), (-3284.0), 0.0, (String) null);
      assertNotNull(string0);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = l~\"`E|a#f\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n0 542.85518 1.7976931348623157E308 -735.8698584445247 -3284.0 0.0 null", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_callable = false;
      String string0 = EWrapperMsgGenerator.contractDetails(2794, contractDetails0);
      assertEquals("reqId = 2794 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EWrapperMsgGenerator.openOrderEnd();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) " =============== end ===============");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      Predicate<Object> predicate7 = predicate6.and(predicate4);
      Integer integer0 = new Integer(13);
      predicate1.negate();
      Predicate<Object> predicate8 = Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate9 = predicate3.and(predicate2);
      Predicate<Object> predicate10 = predicate9.negate();
      Predicate<Object> predicate11 = predicate1.negate();
      Predicate<Object> predicate12 = predicate2.and(predicate8);
      predicate8.and(predicate11);
      predicate6.and(predicate9);
      Predicate<Object> predicate13 = predicate9.negate();
      Predicate<Object> predicate14 = predicate13.or(predicate6);
      predicate14.negate();
      Predicate<Object> predicate15 = Predicate.isEqual((Object) predicate12);
      Predicate<Object> predicate16 = predicate0.and(predicate15);
      Predicate<Object> predicate17 = predicate2.or(predicate14);
      predicate6.negate();
      predicate17.negate();
      Predicate<Object> predicate18 = predicate16.negate();
      Predicate<Object> predicate19 = predicate1.and(predicate18);
      predicate13.test(predicate10);
      Vector<String> vector0 = new Vector<String>();
      predicate8.and(predicate19);
      System.setCurrentTimeMillis((-1131));
      // Undeclared exception!
      try { 
        vector0.set((-1131), "industry = ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1131
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(3619, "ALIASES", 3619, (-1.0), 1462.1953272702, (-1.0), 3619, 3619, 1462.1953272702, false);
      assertEquals("id=3619 date = ALIASES open=3619.0 high=-1.0 low=1462.1953272702 close=-1.0 volume=3619 count=3619 WAP=1462.1953272702 hasGaps=false", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Function.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Order order0 = new Order();
      order0.m_designatedLocation = "LVX/)YF@";
      order0.m_designatedLocation = "timeZoneId = ";
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, "", 0, 1.7976931348623157E308, 1.7976931348623157E308, (String) null, (String) null);
      orderState0.m_status = null;
      String string0 = EWrapperMsgGenerator.tickEFP((-1), Integer.MAX_VALUE, (-550.755014), " warningText=", 1, 708, (String) null, 0, (-1.0));
      assertEquals("id=-1  unknown: basisPoints = -550.755014/ warningText= impliedFuture = 1.0 holdDays = 708 futureExpiry = null dividendImpact = 0.0 dividends to expiry = -1.0", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData(1322, "com.ib.client.Execution", 1322, 3735.189791, 1322, 1322, 0, 1, 0, false);
      assertEquals("id=1322 date = com.ib.client.Execution open=1322.0 high=3735.189791 low=1322.0 close=1322.0 volume=0 count=1 WAP=0.0 hasGaps=false", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("|e1taM[eZPdrDb%");
      assertEquals("accountDownloadEnd: |e1taM[eZPdrDb%", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_algoStrategy = "s|3\"z^/~x";
      order0.m_nbboPriceCap = 0.0;
      String string0 = EWrapperMsgGenerator.tickPrice(0, 1291, 1.7976931348623157E308, 4607);
      assertEquals("id=0  unknown=1.7976931348623157E308  canAutoExecute", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Order order0 = new Order();
      order0.m_allOrNone = false;
      LinkedList<TagValue> linkedList0 = new LinkedList<TagValue>();
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.updateMktDepth(Integer.MAX_VALUE, 2146231470, (-2599), (-1571), 0.0, 0);
      assertEquals("updateMktDepth: 2147483647 2146231470 -2599 -1571 0.0 0", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EWrapperMsgGenerator.scannerDataEnd(13);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "id = 13 =============== end ===============");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate0);
      Predicate<Object> predicate5 = predicate3.negate();
      Integer integer0 = new Integer((-1014));
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate3.or(predicate1);
      Predicate<Object> predicate8 = predicate7.and(predicate0);
      predicate2.or(predicate0);
      predicate8.and(predicate0);
      Predicate<Object> predicate9 = predicate0.negate();
      predicate7.and(predicate5);
      predicate9.negate();
      Predicate<Object> predicate10 = predicate9.negate();
      predicate10.test("id = 13 =============== end ===============");
      predicate10.or(predicate8);
      Predicate<Object> predicate11 = predicate5.and(predicate3);
      Predicate<Object> predicate12 = predicate3.negate();
      Predicate<Object> predicate13 = predicate12.or(predicate4);
      Predicate<Object> predicate14 = predicate12.negate();
      predicate11.or(predicate9);
      Predicate<Object> predicate15 = predicate14.negate();
      predicate15.or(predicate4);
      predicate15.negate();
      predicate11.negate();
      predicate14.negate();
      predicate7.or(predicate13);
      predicate3.test(predicate6);
      Vector<String> vector0 = new Vector<String>();
      predicate4.and(predicate1);
      // Undeclared exception!
      try { 
        vector0.set(10, "gg{`L<!2fFIO+");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 10
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters("askSize");
      assertEquals("SCANNER PARAMETERS:\naskSize", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      EWrapperMsgGenerator.receiveFA((-1635), "ojxtX>(6");
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_cusip = "a0b";
      String string0 = EWrapperMsgGenerator.bondContractDetails(1673, contractDetails0);
      assertEquals("reqId = 1673 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = a0b\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      EWrapperMsgGenerator.nextValidId(13);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Next Valid Order ID: 13");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      predicate6.and(predicate4);
      Integer integer0 = new Integer(13);
      predicate6.negate();
      Predicate<Object> predicate7 = predicate0.negate();
      Predicate<Object> predicate8 = predicate3.and(predicate2);
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate3.negate();
      Predicate<Object> predicate11 = predicate2.and(predicate7);
      predicate7.and(predicate10);
      predicate6.and(predicate8);
      Predicate<Object> predicate12 = predicate11.negate();
      predicate9.negate();
      Predicate<Object> predicate13 = predicate12.or(predicate6);
      Predicate<Object> predicate14 = Predicate.isEqual((Object) predicate11);
      Predicate<Object> predicate15 = predicate0.and(predicate14);
      Predicate<Object> predicate16 = predicate2.or(predicate13);
      predicate6.negate();
      predicate16.negate();
      Predicate<Object> predicate17 = predicate15.negate();
      Predicate<Object> predicate18 = predicate1.and(predicate17);
      predicate12.test(predicate9);
      Vector<String> vector0 = new Vector<String>();
      predicate7.and(predicate18);
      System.setCurrentTimeMillis((-1131));
      // Undeclared exception!
      try { 
        vector0.set((-1131), "industry = ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1131
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountTime("7,.Qc~8pNLLd");
      assertEquals("updateAccountTime: 7,.Qc~8pNLLd", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Order order0 = new Order();
      String string0 = EWrapperMsgGenerator.orderStatus(45, "tradingHours = ", 956, Integer.MAX_VALUE, 0, 0, 1903, 1.7976931348623157E308, (-1269), "iPiBuFZZ.IzwvY?f]S");
      assertEquals("order status: orderId=45 clientId=-1269 permId=0 status=tradingHours =  filled=956 remaining=2147483647 avgFillPrice=0.0 lastFillPrice=1.7976931348623157E308 parent Id=1903 whyHeld=iPiBuFZZ.IzwvY?f]S", string0);
  }
}
