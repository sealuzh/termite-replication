/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 16:43:43 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0220168722345746
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate.isEqual((Object) rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ontologyTerm1.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      ontologyTerm2.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ontologyTerm1.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getDisplayName();
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1331694161411017
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      rawVariable1.setNotes("2Kh)o");
      ontologyTerm3.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ontologyTerm3.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getCodeBookNumber());
      assertEquals("now", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.888488895463434
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      user0.setPhone("UNABLE_TO_CREATE_ALIAS_FILE_PATH");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("<r+ ");
      User user1 = new User();
      ontologyTerm0.setDescription("<r+ ");
      derivedVariable0.setQuestionNumber("<r+ ");
      user0.setPostCode("UNABLE_TO_CREATE_ALIAS_FILE_PATH");
      user1.setStatus("<r+ ");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getDisplayName();
      derivedVariable0.getForm();
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.886044619081273
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setEmail("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      user0.setCity("'t2");
      user0.setUserID("_N");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCategory("0");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.columnEnd = null;
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.getDisplayItemIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.createVariableSummary();
      derivedVariable1.getColumnEnd();
      derivedVariable1.getQuestionNumber();
      derivedVariable0.getCategory();
      derivedVariable0.getForm();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getSupportingDocuments();
      derivedVariable0.clone();
      assertEquals("0", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7664534593497128
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user0.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user1 = new User("n;GV@GOF7*JluSm*A^[", "n;GV@GOF7*JluSm*A^[");
      User user2 = new User("n;GV@GOF7*JluSm*A^[", "general.fieldValue.blank");
      user2.setCity("^[3");
      user0.setPostCode("n;GV@GOF7*JluSm*A^[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm11);
      User user3 = new User("rc|\")Oz G;`Z", "variable.availability.label");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.7204013155948865
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      Variable.validateFields(derivedVariable1);
      derivedVariable0.getColumnEnd();
      derivedVariable0.getAvailability();
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.7243246323712
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.hasSameDisplayName(derivedVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS", derivedVariable0.getColumnEnd());
      
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsOntologyTerm(ontologyTerm0);
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getAvailability();
      rawVariable0.setNotes("omVi;");
      rawVariable0.columnStart = "Unknown";
      rawVariable0.setAlias("variable.category.label");
      rawVariable0.setName("variable.codeBookNumber.label");
      rawVariable0.setIdentifier(0);
      rawVariable0.getColumnStart();
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("l1-TVL{mEjF3P", "omVi;");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.getDisplayName();
      rawVariable0.setColumnEnd("variable.codeBookNumber.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getNotes();
      rawVariable0.getYear();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      rawVariable0.getCategory();
      assertEquals("variable.codeBookNumber.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.892914420218569
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("Unknown");
      User user0 = new User("Unknown", "Unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("Unknown");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlias("Unknown");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.setIdentifier((-1066));
      arrayList3.add(supportingDocument0);
      derivedVariable1.removeSupportingDocuments(arrayList2);
      derivedVariable0.getIdentifier();
      rawVariable0.clone();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.getAlias();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0409217910818356
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      rawVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.setCleaningDescription("variable.label.label");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlias("variable.label.label");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getCleaningDescription();
      User user0 = new User();
      user0.setAddressLine2("variable.label.label");
      user0.setCity("variable.label.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.0007392176931247
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningDescription("variable.label.label");
      rawVariable0.questionNumber = "variable.label.label";
      rawVariable0.setAvailability("UNABLE_TO_GET_AVAILABILITY_STATES");
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getColumnStart();
      derivedVariable0.getValueLabels();
      rawVariable0.getIdentifier();
      User user0 = new User("UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS", "variable.label.label");
      user0.setPostCode("variable.label.label");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.label.label", rawVariable0.getQuestionNumber());
      
      derivedVariable0.getAlias();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9132784825415197
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setCleaningDescription((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias((String) null);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.6678860933481157
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.notes = null;
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.NEW;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType2 = ValueLabel.EditingOperationType.DELETE;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType2);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel3 = new ValueLabel();
      arrayList0.add(valueLabel3);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      rawVariable0.getColumnStart();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.973176228217073
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setCity("3GL5g}Xjm=n{&R");
      user0.setPostCode("3GL5g}Xjm=n{&R");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("3GL5g}Xjm=n{&R");
      rawVariable0.getCodeBookNumber();
      rawVariable0.getCategory();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable1.setAvailability("");
      rawVariable1.createVariableSummary();
      rawVariable0.isCoded();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Variable.validateFields(rawVariable1);
      rawVariable1.isCoded();
      rawVariable0.getDisplayName();
      assertEquals("3GL5g}Xjm=n{&R", rawVariable0.getCategory());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.652094459356576
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(2180);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaningDescription((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlias((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable2.getSupportingDocuments();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<String> arrayList2 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList2.size());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      supportingDocument0.setIdentifier((-48));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument2.setFileName("W");
      supportingDocument1.setDescription("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument3);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.setCleaningDescription("NON_EXISTENT_DOCUMENT_ASSOCIATION");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.setAlias("6BY,|e:");
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.getCleaningDescription();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.047707978151193
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setIdentifier((-5451));
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.setNotes("ZFk~o!vMS\"8i");
      rawVariable0.setCategory("ZFk~o!vMS\"8i");
      rawVariable0.setYear("e=#-XwAVoi/x)");
      rawVariable0.setColumnEnd("ZFk~o!vMS\"8i");
      rawVariable0.getDisplayName();
      rawVariable0.notes = null;
      System.setCurrentTimeMillis((-2950L));
      rawVariable0.getForm();
      rawVariable0.getColumnStart();
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4696072829762055
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      User user0 = new User();
      user0.setPostCode((String) null);
      user0.setCity("0|syk%");
      User user1 = new User(".}8eaP/]", (String) null);
      user1.setEmail(".}8eaP/]");
      user1.setPhone("UNABLE_TO_GET_CHANGES_FOR_USER");
      User user2 = new User();
      user1.setUserID(".}8eaP/]");
      user2.setPostCode(",]<fn 9Wr$/Oe9^2_C");
      user1.setUserID("0|syk%");
      User.checkValidUserIDField("UNABLE_TO_GET_CHANGES_FOR_USER");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      rawVariable0.isCleaned();
      rawVariable0.getColumnEnd();
      assertTrue(rawVariable0.isCleaned());
      
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.970878097659366
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable1.setValueLabels(arrayList0);
      User user0 = new User("0", "(W{");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("3H$-Q67K1mIf[T");
      user0.setLastName("(W{");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable1);
      derivedVariable3.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable3.hasSameDisplayName(derivedVariable1);
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      user0.setAddressLine2("(W{");
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", derivedVariable0.getColumnStart());
      
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.8693444381987945
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      Predicate.isEqual((Object) macawChangeEvent1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user1 = new User((String) null, (String) null);
      ontologyTerm1.setTerm((String) null);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.clone();
      rawVariable1.setYear((String) null);
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ontologyTerm2.setOntologyName((String) null);
      ontologyTerm1.setNameSpace("6;<cI");
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      ontologyTerm1.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("now", rawVariable0.getName());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.updateOntologyTerm(ontologyTerm2);
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      rawVariable1.getAvailability();
      rawVariable1.cloneAttributes(rawVariable2);
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.795284966051281
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setLabel((String) null);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      arrayList1.remove((Object) arrayList0);
      arrayList2.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.clone();
      derivedVariable0.getValueLabels();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPhone("UNABLE_TO_CLEAR_TABLE");
      user0.setPostCode("variable.category.label");
      user0.setStatus("/Vm`;sB|2my4gk!");
      User user1 = new User("ebhc/O?w8I", "1w\"?");
      user1.setCity("1w\"?");
      user0.setCity("N\"_&EM!P1V.c2e");
      user0.setLastName("variable.name.label");
      User user2 = new User("fb,ZE7/+/EIlJVY", "PORdA4&po/");
      user0.setPostCode("variable.columnEnd.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-48));
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      assertTrue(arrayList2.contains(ontologyTerm0));
      
      boolean boolean0 = derivedVariable0.isCoded();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("variable.saveChanges.valueChanged");
      derivedVariable0.getColumnStart();
      derivedVariable0.setCodeBookNumber("m1u,ln}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable1.getCleaningDescription();
      derivedVariable1.getDisplayName();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.removeAll(arrayList1);
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("m1u,ln}", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.746976092441772
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      arrayList0.add(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      arrayList0.add(valueLabel2);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel5.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.questionNumber = "K";
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel5.setMissingValue(true);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      rawVariable0.getValueLabels();
      ValueLabel valueLabel7 = new ValueLabel();
      arrayList2.add(valueLabel1);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      User user0 = new User();
      user0.setAddressLine2("YNL1,T");
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("K", rawVariable0.getQuestionNumber());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.isCoded();
      boolean boolean0 = rawVariable2.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.6154074886266767
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList0.add(valueLabel4);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel5);
      ValueLabel.validateFields(valueLabel5);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.add(valueLabel5);
      User user1 = new User("=8W`CIlYnGTD}s>ZK", "VAD^^51-86:Z^YhbJ|");
      user1.setAddressLine2("SlIn");
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user2 = new User();
      Variable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.118554451499334
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setFilePath("");
      derivedVariable1.setIsNewRecord(true);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.listIterator();
      derivedVariable0.setCleaningStatus("");
      arrayList0.add((Variable) derivedVariable1);
      arrayList0.remove((Object) derivedVariable0);
      derivedVariable0.codeBookNumber = "";
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("WO!ohzujL~");
      supportingDocument0.setDocumentCode("");
      supportingDocument0.setTitle("");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.setCodeBookNumber("0");
      arrayList0.clone();
      derivedVariable0.isCoded();
      derivedVariable0.createVariableSummary();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User();
      user0.setAffiliation("<%\\~_q-Fi7");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getCategory();
      derivedVariable1.getCleaningDescription();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.createVariableSummary();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      assertTrue(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.631608566409463
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList0.add(valueLabel4);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel5);
      ValueLabel.validateFields(valueLabel5);
      arrayList0.stream();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel4.setMissingValue(true);
      arrayList0.add(valueLabel5);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel3);
      valueLabel5.setValue("{p{@\"FisDhp");
      arrayList1.spliterator();
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel4, valueLabel5);
      arrayList0.add(valueLabel3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      System.setCurrentTimeMillis(2002L);
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6693176535848524
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add((ValueLabel) null);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList0.add(valueLabel4);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel5);
      ValueLabel.validateFields(valueLabel5);
      arrayList0.trimToSize();
      arrayList0.stream();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel4.setMissingValue(true);
      arrayList0.add(valueLabel5);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel3);
      valueLabel5.setValue("{p{@\"FisDhp");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel3.setEditingOperationType(valueLabel_EditingOperationType1);
      arrayList1.spliterator();
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel4, valueLabel5);
      arrayList0.add(valueLabel3);
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add((OntologyTerm) null);
      User user1 = new User();
      User user2 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user2.setLastName("UNABLE_TO_GET_ORIGINAL_VARIABLE");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.944518673497653
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("|,1", "|,1");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.form = "}RT^>):bm.";
      derivedVariable0.createVariableSummary();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      arrayList0.add(macawChangeEvent0);
      derivedVariable0.getLabel();
      derivedVariable0.getAvailability();
      derivedVariable0.getOntologyTerms();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable1);
      arrayList1.clear();
      arrayList1.remove((Object) arrayList0);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("}RT^>):bm.", derivedVariable0.getForm());
      assertEquals("", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.565416626485744
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      ArrayList<ValueLabel> arrayList3 = rawVariable1.getValueLabels();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      arrayList3.add(valueLabel1);
      rawVariable0.setValueLabels(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      rawVariable1.getFilePath();
      // Undeclared exception!
      try { 
        rawVariable1.cloneAttributes(rawVariable0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7809234795355935
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCodeBookNumber("INVALID_RAW_VARIABLE");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      rawVariable0.isNewRecord();
      rawVariable0.getOntologyTerms();
      assertEquals("INVALID_RAW_VARIABLE", rawVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setForm("INVALID_RAW_VARIABLE");
      derivedVariable0.removeSourceVariables(arrayList1);
      System.setCurrentTimeMillis(0L);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.6676082383884046
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setFilePath(",gBJ>g24,?_2t0b6|");
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      rawVariable0.getFilePath();
      assertEquals(",gBJ>g24,?_2t0b6|", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2090584275903393
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      ontologyTerm0.setNewRecord(true);
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      user1.setAddressLine1("n;GV@GOF7*JluSm*A^[");
      valueLabel0.setMissingValue(true);
      user0.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      User user2 = new User();
      user1.setCity("general.fieldValue.blank");
      user2.setPostCode("n;GV@GOF7*JluSm*A^[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(arrayList1.contains(ontologyTerm1));
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setCity("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      user0.setPostCode("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable1.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate.isEqual((Object) predicate3);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) derivedVariable1);
      predicate4.or(predicate2);
      predicate3.and(predicate0);
      SupportingDocument supportingDocument1 = null;
      derivedVariable1.addSupportingDocument((SupportingDocument) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("Qg8]ERl>%joMK6t");
      supportingDocument2.setDescription("xo& 3v\"%gm");
      // Undeclared exception!
      try { 
        derivedVariable2.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setPhone("");
      user0.setPostCode("8.!,Wo+.X)!Uiz");
      User user1 = new User("1w\"?", "cr`H");
      User user2 = new User("xICBu0N6=<<03)W", "UNABLE_TO_CLEAR_TABLE");
      user1.setPostCode("B[skl[zH?g3");
      user0.setPhone(",P#.JHw+V~?y&Y");
      User user3 = new User();
      user2.setPostCode("8.!,Wo+.X)!Uiz");
      User user4 = new User();
      user4.setUserID("3hF");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user1, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.0218012775525764
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      rawVariable0.setCategory(".}8eaP/]");
      User user0 = new User();
      ontologyTerm2.setTerm("macaw.businessLayer.ValueLabel");
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("xICBu0N6=<<03)W", rawVariable0.getDisplayName());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getValueLabels();
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.8129383556602647
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("xICBu0N6=<<03)W");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      valueLabel0.getDisplayName();
      User user1 = new User();
      user1.setAddressLine1("xICBu0N6=<<03)W");
      User.detectFieldChanges(user1, user1, user0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      User user2 = new User();
      user2.setPhone("-xICBu0N6=<<03)W");
      valueLabel0.setMissingValue(false);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      ValueLabel.differencesExist(user2, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.setName("variable.columnStart.label");
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getName();
      rawVariable0.getForm();
      derivedVariable0.getAlternativeVariable();
      assertEquals("variable.columnStart.label", derivedVariable0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0773921168618714
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      ontologyTerm1.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("b-K!N|dR.b4^p");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("now", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.5593111963323647
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setCity("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      user0.setPostCode("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setFileName("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("xo& 3v\"%gm");
      supportingDocument1.setDescription("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      boolean boolean1 = derivedVariable1.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean1 == boolean0);
      
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(derivedVariable2.isCleaned());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPostCode("\u0006FbQS0vPaG]Y5<N]");
      User user1 = new User("\u0006FbQS0vPaG]Y5<N]", "*u3upjY*7");
      user1.setCity("PORdA4&po/");
      User user2 = new User("ua\"", "PORdA4&po/");
      user0.setCity("INVALID_RAW_VARIABLE");
      user0.setLastName("PORdA4&po/");
      User user3 = new User("PORdA4&po/", "7O4UH<");
      user1.setPostCode("ua\"");
      user3.setPhone("PORdA4&po/");
      User user4 = new User();
      user3.setUserID("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      user3.setPostCode("\u0006FbQS0vPaG]Y5<N]");
      user3.setUserID("UNABLE_TO_DISASSOCIATE_DOCUMENT");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable1, (Variable) null);
      assertFalse(derivedVariable1.isCoded());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user1.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setIdentifier(2709);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user2 = new User("n;GV@GOF7*JluSm*A^[", "n;GV@GOF7*JluSm*A^[");
      User user3 = new User("n;GV@GOF7*JluSm*A^[", "general.fieldValue.blank");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      supportingDocument0.setFileName("general.fieldValue.blank");
      supportingDocument0.setDescription("'t2");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7522952062834296
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user0.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setIdentifier(144);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user1 = new User("J.I\"qIj:Xl9{", "J.I\"qIj:Xl9{");
      User user2 = new User("J.I\"qIj:Xl9{", "UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      user2.setCity("^[3");
      user0.setPostCode("J.I\"qIj:Xl9{");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm9);
      User user3 = new User("J.I\"qIj:Xl9{", "UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, derivedVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1757313608735402
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Integer integer0 = new Integer((-3588));
      predicate0.test(integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      ontologyTerm0.setTerm("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      predicate1.and(predicate2);
      Predicate.isEqual((Object) macawChangeEvent0);
      predicate1.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      derivedVariable0.hasSameDisplayName(rawVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      User user1 = new User();
      derivedVariable1.setCleaningStatus("variable.year.label");
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      Variable.detectFieldChanges(user1, derivedVariable1, rawVariable0);
      assertEquals("variable.year.label", derivedVariable1.getCleaningStatus());
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.getValueLabels();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable4 = new RawVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable4);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.234213317524071
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine2("0");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(true);
      rawVariable1.setIsNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      supportingDocument1.getDisplayName();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(arrayList1);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.addSupportingDocument(supportingDocument2);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.notes = "UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT";
      rawVariable2.getYear();
      rawVariable0.getFilePath();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      arrayList1.add(supportingDocument2);
      rawVariable1.getValueLabels();
      assertTrue(rawVariable1.isCoded());
      
      rawVariable3.removeSupportingDocuments(arrayList2);
      rawVariable0.getForm();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.7918512782628513
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("xICBu0N6=<<03)W");
      User user0 = new User();
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setCoded(true);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.getLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.setYear("xICBu0N6=<<03)W");
      derivedVariable1.cloneAttributes(rawVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("xICBu0N6=<<03)W", derivedVariable0.getYear());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.071367910836019
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setCoded(true);
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      ontologyTerm3.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ontologyTerm3.setNewRecord(true);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getCodeBookNumber());
      
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable1.getCleaningStatus();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.7766404277428856
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("general.fieldValue.unknown");
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      derivedVariable0.createVariableSummary();
      derivedVariable0.setForm("general.fieldValue.unknown");
      derivedVariable0.setCoded(true);
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("general.fieldValue.unknown");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("");
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      valueLabel0.getDisplayName();
      User.detectFieldChanges(user0, user0, user0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      valueLabel0.clone();
      user0.setPhone("general.error.blankField");
      valueLabel0.setMissingValue(true);
      valueLabel0.clone();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setName((String) null);
      derivedVariable0.cloneAttributes(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      assertEquals("general.fieldValue.unknown", derivedVariable0.getForm());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0220168722345746
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate.isEqual((Object) rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ontologyTerm1.setNewRecord(false);
      derivedVariable3.addOntologyTerm(ontologyTerm1);
      derivedVariable2.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName((String) null);
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getCodeBookNumber());
      
      rawVariable1.containsOntologyTerm(ontologyTerm3);
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      derivedVariable1.containsOntologyTerm(ontologyTerm2);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription((String) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariable(derivedVariable0);
      derivedVariable0.hasSameDisplayName(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = derivedVariable0.getCleaningDescription();
      assertNull(string0);
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.784756799967431
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel("xICBu0N6=<<03)W");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      user0.setLastName("X.FJKcAjw$2ip");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      valueLabel0.setMissingValue(false);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.createVariableSummary();
      derivedVariable0.setName((String) null);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.getDisplayName();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      String string0 = derivedVariable0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4980758620581636
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.clone();
      ValueLabel valueLabel2 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      User user1 = new User();
      valueLabel0.setMissingValue(true);
      user1.setLastName("n;GV@GOF7*JluSm*A^[");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      User user2 = new User();
      user1.setCity((String) null);
      user1.setPostCode("1L#.QA|Tr<[oV-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5036859602348818
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ontologyTerm1.setDescription("YD=&MaW@(*t;");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user0 = new User("J.I\"qIj:Xl9{", "J.I\"qIj:Xl9{");
      User user1 = new User("J.I\"qIj:Xl9{", "UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      user1.setCity("^[3");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ontologyTerm0.setNewRecord(false);
      derivedVariable2.addOntologyTerm(ontologyTerm2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm3.setOntologyName("Cn&#b:m2hB");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable2, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.0300439731349296
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertEquals("now", rawVariable0.getName());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.hasSameDisplayName(rawVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable1.getOntologyTerms();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.0120998418417804
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.setCleaningStatus("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.addOntologyTerms(arrayList0);
      derivedVariable1.hasSameDisplayName(rawVariable1);
      User user0 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.614587722538201
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("o[+|KE1Kl");
      rawVariable0.setCleaned(true);
      rawVariable0.setIsNewRecord(true);
      Variable.validateFields(rawVariable0);
      rawVariable0.getLabel();
      assertEquals("o[+|KE1Kl", rawVariable0.getLabel());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnStart = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      derivedVariable1.setValueLabels(arrayList0);
      derivedVariable0.setCleaningDescription("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable0.setAlias("general.fieldValue.blank");
      assertEquals("general.fieldValue.blank", derivedVariable0.getAlias());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable1.getSupportingDocuments();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSupportingDocuments(arrayList2);
      assertEquals("0", derivedVariable3.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      arrayList0.removeIf(predicate2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.0766334634716395
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user0.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user1 = new User("J.I\"qIj:Xl9{", "J.I\"qIj:Xl9{");
      User user2 = new User("J.I\"qIj:Xl9{", "UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      user2.setCity("^[3");
      user0.setPostCode("J.I\"qIj:Xl9{");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm5.setOntologyName("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      ontologyTerm5.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ontologyTerm1.setNewRecord(true);
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm8);
      assertFalse(boolean1 == boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate.isEqual((Object) null);
      Predicate.isEqual((Object) rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.84379114829646
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user1.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user2 = new User("n;GV@GOF7*JluSm*A^[", "n;GV@GOF7*JluSm*A^[");
      User user3 = new User();
      user3.setCity("^[3");
      user0.setPostCode("n;GV@GOF7*JluSm*A^[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm7);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      String string0 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.0648161706890917
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      user0.setLastName("X.FJKcAjw$2ip");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable1);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.hasSameDisplayName(rawVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable2.containsOntologyTerm(ontologyTerm1);
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCleaningStatus("user.status.label");
      rawVariable0.getCleaningStatus();
      assertEquals("user.status.label", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.676510728453975
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("K");
      rawVariable0.setAvailability("");
      rawVariable0.getDisplayName();
      rawVariable0.setColumnStart((String) null);
      User user0 = new User();
      user0.setAddressLine2((String) null);
      user0.setAddressLine1("K");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("K", rawVariable0.getQuestionNumber());
      
      user0.setAffiliation("");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.759680002133533
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Integer integer0 = new Integer((-3588));
      predicate0.test(integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      ontologyTerm0.setTerm("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      predicate1.and(predicate2);
      Predicate.isEqual((Object) macawChangeEvent0);
      predicate1.negate();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setCity("sz.qWlvX0}SOjZ");
      User user1 = new User("liv", "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      user0.setPostCode("(|CM-y");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getName();
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable1.getNotes();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add((ValueLabel) null);
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel3 = new ValueLabel();
      arrayList0.add(valueLabel3);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel4);
      ValueLabel.validateFields(valueLabel4);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.46307548517626
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.setColumnEnd("");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable1.addOntologyTerm(ontologyTerm9);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      arrayList2.add(valueLabel1);
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      arrayList2.add(valueLabel6);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setValueLabels(arrayList2);
      rawVariable0.questionNumber = null;
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      rawVariable0.getFilePath();
      rawVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      user0.setLastName("");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean1 = rawVariable1.isNewRecord();
      assertTrue(boolean1 == boolean0);
      
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.7808273196010282
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      valueLabel0.setIdentifier(1105);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.columnStart = "}OA";
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.createVariableSummary();
      rawVariable0.setCodeBookNumber("general.error.blankField");
      rawVariable0.getCodeBookNumber();
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.setCleaningDescription("}OA");
      assertEquals("}OA", rawVariable0.getCleaningDescription());
      
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      user0.setAddressLine1("x'@p]j?ZW3J[WR");
      user0.setAddressLine2("x'@p]j?ZW3J[WR");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("x'@p]j?ZW3J[WR");
      derivedVariable0.createVariableSummary();
      assertEquals("x'@p]j?ZW3J[WR", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.656595584637896
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName(")SU3_ook");
      User user0 = new User("Unknown", ")SU3_ook");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm("%PL;J>/@/");
      user0.setLastName("variable.columnStart.label");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm3, ontologyTerm3);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable1.hasSameDisplayName(rawVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getName();
      derivedVariable0.getOntologyTerms();
      rawVariable1.containsOntologyTerm(ontologyTerm2);
      rawVariable0.createVariableSummary();
      assertEquals(")SU3_ook", rawVariable0.getName());
      
      boolean boolean0 = rawVariable2.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.6719128822260756
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      rawVariable0.getValueLabels();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      System.setCurrentTimeMillis((-1L));
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList1);
      derivedVariable1.cloneAttributes(rawVariable0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      
      derivedVariable0.getValueLabels();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.797307377280536
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate.isEqual((Object) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList2 = rawVariable0.getValueLabels();
      arrayList2.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel3, valueLabel0);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel4);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel4.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      arrayList3.add(valueLabel1);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      arrayList1.spliterator();
      ValueLabel valueLabel5 = new ValueLabel();
      arrayList1.add(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<String> arrayList5 = Variable.validateFields(rawVariable0);
      assertFalse(arrayList5.isEmpty());
      
      rawVariable0.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User();
      user0.setCity("3GL5g}Xjm=n{&R");
      user0.setPostCode("3GL5g}Xjm=n{&R");
      User user1 = new User("3GL5g}Xjm=n{&R", "3GL5g}Xjm=n{&R");
      user0.setCity("3GL5g}Xjm=n{&R");
      user1.setCity("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user1.setFirstName("3GL5g}Xjm=n{&R");
      User user2 = new User("PORdA4&po/", "3GL5g}Xjm=n{&R");
      user1.setCity("3GL5g}Xjm=n{&R");
      user0.setCity("NOyD/L*nq=Lu+si^Mx*");
      user0.setLastName(".}8eaP/]");
      User user3 = new User("3GL5g}Xjm=n{&R", "3GL5g}Xjm=n{&R");
      user3.setStatus("NOyD/L*nq=Lu+si^Mx*");
      user3.setFirstName("INVALD_RAW_ARIABLE");
      user3.setStatus("^[w-+&*]+(?:.[w-_+&*]+)*@(?:[w-]+.)+[a-zA-Z]{2,7}$");
      user0.setPostCode("user.lastName.saveChanges");
      user3.setCity("INVALD_RAW_ARIABLE");
      user3.setEmail((String) null);
      user2.setPhone("UNABLE_TO_GET_CHANGES_FOR_USER");
      User user4 = new User("user.lastName.saveChanges", "UNABLE_TO_GET_CHANGES_FOR_USER");
      user0.setCounty("|");
      user2.setUserID("Ce^WGK");
      user0.setPostCode("3GL5g}Xjm=n{&R");
      System.setCurrentTimeMillis(728L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.527062838287056
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm6);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm8);
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm13);
      int int0 = rawVariable0.getIdentifier();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.5406561526120646
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      User user0 = new User();
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user1.setLastName("eow");
      RawVariable rawVariable0 = new RawVariable();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      User user2 = new User();
      user1.setCity("variable.year.label");
      user1.setPostCode("$>sa>UG");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable1.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable1.getQuestionNumber();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable1.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel2.setMissingValue(true);
      ArrayList<ValueLabel> arrayList3 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList4 = rawVariable0.getValueLabels();
      ValueLabel valueLabel5 = new ValueLabel();
      arrayList2.add(valueLabel2);
      ArrayList<ValueLabel> arrayList5 = new ArrayList<ValueLabel>();
      rawVariable1.setCategory("variable.codeBookNumber.label");
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel valueLabel7 = new ValueLabel();
      ValueLabel valueLabel8 = new ValueLabel();
      arrayList0.add(valueLabel8);
      rawVariable1.setValueLabels(arrayList4);
      ArrayList<ValueLabel> arrayList6 = new ArrayList<ValueLabel>();
      rawVariable1.getValueLabels();
      rawVariable1.getCategory();
      assertEquals("variable.codeBookNumber.label", rawVariable1.getCategory());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.7095088184443425
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.getDisplayName();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setName((String) null);
      User user0 = new User();
      ontologyTerm1.setTerm("Unknown");
      user0.setLastName("Unknown");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.columnStart = "Unknown";
      derivedVariable1.removeSourceVariable(rawVariable1);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable1.clone();
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("", derivedVariable2.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("", derivedVariable2.getNotes());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertEquals("", derivedVariable2.getCleaningDescription());
      assertEquals("Unknown", derivedVariable2.getColumnStart());
      assertFalse(derivedVariable2.isNewRecord());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.76961217994177
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User("YD=&MaW@(*t;", "YD=&MaW@(*t;");
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      user1.setLastName("YD=&MaW@(*t;");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      user0.setCity((String) null);
      user1.setPostCode("UNABLE_TO_GET_CHANGES_FOR_DOCUMENT");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      User.checkValidUserIDField("DUPLICATE_ONTOLOGY_TERM");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable2.setCodeBookNumber((String) null);
      derivedVariable2.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, rawVariable2);
      System.setCurrentTimeMillis(1063L);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      boolean boolean0 = derivedVariable1.isCleaned();
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(boolean0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList0);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      ValueLabel valueLabel1 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList1.add(valueLabel2);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.431259504143956
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user1.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user2 = new User("n;GV@GOF7*JluSm*A^[", "n;GV@GOF7*JluSm*A^[");
      User user3 = new User("n;GV@GOF7*JluSm*A^[", "general.fieldValue.blank");
      user3.setCity("general.fieldValue.blank");
      user3.setCity("^[3");
      user0.setPostCode("n;GV@GOF7*JluSm*A^[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm10);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.6938274918342655
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user1.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      user1.setCity("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      user0.setPostCode("UNABLE_TO_GET_CATEGORY_NAME");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-417));
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.getCleaningStatus();
      assertEquals("-417", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.setCoded(true);
      derivedVariable0.isCoded();
      derivedVariable0.setColumnStart("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      derivedVariable0.getFilePath();
      derivedVariable0.questionNumber = ".}8eaP/]";
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getYear();
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS", derivedVariable0.getColumnStart());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.1185544514993344
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNameSpace("p7_($DD{r?}H\"-l{ZJR");
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(true);
      derivedVariable1.setAvailability("now");
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      ontologyTerm3.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      rawVariable0.getFilePath();
      assertEquals("now", rawVariable0.getName());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.7091117567012413
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.setAlias((String) null);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getLabel();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      String string0 = rawVariable0.getAlias();
      assertNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      derivedVariable0.getSourceVariables();
      User user0 = new User((String) null, "");
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      User user0 = new User("1/2vF\"_e", "variable.cleaningStatus.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "8w";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("8w", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.9703715548142835
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate.isEqual((Object) rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User("now", "now");
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ontologyTerm1.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      ontologyTerm2.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ontologyTerm1.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getCodeBookNumber());
      
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.7719505922962497
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setCity("vPbP98642R");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setFileName("vPbP98642R");
      supportingDocument0.setFileName("vPbP98642R");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setAlias("2w");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDocumentCode("vPbP98642R");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFileName("vPbP98642R");
      supportingDocument3.setDescription("vPbP98642R");
      supportingDocument2.setFileName("vPbP98642R");
      supportingDocument3.setDescription("UNABLE_TO_CHECK_ALIAS_FILE_PATH_EXISTS");
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      System.setCurrentTimeMillis(976L);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("2w", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.806457543204254
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      User user0 = new User("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS", "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(derivedVariable3);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("UNABLE_TO_DELETE_USER");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS", derivedVariable0.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable2.updateOntologyTerm(ontologyTerm2);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.1552486438876346
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(macawChangeEvent0);
      Predicate<Object> predicate1 = predicate0.negate();
      ontologyTerm0.setTerm("");
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setCity("2G!Y<;At1vYBbgY`t");
      user0.setLastName("(|CM-y");
      User user1 = new User("2G!Y<;At1vYBbgY`t", "(|CM-y");
      user0.setPostCode("fb,ZE7/+/EIlJVY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("(|CM-y");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("(|CM-y", rawVariable1.getLabel());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.9336377947643983
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(macawChangeEvent0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) macawChangeEvent0);
      ontologyTerm0.setTerm("!g");
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      User user0 = new User();
      user0.setCity("fb,ZE7/+/EIlJVY");
      user0.setLastName("(|CM-y");
      User user1 = new User("!g", "(|CM-y");
      user0.setPostCode("fb,ZE7/+/EIlJVY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getDisplayName();
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable2);
      assertFalse(rawVariable2.isNewRecord());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable2.isCleaned());
      assertEquals(0, rawVariable2.getIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.7682071480623183
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      rawVariable0.createVariableSummary();
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.parallelStream();
      ValueLabel valueLabel2 = new ValueLabel();
      User user0 = new User();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel1);
      ValueLabel.validateFields(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      arrayList0.add(valueLabel1);
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.spliterator();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList0.add(valueLabel3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("");
      Variable.validateFields(rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel1);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel3.setEditingOperationType(valueLabel_EditingOperationType0);
      ArrayList<ValueLabel> arrayList2 = new ArrayList<ValueLabel>();
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList3);
      ArrayList<ValueLabel> arrayList4 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel valueLabel7 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      ArrayList<ValueLabel> arrayList5 = new ArrayList<ValueLabel>();
      ArrayList<ValueLabel> arrayList6 = new ArrayList<ValueLabel>();
      assertFalse(arrayList6.equals((Object)arrayList1));
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.797856124308156
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-29));
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("macaw.businessLayer.ValueLabel");
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setName("z1Ds4+}G\"dOE./J.v9.");
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getName();
      rawVariable0.isCoded();
      rawVariable0.getLabel();
      assertEquals("z1Ds4+}G\"dOE./J.v9.", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.827128245732174
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      predicate0.test(rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate.isEqual((Object) arrayList0);
      predicate3.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace("Q,c@|G");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("ilfvC}sS)/");
      User user1 = new User("ilfvC}sS)/", "ilfvC}sS)/");
      ontologyTerm2.setTerm("d;ic%fW6P7_?gW~5R=");
      ontologyTerm1.setOntologyName("d;ic%fW6P7_?gW~5R=");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm2, ontologyTerm3);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm1.setNewRecord(false);
      derivedVariable1.addOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setOntologyName("general.error.invalidEmail");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("ilfvC}sS)/", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.4286687697449683
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      rawVariable0.setNotes("8D_|],&wX+OI");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate2.and(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      predicate3.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      predicate3.negate();
      predicate4.or(predicate5);
      predicate1.or(predicate0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Predicate.isEqual((Object) ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertEquals("8D_|],&wX+OI", rawVariable0.getNotes());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm12);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.7820577141665286
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      predicate0.test(rawVariable0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("QECEW{eA:sXnQnC5P");
      User user0 = new User("QECEW{eA:sXnQnC5P", "QECEW{eA:sXnQnC5P");
      ontologyTerm0.setTerm("QECEW{eA:sXnQnC5P");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      ontologyTerm3.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ontologyTerm1.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.cloneAttributes(rawVariable0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.0712356794310605
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      Predicate.isEqual((Object) rawVariable0);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("now");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.getDisplayName();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.hasSameDisplayName(rawVariable1);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.containsOntologyTerm(ontologyTerm1);
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertEquals("now", rawVariable1.getForm());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.121678589358397
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate1);
      predicate0.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm2.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      ontologyTerm1.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("i'Q@#dJJ}><\"M ");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("i'Q@#dJJ}><\"M ", derivedVariable0.getFilePath());
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("b-K!N|dR.b4^p");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "0";
      derivedVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        arrayList0.listIterator((-582));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -582
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "[PNf";
      derivedVariable0.columnEnd = "UNABLE_TO_CHECK_DOCUMENT_ASSOCIATION_EXISTS";
      derivedVariable0.clone();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.53955732456984
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.questionNumber = "ri^%kE";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getFilePath());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("ri^%kE", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.453728460904923
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaningDescription("xICBu0N6=<<03)W");
      rawVariable0.getOntologyTerms();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Integer integer0 = new Integer((-3588));
      predicate0.test(integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      ontologyTerm0.setTerm("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      Predicate<Object> predicate2 = Predicate.isEqual((Object) "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      predicate1.and(predicate2);
      Predicate.isEqual((Object) macawChangeEvent0);
      predicate1.negate();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      User user0 = new User();
      user0.setCity("sz.qWlvX0}SOjZ");
      User user1 = new User("liv", "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      user0.setPostCode("(|CM-y");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getName();
      System.setCurrentTimeMillis((-3588));
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("O:fw;QX<lG@8%p,Y0", "O:fw;QX<lG@8%p,Y0");
      user0.setAddressLine1("O:fw;QX<lG@8%p,Y0");
      user0.setAddressLine2("a_)ni1@'6FRH");
      user0.setAddressLine2("variable.codeBookNumber.label");
      user0.setStatus("user.lastName.label");
      user0.setPassword("NON_EXISTENT_VARIABLE");
      user0.setUserID("UNABLE_TO_CREATE_DATABASE");
      user0.setAddressLine2("O:fw;QX<lG@8%p,Y0");
      user0.setCity("[]xU+J^m6:r=2)%I");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "user.lastName.label";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.708408798019773
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      User user0 = new User();
      User user1 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      user1.setLastName("UNABLE_TO_DELETE_ALIAS_FILE_PATH");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      User user2 = new User("n;GV@GOF7*JluSm*A^[", "n;GV@GOF7*JluSm*A^[");
      User user3 = new User("n;GV@GOF7*JluSm*A^[", "general.fieldValue.blank");
      user3.setCity("^[3");
      user0.setPostCode("n;GV@GOF7*JluSm*A^[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm10);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.0710200847490623
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setName("now");
      User user0 = new User("now", "now");
      ontologyTerm0.setTerm("now");
      rawVariable0.codeBookNumber = "UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES";
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ontologyTerm2.setOntologyName("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      ontologyTerm2.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ontologyTerm1.setOntologyName("\u0006FbQS0vPaG]Y5<N]");
      ontologyTerm2.setNameSpace("\u0006FbQS0vPaG]Y5<N]");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ontologyTerm1.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.915763613489313
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPhone("");
      user0.setPostCode("variable.category.label");
      User user1 = new User("ebhc/O?w8I", "1w\"?");
      User user2 = new User("fb,ZE7/+/EIlJVY", "PORdA4&po/");
      user2.setPostCode("ebhc/O?w8I");
      user2.setPhone("variable.category.label");
      user2.setPostCode("RptA*%~a:MI0R|0[R");
      user2.setUserID("");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }
}
