/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 17:16:53 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 3000);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("**** Resultat : \n** Fonctionnement : ", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte) (-38);
      byteArray0[2] = (byte) (-108);
      byteArray0[3] = (byte) (-108);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress2 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress2);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      Services.testSMTP("", 3000);
      System.setCurrentTimeMillis(1407L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://jS_dS~d$Ze1D0:0");
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-3538L));
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, " Tk[1(c4slteL?l");
      System.setCurrentTimeMillis(731L);
      Services.testHTTP("jS_dS~d$Ze1D0", 0);
      Services.testHTTPS("jS_dS~d$Ze1D0", (-3091));
      System.setCurrentTimeMillis(1018L);
      System.setCurrentTimeMillis(1292L);
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis(2491L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "** Temps : ");
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https:// ms\n:2");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "** Temps : ");
      System.setCurrentTimeMillis((-3273L));
      Services.testHTTPS(" ms\n", 2);
      System.setCurrentTimeMillis((-6402L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testSMTP("liLBc*!F;OAXs", (-153));
      System.setCurrentTimeMillis((-3519L));
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-153));
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-3519L));
      System.setCurrentTimeMillis(731L);
      Services.testPOP3("liLBc*!F;OAXs", 1);
      System.setCurrentTimeMillis(808L);
      System.setCurrentTimeMillis((-3519L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-393L));
      System.setCurrentTimeMillis(1210L);
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-536));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.works = true;
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.time = (-3031L);
      services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result2.works);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.works = true;
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.time = (-3031L);
      services_SIMPLE_Result1.reset();
      services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result2 = new Services.SIMPLE_Result();
      assertFalse(services_SIMPLE_Result2.works);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 3);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("j~ 1wx&ER", (-2490));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("RM|lUI?lv}j", 1);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services services0 = new Services();
      Services.testPOP3("2J+Jb{uC", 1);
      System.setCurrentTimeMillis((-5L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(398L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-5L));
      System.setCurrentTimeMillis((-31L));
      System.setCurrentTimeMillis((-4447L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-5L));
      System.setCurrentTimeMillis(1464L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      assertEquals(0, services_HTTP_Result1.code);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(607L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(607L);
      System.setCurrentTimeMillis(0L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 1);
      services_SIMPLE_Result0.toString();
      System.setCurrentTimeMillis(808L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(607L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-20L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-2197L));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8599785716462063
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("*#BPyxS8 RJ>X[Qa6", 0);
      services_HTTP_Result0.time = 0L;
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      
      services_HTTP_Result0.page_weight = 0;
      services_HTTP_Result0.time = 0L;
      services_HTTP_Result0.code = (-1669);
      services_HTTP_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("*#BPyxS8 RJ>X[Qa6", (-1));
      services_HTTP_Result1.reset();
      assertEquals(0, services_HTTP_Result1.code);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("$&hAPxSa<,thF}2tu", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("** Erreur g\u00E9n\u00E9r\u00E9e : ", (-1585));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }
}
