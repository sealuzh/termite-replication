/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 16:22:27 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("H)^-Mz&T!3x]", true);
      assertFalse(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-sup{ressDeclaration";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-sup{ressDeclaration";
      stringArray0[3] = "V#ZkI!c){RjB";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1757412430371352
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterNTags(714);
      outputFormat1.setIndent((String) null);
      outputFormat0.getEncoding();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      OutputFormat.createCompactFormat();
      stringArray0[1] = null;
      stringArray0[2] = null;
      outputFormat0.setNewLineAfterDeclaration(false);
      stringArray0[3] = null;
      outputFormat1.setSuppressDeclaration(true);
      stringArray0[4] = null;
      stringArray0[5] = null;
      outputFormat0.setIndentSize(714);
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-nJwlines");
      assertFalse(outputFormat0.isPadText());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "9w{5#?:0AZrDJ \"tTG";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-eoEing";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isPadText());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5364016494676256
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "-lineSeparator";
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator");
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent("-lineSeparator");
      String string1 = ".WjGu~}qIQH";
      outputFormat0.setIndentSize(1);
      String string2 = "-encoEing";
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndentSize(1);
      int int0 = (-669);
      outputFormat0.setIndentSize((-669));
      outputFormat0.setIndentSize((-4330));
      outputFormat0.setIndentSize(3987);
      outputFormat0.setIndentSize(5563);
      outputFormat0.setIndentSize((-669));
      // Undeclared exception!
      outputFormat0.setIndentSize(1868);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2381744996028692
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(".cjeG>pHK[N", false);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Hha{fQ";
      stringArray0[1] = "-lineSeparator";
      outputFormat0.parseOptions(stringArray0, 1);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertNull(string0);
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(".cjeG>pHK[N", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "V#ZkI!c){RjB";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "^\"Z5eO+/E%Xb%32lRwX";
      stringArray1[1] = "-lineSeparator";
      stringArray1[2] = "-xhtml-eitEnodint";
      stringArray1[3] = "iKnboc'U1;";
      stringArray1[4] = "^\"Z5eO+/E%Xb%32lRwX";
      stringArray1[5] = "9w{5#?:0AZrDJ \"tTG";
      stringArray1[6] = "^\"Z5eO+/E%Xb%32lRwX";
      stringArray1[7] = "V#ZkI!c){RjB";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertEquals("-xhtml-eitEnodint", outputFormat0.getLineSeparator());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6197895169208802
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = new OutputFormat("-omitEncoding", true, "-eitEnodint");
      outputFormat1.setIndent("-emitEncodint");
      assertEquals("-emitEncodint", outputFormat1.getIndent());
      
      outputFormat0.setIndentSize(1);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-emitEncodint";
      stringArray0[3] = "-enVoEiOng";
      stringArray0[4] = "-enVoEiOng";
      stringArray0[5] = "-enVoEiOng";
      stringArray0[6] = "-emitEncodint";
      stringArray0[7] = "-enVoEiOng";
      outputFormat0.parseOptions(stringArray0, 39);
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals(2, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.030495400303718
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent", true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-expandEpty-xhtmliKnboc'U1;";
      stringArray0[2] = "W[39Vm{q6~";
      stringArray0[3] = "-expandEpty-xhtmliKnboc'U1;";
      stringArray0[5] = "-expandEpty-xhtmliKnboc'U1;";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-expandEpty-xhtmliKnboc'U1;", outputFormat0.getIndent());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0547115277051002
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "-newlines";
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      String string1 = "-emitEncodint";
      String string2 = "9w{5#?:0AZrDJ \"tTG";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-newlines";
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2668));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2668
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlnes");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-iLwXinens";
      stringArray0[1] = "-expandEmpty-emitEncodint";
      stringArray0[2] = "-newlnes";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "V#ZkI!c){RjB";
      stringArray0[1] = "-lineSe=paraGtor";
      stringArray0[2] = "-indentSize";
      stringArray0[5] = "e#'FP<=_BhcN-Oo";
      String[] stringArray1 = new String[11];
      stringArray1[0] = "-lineSe=paraGtor";
      stringArray1[1] = "-indentSize";
      stringArray1[2] = "e#'FP<=_BhcN-Oo";
      stringArray1[3] = "-indentSize";
      stringArray1[4] = "V#ZkI!c){RjB";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"e#'FP<=_BhcN-Oo\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".cjeG>pHK[N";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = ".cjeG>pHK[N";
      outputFormat0.setXHTML(false);
      stringArray0[3] = ".cjeG>pHK[N";
      stringArray0[4] = ".cjeG>pHK[N";
      outputFormat0.setLineSeparator("-xhtmlUTF-8");
      outputFormat0.isSuppressDeclaration();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2252279399939554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmly*%_>U/72H-D#^", true, "-xhtmly*%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[5];
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      stringArray0[0] = "-xhtmly*%_>U/72H-D#^";
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.parseOptions(stringArray0, 3700);
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.getLineSeparator();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmly*%_>U/72H-D#^", false);
      outputFormat1.setIndent("\n");
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setEncoding("Invalid attribute quote character (");
      outputFormat1.setIndentSize(1);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.2890792946791425
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setIndentSize(24);
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[3];
      stringArray0[1] = "";
      stringArray0[2] = "35\u0003Ko+:y2ZaQ+c";
      outputFormat0.parseOptions(stringArray0, 24);
      outputFormat0.setNewLineAfterNTags(660);
      OutputFormat outputFormat1 = new OutputFormat("35\u0003Ko+:y2ZaQ+c");
      outputFormat0.setTrimText(true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("35\u0003Ko+:y2ZaQ+c");
      outputFormat1.setIndentSize(24);
      OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      OutputFormat.createPrettyPrint();
      int int0 = outputFormat1.parseOptions(stringArray0, 2814);
      assertEquals("                        ", outputFormat1.getIndent());
      assertEquals(2814, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2247111441283223
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "1");
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "xICBu0N6=<<03)W";
      stringArray0[3] = "1";
      stringArray0[4] = "";
      stringArray0[5] = "1";
      outputFormat0.parseOptions(stringArray0, 562);
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat("xICBu0N6=<<03)W", true);
      outputFormat1.parseOptions(stringArray0, 562);
      outputFormat1.setNewLineAfterNTags(52);
      outputFormat0.isTrimText();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent("xICBu0N6=<<03)W");
      OutputFormat outputFormat2 = new OutputFormat("xICBu0N6=<<03)W", true);
      outputFormat2.setPadText(true);
      outputFormat2.parseOptions(stringArray0, 657);
      assertTrue(outputFormat2.isPadText());
      
      outputFormat0.getIndent();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat3.isPadText());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "t;zvFeVfRx,<";
      stringArray0[1] = "t;zvFeVfRx,<";
      stringArray0[2] = "eE?^8\"Q7}dgE";
      stringArray0[3] = "t;zvFeVfRx,<";
      stringArray0[5] = "t;zvFeVfRx,<";
      stringArray0[6] = "-xhtml";
      OutputFormat outputFormat0 = new OutputFormat("t;zvFeVfRx,<", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", false);
      String[] stringArray0 = new String[20];
      outputFormat0.setNewLineAfterNTags((-9));
      stringArray0[0] = "?g7Y18;C3p>Dn#}b";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-9), int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2446243634103893
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterNTags(49);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.getIndent();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      outputFormat1.setNewLineAfterDeclaration(true);
      stringArray0[1] = "";
      outputFormat1.parseOptions(stringArray0, 49);
      outputFormat1.getIndent();
      outputFormat0.parseOptions(stringArray0, '+');
      assertEquals(49, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.getLineSeparator();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.9472002185719735
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(1);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[8];
      outputFormat0.setXHTML(true);
      stringArray0[0] = "[";
      stringArray0[1] = "sRVmVLj5,NgLMA";
      outputFormat0.setTrimText(false);
      stringArray0[2] = "sRVmVLj5,NgLMA";
      stringArray0[3] = "sRVmVLj5,NgLMA";
      outputFormat0.setTrimText(true);
      stringArray0[4] = "-xhtmlUTF-8";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[6] = "sRVmVLj5,NgLMA";
      stringArray0[7] = "sRVmVLj5,NgLMA";
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-nJwlines");
      outputFormat0.setEncoding((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[1] = "-nJwlines";
      stringArray0[2] = null;
      stringArray0[4] = "-nJwlines";
      stringArray0[5] = null;
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("e#'FP<=_BhcN-Oo", false, "8Q}23 &>#vw,YU kXU3");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-ne^li^es";
      stringArray0[1] = "-ne^li^es";
      stringArray0[3] = "-enVoEiOng";
      stringArray0[3] = "-ne^li^es";
      stringArray0[4] = "8Q}23 &>#vw,YU kXU3";
      stringArray0[5] = "-ne^li^es";
      outputFormat0.setNewLineAfterNTags(3733);
      stringArray0[6] = "e#'FP<=_BhcN-Oo";
      outputFormat0.getNewLineAfterNTags();
      assertEquals(3733, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.258747513382372
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("%_>U/72H-D#^", true, "%_>U/72H-D#^");
      outputFormat0.setIndentSize(1);
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[21];
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      stringArray0[0] = "%_>U/72H-D#^";
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      stringArray0[1] = "%_>U/72H-D#^";
      stringArray0[2] = "%_>U/72H-D#^";
      stringArray0[3] = "%_>U/72H-D#^";
      stringArray0[4] = "%_>U/72H-D#^";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.isTrimText();
      assertEquals(" ", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8047056673944684
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "1");
      outputFormat0.setXHTML(false);
      String[] stringArray0 = new String[7];
      stringArray0[1] = "xICBu0N6=<<03)W";
      stringArray0[3] = "1";
      outputFormat0.setTrimText(true);
      stringArray0[4] = "";
      stringArray0[5] = "1";
      outputFormat0.parseOptions(stringArray0, 541);
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat(stringArray0[0], true);
      String[] stringArray1 = new String[4];
      stringArray1[1] = "xICBu0N6=<<03)W";
      stringArray1[2] = "xICBu0N6=<<03)W";
      stringArray1[3] = "1";
      outputFormat1.parseOptions(stringArray1, 1);
      outputFormat0.isTrimText();
      outputFormat1.getLineSeparator();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-4110));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4110
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(true);
      boolean boolean0 = outputFormat0.isOmitEncoding();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1040026700508068
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("sRVmVLj5,NgLMA", false);
      outputFormat0.setEncoding("7[b`h)Y-&?");
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.getIndent();
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      assertEquals("7[b`h)Y-&?", outputFormat0.getEncoding());
      
      String string0 = outputFormat1.getEncoding();
      assertEquals("UTF-8", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("=70~DbTy<0k");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals("=70~DbTy<0k", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.180894819619283
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.getIndent();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      outputFormat1.setIndent(false);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.parseOptions(stringArray0, 49);
      outputFormat1.getIndent();
      outputFormat0.parseOptions(stringArray0, '+');
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.getLineSeparator();
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9210152780267027
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(4688);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding(".Y$NJZWn");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator(".Y$NJZWn");
      assertEquals(".Y$NJZWn", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("M]");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.isNewlines();
      outputFormat0.setIndentSize((-1793356028));
      String string0 = "m9rluW5 ET-w ZlI";
      String[] stringArray0 = new String[2];
      outputFormat0.setNewlines(false);
      stringArray0[0] = "";
      stringArray0[1] = "-encoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1793356028));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1793356028
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.0059695736425467
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(4688);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setEncoding(".Y$NJZWn");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setPadText(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.isPadText();
      outputFormat0.setLineSeparator(".Y$NJZWn");
      outputFormat0.setNewLineAfterDeclaration(true);
      assertEquals(".Y$NJZWn", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0750596491686037
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isNewlines();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndentSize(121);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent("");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('w');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (w)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-emitEncodint";
      stringArray0[2] = "-iLwXinens";
      stringArray0[3] = "8IU,CzzG:iz#:9`l\"YH";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "8IU,CzzG:iz#:9`l\"YH";
      OutputFormat outputFormat0 = new OutputFormat("8IU,CzzG:iz#:9`l\"YH", true, (String) null);
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', char0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("8IU,CzzG:iz#:9`l\"YH", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.3458240980466787
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("'+vzc^}+i^(vI#+ss}");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-emicE@codint");
      outputFormat0.setIndent("'+vzc^}+i^(vI#+ss}");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-indent");
      assertEquals("-indent", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6584195700460125
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent("sRVmVLj5,NgLMA");
      outputFormat0.setNewlines(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(true);
      String[] stringArray0 = new String[8];
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      stringArray0[1] = "sRVmVLj5,NgLMA";
      outputFormat0.setTrimText(false);
      stringArray0[2] = "sRVmVLj5,NgLMA";
      outputFormat0.setIndent(false);
      stringArray0[3] = "sRVmVLj5,NgLMA";
      outputFormat0.setLineSeparator("-newli");
      outputFormat0.setIndentSize(39);
      stringArray0[4] = "-xhtmlUTF-8";
      outputFormat0.setSuppressDeclaration(false);
      stringArray0[5] = "sRVmVLj5,NgLMA";
      stringArray0[6] = "sRVmVLj5,NgLMA";
      stringArray0[7] = "sRVmVLj5,NgLMA";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterNTags((-789));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("sRVmVLj5,NgLMA");
      outputFormat0.setIndentSize(1);
      boolean boolean0 = outputFormat0.isExpandEmptyElements();
      assertEquals("-newli", outputFormat0.getLineSeparator());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[7];
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-sup{ressDeclaration", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "V#ZkI!c){RjB";
      stringArray0[1] = "-lineSe=paraGtor";
      stringArray0[2] = "-sup{ressDeclaration";
      stringArray0[5] = "e#'FP<=_BhcN-Oo";
      String[] stringArray1 = new String[5];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setEncoding("-lineSeparat");
      assertEquals("-lineSeparat", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndentSize((-1559));
      outputFormat0.setIndent("-emitEncodint");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent("-enVo");
      outputFormat0.setIndent("ft8gSf-UyeDiL5 ");
      assertEquals("ft8gSf-UyeDiL5 ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9512667872451708
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("D+vzc^}+1](vI#+2ss}");
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize((-43));
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(".<fc\"So`-Jv");
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent("-xhtmlt;zvFeVfRx,<");
      assertEquals("-xhtmlt;zvFeVfRx,<", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "t;zvFeVfRx,<";
      stringArray0[1] = "t;zvFeVfRx,<";
      stringArray0[3] = "t;zvFeVfRx,<";
      stringArray0[5] = "t;zvFeVfRx,<";
      stringArray0[6] = "-xhtml";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml0N%XG:>Xa^%,e [))j");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('X');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (X)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("G3++)9c#oeNsk5BUt3+");
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
      
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true);
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "V#ZkI!c){RjB";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-lineSeparator";
      stringArray0[3] = "-eoEing";
      stringArray0[4] = "V#ZkI!c){RjB";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "9w{5#?:0AZrDJ \"tTG";
      stringArray1[1] = "-suppressDeclaration";
      stringArray1[2] = "iKnboc'U1;";
      stringArray1[3] = "3f#\"E_ $,Z";
      stringArray1[4] = "'5kh5>h]IcM!";
      stringArray1[5] = "-suppressDeclaration";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration", true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "V#ZkI!c)+{RjB";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-eoEing";
      stringArray0[4] = "V#ZkI!c)+{RjB";
      stringArray0[5] = "-suppressDeclaration";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("-encoding", outputFormat0.getEncoding());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5063874375065844
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("e#'FP<=_BhcN-Oo", false);
      outputFormat0.setIndentSize((-2636));
      outputFormat0.setIndentSize(67);
      outputFormat0.setIndentSize((-2636));
      outputFormat0.setIndentSize(73);
      outputFormat0.setIndentSize(2);
      assertEquals("  ", outputFormat0.getIndent());
      
      OutputFormat outputFormat1 = new OutputFormat();
      assertEquals("\n", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "8IU,CzzG:iz#:9`l\"YH");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-enVoEiOng";
      stringArray0[1] = "8IU,CzzG:iz#:9`l\"YH";
      stringArray0[2] = "";
      stringArray0[3] = "8IU,CzzG:iz#:9`l\"YH";
      stringArray0[4] = "-enVoEiOng";
      stringArray0[5] = "8IU,CzzG:iz#:9`l\"YH";
      stringArray0[6] = "-enVoEiOng";
      stringArray0[7] = "-ne^li^es";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-enVoEiOng";
      stringArray1[1] = "";
      stringArray1[2] = "8IU,CzzG:iz#:9`l\"YH";
      stringArray1[3] = "8IU,CzzG:iz#:9`l\"YH";
      stringArray1[4] = "ry$6!#Vl ?uL'";
      stringArray1[5] = "[Hxo*]eaOgJX{?uFa";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertEquals("8IU,CzzG:iz#:9`l\"YH", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, int0);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[2] = "eE?^8\"Q7}dgE";
      stringArray0[1] = "-xhtml";
      OutputFormat outputFormat0 = new OutputFormat("oo3G$rY`@K6QVeVzr");
      assertFalse(outputFormat0.isXHTML());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.4023965712598563
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = ".cjeG>pHK[N";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = ".cjeG>pHK[N";
      stringArray0[3] = ".cjeG>pHK[N";
      stringArray0[4] = ".cjeG>pHK[N";
      outputFormat0.setLineSeparator("-xhtmlUTF-8");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isXHTML();
      outputFormat0.setIndent("d)IS6m");
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.5709195237181253
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setIndent("");
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(4676);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.setLineSeparator(".Y$NJZWn");
      outputFormat0.setIndent(".Y$NJZWn");
      assertEquals(".Y$NJZWn", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5331810375513615
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-newlines");
      outputFormat0.setIndent("c%$^");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("X35uE\rc5yMZJn% b6%");
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent(";T@5IdaVp&`");
      outputFormat0.setIndent(";T@5IdaVp&`");
      outputFormat0.setIndent("c%$^");
      assertEquals("c%$^", outputFormat0.getIndent());
  }
}
