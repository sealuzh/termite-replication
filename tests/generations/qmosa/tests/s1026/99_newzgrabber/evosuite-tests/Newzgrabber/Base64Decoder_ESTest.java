/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 05:50:31 GMT 2020
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "There are ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("usdrna<e");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.setLineCount((byte) (-123));
      base64Decoder0.decodeStream();
      assertEquals((-122L), base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, (OutputStream) null);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.15841057013179086
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Thsi");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("usdrna<e");
      mockFileOutputStream0.close();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.15407610367102942
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Thsi");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("usdrna<e");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9996), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.12693054534140227
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("vS");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "vS");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/(U~41X{ihH 8|\"lxG");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9980), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.1425058673927378
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "$-]=PL~iz!E");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "W");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("There are ");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.12974069471942834
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "MN'e+4C^N`U-m2");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "There are ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("b_4],g&");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9976), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.12693054534140227
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "c^]=PL~iz!E");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "W");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("There are ");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9988), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("There are ");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ".");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("There are ");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.decodeStream();
      assertEquals((-1), mockFileInputStream0.available());
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "YThLi");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "YThLi");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("usdrna<e");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.setLineCount((byte)122);
      base64Decoder0.decodeStream();
      assertEquals(125L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("There are ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "There are ");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("b_4],g&");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockFileOutputStream0);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      assertEquals((-1), mockFileInputStream0.available());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.30463609734923813
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "W");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("There are ");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9999), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.13269142083987176
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("There are ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R`6JL)HU|,S");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("There are ");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      Newzgrabber.verbose = true;
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9988), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }
}
