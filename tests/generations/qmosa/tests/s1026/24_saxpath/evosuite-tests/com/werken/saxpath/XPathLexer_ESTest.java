/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 16:23:30 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3277142540512916
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CP|m");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      xPathLexer0.consume((-1292));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0413715752979824
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      xPathLexer0.notEquals();
      xPathLexer1.consume();
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.doubleColon();
      xPathLexer0.dots();
      xPathLexer1.mod();
      xPathLexer1.not();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer("E|~}]");
      xPathLexer2.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer2.minus();
      xPathLexer1.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dollar();
      xPathLexer3.plus();
      xPathLexer1.dollar();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0876940867483693
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("~&0> J=z");
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.setXPath("M;1AGl+B[v 0S-??!`");
      XPathLexer xPathLexer1 = new XPathLexer("~&0> J=z");
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("~&", token4.getTokenText());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("M", token6.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer1.leftBracket();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("J", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(21, token9.getTokenType());
      assertEquals("=", token9.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8968149204697804
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer2.nextToken();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer("j [K@+*d.m;x+?'^");
      xPathLexer4.number();
      xPathLexer3.equals();
      xPathLexer2.plus();
      xPathLexer2.star();
      xPathLexer4.nextToken();
      xPathLexer1.rightParen();
      xPathLexer4.or();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer4.and();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer3.minus();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9661366085471808
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("{Sfw)GfFUR^");
      xPathLexer1.star();
      xPathLexer1.mod();
      xPathLexer0.leftBracket();
      xPathLexer1.comma();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8290023711004357
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.literal();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.setXPath("M;1AGl+B[v 0S-??!`");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.notEquals();
      assertEquals("co", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer3.leftBracket();
      assertEquals("m", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("e", token9.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer1.identifier();
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer2.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("M", token11.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2954120052891263
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("~&0> J=z");
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.identifier();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.setXPath("M;1AGl+B[v 0S-??!`");
      XPathLexer xPathLexer1 = new XPathLexer("~&0> J=z");
      Token token4 = xPathLexer1.notEquals();
      assertEquals("~&", token4.getTokenText());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer0.dots();
      assertEquals(";", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(9, token7.getTokenType());
      assertEquals(">", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("1", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("J", token9.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.540632523007405
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XYLsNL>(");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("XY", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("XYLsNL>(");
      Token token1 = xPathLexer1.dots();
      assertEquals("X", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("YLsNL", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.literal();
      assertNotNull(token3);
      assertEquals(27, token3.getTokenType());
      assertEquals("sN", token3.getTokenText());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.958739614961523
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y!W");
      Token token0 = xPathLexer0.at();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.pipe();
      xPathLexer0.and();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (16) (y)", string0);
      
      xPathLexer0.or();
      xPathLexer0.LA(119);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("W", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.div();
      xPathLexer0.setXPath("[ (16) (y)");
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.colon();
      assertEquals("c", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(119);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("o", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.comma();
      Token token5 = xPathLexer0.comma();
      assertEquals(".", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("w", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1026604607267085
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("\"", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer1.leftParen();
      assertEquals("\"", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("]", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("oE", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("FN");
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token5 = xPathLexer3.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals("##", token6.getTokenText());
      
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer("C7La2{");
      xPathLexer1.operatorName();
      Token token7 = xPathLexer4.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer3.literal();
      assertNull(token8);
      
      XPathLexer xPathLexer5 = new XPathLexer("`u[");
      Token token9 = xPathLexer4.slashes();
      assertEquals("L", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.dollar();
      Token token10 = xPathLexer5.nextToken();
      assertEquals("`u[", token10.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("`u[");
      Token token11 = xPathLexer0.dollar();
      assertEquals("{", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer2.not();
      assertEquals("F", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(".", token13.getTokenText());
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4707738219424393
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XYLsNL>(");
      Token token0 = xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("XYLsNL>(");
      Token token1 = xPathLexer1.dollar();
      assertEquals("X", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("LsNL", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("XYLsNL>(");
      xPathLexer2.operatorName();
      xPathLexer2.setPreviousToken(token0);
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("YL", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer2.rightBracket();
      assertEquals("X", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.14643911757063
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("\"", token2.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("FN");
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token3 = xPathLexer3.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("##", token4.getTokenText());
      
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer4 = new XPathLexer("`u[");
      XPathLexer xPathLexer5 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token6 = xPathLexer5.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("\"", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.dollar();
      xPathLexer4.mod();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(".", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token8 = xPathLexer5.dollar();
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer4.identifier();
      assertEquals("", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer3.pipe();
      assertEquals(" ", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer7.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer6.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer2.or();
      Token token13 = xPathLexer7.star();
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8809354729806271
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.plus();
      assertEquals("7", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("v9Afh\"z-aY1.I");
      Token token2 = xPathLexer0.comma();
      assertEquals("!", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer0.literal();
      xPathLexer1.equals();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("VpW#q{xICBu0N");
      XPathLexer xPathLexer4 = new XPathLexer("v9Afh\"z-aY1.I");
      xPathLexer4.operatorName();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("f", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      xPathLexer2.literal();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer3.dollar();
      Token token8 = xPathLexer4.nextToken();
      assertEquals("v9Afh", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("}~u5!P,cU!63Dkas");
      Token token9 = xPathLexer6.dollar();
      assertEquals("}", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer5.identifier();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer1.rightParen();
      assertEquals("h", token11.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8238880055664362
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.equals();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("m");
      xPathLexer1.mod();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer2.dots();
      assertEquals("c", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer2.dollar();
      assertEquals("o", token9.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.935132925085526
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.consume((-548));
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.163190007071901
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VFBg6");
      xPathLexer0.consume(0);
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.consume((-2104));
      xPathLexer0.currentPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8980546957128985
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("com.werken.saxpath.XathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("M;1AGl+B[v 0S-??!`");
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer1.operatorName();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4085449161828532
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      XPathLexer xPathLexer4 = new XPathLexer("*!I");
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer(":Ctnv?_@JDvO/e/j&uQ");
      Token token0 = xPathLexer5.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5825169003143378
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer(".K>z8n|q`#e");
      xPathLexer1.literal();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      xPathLexer0.and();
      xPathLexer1.identifier();
      xPathLexer1.doubleColon();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer2.slashes();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9214994625699238
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (*)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (23) (!)", string1);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.dollar();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.323857962300611
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.setXPath("{)\"< i_");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.getPreviousToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer1.mod();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("{", token4.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token5 = xPathLexer1.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer2.star();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer2.setXPath("@{.he~hk(^Iy7");
      xPathLexer2.operatorName();
      xPathLexer1.dots();
      xPathLexer2.mod();
      Token token9 = xPathLexer1.nextToken();
      assertEquals(7, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals(" ", token10.getTokenText());
      
      xPathLexer1.mod();
      Token token11 = xPathLexer2.nextToken();
      assertEquals("@", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer2.leftBracket();
      assertEquals("{", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer1.nextToken();
      assertEquals(15, token13.getTokenType());
      assertEquals("i_", token13.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3638857423488213
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XYLsNL>(");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("XYLsNL>(");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.09376461491958
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("VpW#q{xICBu0N");
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("W#", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("{", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("I", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("C", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer3.div();
      Token token8 = xPathLexer0.at();
      assertEquals("B", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("l7G(!JT:dZ,&A");
      XPathLexer xPathLexer5 = new XPathLexer("sK+xJK9>%PaGN");
      Token token9 = xPathLexer4.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("l7", token9.getTokenText());
      
      Token token10 = xPathLexer5.star();
      assertEquals("s", token10.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer6.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer1.operatorName();
      Token token12 = xPathLexer4.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("G", token12.getTokenText());
      
      xPathLexer0.mod();
      Token token13 = xPathLexer2.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      Token token14 = xPathLexer5.slashes();
      assertEquals("K", token14.getTokenText());
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer0.nextToken();
      assertEquals("u0N", token15.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7414240145580984
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token1 = xPathLexer2.leftBracket();
      assertEquals("l", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer3.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer1.equals();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.and();
      xPathLexer3.identifier();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer2.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("7", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("F");
      Token token7 = xPathLexer3.slashes();
      assertEquals("(", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.dollar();
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("l7G(!JT:dZ,&A");
      XPathLexer xPathLexer6 = new XPathLexer("F");
      Token token9 = xPathLexer6.dollar();
      assertEquals("F", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer4.notEquals();
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7127670464651725
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.897712411724846
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer1.comma();
      xPathLexer1.or();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer1.literal();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("FN");
      xPathLexer2.and();
      xPathLexer1.operatorName();
      xPathLexer1.doubleColon();
      xPathLexer0.equals();
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("FN");
      xPathLexer3.nextToken();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0995652486710665
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = "l7G(!JT:dZ,&A";
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      xPathLexer1.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer0.or();
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063218970102371
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("er,");
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer1.literal();
      xPathLexer0.equals();
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("`u[");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer5 = new XPathLexer("FN");
      xPathLexer1.and();
      XPathLexer xPathLexer6 = new XPathLexer("FN");
      xPathLexer3.operatorName();
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer1.literal();
      assertNull(token10);
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer6.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("F", token11.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("`u[");
      Token token12 = xPathLexer8.dollar();
      assertEquals("`", token12.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("");
      xPathLexer9.consume();
      Token token13 = xPathLexer6.nextToken();
      assertEquals("N", token13.getTokenText());
      assertEquals(15, token13.getTokenType());
      
      xPathLexer9.relationalOperator();
      Token token14 = xPathLexer1.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.837620390535165
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("h\"+iNp");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer4.plus();
      xPathLexer2.identifier();
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0409127823567923
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("z");
      xPathLexer1.at();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer2.consume();
      xPathLexer1.leftBracket();
      xPathLexer1.setXPath("z");
      xPathLexer2.number();
      xPathLexer2.or();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("f/l.VZ)53ZPp%R}\"I6");
      xPathLexer3.identifier();
      xPathLexer3.setXPath("SSix~A?w 2bVGA{");
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("#6z~^2KS%p1_9;mZ6sA");
      xPathLexer0.notEquals();
      xPathLexer1.star();
      xPathLexer3.operatorName();
      xPathLexer4.dots();
      xPathLexer0.mod();
      xPathLexer4.nextToken();
      xPathLexer3.minus();
      xPathLexer0.dollar();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.2782265454388457
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("~&0>rJ=z");
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("M;1AGl+B[v 0S-??!`");
      XPathLexer xPathLexer1 = new XPathLexer("~&0>rJ=z");
      Token token4 = xPathLexer1.notEquals();
      assertEquals("~&", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("M", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(";", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer1.nextToken();
      assertEquals(9, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("r", token9.getTokenText());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("J", token10.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.990346904780636
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      xPathLexer0.notEquals();
      xPathLexer1.consume();
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.doubleColon();
      xPathLexer0.dots();
      xPathLexer1.mod();
      xPathLexer1.not();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer("E|~}]");
      xPathLexer2.nextToken();
      xPathLexer2.minus();
      xPathLexer1.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer1.dollar();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7868524047344376
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.number();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (co)");
      xPathLexer1.notEquals();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("*.0gs?L7wUl0y\"Sa");
      xPathLexer2.slashes();
      xPathLexer3.dollar();
      xPathLexer3.nextToken();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer1.notEquals();
      xPathLexer1.plus();
      xPathLexer0.mod();
      xPathLexer1.relationalOperator();
      xPathLexer4.at();
      Token token1 = xPathLexer3.and();
      assertNull(token1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.217478585391631
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("!", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("J", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("T", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("KMYpd%");
      Token token7 = xPathLexer0.dots();
      xPathLexer2.setPreviousToken(token7);
      assertEquals(":", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer2.star();
      assertEquals("K", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer2.or();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer2.equals();
      assertEquals("M", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      xPathLexer1.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dollar();
      Token token11 = xPathLexer0.nextToken();
      assertEquals("dZ", token11.getTokenText());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals("Y", token12.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0804959819007833
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(".w", token2.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (22) (om)", string0);
      
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("n", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("L7d(ggO8|Yy");
      xPathLexer1.notEquals();
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("(", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer3.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer("YI ,88:88");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer4.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer6.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer5.mod();
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      assertEquals(".", token10.getTokenText());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals("ggO8", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer5.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals("Y", token12.getTokenText());
      
      Token token13 = xPathLexer4.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.0865659021704985
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer1.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer1.doubleColon();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("~&0>rJ=z");
      xPathLexer0.number();
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      xPathLexer1.identifier();
      xPathLexer0.setXPath("*Q5qC)b(j");
      xPathLexer1.consume((-2902));
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.8417921976003704
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer1.mod();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer3 = new XPathLexer("49Exvfs");
      xPathLexer3.nextToken();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("mpmk'T5");
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      Token token10 = xPathLexer3.getPreviousToken();
      assertEquals(30, token10.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8797952070302149
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("z1]qJLJT5Fj@_[>");
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("qm0");
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer1.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.literal();
      XPathLexer xPathLexer3 = new XPathLexer("qm0");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.slashes();
      xPathLexer4.equals();
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      xPathLexer4.dollar();
      xPathLexer4.mod();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer1.dollar();
      xPathLexer0.identifier();
      xPathLexer2.pipe();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.or();
      xPathLexer1.not();
      xPathLexer5.plus();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0690740315970624
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("e", token3.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      Token token4 = xPathLexer0.star();
      assertEquals("r", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("ken.saxpath.XPathLexer", token5.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (19) (.w)");
      Token token9 = xPathLexer1.nextToken();
      assertEquals("[", token9.getTokenText());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token10);
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.957826811977565
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer(")0%<sXG,X<");
      xPathLexer0.mod();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer(")0%<sXG,X<");
      xPathLexer2.leftParen();
      xPathLexer3.leftBracket();
      xPathLexer0.equals();
      xPathLexer2.dots();
      xPathLexer0.mod();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer(")0%<sXG,X<");
      xPathLexer0.number();
      xPathLexer3.nextToken();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer4.or();
      xPathLexer1.rightParen();
      char char0 = xPathLexer3.LA(1);
      assertEquals('%', char0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0730757426685384
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      xPathLexer0.equals();
      xPathLexer0.plus();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7391491299087456
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.leftParen();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.literal();
      xPathLexer0.equals();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(".", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      xPathLexer1.literal();
      xPathLexer1.operatorName();
      Token token8 = xPathLexer0.star();
      assertEquals("e", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("r", token9.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("<lFN,9");
      Token token10 = xPathLexer2.relationalOperator();
      assertEquals(7, token10.getTokenType());
      assertEquals("<", token10.getTokenText());
      
      int int0 = xPathLexer2.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0663820236197727
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      xPathLexer1.equals();
      xPathLexer0.plus();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer0.or();
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7323284717236518
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      Token token0 = xPathLexer1.dots();
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.slashes();
      xPathLexer1.doubleColon();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("U=Ze.9o");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.plus();
      xPathLexer2.notEquals();
      Token token1 = xPathLexer1.pipe();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.9550193016293238
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("S", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.at();
      xPathLexer1.doubleColon();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.setXPath("~&0>rJ=z");
      xPathLexer0.number();
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.setXPath("*Q5qC)b(j");
      Token token5 = xPathLexer1.nextToken();
      assertEquals("~A?w 2bVGA{", token5.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer1.doubleColon();
      Token token6 = xPathLexer1.pipe();
      assertEquals("?", token6.getTokenText());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token8 = xPathLexer0.nextToken();
      assertEquals(30, token8.getTokenType());
      assertEquals("5", token8.getTokenText());
      
      Token token9 = xPathLexer2.colon();
      assertEquals("[", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer3.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8766023457431382
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("S", token0.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("~", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.or();
      xPathLexer1.or();
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.literal();
      assertEquals(27, token3.getTokenType());
      
      xPathLexer1.equals();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("x", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("FN");
      xPathLexer2.and();
      xPathLexer1.operatorName();
      xPathLexer2.operatorName();
      Token token5 = xPathLexer2.minus();
      assertEquals("F", token5.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("w", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals("?w", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("V", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("GA", token11.getTokenText());
      
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
      assertEquals("{", token12.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8387098031038454
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.comma();
      assertEquals("!", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("l", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.equals();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("Ba}P-L");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Ba", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("{=&!p/`%bzUY)p7{L");
      xPathLexer3.and();
      xPathLexer2.operatorName();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("G(", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer2.literal();
      XPathLexer xPathLexer4 = new XPathLexer("Ba}P-L");
      Token token7 = xPathLexer1.slashes();
      assertEquals("!", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      xPathLexer1.dollar();
      Token token8 = xPathLexer3.nextToken();
      assertEquals("{=&!p/`%bzUY)p7{L", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer3.identifier();
      xPathLexer2.identifier();
      Token token10 = xPathLexer4.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("Ba", token10.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.831945197755033
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.number();
      token2.toString();
      token2.toString();
      token0.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (x)");
      xPathLexer1.plus();
      xPathLexer1.notEquals();
      xPathLexer1.pipe();
      Token token3 = xPathLexer0.operatorName();
      assertNull(token3);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8104827269511756
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PQrHjg$^B");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("Q", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      xPathLexer0.equals();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("Hjg", token4.getTokenText());
      
      xPathLexer1.and();
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("$", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("PQrHjg$^B");
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("^B", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("PQrHjg$^B");
      Token token11 = xPathLexer3.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("P", token11.getTokenText());
      
      Token token12 = xPathLexer2.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("Qr", token12.getTokenText());
      
      Token token13 = xPathLexer3.pipe();
      assertEquals("Q", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.330857177335245
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("VpW#q{xICBu0N");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.at();
      xPathLexer1.leftBracket();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer1.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer1.minus();
      xPathLexer0.dots();
      xPathLexer1.slashes();
      xPathLexer1.not();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9861913137341434
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (19) (.w)", string0);
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      Token token5 = xPathLexer0.at();
      assertEquals("n", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XathLexer");
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      xPathLexer1.and();
      xPathLexer1.mod();
      Token token7 = xPathLexer2.notEquals();
      assertEquals("co", token7.getTokenText());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      xPathLexer0.operatorName();
      Token token10 = xPathLexer2.dots();
      assertEquals(14, token10.getTokenType());
      assertEquals("m.", token10.getTokenText());
      
      xPathLexer3.mod();
      Token token11 = xPathLexer2.nextToken();
      assertEquals("werken.saxpath.XathLexer", token11.getTokenText());
      
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.11973425026858
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer1.pipe();
      xPathLexer1.leftParen();
      xPathLexer0.notEquals();
      xPathLexer1.consume();
      xPathLexer1.star();
      xPathLexer1.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      xPathLexer1.plus();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer2.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer(")");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.identifierOrOperatorName();
      xPathLexer1.minus();
      xPathLexer5.dollar();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9141037365137021
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.comma();
      assertEquals("J", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("XVl(GhLy!%zp/E.w");
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      Token token4 = xPathLexer2.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer3 = new XPathLexer("VpW#q{xICBu0N");
      Token token5 = xPathLexer3.leftParen();
      assertEquals("V", token5.getTokenText());
      
      Token token6 = xPathLexer3.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("pW", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
      
      xPathLexer2.relationalOperator();
      xPathLexer3.leftBracket();
      xPathLexer2.pipe();
      Token token8 = xPathLexer3.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("q", token8.getTokenText());
      
      xPathLexer2.leftBracket();
      xPathLexer4.or();
      xPathLexer1.div();
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7977823823645758
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.dots();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("{Sfw)GfFUR^");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer2.mod();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("{Sfw)GfFUR^", token4.getTokenText());
      
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer1.notEquals();
      assertEquals("{S", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.div();
      Token token10 = xPathLexer3.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.7064730848007947
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8685966198025625
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkn.saxpch.\"PathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("om", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(".", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer1 = new XPathLexer("z1]qJLJT5Fj@_[>");
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("z", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals("1", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(4, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("z1]qJLJT5Fj@_[>");
      XPathLexer xPathLexer3 = new XPathLexer("z1]qJLJT5Fj@_[>");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      Token token8 = xPathLexer5.identifier();
      assertEquals("", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals("q", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.251796482086325
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("m.", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("0[QgSFLEM*");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer2.leftParen();
      Token token1 = xPathLexer2.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer2.leftBracket();
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.star();
      xPathLexer0.or();
      Token token5 = xPathLexer3.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("we", token6.getTokenText());
      
      xPathLexer3.identifier();
      Token token7 = xPathLexer1.rightParen();
      assertEquals("Q", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("g", token9.getTokenText());
      
      Token token10 = xPathLexer2.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.literal();
      assertEquals(27, token11.getTokenType());
      assertEquals("ken.saxpath.XPathLexe", token11.getTokenText());
      assertNotNull(token11);
      
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dollar();
      xPathLexer2.dollar();
      xPathLexer4.comma();
      xPathLexer2.at();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.getPreviousToken();
      Token token14 = xPathLexer5.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer4.identifier();
      assertEquals(15, token15.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9078939835693793
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("S", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.nextToken();
      String string0 = token2.toString();
      assertEquals("[ (15) (x)", string0);
      
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (19) (Si)", string1);
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("[ (19) (Si)");
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.equals();
      assertEquals("?", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer6.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer7 = new XPathLexer(") (");
      Token token5 = xPathLexer5.slashes();
      assertEquals("c", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token7 = xPathLexer3.nextToken();
      assertEquals(3, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      xPathLexer8.relationalOperator();
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer6.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2600930191920225
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      String string0 = token1.toString();
      assertEquals("[ (22) (om)", string0);
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      xPathLexer0.number();
      Token token4 = xPathLexer0.plus();
      assertEquals("n", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.operatorName();
      Token token5 = xPathLexer2.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("x", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer("w)z");
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer4.doubleColon();
      assertEquals("co", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer4.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("ath.Token", token11.getTokenText());
      
      char char0 = xPathLexer2.LA(1);
      assertEquals('o', char0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.925137260662444
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("@zm#-@Ct9rdD['Sg~2");
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("@", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("}]25[QqT|1G[UjrY8K");
      xPathLexer2.mod();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("zm", token7.getTokenText());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals("#", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals("}]25[QqT|1G[UjrY8K", token9.getTokenText());
      
      Token token10 = xPathLexer2.at();
      assertEquals("}", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2227415608000816
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.plus();
      assertEquals("S", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Six", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("~", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token3 = xPathLexer1.comma();
      assertEquals("S", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer1.literal();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("FN");
      xPathLexer3.operatorName();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer3.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer4 = new XPathLexer("FN");
      Token token10 = xPathLexer3.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer3.dollar();
      Token token11 = xPathLexer0.nextToken();
      assertEquals(30, token11.getTokenType());
      assertEquals("2", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("1(mF:AY[<oJ");
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.not();
      assertEquals("b", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer2.star();
      assertEquals(20, token14.getTokenType());
      assertEquals("S", token14.getTokenText());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6959355872249688
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("l7", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("T", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.equals();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer("VpW#q{xICBu0N");
      Token token6 = xPathLexer2.leftParen();
      assertEquals("V", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals("p", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_yjUn3");
      xPathLexer0.mod();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals("W#", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer0.or();
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("G", token12.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.8705580422964374
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("J", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("T", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(":", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.literal();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer2.identifier();
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals("l7G", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token11 = xPathLexer2.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer6.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.618280107698692
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      xPathLexer1.equals();
      xPathLexer0.plus();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      String string0 = "";
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      xPathLexer2.pipe();
      Token token1 = xPathLexer1.number();
      token0.toString();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.3046008493505465
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (19) (.w)", string0);
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      Token token3 = xPathLexer0.at();
      assertEquals("n", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (19) (.w)");
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer2.leftBracket();
      assertEquals("[", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals(" (", token7.getTokenText());
      
      xPathLexer1.identifier();
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals("s", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer1.literal();
      Token token11 = xPathLexer0.slashes();
      assertEquals("a", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals("x", token13.getTokenText());
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer2.nextToken();
      assertEquals(2, token14.getTokenType());
      
      Token token15 = xPathLexer2.comma();
      assertEquals(32, token15.getTokenType());
      assertEquals(" ", token15.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XathLexer");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      Token token16 = xPathLexer0.rightBracket();
      assertEquals("p", token16.getTokenText());
      
      xPathLexer4.identifier();
      Token token17 = xPathLexer0.nextToken();
      assertEquals("ath.XathLexer", token17.getTokenText());
      assertEquals(15, token17.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9986431534107094
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.setXPath("~&0>rJ=z");
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.setXPath("M;1AGl+B[v 0S-??!`");
      XPathLexer xPathLexer1 = new XPathLexer("~&0>rJ=z");
      Token token7 = xPathLexer1.notEquals();
      assertEquals("~&", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("0", token8.getTokenText());
      
      xPathLexer1.operatorName();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      Token token10 = xPathLexer0.minus();
      assertEquals(";", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer1.dollar();
      assertEquals("r", token11.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1694837710221355
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer2.leftParen();
      assertEquals("-", token3.getTokenText());
      
      Token token4 = xPathLexer2.colon();
      assertEquals("k", token4.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token5 = xPathLexer2.pipe();
      assertEquals("!", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer2.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer2.star();
      assertEquals("a", token8.getTokenText());
      
      xPathLexer4.leftBracket();
      Token token9 = xPathLexer2.notEquals();
      assertEquals("(2", token9.getTokenText());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals("]", token11.getTokenText());
      
      xPathLexer3.plus();
      Token token12 = xPathLexer4.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer0.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer1.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer0.plus();
      assertEquals(5, token15.getTokenType());
      
      Token token16 = xPathLexer1.nextToken();
      assertEquals((-1), token16.getTokenType());
      
      xPathLexer3.dollar();
      Token token17 = xPathLexer1.dollar();
      assertEquals(26, token17.getTokenType());
      
      Token token18 = xPathLexer0.doubleColon();
      assertEquals(19, token18.getTokenType());
      
      Token token19 = xPathLexer3.colon();
      assertEquals(18, token19.getTokenType());
      
      xPathLexer1.not();
      xPathLexer2.or();
      Token token20 = xPathLexer3.star();
      assertEquals(20, token20.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7074910592879815
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7437430517953239
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals("\"", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(27, token1.getTokenType());
      assertEquals(".r$]oE##a{:LT,", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer2.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("r", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      xPathLexer1.equals();
      xPathLexer2.nextToken();
      xPathLexer0.and();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token9 = xPathLexer0.slashes();
      assertEquals("o", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("E", token10.getTokenText());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token12 = xPathLexer5.pipe();
      assertEquals(17, token12.getTokenType());
      assertEquals("\"", token12.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6895831472901222
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("98bR6B");
      xPathLexer0.leftBracket();
      xPathLexer1.mod();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer("{TUs{");
      xPathLexer2.mod();
      xPathLexer2.leftBracket();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer0.not();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.1548124922856586
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("m.", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer0.setXPath(")^?4TVHEiHq(I\"e");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(")", token2.getTokenText());
      
      xPathLexer1.mod();
      Token token3 = xPathLexer0.plus();
      assertEquals("^", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.number();
      assertEquals("4", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token5 = xPathLexer0.comma();
      assertEquals("T", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer2.star();
      assertEquals(")", token6.getTokenText());
      
      Token token7 = xPathLexer2.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer2.setXPath(")^?4TVHEiHq(I\"e");
      xPathLexer1.operatorName();
      Token token9 = xPathLexer2.dots();
      assertEquals(")", token9.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.nextToken();
      assertEquals((-1), token13.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7800567344822031
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer1.comma();
      xPathLexer1.or();
      xPathLexer1.literal();
      xPathLexer0.equals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("FN");
      xPathLexer2.star();
      xPathLexer0.leftBracket();
      xPathLexer3.notEquals();
      xPathLexer3.identifier();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6538941604147035
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.0672125010508466
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",:2$^i&Rd7");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.doubleColon();
      token0.toString();
      token0.toString();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("h\"+iNp");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7749381613207713
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer2.comma();
      XPathLexer xPathLexer4 = new XPathLexer("sK+xJK`>%Pa]N");
      xPathLexer2.or();
      Token token1 = xPathLexer4.star();
      assertEquals("s", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer(")");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token2 = xPathLexer3.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer5.mod();
      Token token4 = xPathLexer4.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer6.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer6.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer2.leftBracket();
      assertEquals("7", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.881554562015798
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals("w", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertEquals("rk", token3.getTokenText());
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
      
      XPathLexer xPathLexer1 = new XPathLexer("?Izf/Ur");
      xPathLexer0.slashes();
      xPathLexer1.dollar();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Izf", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dollar();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("/", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[k``c]{Aw=?1Gn");
      Token token7 = xPathLexer4.dollar();
      assertEquals("[", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      xPathLexer4.slashes();
      xPathLexer1.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.div();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.div();
      Token token8 = xPathLexer6.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.587898460251817
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("C6<}!<O");
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer1.equals();
      xPathLexer2.equals();
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer("C6<}!<O");
      xPathLexer3.operatorName();
      xPathLexer3.equals();
      xPathLexer2.literal();
      XPathLexer xPathLexer4 = new XPathLexer("BPGp3[B");
      xPathLexer3.leftParen();
      xPathLexer1.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer2.notEquals();
      xPathLexer2.LA(80);
      Token token0 = xPathLexer5.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.120478060332564
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer1.at();
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("XVl(GhLy!%zp/E.w");
      xPathLexer2.equals();
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("VpW#q{xICBu0N");
      xPathLexer3.leftParen();
      xPathLexer2.slashes();
      xPathLexer3.number();
      xPathLexer3.dollar();
      xPathLexer3.nextToken();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.1386067610978508
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7(!JT:dX,A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(":", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.setXPath("VpW#q{xICBu0N");
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("JT", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("Vp", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("q", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.comma();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("I", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("l7(!JT:dX,A");
      XPathLexer xPathLexer3 = new XPathLexer("l7(!JT:dX,A");
      Token token9 = xPathLexer3.notEquals();
      assertEquals("l7", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer3.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer4.dots();
      assertEquals(13, token12.getTokenType());
      
      xPathLexer1.mod();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      Token token13 = xPathLexer3.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("!", token13.getTokenText());
      
      Token token14 = xPathLexer3.minus();
      assertEquals(6, token14.getTokenType());
      assertEquals("J", token14.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.489182404210328
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals("k", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("e", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("n", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XathLexer");
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XathLexer");
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals("s", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer("[ (19) (.w)");
      Token token10 = xPathLexer5.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[ (19) (.w)");
      Token token11 = xPathLexer6.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.mod();
      Token token12 = xPathLexer4.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer7.not();
      Token token13 = xPathLexer1.literal();
      assertNull(token13);
      
      XPathLexer xPathLexer8 = new XPathLexer(") (");
      xPathLexer8.div();
      Token token14 = xPathLexer1.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9842184599629253
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      xPathLexer0.notEquals();
      xPathLexer1.consume();
      xPathLexer1.star();
      xPathLexer0.at();
      xPathLexer1.doubleColon();
      xPathLexer0.dots();
      xPathLexer1.mod();
      xPathLexer1.not();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer("E|~}]");
      xPathLexer2.nextToken();
      xPathLexer2.minus();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer1.dollar();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.1383229058229007
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer1.mod();
      xPathLexer0.identifier();
      xPathLexer1.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.star();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.colon();
      xPathLexer6.consume((-1));
      xPathLexer0.doubleColon();
      xPathLexer1.equals();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer6.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7278803424797124
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("5");
      xPathLexer1.slashes();
      xPathLexer0.doubleColon();
      xPathLexer1.dollar();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.1418951917706233
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (om)", string0);
      
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("k", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("e", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals("n", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.mod();
      xPathLexer0.nextToken();
      xPathLexer1.and();
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("k,x?Q2hJ[V|@");
      Token token10 = xPathLexer2.dots();
      assertEquals("k", token10.getTokenText());
      
      Token token11 = xPathLexer2.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("xp", token12.getTokenText());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("a", token13.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.div();
      Token token14 = xPathLexer2.not();
      assertEquals("x", token14.getTokenText());
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.1471805920843936
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (om)", string0);
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("e", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("a", token5.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("a", token6.getTokenText());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("th.Token", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.1153573327243267
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
      assertEquals("rk", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("z1]qJLJT5Fj@_[>");
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(4, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("LJT5Fj@_[>", token5.getTokenText());
      
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("L", token7.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      Token token8 = xPathLexer2.not();
      assertEquals(" ", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.036995239806812
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("{ wL&%!_7ch");
      xPathLexer1.dots();
      xPathLexer1.slashes();
      xPathLexer0.doubleColon();
      xPathLexer1.dollar();
      xPathLexer1.mod();
      xPathLexer0.relationalOperator();
      xPathLexer1.at();
      Token token2 = xPathLexer1.and();
      assertNull(token2);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.0645929049446567
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.nextToken();
      xPathLexer1.leftParen();
      xPathLexer0.or();
      Token token0 = xPathLexer1.rightParen();
      xPathLexer1.literal();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      xPathLexer2.number();
      xPathLexer2.equals();
      xPathLexer1.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer2.minus();
      xPathLexer4.dots();
      xPathLexer1.slashes();
      xPathLexer1.at();
      xPathLexer1.and();
      Token token1 = xPathLexer1.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.3403296689719975
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      xPathLexer1.setXPath("{x\"]O< i_");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.getPreviousToken();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer1.mod();
      Token token6 = xPathLexer1.plus();
      assertEquals("{", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.star();
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer2.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer2.setXPath("@{.he~hk(^Iy7");
      xPathLexer2.operatorName();
      xPathLexer1.dots();
      xPathLexer2.mod();
      Token token12 = xPathLexer1.nextToken();
      assertEquals("O", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer1.dots();
      assertEquals(13, token13.getTokenType());
      assertEquals("<", token13.getTokenText());
      
      xPathLexer1.mod();
      Token token14 = xPathLexer2.nextToken();
      assertEquals("@", token14.getTokenText());
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer2.leftBracket();
      assertEquals("{", token15.getTokenText());
      assertEquals(3, token15.getTokenType());
      
      Token token16 = xPathLexer1.nextToken();
      assertEquals("i_", token16.getTokenText());
      assertEquals((-1), token16.getTokenType());
      
      Token token17 = xPathLexer0.dollar();
      assertEquals(26, token17.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7758140784904364
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.mod();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("~&0>rJ=z");
      Token token5 = xPathLexer2.notEquals();
      assertEquals("~&", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer3.minus();
      xPathLexer4.mod();
      xPathLexer0.or();
      XPathLexer xPathLexer6 = new XPathLexer("@");
      xPathLexer2.mod();
      Token token7 = xPathLexer2.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer4.dots();
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer6.nextToken();
      assertEquals("@", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer5.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.6924607481673037
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("r", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals("e", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("n.saxpath.XPathLexer", token7.getTokenText());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8536915591785936
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8254288595216677
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer2.equals();
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("CP<'KNd%:");
      xPathLexer4.and();
      xPathLexer1.identifier();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer5.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer6.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer4.dollar();
      assertEquals("C", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("CP<'KNd%:");
      Token token12 = xPathLexer6.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer7.notEquals();
      assertEquals("CP", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer4.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("P", token14.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.0847564319774676
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.number();
      token2.toString();
      token2.toString();
      token0.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.mod();
      assertNull(token3);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.173143654681954
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer1.rightBracket();
      xPathLexer1.mod();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.number();
      xPathLexer1.equals();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("*!I");
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals(1, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("V,;_U`dP%lX:M?7j&");
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer5.dots();
      assertEquals("V", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.mod();
      XPathLexer xPathLexer7 = new XPathLexer("V,;_U`dP%lX:M?7j&");
      Token token11 = xPathLexer7.nextToken();
      assertEquals("V", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      xPathLexer3.identifierOrOperatorName();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer("-I7pkHcj-^Am/?=z");
      Token token12 = xPathLexer8.slashes();
      assertEquals("-", token12.getTokenText());
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5250419607361503
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      XPathLexer xPathLexer1 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer1.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7948434100588244
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
      assertEquals("rk", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("z1]qJLJT5Fj@_[>");
      Token token4 = xPathLexer1.slashes();
      assertEquals("z", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer1.dollar();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("]", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("z1]qJLJT5Fj@_[>");
      Token token7 = xPathLexer3.minus();
      assertEquals("o", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer4.dots();
      assertEquals("z", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.7776025554802002
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.number();
      token2.toString();
      token2.toString();
      token0.toString();
      token1.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.relationalOperator();
      assertNull(token3);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.9828393070765489
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      xPathLexer0.equals();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      xPathLexer0.and();
      Token token6 = xPathLexer1.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals("w", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer3.plus();
      assertEquals("c", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      assertEquals("om", token13.getTokenText());
      
      Token token14 = xPathLexer3.pipe();
      assertEquals("o", token14.getTokenText());
      assertEquals(17, token14.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.1655915011252738
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      xPathLexer1.dollar();
      xPathLexer0.at();
      xPathLexer1.consume((-2148));
      xPathLexer1.pipe();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer1.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.1594510956006125
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.operatorName();
      xPathLexer1.rightParen();
      xPathLexer1.and();
      xPathLexer0.whitespace();
      xPathLexer1.consume((-2140));
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.dots();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.8459354711475815
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("3!I");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (3)", string0);
      
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("3!I");
      Token token2 = xPathLexer2.identifier();
      xPathLexer2.setPreviousToken(token2);
      xPathLexer0.dollar();
      xPathLexer2.identifier();
      xPathLexer2.setPreviousToken(token0);
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("!I", token3.getTokenText());
      
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("q|1z");
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("q", token10.getTokenText());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      xPathLexer2.getPreviousToken();
      Token token13 = xPathLexer3.rightBracket();
      assertEquals(4, token13.getTokenType());
      assertEquals("|", token13.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.115602236182498
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer1.number();
      xPathLexer1.equals();
      xPathLexer0.plus();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer0.or();
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8725906130205614
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      String string0 = token1.toString();
      assertEquals("[ (22) (om)", string0);
      
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      XPathLexer xPathLexer1 = new XPathLexer("_tNZ~e)N?>p t3'Gswm");
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("_tNZ~e)N?>p t3'Gswm");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("_tNZ", token3.getTokenText());
      
      xPathLexer2.and();
      Token token4 = xPathLexer2.identifier();
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals("tN", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer2.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("~", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer3.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      Token token8 = xPathLexer3.dollar();
      assertEquals("o", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (22) (om)");
      Token token10 = xPathLexer1.plus();
      assertEquals("Z", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      xPathLexer2.notEquals();
      Token token11 = xPathLexer5.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.905425060567627
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.plus();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer2.equals();
      xPathLexer2.operatorName();
      xPathLexer0.slashes();
      xPathLexer1.dollar();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("[ (22) (om)");
      xPathLexer2.dollar();
      xPathLexer1.dollar();
      Token token1 = xPathLexer3.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.611681053426691
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-672));
      xPathLexer0.getPreviousToken();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.4449139764514096
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.equals();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer0.operatorName();
      xPathLexer1.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("_yjUn3");
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer4.doubleColon();
      xPathLexer2.colon();
      xPathLexer4.not();
      XPathLexer xPathLexer5 = new XPathLexer("@?");
      xPathLexer5.or();
      xPathLexer4.star();
      xPathLexer3.notEquals();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.650381135288006
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpathXPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer1.comma();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer1.rightParen();
      xPathLexer1.literal();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer1.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("_yjUn3");
      xPathLexer1.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer2.not();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.983649580740071
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("SSix~A?w 2bVGA{");
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("FN");
      xPathLexer2.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer1.equals();
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("FN");
      xPathLexer2.slashes();
      xPathLexer0.dots();
      xPathLexer2.mod();
      xPathLexer1.nextToken();
      xPathLexer2.slashes();
      xPathLexer0.nextToken();
      xPathLexer2.at();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-373));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.738532211312358
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.leftParen();
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer1.literal();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer2.minus();
      assertEquals(6, token10.getTokenType());
      assertEquals("c", token10.getTokenText());
      
      xPathLexer4.dots();
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer1.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.9237496046264906
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YpIvaMy&.9l{uV{");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.and();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.5040870397596113
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CP|m");
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      xPathLexer0.consume((-1292));
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.4628887168387887
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.setXPath("");
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      xPathLexer0.dots();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.setXPath("F|U}<");
      Token token10 = xPathLexer0.leftBracket();
      assertEquals("F", token10.getTokenText());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token12 = xPathLexer0.literal();
      assertNull(token12);
      
      xPathLexer0.getPreviousToken();
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer0.at();
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.4673118064308213
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-FSeWb_F");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.mod();
      xPathLexer1.mod();
      xPathLexer1.rightBracket();
      xPathLexer1.plus();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer1.minus();
      xPathLexer1.colon();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.2910890831609243
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.getXPath();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("c", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer1.div();
      xPathLexer0.mod();
      Token token3 = xPathLexer3.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer3.mod();
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer3.operatorName();
      xPathLexer3.dots();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token6 = xPathLexer4.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer3.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("o", token9.getTokenText());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.8936081622719365
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.getXPath();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer1.plus();
      xPathLexer1.mod();
      xPathLexer0.leftBracket();
      xPathLexer1.number();
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.dots();
      xPathLexer0.notEquals();
      xPathLexer2.star();
      xPathLexer2.minus();
      xPathLexer2.dots();
      xPathLexer1.slashes();
      Token token1 = xPathLexer1.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.836205925027408
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.leftBracket();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.054020683428401
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("");
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer2.dollar();
      assertEquals("c", token4.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.mod();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.number();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.div();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer0.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      xPathLexer2.div();
      Token token12 = xPathLexer2.not();
      assertEquals("m", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.consume((-527));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.9778550945920284
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.notEquals();
      xPathLexer2.notEquals();
      token0.toString();
      xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer2.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer2.plus();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.star();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.consume((-1616));
      XPathLexer xPathLexer5 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.slashes();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.dollar();
      // Undeclared exception!
      try { 
        xPathLexer4.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.0779034844862005
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s-NY<Y&");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.9479381316528135
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("l7", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.comma();
      assertEquals("J", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("T", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.equals();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = new XPathLexer("VpW#q{xICBu0N");
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
      
      Token token8 = xPathLexer2.pipe();
      assertEquals("V", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer2.dollar();
      assertEquals("p", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_yjUn3");
      xPathLexer0.mod();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals("W#", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals("7", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      int int0 = xPathLexer1.endPosition();
      assertEquals(13, int0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.8655991731898844
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.literal();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.not();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.endPosition();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.7935082737095605
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.479556191518893
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.nextToken();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.comma();
      xPathLexer2.leftBracket();
      xPathLexer1.rightParen();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      xPathLexer0.isIdentifierStartChar('F');
      xPathLexer1.minus();
      XPathLexer xPathLexer3 = new XPathLexer("(+F*P:>2e%YQ#: CIY");
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      xPathLexer4.doubleColon();
      xPathLexer0.equals();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.6092371051595167
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.nextToken();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.comma();
      xPathLexer0.mod();
      xPathLexer2.identifier();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer3.not();
      xPathLexer0.leftBracket();
      xPathLexer1.isIdentifierStartChar('^');
      xPathLexer1.minus();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.61996154414587
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.consume(0);
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.consume(0);
      xPathLexer0.consume(0);
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.mod();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.272429544995929
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.not();
      assertEquals("c", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer1.slashes();
      Token token4 = xPathLexer0.slashes();
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer1.number();
      assertEquals(31, token6.getTokenType());
      
      xPathLexer0.isIdentifierChar('l');
      Token token7 = xPathLexer1.comma();
      assertEquals("w", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("w", token8.getTokenText());
      
      xPathLexer0.div();
      xPathLexer1.mod();
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("e", token10.getTokenText());
      
      xPathLexer2.mod();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals("r", token11.getTokenText());
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer2.dots();
      Token token13 = xPathLexer1.identifier();
      assertEquals("rken.saxpath.XPathLexer", token13.getTokenText());
      assertEquals(15, token13.getTokenType());
      
      xPathLexer2.div();
      Token token14 = xPathLexer1.minus();
      assertEquals(6, token14.getTokenType());
      
      Token token15 = xPathLexer1.colon();
      assertEquals(18, token15.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token16 = xPathLexer3.slashes();
      assertEquals(11, token16.getTokenType());
      
      Token token17 = xPathLexer2.dots();
      assertEquals(13, token17.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.at();
      xPathLexer2.operatorName();
      Token token18 = xPathLexer1.doubleColon();
      assertEquals(19, token18.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.4804774670287153
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.at();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.identifier();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token7);
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.at();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.417174636970629
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("#q", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("@e)oK-/G\"phRAl]");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token1);
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.doubleColon();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("{", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.isIdentifierChar('^');
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("x", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.dollar();
      assertEquals(")", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.div();
      xPathLexer4.mod();
      Token token7 = xPathLexer5.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer1.mod();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("I", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer4.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer5.dots();
      xPathLexer2.minus();
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("K", token11.getTokenText());
      
      Token token12 = xPathLexer1.slashes();
      assertEquals("-/", token12.getTokenText());
      assertEquals(12, token12.getTokenType());
      
      Token token13 = xPathLexer5.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer4.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.6936365246978653
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer1.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer2.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("*", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer2.or();
      xPathLexer2.getPreviousToken();
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("I", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.slashes();
      xPathLexer1.dollar();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("*!I");
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer5.notEquals();
      assertEquals("*!", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.0170381134467186
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("E|~}]");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.151000725465489
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s-NY<Y&");
      xPathLexer0.literal();
      xPathLexer0.dots();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer2.plus();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.8663261913181373
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.6376442394911463
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.9731158629845498
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("!", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.dots();
      assertEquals("J", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("T", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.notEquals();
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.6965466129430915
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      xPathLexer1.nextToken();
      xPathLexer1.setXPath("<-k!a(2ah%y|a]%\"");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer1.dots();
      XPathLexer xPathLexer5 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      xPathLexer6.star();
      // Undeclared exception!
      try { 
        xPathLexer4.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.9934872122000544
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("Rs\rn%?S_QTPx");
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(123);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.495084104866939
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.colon();
      xPathLexer0.dots();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.3675391101808514
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.equals();
      xPathLexer0.equals();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.7223316580796717
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.number();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
