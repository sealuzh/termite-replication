/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 04:51:25 GMT 2020
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<lFN,9");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertNotNull(token0);
      assertEquals("<", token0.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YpIvaMy&.9l{uV{");
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.14839214282331
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('F');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('^');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      boolean boolean0 = xPathLexer0.isIdentifierChar('l');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      boolean boolean0 = xPathLexer0.isIdentifierChar('^');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1682234916146403
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      assertEquals("SSix", token0.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("F|U}<");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = xPathLexer0.getXPath();
      assertNull(string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e8AX!V$q*Q(% o");
      int int0 = xPathLexer0.endPosition();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      char char0 = xPathLexer0.LA(1);
      assertEquals('.', char0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6156305770275505
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("@e)oK-/G\"phRAl]");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("e", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(")", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("K", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("-", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals("G", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('G', char0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.consume((-166));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-1900));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer0.consume((-1207));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-74));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("Zu^f\"D");
      xPathLexer0.consume((-1738));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2148));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-527));
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CP|m");
      xPathLexer0.consume((-1292));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2229));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-324));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("CP|m");
      String string0 = xPathLexer0.getXPath();
      assertEquals("CP|m", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4410152780267027
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@e)oK-/G\"phRAl]");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      xPathLexer0.dots();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("o", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("K", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("-/", token4.getTokenText());
      assertEquals(12, token4.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YpIvaMy&.9l{uV{");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (19) (.w)");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.076096870044695
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("JT", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("d", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(",", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("&", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YpIvaMy&.9l{uV{");
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YpIvaMy&.9l{uV{");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0791512728828505
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.7938955243392107
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4442702307057458
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("\"", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("]", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("oE", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("#", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("a{:LT,\"", token7.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9345071288432268
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.532954812744937
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("m.werken.saxpath.Token", token1.getTokenText());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.532954812744937
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token1.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4204552241466717
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertEquals("", token1.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.114460302518877
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      XPathLexer xPathLexer1 = new XPathLexer("h\"+iNp");
      Token token0 = xPathLexer1.slashes();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(11, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("h", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0890907707639657
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0275668525304953
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (19) (.w)");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("[", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.28072953486328
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0873121837287083
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      assertEquals("", token3.getTokenText());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.6944230652122783
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*.0gs?L7wUl0y\"Sa");
      Token token0 = xPathLexer0.dollar();
      assertEquals("*", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".0", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.43764750049431006
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3955852454859713
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{Sfw)GfFUR^");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("{Sfw)GfFUR^", token0.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.8798846890844253
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%Gt4z$U:7??LudnHo7N");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("G", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("4", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("z", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0658770961100856
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("m", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertEquals("werken", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("a", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("xpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9077618896938154
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("m.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.8078856237959416
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":vf}wNIod");
      Token token0 = xPathLexer0.dots();
      assertEquals(":", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("vf", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0521901684391561
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.setXPath("VpW#q{xICBu0N");
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("p", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("W#", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("q", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("{", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("I", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("C", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals("B", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("u0N", token8.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.077295836460389
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("n", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("a", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("th.Token", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0442085969160628
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(".w", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("k", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals("e", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("n.", token5.getTokenText());
      assertEquals(14, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("saxpath.Token", token6.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Vp", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("W", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("q", token2.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.8798846890844252
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("h\"", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("+i", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("p", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0200864340056008
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.not();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("k", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("e", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("n.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lrC2HqCm/2f:C4(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("lrC2HqCm", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.951999606062719
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("e", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L7d(ggO8|Yy");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("L7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("ggO8", token2.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.9596511408552357
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("!", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("J", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("T", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("dZ", token6.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.7164516354046382
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_})T-50mHx~");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("_", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.5095322418584519
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Y^f\"A5v[qXb");
      Token token0 = xPathLexer0.dots();
      assertEquals("Y", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("^f\"A5v[qXb", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("@e)oK-/G\"phRAl]");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("@", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.314953364751526
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("G", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("Z", token7.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XYLsNL>(");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("X", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("YLsNL", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.8508015905993925
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XYLsNL>(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("XYLsNL", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertNotNull(token1);
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.8177174986975012
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("VpW#q{xICBu0N");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("V", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("p", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V,;_U`dP%lX:M?7j&");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("V", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5U\"fC1lHoi;mW']y|");
      Token token0 = xPathLexer0.not();
      assertEquals("5", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0972630115546445
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("l7", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("!", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("J", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("T:dZ,&A", token4.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.8895790552461028
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("~O:oQ}Je.G");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("~", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("O", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(":", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("o", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Q", token4.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.8798846890844253
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setXPath("{x\"]O< i_");
      Token token0 = xPathLexer0.plus();
      assertEquals("{", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("x", token1.getTokenText());
      
      xPathLexer0.dots();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("]", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("O", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.9795512710380186
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("h", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("+", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Np", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("XYLsNL>(");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("LsNL", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.7810925852737755
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sK+xJK9>%PaGN");
      Token token0 = xPathLexer0.star();
      assertEquals("s", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.8078856237959416
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("*!", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("I", token1.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.7711904826943476
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("FN");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("FN", token0.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.170745385193572
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("r", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("]o", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("E", token4.getTokenText());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("D}D<J3QOU^{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0185735963835392
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7(!JT:dX,A");
      xPathLexer0.setXPath("VpW#q{xICBu0N");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("Vp", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("W", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("#", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("{", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("x", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("CBu0N", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.7439920825769217
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ba}P-L");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ba", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.1800450633502244
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("SSix", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("~", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("A?w 2bVGA{", token2.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.4089388914174921
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.8219461783313669
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("SSix", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("~", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("?w 2bVGA{", token3.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.195679235156794
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("~&0>rJ=z");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("~&", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("0", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("rJ", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.215644737381103
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      xPathLexer0.setXPath("<-k!a(2ah%y|a]%\"");
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("-", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("k", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.5095322418584519
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("M;1AGl+B[v 0S-??!`");
      Token token0 = xPathLexer0.slashes();
      assertEquals("M", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals(";1AGl+B[v 0S-??!`", token1.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.9593205842932733
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("G", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("(!", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("J", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("T", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.2815377238835208
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.setXPath("lZ9S3T6P95 4s71)");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("Z", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("9", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("S3T6P95 4s71)", token3.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.774953131316361
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("98bR6B");
      Token token0 = xPathLexer0.plus();
      assertEquals("9", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("8", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.6755920761612467
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6p.P+E~Tpv<(");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("6", token0.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.7123333326585803
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("*Q5qC)b(j");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("*Q", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.6859221709008083
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("49Exvfs");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("49", token0.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.7390550555431371
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z1]qJLJT5Fj@_[>");
      Token token0 = xPathLexer0.slashes();
      assertEquals("z", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("1", token1.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.9417650939811969
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("@e)oK-/G\"phRAl]");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("@", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(")", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("oK-", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("/", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.077585272653389
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.plus();
      assertEquals("c", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.4511636006386335
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<-k!a(2ah%y|a]%\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("<", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.4511636006386335
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sK+xJK9>%PaGN");
      Token token0 = xPathLexer0.star();
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.4089388914174921
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*!I");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(20, token0.getTokenType());
      assertEquals("*", token0.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.7722458213295293
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m9)y");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("m9", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.6640448328394719
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("l7", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("d", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("Z", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(32, token6.getTokenType());
      assertEquals(",", token6.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.9842419620191794
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l7G(!JT:dZ,&A");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("l7", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("JT", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("d", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("Z", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(",", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("&A", token7.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=0.7596593632444977
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")0%<sXG,X<");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("0", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%<sXG,X<", token2.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.656263397641144
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("\"", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("$", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("]o", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("E", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("##a{:LT,\"", token5.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.5537860812860957
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\".r$]oE##a{:LT,\"");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(27, token0.getTokenType());
      assertEquals(".r$]oE##a{:LT,", token0.getTokenText());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.2198107942168133
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SSix~A?w 2bVGA{");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("SSix", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("~", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("A", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("w", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.8106536471487246
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-672));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.8701903229227476
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("h\"+iNp");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("h\"", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("iNp", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YpIvaMy&.9l{uV{");
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0592746830785
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
  }
}
