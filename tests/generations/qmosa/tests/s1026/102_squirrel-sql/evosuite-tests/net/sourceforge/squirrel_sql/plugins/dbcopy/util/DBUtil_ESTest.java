/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 16:53:44 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.event.AdjustmentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowFocusListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.LinkedBlockingQueue;
import javax.swing.Box;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JLayeredPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.swing.ImageIconUIResource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("Max function is null for dialect=", "Max function is null for dialect=", "sign");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX;
      ImageIcon imageIcon0 = (ImageIcon)databaseObjectType0.getIcon();
      imageIcon0.getImageLoadStatus();
      DatabaseObjectType.createNewDatabaseObjectType("Max function is null for dialect=");
      imageIcon0.getImage();
      imageIcon0.getDescription();
      DatabaseObjectType.createNewDatabaseObjectType("Couldn't find an exact match for destination table ", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setDestDatabaseObject(databaseObjectInfo0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.parallelStream();
      dBCopyPlugin0.setSourceDatabaseObjects(linkedList0);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "not logged", "Couldn't find an exact match for destination table ");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "t'/4&*^", (ITableInfo) null, 25);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISQLConnection iSQLConnection0 = null;
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Bu", "Bu");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLDriver sQLDriver2 = new SQLDriver();
      SQLDriver sQLDriver3 = new SQLDriver();
      sQLDriver2.setWebSiteUrl("R|SM\"D9}5n|X");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("&ty", (String) null, "nPV0o", "R|SM\"D9}5n|X", 19, "R|SM\"D9}5n|X", 31, 19, 2, 31, "R|SM\"D9}5n|X", "1U$+PgOM", 1275, 19, "nPV0o");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      Integer.getInteger("6^g", (-312));
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = new Integer((-244));
      Integer.sum(3, 3);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("6^g", "sign", ",1.29?2I&tZn", "sign", (-1145), ",1.29?2I&tZn", (-1639), (-1639), (-244), (-4), ",1.29?2I&tZn", "6^g", (-5), (-12), ":lLbv8atPNt2)c1'");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType(":lLbv8atPNt2)c1'", (Icon) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "MLl]jA'", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "9NO", " 2B<]2W&]PR` 6+?Yu");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFiles0.getPluginsDirectory();
      MockFile mockFile0 = new MockFile("9NO", "m2Ez?uk([oxu&$Z}");
      MockFile mockFile1 = new MockFile(" 2B<]2W&]PR` 6+?Yu");
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "f2Q1]6EY6Gl:");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("http://www.squirrelsql.org", (String) null, (String) null, "-Ik]/)a=^#", (-243), "-Ik]/)a=^#", (-243), 2005, 92, (-667), "http://www.squirrelsql.org", "-Ik]/)a=^#", (-667), 92, "TnE^7`A':|DaJ9! +y");
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "z^\"9l;L?==PFLe&N}", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.typesAreEquivalent((-24), (-24));
      DBUtil.typesAreEquivalent(3, (-24));
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 30);
      assertFalse(boolean0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hJj*f+PepW]kZ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hJj*f+PepW]kZ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hJj*f+PepW]kZ");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "AI&#", "|b3p|\"Gvyhv", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = new Integer(2796);
      integerArray0[0] = integer0;
      integerArray0[1] = integer0;
      integerArray0[2] = integerArray0[1];
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer1;
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer integer4 = new Integer((int) integerArray0[0]);
      Integer.sum((int) integerArray0[3], (int) integerArray0[2]);
      Integer.compareUnsigned((-4176), (int) integerArray0[2]);
      integerArray0[5] = integer3;
      Integer.divideUnsigned((int) integerArray0[0], (int) integerArray0[2]);
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-947), "s.UbkLz!SH", 1250, 1237, 2047, 1237, "e=sk{", "o<<,}F2<VXNPa_$7", 2465, 93, "power");
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      Color color0 = Color.pink;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Color color1 = Color.BLACK;
      defaultTreeCellRenderer0.setBackgroundSelectionColor(color1);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getOpenIcon();
      ImageIcon imageIcon0 = new ImageIcon();
      LinkedBlockingQueue<TableInfo> linkedBlockingQueue0 = new LinkedBlockingQueue<TableInfo>();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>(linkedBlockingQueue0);
      arrayList0.listIterator();
      arrayList0.spliterator();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ITableInfo iTableInfo0 = null;
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "http://www.squirrelsql.org", 2004, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2004, 2004, 1276, 2004, "DD6^7cD$;n5(", " on ", 2004, 1276, (String) null);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(linkedList0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      dBCopyPlugin2.setSourceDatabaseObjects(list0);
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin2.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin2.getApplication();
      dBCopyPlugin2.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(4168L);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("DD6^7cD$;n5(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 4);
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q|W");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.971651851606482
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", (String) null, 7, "", 7, 7, 7, 0, (String) null, "org.apache.commons.cli.OptionValidator", 514, 514, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[12];
      dBCopyPlugin0.getPluginUserSettingsFolder();
      DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
      tableColumnInfoArray0[0] = tableColumnInfo0;
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, "");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo((String) null, (String) null, (String) null, "", (-1307), (String) null, 7, (-818), (-630), (-167), "org.apache.commons.cli.OptionValidator", "", (-3), Integer.MIN_VALUE, "U:xMNcKFC57");
      tableColumnInfoArray0[7] = tableColumnInfo1;
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("P", "P", ")sa^P1a", ")sa^P1a", 3057, "Y,]%K/.b E", (-3094), 3057, (-650), 561, "Y,]%K/.b E", "]/`+:3#;_R", 36, 3057, " tableName=");
      arrayList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener3);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener4, hierarchyBoundsListener4);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener4);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster0, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster8, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster10, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster11, hierarchyBoundsListener3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      Integer.toUnsignedLong(1111);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "0z[Z", "0z[Z");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0z[Z";
      stringArray0[1] = "0z[Z";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[3] = "OxO+";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "http://www.squirrelsql.org");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getOpenIcon();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster6, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster2, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster11, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster10, (HierarchyBoundsListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster13, (HierarchyBoundsListener) aWTEventMulticaster3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 40008);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("TnE^7`A':|DaJ9! +y");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      byte[] byteArray0 = new byte[3];
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getDisabledIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATATYPE;
      byteArray0[2] = (byte)78;
      Box box0 = Box.createHorizontalBox();
      box0.getInputVerifier();
      defaultListCellRenderer_UIResource0.setInputVerifier((InputVerifier) null);
      DatabaseObjectType.createNewDatabaseObjectType("e=sk{", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("TnE^7`A':|DaJ9! +y", (Icon) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("9>29}@O");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("L`~\"%=", "TnE^7`A':|DaJ9! +y", "%2tRz|!\"$ceSN'DV:", "%2tRz|!\"$ceSN'DV:", (-3), "TnE^7`A':|DaJ9! +y", (byte)78, (byte)0, 2006, (-1840700267), "e=k", "e=k", (byte)78, 2006, "SchemaInfo.SuccessfullyRestoredDatabaseMetaData");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("Quarter outside valid range.", (Icon) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      dBCopyPlugin0.setSourceDatabaseObjects(linkedList0);
      dBCopyPlugin0.setSourceDatabaseObjects(linkedList0);
      dBCopyPlugin0.getApplication();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "NO", " 2B<]2W&]PR` 6+?Yu");
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles1);
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      FileSystemHandling.createFolder(evoSuiteFile0);
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles1);
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.apache.commons.cli.OptionValidator", "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "Htz!GZ[kz.vTT,r,", "m2Ez?uk([oxu&$Z}", (-4), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2005, (-4), (-95), (-3029), (String) null, "extract", (-4), (-3029), " 2B<]2W&]PR` 6+?Yu");
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "NO", " 2B<]2W&]PR` 6+?Yu");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("plugins");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getDTPropertiesFile();
      applicationFiles0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-43);
      byteArray0[4] = (byte)40;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getDatabaseAliasesFile_before_version_2_3();
      applicationFiles1.getExecutionLogFile();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles1);
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      FileSystemHandling.createFolder(evoSuiteFile1);
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "NO");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "org.apache.commons.cli.Parser";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "s^n%ml0*rU0xTbZ", "s^n%ml0*rU0xTbZ");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer[] integerArray0 = new Integer[13];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[1];
      Integer.getInteger("6^g", (int) integerArray0[1]);
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = new Integer((int) integerArray0[0]);
      Integer.sum((int) integerArray0[3], (int) integerArray0[2]);
      integerArray0[5] = integer4;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.error.nocolumns", "sign", "DBUtil.error.nocolumns", "9R/", (int) integerArray0[1], "DBUtil.error.nocolumns", (int) integerArray0[4], (-1782), 1123, 1123, "DBUtil.error.nocolumns", "M*/2", 2796, (-5), ",1.29?2I&tZn");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("sign", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.add(mouseMotionListener0, mouseMotionListener0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener2 = AWTEventMulticaster.remove((MouseMotionListener) defaultCaret1, mouseMotionListener1);
      AWTEventMulticaster.remove(mouseMotionListener2, mouseMotionListener1);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "p\"I9>S`&");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("trunc", "q(d0<H4&e@6gF)", (String) null, "trunc", 1202, "VTIm", (-1496), 23001, (-1496), (-3256), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "VTIm", 0, 15, "p\"I9>S`&");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1202, int0);
      
      SQLDriver sQLDriver0 = new SQLDriver();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("] for automatic log4j configuration.", "_R/J9)Rk;Y@-\"", "DELETE FROM ", "d>j?[@)[15!", (-3256), "ult", (-160), 2003, 92, (-1496), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ntZ4l1r6slf1'F", (-3037), 2048, "q(d0<H4&e@6gF)");
      DBUtil.replaceDistinctDataType((-1496), tableColumnInfo0, (ISession) null);
      dBCopyPlugin2.setDestSession((ISession) null);
      dBCopyPlugin2.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
      
      int int1 = DBUtil.replaceDistinctDataType(0, tableColumnInfo1, (ISession) null);
      assertEquals(0, int1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[0];
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.divideUnsigned((int) integerArray0[2], 2796);
      Integer.getInteger("(:V!5n(,e[;l");
      Integer.sum((int) integerArray0[3], (int) integerArray0[2]);
      integerArray0[5] = integer4;
      Integer.compare((int) integerArray0[5], 1);
      Integer integer5 = new Integer(2896);
      Integer.remainderUnsigned((int) integerArray0[2], (int) integerArray0[5]);
      Integer.getInteger("= s}vuG$B}iwT#9d:", 1343);
      Integer.getInteger((String) null, (int) integerArray0[1]);
      Integer.toUnsignedString((int) integerArray0[3]);
      Integer.toUnsignedString(2005);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Integer.toUnsignedLong((int) integerArray0[0]);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      ImageIconUIResource imageIconUIResource0 = (ImageIconUIResource)defaultTreeCellRenderer1.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIconUIResource0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte)70;
      imageIconUIResource0.getImageLoadStatus();
      DatabaseObjectType.createNewDatabaseObjectType("blob", (Icon) imageIconUIResource0);
      ImageIcon imageIcon0 = new ImageIcon("blob", "blob");
      Color color0 = Color.pink;
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z!,i]b;m]u;^X", "#@A$1(%{<", ".0.zlK.", "TRUNCATE TABLE ", 8, "arg", 6, 2838, 24, (-7), "", "TRUNCATE TABLE ", 4, (-7), "g9");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("TRUNCATE TABLE , TRUNCATE TABLE , TRUNCATE TABLE , TRUNCATE TABLE , TRUNCATE TABLE , TRUNCATE TABLE , TRUNCATE TABLE , TRUNCATE TABLE ", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer integer1 = new Integer(2796);
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(linkedList0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ": Argument ", ": Argument ");
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) null;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      Integer.sum(2292, 96);
      try { 
        Integer.parseUnsignedInt("L8'C?");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"L8'C?\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "p\"I9>S`&", (String) null, "4pBk%*:!DAimZ#sFz@&", 0, (String) null, 869, 869, 5, 869, "p\"I9>S`&", (String) null, 2140, 0, "org.apache.commons.cli.OptionValidator");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "0");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, (String) null, (String) null, "Fh");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener3);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener4, hierarchyBoundsListener4);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener4);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((FocusListener) aWTEventMulticaster0, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster6, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, hierarchyBoundsListener3);
      AWTEventMulticaster.add(hierarchyBoundsListener4, hierarchyBoundsListener4);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("DsNjR7xEJ", "M!TyS@c@fo0H!", "M!TyS@c@fo0H!", (ForeignKeyInfo) null, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener3);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener4, hierarchyBoundsListener4);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener4);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove(hierarchyBoundsListener3, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster0, (FocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster8, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster6, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster10, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster11, hierarchyBoundsListener3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      Integer.toUnsignedLong(1111);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "jv2uR FdH", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "]qo", "+bS~");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "vi]`p2n#X\"^9TZ", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName((String) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      dBCopyPlugin1.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      dBCopyPlugin0.getDestDatabaseObject();
      iDatabaseObjectInfoArray0[1] = null;
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      List<ITableInfo> list2 = DBUtil.convertObjectToTableList(list1);
      assertEquals(4, list2.size());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getComponentListeners();
      defaultTreeCellRenderer3.getOpenIcon();
      defaultTreeCellRenderer2.getOpenIcon();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "e D(oJT", " in schema ", "`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "NO", " 2B<]2W&]PR` 6+?Yu");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster6, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster2, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster11, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster10, (HierarchyBoundsListener) aWTEventMulticaster12);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster13, (HierarchyBoundsListener) aWTEventMulticaster3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Missing required option", "SELECT data_type FROM information_schema.columns where column_name = ? ", "^R'YI*pJgB~>7r", "SELECT data_type FROM information_schema.columns where column_name = ? ", (-887), "j<Iw\"?h(", 2004, (-2), (-4241), (-4241), "SELECT data_type FROM information_schema.columns where column_name = ? ", "`ANw?", (-193), (-193), ",z1h}W~E");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-887), int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, hierarchyBoundsListener3);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add(hierarchyBoundsListener4, hierarchyBoundsListener4);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener4);
      AWTEventMulticaster.remove(hierarchyBoundsListener5, hierarchyBoundsListener6);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getChangeLogFile();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.getLicenceFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("org.jfree.data.xy.VectorSeriesCollection", "R&7q|^UARK]Dnn&", (String) null, "R&7q|^UARK]Dnn&", 665, "M!TyS@c@fo0H!", 357, 357, 9999, 1, "catalog=", "R&7q|^UARK]Dnn&", (-7), 1003, "t'/4&*^");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TnE^7`A':|DaJ9! +y", "org.apache.log4j.Logger", "EL/OKSX)", "TnE^7`A':|DaJ9! +y", (-697), "1U$+PgOM", (-7), 2003, (-1932735280), (-632), "org.apache.log4j.Logger", "TnE^7`A':|DaJ9! +y", (-531), 2003, "EL/OKSX)");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(1275, tableColumnInfo0, (ISession) null);
      assertEquals(1275, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster3, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster5, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster2, (FocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster4, (HierarchyBoundsListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster10, hierarchyBoundsListener2);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster8, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster9, (HierarchyBoundsListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster12, (HierarchyBoundsListener) aWTEventMulticaster3);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("catalog=", "$&23Yu`n*f+9RrZmu.#", "o{Y\"Y", "u4uUv0", 0, " r2-d/", 0, 0, (-1051), 696, " ADD FOREIGN KEY (", " ) values ( ", 37, 0, "wDDg'TYhCZd#");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer[] integerArray0 = new Integer[13];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[1];
      Integer.getInteger("W@g", (int) integerArray0[1]);
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer3;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer.sum((int) integerArray0[3], (int) integerArray0[2]);
      integerArray0[5] = integer4;
      Integer.toUnsignedString((int) integerArray0[0]);
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.toUnsignedString((int) integerArray0[2]);
      Integer.divideUnsigned((int) integerArray0[0], (int) integerArray0[2]);
      Integer.getInteger("W@g", (int) integerArray0[4]);
      Integer.toUnsignedString((-525));
      Integer.decode("2796");
      Integer.toUnsignedLong((int) integerArray0[5]);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("u5)WzC\"l-1n", "q#d_S", "q#d_S", "2796", 6, "net.sourceforge.squirrel_sql.fw.datasetviewer.ResultSetDataSet", (int) integerArray0[1], 2654, 2654, (int) integerArray0[5], "W@g", "u5)WzC\"l-1n", (int) integerArray0[1], (int) integerArray0[1], "bL}%$?fa8(,b");
      int int0 = DBUtil.replaceDistinctDataType((int) integerArray0[1], tableColumnInfo0, (ISession) null);
      assertEquals(2796, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Integer[] integerArray0 = new Integer[20];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-2715));
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[1];
      Integer integer2 = Integer.getInteger("6^g", (int) integerArray0[1]);
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer5;
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("Requires start >= 0.", (int) integerArray0[2]);
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.getInteger("6^g");
      Integer integer8 = JLayeredPane.MODAL_LAYER;
      Integer integer9 = new Integer((int) integerArray0[0]);
      Integer.min((int) integerArray0[0], (-1541));
      Integer.getInteger((String) null, (int) integerArray0[3]);
      Integer integer10 = new Integer((-1541));
      Integer integer11 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedString((-1541));
      Integer integer12 = new Integer((int) integerArray0[1]);
      Integer.sum((int) integerArray0[1], (-2715));
      Integer.max((-1736), (-1977));
      Integer integer13 = JLayeredPane.PALETTE_LAYER;
      Integer.compareUnsigned((int) integerArray0[0], (int) integerArray0[4]);
      Integer integer14 = new Integer((int) integerArray0[0]);
      Integer.toUnsignedString((int) integerArray0[4]);
      Integer.divideUnsigned((int) integerArray0[4], (int) integerArray0[0]);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener0);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener3);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, (HierarchyBoundsListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "0@cw.[Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getPluginsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getChangeLogFile();
      applicationFiles1.getChangeLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      applicationFileWrappersImpl1.getChangeLogFile();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFileWrappersImpl1.getLicenceFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("6BR37(/;'8");
      dBCopyPlugin0.getApplication();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener1);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((FocusListener) null, (FocusListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "net.srceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.srceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getPluginsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles2.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getChangeLogFile();
      ApplicationFiles applicationFiles3 = new ApplicationFiles();
      applicationFiles3.getLicenceFile();
      applicationFiles3.getChangeLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile_before_version_2_3();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getChangeLogFile();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles4 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl5.getLicenceFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("s~N-qypI-,", ">:Ih[*\"X>pn@Cl7iek", "axion", ">:Ih[*\"X>pn@Cl7iek", (-7), "", 2147483645, 2147483645, (-7), 665, "s~N-qypI-,", "t:#0!PE$ea>UnR^3A;", (-1333), (-1333), "axion");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, ">:Ih[*\"X>pn@Cl7iek", ">:Ih[*\"X>pn@Cl7iek");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      stack0.toArray(integerArray0);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "PUB";
      String string1 = "@;#R(Qct?*VMXy~)";
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("", " tableName = ", "X1f!<iH", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 389, "PUB", 389, 389, 389, 389, "@;#R(Qct?*VMXy~)", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 389, 389, "", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getPluginsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getUserSettingsDirectory();
      applicationFiles1.getChangeLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "B,#?)");
      applicationFileWrappersImpl1.getChangeLogFile();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFileWrappersImpl1.getLicenceFile();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte) (-12);
      MockFile mockFile0 = new MockFile("Sta\"oUp^'l");
      applicationFileWrappersImpl1.getLibraryDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2796);
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[1];
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.divideUnsigned((int) integerArray0[2], 2796);
      Integer.getInteger("(:V!5n(,e[;l");
      Integer.sum((int) integerArray0[3], (int) integerArray0[2]);
      integerArray0[3] = integer4;
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      Integer.toUnsignedString((int) integerArray0[3]);
      Integer.getInteger("(:V!5n(,e[;l", integer5);
      Integer.compare((-1698), 1047);
      Integer.divideUnsigned((-1095), (int) integerArray0[2]);
      Integer.compare((-1095), 1536110);
      Integer.divideUnsigned(1003, (-1095));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("|h~c", "200", "|h~c", "|h~c", 9999, ",1.29?2I&tZn", (int) integerArray0[0], 1047, 2494, 2796, "|h~c", "|h~c", 920, 70, (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE_TYPE_DBO;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte)70;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("", icon0);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "w@wgAX ");
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      ImageIcon imageIcon1 = new ImageIcon("Using previously set target, System.out by default.", "%2tRz|!\"$ceSN'DV:");
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Icon icon1 = defaultTreeCellRenderer1.getOpenIcon();
      DatabaseObjectType.createNewDatabaseObjectType("kqcKk", icon1);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("4y9~m.<<b", "%2tRz|!\"$ceSN'DV:", "", "4y9~m.<<b", (byte) (-59), "`aDT,WZvh&lR:Rh) [", 70, (byte) (-59), (byte) (-59), (-11), "", (String) null, (-488), 1, "w@wgAX ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getPluginsDirectory();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      ApplicationFiles applicationFiles2 = new ApplicationFiles();
      applicationFiles2.getPluginsUserSettingsDirectory();
      applicationFiles2.getUserSettingsDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUserSettingsDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "VXyocU&@a>9QZeXt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setPasteToTableName((String) null);
      dBCopyPlugin0.getPluginUserSettingsFolder();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DBUtil.typesAreEquivalent((-12), (-12));
      double double0 = (-1.0);
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel(0.4, (double) (-12), 0.4, (-1.0));
      JSpinner jSpinner0 = new JSpinner(spinnerNumberModel0);
      JSpinner.ListEditor jSpinner_ListEditor0 = null;
      try {
        jSpinner_ListEditor0 = new JSpinner.ListEditor((JSpinner) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JSpinner$DefaultEditor", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 14);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x3t.p*vsfAMWp;NBn(");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e=sk{");
      System.setCurrentTimeMillis((-1828L));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.error.firebirdcommit", "p\"I9>S`&", "DBUtil.error.firebirdcommit", "create generator ", 78, "p\"I9>S`&", 78, 93, (-3), (-3), "Z,'IF:i", "org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset", (-3), 78, "a*C");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(78, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[1];
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      integerArray0[4] = integerArray0[3];
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.divideUnsigned((int) integerArray0[2], 2796);
      Integer.getInteger("(:V!5n(,e[;l");
      Integer.sum((int) integerArray0[3], (int) integerArray0[2]);
      integerArray0[5] = integer3;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      Integer.remainderUnsigned((int) integerArray0[2], (int) integerArray0[5]);
      Integer.getInteger("= s}vuG$B}iwT#9d:", 1343);
      Integer.getInteger((String) null, (int) integerArray0[1]);
      Integer.toUnsignedString((int) integerArray0[3]);
      Integer.getInteger("(:V!5n(,e[;l", integer4);
      Integer.toUnsignedString(865);
      Integer.compare((-833), 1047);
      Integer.divideUnsigned(2796, (int) integerArray0[2]);
      Integer.compare((-29900), 0);
      Integer.divideUnsigned(1003, (int) integerArray0[1]);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, ")c$a]XS,dgMGaEj", "865");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = null;
      int int0 = (-1119);
      Connection connection0 = null;
      SQLDriver sQLDriver0 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Wlg+f[", "*", (-1119));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = "') AD ";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "') AD ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DBUtil.setLastStatementValues("");
      DBUtil.getLastStatementValues();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(0);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("ACNm ,");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"ACNm ,\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, ": Argumn ", ": Argumn ", "{`UlXf5");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DBUtil.setLastStatement("");
      String string0 = "<eZid+4@;.[s/od\\n";
      String string1 = "";
      String string2 = "";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string3 = "!qI|0";
      String string4 = "Geer%";
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("!qI|0", "<eZid+4@;.[s/od\n", "Geer%");
      dBCopyPlugin0.setDestDatabaseObject(databaseObjectInfo0);
      // Undeclared exception!
      try { 
        dBCopyPlugin0.sessionStarted((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = 17;
      DBUtil.typesAreEquivalent(17, 14);
      int int1 = (-613);
      double double0 = 100.0;
      SpinnerNumberModel spinnerNumberModel0 = null;
      try {
        spinnerNumberModel0 = new SpinnerNumberModel(100.0, 0.0, 0.0, 2656.23591573);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // (minimum <= value <= maximum) is false
         //
         verifyException("javax.swing.SpinnerNumberModel", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(4, 4);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.doLayout();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      Color color0 = Color.YELLOW;
      Color.getColor("uDDJCn*9/rnu.K+,", 1176);
      color0.getColorSpace();
      defaultTreeCellRenderer2.setBackgroundSelectionColor(color0);
      ImageIcon imageIcon0 = new ImageIcon("uDDJCn*9/rnu.K+,", "/U\"x[Fl");
      imageIcon0.getImageObserver();
      Color color1 = Color.lightGray;
      defaultTreeCellRenderer2.setBackgroundSelectionColor(color1);
      imageIcon0.getImageObserver();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      ImageIcon imageIcon1 = new ImageIcon();
      defaultTreeCellRenderer1.getOpenIcon();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)77;
      ImageIcon imageIcon2 = new ImageIcon(byteArray0, "");
      defaultTreeCellRenderer1.getOpenIcon();
      ImageIcon imageIcon3 = new ImageIcon(byteArray0, "Nmuc1t9l^PF*7)y(K7");
      // Undeclared exception!
      try { 
        DBUtil.dropTable("Sd5y3T_d{Xkj", "VXyocU&@a>9QZeXt", "/U\"x[Fl", (ISession) null, false, 493);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Integer[] integerArray0 = new Integer[6];
      Integer integer0 = Integer.valueOf(2796);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      integerArray0[1] = integer1;
      integerArray0[2] = integerArray0[0];
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[3] = integer2;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      integerArray0[4] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.divideUnsigned((int) integerArray0[2], 2796);
      Integer.getInteger("(:V!5n(,e[;l");
      integerArray0[5] = integer4;
      Integer integer5 = new Integer((int) integerArray0[1]);
      Integer.remainderUnsigned((int) integerArray0[2], (int) integerArray0[5]);
      Integer.max(1123, (int) integerArray0[2]);
      Integer.getInteger("= s}vuG$B}iwT#9d:", 1343);
      Integer.getInteger((String) null, (int) integerArray0[1]);
      Integer.toUnsignedString((int) integerArray0[3]);
      Integer.getInteger("(:V!5n(,e[;l", integer5);
      Integer.toUnsignedString((-1095));
      Integer.compare((-3460), (int) integerArray0[5]);
      Integer.compare((-1694), 1069);
      Integer.divideUnsigned((-1095), (int) integerArray0[2]);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "VXyocU&@a>9QZeXt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DBUtil.getLastStatement();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }
}
