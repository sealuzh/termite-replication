/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 17:52:55 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      classWriter0.index = (-877);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "%EX2^mer`{{/H2J", "%EX2^mer`{{/H2J", (String) null, "%EX2^mer`{{/H2J");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2347124125190347
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item[] itemArray0 = new Item[2];
      Item item0 = new Item();
      itemArray0[0] = item0;
      Item item1 = classWriter0.newFloat(2);
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      Attribute attribute0 = new Attribute("A,");
      Attribute attribute1 = attribute0.next;
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12(2, (-3018));
      // Undeclared exception!
      fieldWriter0.put(byteVector1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      classWriter0.version = (-21);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "[m6@EkVQQj+#TyaJY~|", "[m6@EkVQQj+#TyaJY~|", (String) null, "[m6@EkVQQj+#TyaJY~|");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LineNumberTable";
      stringArray0[1] = "";
      stringArray0[2] = "POw[di)F$u:o";
      stringArray0[3] = "LineNumberTable";
      stringArray0[4] = "";
      stringArray0[5] = "LineNumberTable";
      stringArray0[6] = "LineNumberTable";
      stringArray0[7] = "LineNumberTable";
      stringArray0[8] = "";
      classWriter0.visit(823, (-2355), "", "", "", stringArray0);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "LineNumberTable", "", (String) null, "");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("(T;(");
      Attribute attribute1 = attribute0.next;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("=gz.h&7tnP87C]jju&");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item item0 = new Item();
      String string0 = "ConsgtantValue";
      Attribute attribute0 = new Attribute("ConsgtantValue");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "s(jC;?KB-`JE", "", "", "s(jC;?KB-`JE");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "", "", (String) null, "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "[m6@EkVQQj+#TyaJY~|", "[m6@EkVQQj+#TyaJY~|", "[m6@EkVQQj+#TyaJY~|", "[m6@EkVQQj+#TyaJY~|");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 3393;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0616109402358964
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2821, "lXZY=YN1Y", "lXZY=YN1Y", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("lXZY=YN1Y");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11(1, (-2354));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-31);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2324));
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      byteArray1[1] = (byte) (-76);
      byteArray1[2] = (byte) (-38);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray1[4] = (byte)4;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray1[5] = (byte) (-82);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)4, "Cx", "Cx", "Cx", (Object) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cx");
      fieldWriter0.getSize();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      assertFalse(fileSystemHandling4.equals((Object)fileSystemHandling3));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2324));
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-76);
      byteArray0[2] = (byte) (-38);
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte) (-82);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)16, "Cx", "Cx", "Cx", (Object) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cx");
      fieldWriter0.getSize();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      assertFalse(fileSystemHandling4.equals((Object)fileSystemHandling3));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item[] itemArray0 = new Item[2];
      Item item0 = new Item();
      itemArray0[0] = item0;
      classWriter0.newFieldItem("tQ52N@J5Moq4s'C", "tQ52N@J5Moq4s'C", "ConstantValue");
      Item item1 = classWriter0.newFloat((-1));
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      Attribute attribute0 = new Attribute("A,");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)84;
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item[] itemArray0 = new Item[2];
      Item item0 = new Item();
      itemArray0[0] = item0;
      item0.set(4700.633F);
      Item item1 = classWriter0.newFloat((-1));
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      fieldWriter0.visitAnnotation("8Kbz&X|6w~:WL;MJgFX", true);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, (String) null, "8Kbz&X|6w~:WL;MJgFX", "RuntimeVisibleAnnotations", "h@j28DXn!pV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "[m6@EkVQQj+#TyaJY~|", "[m6@EkVQQj+#TyaJY~|", (String) null, "[m6@EkVQQj+#TyaJY~|");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      byte byte0 = (byte)5;
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6145662931520008
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(823);
      classWriter0.thisName = ">:S-6Xr`<~SBm9de";
      classWriter0.invalidFrames = false;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", ">:S-6Xr`<~SBm9de", "");
      fieldWriter0.visitAnnotation("){xy?gjSUbPwm_49", true);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.visitAnnotation("Exceptions", true);
      fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      classWriter0.toByteArray();
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation(">:S-6Xr`<~SBm9de", true);
      fieldWriter0.getSize();
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.put11(2, (-24));
      ByteVector byteVector2 = byteVector1.put12((-630), 60);
      fieldWriter0.put(byteVector2);
      assertSame(byteVector2, byteVector1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item[] itemArray0 = new Item[2];
      Item item0 = new Item();
      itemArray0[0] = item0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Item item1 = classWriter0.newFloat((-1));
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      classWriter0.newInteger(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4863125658959901
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2094);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2094, "v3E+KfSN-A_<PN5gg", "", "", "v3E+KfSN-A_<PN5gg");
      classWriter0.firstField = fieldWriter0;
      classWriter0.newLong(2094);
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.visitEnd();
      fieldWriter1.getSize();
      classWriter0.firstField.visitAnnotation("", false);
      classWriter0.firstField.getSize();
      Attribute attribute0 = new Attribute("");
      int int0 = 2872;
      // Undeclared exception!
      try { 
        attribute0.write(classWriter0, (byte[]) null, 2872, (-431), 36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-2355));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Cx", "Cx", "Cx", (Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Constan[Val/e");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Attribute attribute0 = new Attribute("Constan[Val/e");
      Attribute attribute1 = attribute0.next;
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("Constan[Val/e");
      ByteVector byteVector2 = byteVector0.putByte(1);
      byteVector1.putShort(167);
      fieldWriter0.put(byteVector2);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteVector byteVector3 = new ByteVector();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Item item0 = classWriter0.key2;
      item0.set((-2355));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2354));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2821, "lXZY =YN1Y", "lXZY =YN1Y", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("w?wakN?[n`-vc", false);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put11(1, (-2354));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Item[] itemArray0 = new Item[2];
      Item item0 = new Item();
      itemArray0[0] = item0;
      Item item1 = classWriter0.newFloat((-1));
      itemArray0[1] = item1;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX", "8Kbz&X|6w~:WL;MJgFX");
      Attribute attribute0 = new Attribute("A,");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = attribute0.next;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-994));
      String string0 = "+[Y-";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "wheel.asm.Attribute";
      stringArray0[1] = "wheel.asm.Attribute";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "+[Y-", "wheel.asm.Attribute", "wheel.asm.Attribute", stringArray0, false, false);
      classWriter0.firstMethod = methodWriter0;
      String string1 = ")V";
      Object object0 = new Object();
      classWriter0.toByteArray();
      Item[] itemArray0 = new Item[7];
      Item item0 = new Item();
      itemArray0[0] = item0;
      Item item1 = new Item(910);
      itemArray0[1] = item1;
      Item item2 = classWriter0.newFieldItem("", "", "`kU,Tanp?G*");
      itemArray0[2] = item2;
      Item item3 = new Item(2);
      itemArray0[3] = item3;
      Item item4 = new Item(1, item0);
      itemArray0[4] = item4;
      Item item5 = new Item();
      item1.strVal3 = "yLCV`";
      itemArray0[5] = item5;
      Item item6 = classWriter0.key3;
      itemArray0[6] = item6;
      item6.intVal = 1;
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-994), ")V", "`kU,Tanp?G*", ")V", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@9fd9f57
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2355));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2355), "LineNumberTable", "", (String) null, "");
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("(T;(");
      Attribute attribute1 = attribute0.next;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("=gz.h&7tnP87C]jju&");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
