/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:33:34 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.time.Instant;
import java.time.temporal.TemporalAdjuster;
import java.util.Date;
import java.util.Enumeration;
import java.util.Hashtable;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.MessageContext;
import org.apache.axis.client.AxisClient;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration;
import org.apache.axis.deployment.wsdd.WSDDJAXRPCHandlerInfoChain;
import org.apache.axis.deployment.wsdd.WSDDRequestFlow;
import org.apache.axis.deployment.wsdd.WSDDResponseFlow;
import org.apache.axis.encoding.DeserializationContext;
import org.apache.axis.message.Detail;
import org.apache.axis.message.RPCElement;
import org.apache.axis.message.RPCHeaderParam;
import org.apache.axis.message.RPCParam;
import org.apache.axis.message.SOAPBody;
import org.apache.axis.message.SOAPEnvelope;
import org.apache.axis.soap.SOAPConstants;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIAttrNSImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.Node;
import org.w3c.dom.events.EventListener;
import org.w3c.dom.traversal.NodeFilter;
import org.xml.sax.InputSource;
import org.xml.sax.ext.Attributes2Impl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Detail detail0 = new Detail();
      DeferredDocumentImpl deferredDocumentImpl1 = (DeferredDocumentImpl)detail0.insertBefore(deferredDocumentImpl0, (Node) null);
      deferredDocumentImpl1.getAsync();
      deferredDocumentImpl0.getReadOnly();
      deferredDocumentImpl0.getUserData((Node) deferredDocumentImpl1, "org.apach.wml.dom.WMLTimerElementImpl");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      pSVIDocumentImpl1.getNodeName();
      pSVIDocumentImpl0.getElementsByTagNameNS("EbaMaCfGei", "org.apach.wml.dom.WMLTimerElementImpl");
      EventListener eventListener0 = mock(EventListener.class, new ViolatedAssumptionAnswer());
      pSVIDocumentImpl1.addEventListener("#document", eventListener0, false);
      pSVIDocumentImpl1.getNamespaceURI();
      CoreDocumentImpl.isValidQName("RC_YK", "(Gf/c[APS]0!./+", false);
      PSVIAttrNSImpl pSVIAttrNSImpl0 = new PSVIAttrNSImpl(pSVIDocumentImpl0, "RC_YK", "EbaMaCfGei");
      detail0.setAttributeNode((Attr) null);
      pSVIDocumentImpl0.getVersion();
      pSVIDocumentImpl1.getIdentifier("#document");
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(pSVIDocumentImpl0, "#document");
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl();
      pSVIDocumentImpl0.addEventListener((String) null, (EventListener) null, false);
      pSVIDocumentImpl0.setErrorChecking(false);
      pSVIDocumentImpl1.hasChildNodes();
      pSVIDocumentImpl0.removeIdentifier("(Gf/c[APS]0!./+");
      CDATASectionImpl cDATASectionImpl1 = new CDATASectionImpl(pSVIDocumentImpl0, "org.apach.wml.dom.WMLTimerElementImpl");
      pSVIDocumentImpl0.getDomConfig();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.setStandalone(false);
      Detail detail0 = new Detail();
      DeferredDocumentImpl deferredDocumentImpl1 = (DeferredDocumentImpl)detail0.insertBefore(deferredDocumentImpl0, deferredDocumentImpl0);
      deferredDocumentImpl0.getUserData((Node) deferredDocumentImpl1, "-teyVp;>96>=GZ2<");
      deferredDocumentImpl0.createDeferredProcessingInstruction("lb(7Z}U,*W]PCv%{", "lb(7Z}U,*W]PCv%{");
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(deferredDocumentImpl0, "-teyVp;>96>=GZ2<", "badMaxCached", "02");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      deferredDocumentImpl0.getLocalName();
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      pSVIDocumentImpl1.clone();
      pSVIDocumentImpl1.item(0);
      deferredDocumentImpl1.getElementsByTagNameNS("`d[uZ3qVf&L~~", "-teyVp;>96>=GZ2<");
      detail0.removeAttributeNS("", "");
      deferredDocumentImpl1.getEncoding();
      deferredDocumentImpl0.createDeferredDocument();
      deferredDocumentImpl0.setErrorChecking(false);
      CoreDocumentImpl.isValidQName("T1r:X<OmI?q&25sT{", "h[lvY", false);
      deferredDocumentImpl0.getVersion();
      pSVIDocumentImpl1.setDocumentURI("02");
      deferredDocumentImpl1.getTypeInfo(0);
      pSVIDocumentImpl1.getDomConfig();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseDocument(pSVIDocumentImpl1, (XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)0;
      byteArrayList0.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Detail detail0 = new Detail();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      RPCElement rPCElement0 = new RPCElement("3['/LHKU7W[5}TU}re~", "hrY^:N(Blki;T?Iow", (Object[]) null);
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = null;
      try {
        wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain(rPCElement0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid WSDD element 'hrY^:N(Blki;T?Iow' (wanted 'handlerInfoChain')
         //
         verifyException("org.apache.axis.deployment.wsdd.WSDDElement", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope((SOAPConstants) null);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      InputSource inputSource0 = new InputSource("&l^1_HK");
      MessageContext.getCurrentContext();
      DeserializationContext deserializationContext0 = new DeserializationContext(inputSource0, (MessageContext) null, "call_object");
      SOAPBody sOAPBody0 = new SOAPBody("", "", "&l^1_HK", attributes2Impl0, deserializationContext0, (SOAPConstants) null);
      sOAPBody0.getChildNodes();
      sOAPBody0.getLocalName();
      sOAPEnvelope0.setBody(sOAPBody0);
      sOAPEnvelope0.recycleNode();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-17);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      try { 
        recordTypeMessage0.setResponseObject(sequenceInputStream1, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.io.SequenceInputStream cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Detail detail0 = new Detail();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-77);
      byteArray0[3] = (byte) (-22);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage(":GV8ycCN9", (XBUSSystem) null, ":GV8ycCN9");
      XBUSSystem xBUSSystem1 = null;
      recordTypeMessage1.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText(":GV8ycCN9", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      Detail detail0 = new Detail();
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      recordTypeMessage0.getResponseObject();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=JJ|)l3<}9,oCy(");
      WSDDRequestFlow wSDDRequestFlow0 = new WSDDRequestFlow();
      wSDDRequestFlow0.getParametersTable();
      wSDDRequestFlow0.setOptionsHashtable((Hashtable) null);
      wSDDRequestFlow0.getParametersTable();
      RPCElement rPCElement0 = new RPCElement("elementMapping", "streaming", wSDDRequestFlow0.scopeStrings);
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      WSDDResponseFlow wSDDResponseFlow0 = new WSDDResponseFlow();
      wSDDResponseFlow0.deployToRegistry(wSDDDeployment0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      AxisClient axisClient0 = null;
      try {
        axisClient0 = new AxisClient();
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
         //
         verifyException("org.apache.axis.AxisProperties", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-17);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      pipedOutputStream0.flush();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("IDD", "IDD");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // IDD
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      pipedOutputStream0.flush();
      MockPrintStream mockPrintStream0 = new MockPrintStream("IDD");
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      byteArrayOutputStream0.reset();
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("", true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1404);
      Integer integer1 = new Integer(10);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      int int0 = 18;
      Integer integer2 = new Integer(18);
      try { 
        recordTypeMessage0.setRequestObject(integer2, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Integer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-21);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(133);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("02", (XBUSSystem) null, "lb(7Z}U,*W]PCv%{");
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      byteArrayOutputStream0.reset();
      ByteArrayOutputStream byteArrayOutputStream2 = new ByteArrayOutputStream();
      byteArrayOutputStream2.reset();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream3 = null;
      try {
        pipedOutputStream3 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("noHandler00", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      Hashtable<ByteArrayList, InputStream> hashtable0 = new Hashtable<ByteArrayList, InputStream>();
      Enumeration<InputStream> enumeration0 = hashtable0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      RPCParam rPCParam0 = new RPCParam("f54WBS@aJ6|zMJh.rjH", "f54WBS@aJ6|zMJh.rjH", sequenceInputStream0);
      RPCHeaderParam rPCHeaderParam0 = new RPCHeaderParam(rPCParam0);
      deferredDocumentImpl0.adoptNode(rPCHeaderParam0);
      deferredDocumentImpl0.createDeferredProcessingInstruction("lb(7Z}U,*W]PCv%{", "lb(7Z}U,*W]PCv%{");
      SOAPEnvelope sOAPEnvelope0 = new SOAPEnvelope((SOAPConstants) null);
      sOAPEnvelope0.getValue();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("lb(7Z}U,*W]PCv%{", (XBUSSystem) null, (String) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      Hashtable<ByteArrayList, Object> hashtable1 = new Hashtable<ByteArrayList, Object>();
      byte[] byteArray0 = new byte[0];
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 0);
      // Undeclared exception!
      try { 
        hashtable1.put(byteArrayList0, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[3];
      Instant instant0 = MockInstant.ofEpochMilli((-1L));
      Instant instant1 = MockInstant.plusSeconds(instant0, (byte) (-17));
      Instant instant2 = MockInstant.with(instant1, (TemporalAdjuster) instant0);
      Date date0 = Date.from(instant2);
      recordTypeMessage0.setResponseTimestamp(date0);
      byteArray0[1] = (byte) (-17);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }
}
