/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 07:09:48 GMT 2020
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.483124116028697
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(4751);
      fBProcedureCall0.getInputParam(4751);
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.mapOutParamIndexToPosition(1);
      fBProcedureCall0.getSQL(false);
      // Undeclared exception!
      fBProcedureCall0.getSQL(false);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7249347863977138
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506077));
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam2.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      int int0 = 4806;
      fBProcedureParam2.setType((-14506077));
      fBProcedureParam1.setType(4806);
      fBProcedureParam2.setType((-8335702));
      fBProcedureParam1.setType((-8335702));
      fBProcedureParam1.setType(4806);
      fBProcedureCall0.getInputParam((-14506077));
      fBProcedureParam2.setIndex(4806);
      int int1 = 781;
      fBProcedureCall0.registerOutParam(4806, 781);
      FBProcedureParam fBProcedureParam4 = (FBProcedureParam)fBProcedureParam1.clone();
      String string0 = "}";
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      fBProcedureCall0.addParam(4806, "}");
      fBProcedureParam4.setType(0);
      fBProcedureParam2.setIndex((-8335702));
      int int2 = (-14506077);
      try { 
        fBProcedureParam1.setValue(fBProcedureParam2);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8464927314251784
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "y%Nu\"kcga");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "EcC?l]-kzA");
      fBProcedureParam1.setIndex(3612);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam(18);
      fBProcedureParam2.setValue(fBProcedureParam3);
      FBProcedureParam fBProcedureParam4 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam5 = fBProcedureCall0.addParam(18, "y%Nu\"kcga");
      fBProcedureParam4.clone();
      fBProcedureParam5.setType(2443);
      fBProcedureParam1.setIndex(18);
      FBProcedureParam fBProcedureParam6 = new FBProcedureParam(3612, "EcC?l]-kzA");
      fBProcedureCall0.mapOutParamIndexToPosition(3612);
      FBProcedureParam fBProcedureParam7 = fBProcedureCall0.getInputParam(3612);
      fBProcedureParam7.setType(3612);
      fBProcedureCall0.addOutputParam(fBProcedureParam4);
      fBProcedureParam5.setType(18);
      fBProcedureParam2.setIndex(3612);
      fBProcedureCall0.addInputParam(fBProcedureParam7);
      fBProcedureParam1.setType(18);
      fBProcedureCall0.addInputParam(fBProcedureParam4);
      fBProcedureCall0.mapOutParamIndexToPosition(3612, true);
      // Undeclared exception!
      fBProcedureCall0.registerOutParam((-3359), 1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.022747948420525
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "m?v?>z$x$-D*2<??";
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2, "m?v?>z$x$-D*2<??");
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureParam0.setValue("SELECT * FROM null");
      fBProcedureCall0.getSQL(false);
      fBProcedureParam0.setType(2);
      fBProcedureParam0.setIndex(585);
      fBProcedureCall0.registerOutParam(585, 1554);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(1, "m?v?>z$x$-D*2<??");
      fBProcedureCall0.clone();
      fBProcedureCall0.getOutputParams();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-629), (-629));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -630
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.01174861260514
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "Resource Exception. ");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "EcC?l]-kA");
      fBProcedureParam1.setIndex(3612);
      fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(0, "Resource Exception. ");
      fBProcedureParam2.clone();
      fBProcedureParam3.clone();
      fBProcedureParam1.clone();
      fBProcedureParam1.setIndex(0);
      fBProcedureParam1.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.getInputParam(0);
      fBProcedureParam3.setIndex(3612);
      fBProcedureParam4.setType(3612);
      int int0 = (-3359);
      fBProcedureParam3.setType(18);
      fBProcedureCall0.mapOutParamIndexToPosition(18, true);
      fBProcedureCall0.registerOutParam(0, 18);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.getSQL(false);
      // Undeclared exception!
      fBProcedureCall0.getOutputParam(887);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8395959314279038
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "y%Nu\"kcga");
      int int0 = 18;
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "EcC?l]-kzA");
      fBProcedureParam1.setIndex(3612);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam(18);
      fBProcedureParam2.setValue(fBProcedureParam3);
      FBProcedureParam fBProcedureParam4 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam5 = fBProcedureCall0.addParam(0, "y%Nu\"kcga");
      fBProcedureParam4.clone();
      fBProcedureParam5.setType(2443);
      fBProcedureParam5.clone();
      fBProcedureParam1.setIndex(0);
      FBProcedureParam fBProcedureParam6 = new FBProcedureParam(3612, "EcC?l]-kzA");
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      FBProcedureParam fBProcedureParam7 = fBProcedureCall0.getInputParam(0);
      fBProcedureParam7.setType(3612);
      fBProcedureCall0.addOutputParam(fBProcedureParam4);
      fBProcedureParam5.setType(18);
      fBProcedureParam2.setIndex(0);
      fBProcedureCall0.addInputParam(fBProcedureParam7);
      fBProcedureParam1.setType(18);
      boolean boolean0 = true;
      fBProcedureCall0.addInputParam(fBProcedureParam4);
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      // Undeclared exception!
      fBProcedureCall0.registerOutParam((-3359), 1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0273174811463135
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "Resource Exception. ");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(3612, "EcC?l]-kA");
      fBProcedureParam1.setIndex(3612);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureParam1.clone();
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam(30, "EcC?l]-kA");
      fBProcedureParam2.setType(3612);
      FBProcedureParam fBProcedureParam5 = (FBProcedureParam)fBProcedureParam2.clone();
      fBProcedureParam0.setType(3612);
      fBProcedureParam1.clone();
      fBProcedureParam5.setIndex(887);
      fBProcedureParam5.clone();
      fBProcedureParam2.setIndex(1262);
      fBProcedureCall0.mapOutParamIndexToPosition((-1397));
      fBProcedureParam3.setType((-18627781));
      fBProcedureParam2.setIndex((-1397));
      fBProcedureParam0.setType((-18627781));
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam6 = new FBProcedureParam();
      fBProcedureCall1.addInputParam(fBProcedureParam6);
      fBProcedureParam6.setType((-1400));
      fBProcedureCall0.addInputParam(fBProcedureParam5);
      fBProcedureCall0.mapOutParamIndexToPosition((-1397), false);
      try { 
        fBProcedureCall1.registerOutParam(3612, 3612);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7509797594087249
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(12, "VqEc:?l]-k\"");
      fBProcedureParam0.setValue("VqEc:?l]-k\"");
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.registerOutParam(339, 339);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0419792764029772
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(40, "nr|");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addParam(35, "VqEc:?l]-k\"");
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9958213213455276
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 3612;
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "HY009");
      fBProcedureParam0.setIndex(4522);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "EcC?l]-kA");
      fBProcedureParam1.setIndex(3612);
      fBProcedureParam1.setIndex(1495);
      fBProcedureParam2.setValue(fBProcedureParam1);
      fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(0, "ResourcC Exception. ");
      fBProcedureParam2.setType((-3396));
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam(3612, "ResourcC Exception. ");
      fBProcedureParam3.clone();
      FBProcedureParam fBProcedureParam5 = fBProcedureCall0.addParam(4522, "EcC?l]-kA");
      fBProcedureParam5.clone();
      fBProcedureParam2.setIndex((-1759));
      fBProcedureParam3.setIndex((-14506077));
      fBProcedureParam2.clone();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 4522
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.029355403085682
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.mapOutParamIndexToPosition((-1126));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam((-4614));
      fBProcedureCall0.getOutputParam(1790);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam1.setIndex((-1));
      fBProcedureCall0.mapOutParamIndexToPosition((-4614), true);
      fBProcedureParam1.setIndex(4977);
      fBProcedureParam1.setType((-4614));
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(4977, "");
      fBProcedureParam1.setIndex(4977);
      fBProcedureParam2.clone();
      fBProcedureCall0.mapOutParamIndexToPosition((-1126), true);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureParam2.clone();
      fBProcedureCall0.registerOutParam((-1), 3);
      fBProcedureCall0.getOutputParam((-1126));
      // Undeclared exception!
      fBProcedureCall0.registerOutParam((-12437163), (-1126));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.137793249693829
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition((-480));
      fBProcedureCall0.setName("sel");
      fBProcedureCall0.mapOutParamIndexToPosition(547);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.equals(fBProcedureCall1);
      int int0 = (-1);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.getOutputParam(547);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6717898147644794
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      String string0 = "Resource Exception. ";
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "Resource Exception. ");
      int int0 = 18;
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "EcC?l]-kA");
      fBProcedureParam1.setIndex(1495);
      fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(0, "Resource Exception. ");
      fBProcedureParam3.clone();
      fBProcedureParam2.setType(1495);
      FBProcedureParam fBProcedureParam4 = (FBProcedureParam)fBProcedureParam2.clone();
      fBProcedureParam3.clone();
      FBProcedureParam fBProcedureParam5 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(1495, true);
      fBProcedureParam4.setType(32);
      int int1 = (-3359);
      fBProcedureParam5.setType(0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-3359), 3612);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3360
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4232138576575202
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      int int0 = 0;
      int int1 = 949;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "Hm27y]1GsJnOLm^.WI/~");
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setIndex(949);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int2 = 40;
      String string0 = "EcC?l]-kA";
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(40, "EcC?l]-kA");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(0, "EcC?l]-kA");
      fBProcedureParam2.setType(949);
      fBProcedureParam2.clone();
      fBProcedureParam0.setIndex(40);
      fBProcedureParam2.setIndex((-1587));
      fBProcedureParam2.setIndex(1792);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam1.setType((-134045580));
      fBProcedureCall0.getOutputParam(40);
      fBProcedureParam3.setType((-1));
      fBProcedureParam0.clone();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 40
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9577931381948586
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getInputParams();
      int int0 = 547;
      String string0 = "p{|";
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(547, "p{|");
      fBProcedureParam1.setIndex(547);
      fBProcedureCall1.addParam(547, "tU@y{%aV<U{,Mn");
      fBProcedureCall0.clone();
      fBProcedureParam1.setType(547);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.getOutputParam(547);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(547, 893);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 547
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8767442714967006
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506077));
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam2.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam2.setType((-14506077));
      fBProcedureParam1.setType(4806);
      fBProcedureParam2.setType((-8335702));
      fBProcedureParam1.setType((-8335702));
      fBProcedureParam1.setType(4806);
      fBProcedureParam2.setIndex(4806);
      fBProcedureCall0.registerOutParam(4806, 781);
      FBProcedureParam fBProcedureParam4 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam1.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      FBProcedureParam fBProcedureParam5 = fBProcedureCall0.addParam(4806, "}");
      fBProcedureParam4.setType(0);
      fBProcedureParam5.clone();
      fBProcedureParam1.setIndex((-14506077));
      fBProcedureParam5.setIndex(781);
      fBProcedureParam3.clone();
      assertEquals(781, fBProcedureParam2.getType());
      
      fBProcedureParam4.clone();
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam6 = fBProcedureCall0.getOutputParam((-14506077));
      assertEquals((-14506077), fBProcedureParam6.getIndex());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5481155268740174
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(801);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(801, 801);
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4609707477218155
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(140, "il{");
      fBProcedureCall0.registerOutParam((-1), 140);
      assertTrue(FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253400418642049
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(258);
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(258);
      fBProcedureCall0.getSQL(true);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.hashCode();
      assertTrue(fBProcedureCall0.equals((Object)fBProcedureCall1));
      
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall3 = (FBProcedureCall)fBProcedureCall2.clone();
      fBProcedureCall3.setName("SELECT * FROM null");
      fBProcedureCall0.equals(fBProcedureCall3);
      fBProcedureCall2.getOutputParam(258);
      fBProcedureCall3.hashCode();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall2.addParam(5818, "r0@@V9Spq%C>@Vt");
      fBProcedureCall0.getInputParam(340);
      fBProcedureCall1.getInputParam(642);
      fBProcedureCall2.getOutputParams();
      assertFalse(fBProcedureCall2.equals((Object)fBProcedureCall3));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0609581504393426
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(8, "NRt 6K]");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(806, "NRt 6K]");
      assertEquals(806, fBProcedureParam1.getPosition());
      
      Object object25 = fBProcedureCall0.clone();
      assertTrue(object25.equals((Object)fBProcedureCall0));
      assertNotSame(object25, fBProcedureCall0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3, "$$");
      assertEquals(3, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.118422552094081
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506066));
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam2.clone();
      fBProcedureParam3.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam2.setType((-14506066));
      fBProcedureParam1.setType((-8335702));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureCall0.registerOutParam(4755, 781);
      fBProcedureParam1.clone();
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(23, ".f");
      fBProcedureParam4.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam4);
      fBProcedureParam0.setIndex((-4456));
      fBProcedureParam4.setIndex(781);
      fBProcedureParam3.clone();
      fBProcedureParam0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(18);
      fBProcedureParam2.setIndex((-4456));
      fBProcedureCall0.clone();
      try { 
        fBProcedureCall0.registerOutParam(4755, 781);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.59342423717389
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(6312, "b{r_zbzN5,hl'ySa4B");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      fBProcedureCall0.registerOutParam(4, 13);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.37677016125643675
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1), "NRt 6K]");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7099562292895303
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setType(2441);
      fBProcedureParam2.setIndex((-14506062));
      fBProcedureParam2.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureCall0.getInputParam((-14506062));
      fBProcedureParam2.setType((-14506062));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam1.setIndex((-14506062));
      fBProcedureCall0.registerOutParam(4755, 781);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam1.setType((-14506062));
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(0, "gd@^(yr3VX:L[");
      fBProcedureParam1.clone();
      fBProcedureParam4.setIndex(0);
      fBProcedureParam3.setIndex(4978);
      FBProcedureParam fBProcedureParam5 = (FBProcedureParam)fBProcedureParam4.clone();
      assertEquals(0, fBProcedureParam5.getPosition());
      
      fBProcedureParam3.setIndex(3);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(gd@^(yr3VX:L[)", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2227793161934695
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1, "NRt 6Kv]");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(5);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall3.addParam(2204, "NRt 6Kv]");
      //  // Unstable assertion: assertEquals("NRt 6Kv]", fBProcedureParam0.getParamValue());
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam((-1));
      //  // Unstable assertion: assertEquals(1, fBProcedureParam1.getPosition());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(2204);
      //  // Unstable assertion: assertEquals(887, fBProcedureParam2.getType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3917397695183338
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      int int0 = (-14506066);
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      int int1 = (-15);
      fBProcedureParam1.setIndex((-15));
      int int2 = 4788;
      fBProcedureParam1.setType(4788);
      fBProcedureParam2.setIndex(4788);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4788, 781);
      fBProcedureCall0.getInputParam(4788);
      try { 
        fBProcedureParam1.setValue(fBProcedureParam0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.7356219397587946
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(31, "NRt 6K]");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals("NRt 6K]", fBProcedureParam0.getParamValue());
      assertEquals(31, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8403407956415927
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setIndex((-15));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4755, 781);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam1.setIndex(954);
      fBProcedureParam3.setIndex((-32688997));
      fBProcedureCall0.addParam(0, ".f");
      fBProcedureParam3.setType(1162);
      fBProcedureParam3.setIndex(63);
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam((-15), ".f");
      fBProcedureParam4.setIndex((-245));
      fBProcedureParam3.clone();
      FBProcedureParam fBProcedureParam5 = new FBProcedureParam(4755, ".f");
      FBProcedureParam fBProcedureParam6 = new FBProcedureParam(0, "Specified parameter does not exist.");
      fBProcedureParam3.setIndex((-14506066));
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      assertEquals(781, fBProcedureParam2.getType());
      
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertTrue(list0.contains(fBProcedureParam0));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.setName("070");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      //  // Unstable assertion: assertFalse(boolean0);
      
      FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall1.clone();
      //  // Unstable assertion: assertTrue(fBProcedureCall2.equals((Object)fBProcedureCall0));
      
      fBProcedureCall0.getInputParams();
      //  // Unstable assertion: assertNotSame(fBProcedureCall0, fBProcedureCall1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7529869459350949
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(6246);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(2718);
      fBProcedureParam1.clone();
      fBProcedureParam1.setType(887);
      fBProcedureCall0.mapOutParamIndexToPosition(2718);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall1.clone();
      // Undeclared exception!
      fBProcedureCall0.clone();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.861100572233491
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3612, "HY009");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "EcC?l]-kA");
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam(1495, "EcC?l]-kA");
      fBProcedureParam3.setIndex(18);
      fBProcedureParam3.clone();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addOutputParam(fBProcedureParam1);
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(40, "HY009");
      fBProcedureParam2.setType((-3396));
      fBProcedureParam3.clone();
      fBProcedureParam1.clone();
      fBProcedureParam0.clone();
      fBProcedureParam1.setIndex((-1759));
      fBProcedureParam0.setIndex((-1759));
      fBProcedureParam4.clone();
      fBProcedureCall1.getSQL(false);
      fBProcedureCall0.addInputParam(fBProcedureParam3);
      fBProcedureCall0.registerOutParam((-1759), (-1089));
      fBProcedureCall1.addOutputParam(fBProcedureParam1);
      // Undeclared exception!
      fBProcedureCall0.getInputParam(1495);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9027480578409661
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setIndex((-15));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4755, 781);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam3.setType(781);
      fBProcedureParam1.setIndex((-120));
      fBProcedureParam1.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(0, "}");
      fBProcedureParam3.setType(1162);
      fBProcedureParam3.setIndex(63);
      fBProcedureParam4.setIndex((-15));
      fBProcedureParam0.clone();
      FBProcedureParam fBProcedureParam5 = (FBProcedureParam)fBProcedureParam2.clone();
      fBProcedureCall0.getSQL(true);
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertTrue(list0.contains(fBProcedureParam5));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9433483923290392
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(2);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2);
      assertEquals((-1), fBProcedureParam0.getIndex());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9830691631689572
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getOutputParam(258);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getInputParam(258);
      fBProcedureCall0.getSQL(true);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.addParam(0, "uSS");
      fBProcedureCall1.getInputParam(111);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall3 = (FBProcedureCall)fBProcedureCall2.clone();
      FBProcedureCall fBProcedureCall4 = new FBProcedureCall();
      fBProcedureCall1.equals(fBProcedureCall4);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall3.addParam(0, "SELECT * FROM null");
      fBProcedureCall4.addInputParam(fBProcedureParam1);
      FBProcedureCall fBProcedureCall5 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall1.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1025391682990686
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1, " not set an ");
      fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "NRt 6Kv]");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      fBProcedureCall1.setName(" not set an ");
      FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall1.clone();
      fBProcedureCall2.getName();
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.registerOutParam(5, 30);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.394616427071531
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("8");
      fBProcedureCall0.setName("");
      fBProcedureCall0.getOutputParam(2476);
      fBProcedureCall0.getOutputParam(2476);
      fBProcedureCall0.clone();
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getOutputParam(1510);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getName();
      fBProcedureCall0.addParam(2476, "");
      fBProcedureCall0.getName();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.equals("");
      fBProcedureCall0.getInputParam(1510);
      fBProcedureCall0.mapOutParamIndexToPosition(795);
      fBProcedureCall0.equals("SELECT * FROM ");
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(0, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5859341131926616
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      int int0 = (-14506066);
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setIndex((-15));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4755, 781);
      Object object0 = fBProcedureParam1.clone();
      int int1 = 0;
      String string0 = ".f";
      fBProcedureParam2.setIndex(0);
      fBProcedureParam1.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      try { 
        fBProcedureParam2.setValue(object0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9172155185650601
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(1, "SELECT * FROM null");
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall4 = new FBProcedureCall();
      fBProcedureCall1.equals("tE:S7@T$N+C&Rm$AoQ");
      int int0 = 887;
      fBProcedureParam0.setType(1);
      fBProcedureParam0.setType((-567));
      int int1 = (-1795);
      try { 
        fBProcedureCall1.registerOutParam(887, (-1795));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5859341131926616
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam1.setIndex(1841);
      fBProcedureParam2.setIndex((-14506077));
      fBProcedureParam2.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setType((-14506077));
      fBProcedureParam2.setType((-14506077));
      fBProcedureParam1.setType(4806);
      fBProcedureParam2.setType((-8335702));
      fBProcedureParam1.setType((-8335702));
      fBProcedureParam1.setType(4806);
      fBProcedureParam2.setIndex(4806);
      fBProcedureCall0.registerOutParam(4806, 781);
      fBProcedureParam1.clone();
      int int0 = 0;
      String string0 = ".f";
      fBProcedureParam2.setIndex(781);
      fBProcedureCall0.mapOutParamIndexToPosition((-1565), true);
      try { 
        fBProcedureParam2.setValue(".f");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8560362344170938
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setIndex((-15));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4755, 781);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam3.setType(781);
      fBProcedureParam1.setIndex(949);
      fBProcedureParam3.setType(949);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(0, "}");
      fBProcedureParam3.setType(1162);
      fBProcedureParam3.setIndex(63);
      fBProcedureParam4.setIndex((-15));
      assertEquals(0, fBProcedureParam4.getPosition());
      
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      assertNotSame(fBProcedureCall1, fBProcedureCall0);
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9184277849930976
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(54, "NRt 6K]");
      assertEquals(54, fBProcedureParam0.getPosition());
      assertEquals("NRt 6K]", fBProcedureParam0.getParamValue());
      
      Object object25 = fBProcedureCall0.clone();
      assertNotSame(object25, fBProcedureCall0);
      assertTrue(object25.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-460), "hwT*2r$jUJ*sxa+T7");
      fBProcedureParam0.setIndex((-427));
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -460
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-854), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(2731, true);
      fBProcedureCall0.mapOutParamIndexToPosition((-174));
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1191));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1192
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8735353007490358
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setIndex((-15));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4755, 781);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam1.setIndex(954);
      fBProcedureParam3.setIndex((-32688997));
      fBProcedureCall0.addParam(0, ".f");
      fBProcedureParam3.setType(1162);
      fBProcedureParam3.setIndex(63);
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam((-15), ".f");
      fBProcedureParam4.setIndex((-245));
      fBProcedureParam3.clone();
      fBProcedureParam4.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      FBProcedureParam fBProcedureParam5 = null;
      try {
        fBProcedureParam5 = new FBProcedureParam(4755, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.789475513382878
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "VqEc:?l]-k\"";
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(12, "VqEc:?l]-k\"");
      fBProcedureCall0.getSQL(true);
      int int0 = 592;
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      int int1 = 6836;
      fBProcedureCall0.addParam(6836, "+kKDcTJsY]");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.registerOutParam(12, 592);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5607104090414068
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-2910);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-2910));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      int int1 = (-1325);
      fBProcedureCall1.getOutputParam((-2910));
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(1445);
      try { 
        fBProcedureParam0.setValue(fBProcedureParam1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.712376994396716
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "VqEc:?l]-k\"";
      int int0 = 20;
      fBProcedureCall0.addParam(20, "VqEc:?l]-k\"");
      fBProcedureCall0.getSQL(true);
      int int1 = 592;
      try { 
        fBProcedureCall0.registerOutParam(339, 339);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-752), "il{");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -752
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7249347863977138
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setIndex((-14506066));
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      fBProcedureParam1.setIndex((-15));
      fBProcedureParam1.setType(4755);
      fBProcedureParam2.setIndex(4755);
      fBProcedureParam0.setType((-15));
      fBProcedureCall0.registerOutParam(4755, 781);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam1.setIndex(954);
      fBProcedureParam3.setIndex((-32688997));
      fBProcedureCall0.addParam(0, ".f");
      fBProcedureParam3.setType(1162);
      fBProcedureParam3.setIndex(63);
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam((-15), ".f");
      fBProcedureParam4.setIndex((-245));
      fBProcedureParam3.clone();
      fBProcedureParam4.clone();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam5 = null;
      try {
        fBProcedureParam5 = new FBProcedureParam(4755, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object10 = new Object();
      Object object11 = new Object();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(41, "");
      assertEquals(41, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-2117), "bg{");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2117
         //
         verifyException("java.util.Vector", e);
      }
  }
}
