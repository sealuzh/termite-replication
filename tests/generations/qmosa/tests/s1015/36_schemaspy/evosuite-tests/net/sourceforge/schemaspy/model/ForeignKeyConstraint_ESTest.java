/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:01:43 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.ResourceBundle;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2735023240769006
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "D)N@", 65, 2);
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      System.setCurrentTimeMillis((-1108L));
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4274162572375957
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 65, 65);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.shouldAllThrowIOExceptions();
      List<TableColumn> list1 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint.toString(list1);
      foreignKeyConstraint0.getDeleteRuleName();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4190571351255987
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w{>VfG[dhR0%~{Ocq", 65, 1);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      
      foreignKeyConstraint0.getChildColumns();
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string2);
      assertEquals(65, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.446718530861712
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Z0", 65, 470);
      foreignKeyConstraint0.getParentColumns();
      System.setCurrentTimeMillis(1L);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "THEN", 500, 2);
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint1.getChildColumns();
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(500, foreignKeyConstraint1.getUpdateRule());
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      assertEquals((-6), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "GYc31R9hQj", (byte)3, (byte)3);
      Config config0 = Config.getInstance();
      foreignKeyConstraint0.isRestrictDelete();
      Config config1 = Config.getInstance();
      config0.getDb();
      config1.getDriverPath();
      config1.setMaxDetailedTabled((byte)3);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte)3);
      config1.setPort(integer0);
      Integer integer1 = new Integer((byte)3);
      Config config2 = Config.getInstance();
      Config.setInstance(config2);
      Config config3 = Config.getInstance();
      config3.getGraphvizDir();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      config5.setGraphvizDir("UTF-8");
      Config config6 = Config.getInstance();
      config3.setGraphvizDir("UTF-8");
      config3.setEvaluateAllEnabled(true);
      config6.setHost("UTF-8");
      config3.setDbType("UTF-8");
      config2.getDbSpecificOptions();
      config4.getDescription();
      config2.setEvaluateAllEnabled(true);
      Config config7 = Config.getInstance();
      config7.setHost("UTF-8");
      config4.getLogLevel();
      config6.setDb("UTF-8");
      config0.getLogLevel();
      config6.setCss("UTF-8");
      config2.setEncodeCommentsEnabled(true);
      config4.setDb("UTF-8");
      config0.setMaxDetailedTabled((byte)3);
      Config config8 = Config.getInstance();
      config8.setDb("UTF-8");
      assertFalse(config8.isDbHelpRequired());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HVAW+:5+", (byte)3, (byte)3);
      Config config0 = Config.getInstance();
      config0.isHighQuality();
      Config config1 = Config.getInstance();
      config1.getDb();
      config1.getDriverPath();
      config1.setMaxDetailedTabled((byte)3);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte)3);
      config1.setPort(integer0);
      Integer integer1 = new Integer((byte)3);
      Config config2 = Config.getInstance();
      Config.setInstance(config2);
      Config config3 = Config.getInstance();
      config3.getGraphvizDir();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      config5.setGraphvizDir("UTF-8");
      Config config6 = Config.getInstance();
      config3.setGraphvizDir("UTF-8");
      config3.setEvaluateAllEnabled(false);
      config4.setHost("&~");
      config6.setHost("UTF-8");
      config3.setDbType("UTF-8");
      config2.getDbSpecificOptions();
      config4.getDescription();
      config2.setEvaluateAllEnabled(false);
      Config config7 = Config.getInstance();
      config7.setHost("UTF-8");
      config1.getLogLevel();
      config6.setDb("UTF-8");
      config0.getLogLevel();
      config6.setCss("UTF-8");
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "BY";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "BY", (-2729), (-2729));
      foreignKeyConstraint0.isCascadeOnDelete();
      String string1 = "CON)TI?NUE";
      String string2 = "R";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("BY", "CON)TI?NUE", "R");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"BY\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)102;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " ", (byte)60, (-10));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "A^P,E}t", (byte)0, 0);
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint1.getDeleteRule();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("65[o6L");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("65[o6L");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", (-2742), 744);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Da");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", 744, (-2574));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Table table0 = null;
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1608, 0);
      foreignKeyConstraint0.addChildColumn(tableColumn1);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      // Undeclared exception!
      try { 
        tableColumn0.update(tableColumnMeta3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.offer((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4200467442300027
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 65, 0);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildColumns();
      System.setCurrentTimeMillis(0);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte byte0 = (byte) (-51);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "i;[Ok?Q%*y-qmaPLo", (byte) (-51), 5690);
      Config config0 = Config.getInstance();
      foreignKeyConstraint0.isImplied();
      Config.getInstance();
      Config config1 = Config.getInstance();
      config1.getSchemas();
      config1.setDb("4-w7e?XoIBHe@~");
      config0.getMaxDbThreads();
      // Undeclared exception!
      try { 
        ResourceBundle.Control.getNoFallbackControl((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle$Control", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.013990035752833
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-1278), 131);
      foreignKeyConstraint0.getName();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean1 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-1278), foreignKeyConstraint0.getUpdateRule());
      assertEquals(131, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte byte0 = (byte) (-58);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "CxKC7o}", (byte) (-58), (byte) (-58));
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      Config config0 = Config.getInstance();
      Config.getInstance();
      Config config1 = Config.getInstance();
      config1.getSchemas();
      config1.setDb("4-w7e?XoIBHe@~");
      config0.getMaxDbThreads();
      // Undeclared exception!
      try { 
        ResourceBundle.Control.getNoFallbackControl((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle$Control", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)60, 1);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "LEVEL", 1, (byte)60);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint1.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint1.getParentColumns();
      System.setCurrentTimeMillis((byte)60);
      foreignKeyConstraint1.getUpdateRule();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)102;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " + ", (byte)60, (-10));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "A^P,E}t", (byte)0, (byte)60);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint1.getDeleteRule();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.createFolder(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("65[o6L");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Da", (-2742), 744);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Da");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "(!,p7>BXX>\"cu8%", 744, (-2574));
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(744, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-2574), foreignKeyConstraint1.getDeleteRule());
      assertEquals(60, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HVAWs<+:l5+", (byte)3, (byte)3);
      Config config0 = Config.getInstance();
      config0.isHighQuality();
      Config config1 = Config.getInstance();
      config1.getDb();
      config1.getDriverPath();
      config1.setMaxDetailedTabled((byte)3);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte)3);
      config1.setPort(integer0);
      Integer integer1 = new Integer((byte)3);
      Config config2 = Config.getInstance();
      Config.setInstance(config2);
      Config config3 = Config.getInstance();
      config3.getGraphvizDir();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      Config config6 = Config.getInstance();
      config3.setGraphvizDir("UTF-8");
      config3.setEvaluateAllEnabled(false);
      config6.setHost("UTF-8");
      config3.setDbType("UTF-8");
      config2.getDbSpecificOptions();
      config4.getDescription();
      config2.setEvaluateAllEnabled(false);
      Config config7 = Config.getInstance();
      config7.setHost("UTF-8");
      config1.getLogLevel();
      config6.setDb("UTF-8");
      config0.getLogLevel();
      config6.setCss("UTF-8");
      config3.setDb("UTF-8");
      config4.setMaxDetailedTabled((byte)3);
      Config.getInstance();
      config5.setDb(">>i}LhotH");
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " + ", 1024, (-1656));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "' ", 65, 1);
      foreignKeyConstraint1.getParentColumns();
      List<TableColumn> list0 = foreignKeyConstraint1.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint.toString(list0);
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-1656), int0);
      
      ForeignKeyConstraint.toString(list0);
      assertEquals(65, foreignKeyConstraint1.getUpdateRule());
      assertEquals(1, foreignKeyConstraint1.getDeleteRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)60, 0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "LEVEL", 0, (byte)60);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint1.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint1.getParentColumns();
      System.setCurrentTimeMillis((byte)60);
      foreignKeyConstraint1.getUpdateRule();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)34;
      byteArray0[9] = (byte) (-116);
      byteArray0[19] = (byte) (-116);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Dia");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Dia");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Dia");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Dia");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Dia");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Dia");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Dia");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Dia", (byte)0, 109);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(109, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")CEjEN<lTnIG2S'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "O");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN<lTnIG2S'");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(!,.;BX\">Fc38%");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "(!,.;BX\">Fc38%");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("65[o6L");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "(!,.;BX\">Fc38%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,.;BX\">Fc38%");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,.;BX\">Fc38%");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, ")CEjEN<lTnIG2S'");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "O");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", 788, (-2574));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W}:lpF", (byte) (-97), (byte) (-97));
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config1.getDb();
      config1.getDriverPath();
      config0.getSchemas();
      config1.setMaxDetailedTabled(33);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte) (-97));
      Config config2 = Config.getInstance();
      Config config3 = Config.getInstance();
      config3.getGraphvizDir();
      Config.getInstance();
      Config.getInstance();
      Config.getInstance();
      config3.setEvaluateAllEnabled(true);
      String[] stringArray0 = new String[20];
      Config config4 = new Config();
      Config.setInstance(config4);
      config2.setDescription((String) null);
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = null;
      stringArray0[4] = "e5sto,2Qz1$@$9";
      stringArray0[5] = "ty_.`qnU5wp:kj";
      stringArray0[6] = "UTF-8";
      Config config5 = null;
      try {
        config5 = new Config(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("65[o6L");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(!,p7>BXX>\"cu8%");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", (-2742), 744);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Da");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", 744, (-2574));
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Restrict delete:\n Parent cannot be deleted if children exist", 131, 2);
      foreignKeyConstraint0.getName();
      System.setCurrentTimeMillis(131);
      foreignKeyConstraint0.getName();
      assertEquals(131, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)60;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte)60, 0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "LEVEL", (-244), 2850);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint1.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      System.setCurrentTimeMillis((byte)60);
      int int0 = foreignKeyConstraint1.getUpdateRule();
      assertEquals(2850, foreignKeyConstraint1.getDeleteRule());
      assertEquals((-244), int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "P:", (byte)3, (byte)3);
      Config config0 = Config.getInstance();
      foreignKeyConstraint0.isNullOnDelete();
      Config config1 = Config.getInstance();
      config1.getDb();
      config1.getDriverPath();
      config1.setMaxDetailedTabled((byte)3);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte)3);
      config1.setPort(integer0);
      Integer integer1 = new Integer((byte)3);
      Config config2 = Config.getInstance();
      Config.setInstance(config2);
      Config config3 = new Config();
      config3.getGraphvizDir();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      config5.setGraphvizDir("UTF-8");
      Config config6 = new Config();
      config3.setGraphvizDir("UTF-8");
      config3.setEvaluateAllEnabled(false);
      config6.setHost("UTF-8");
      config3.setDbType("UTF-8");
      config2.getDbSpecificOptions();
      config4.getDescription();
      config2.setEvaluateAllEnabled(false);
      Config config7 = Config.getInstance();
      config7.setHost("UTF-8");
      config4.getLogLevel();
      config6.setDb("UTF-8");
      config0.getLogLevel();
      config6.setCss("UTF-8");
      config2.setEncodeCommentsEnabled(false);
      config1.setDb((String) null);
      config0.setMaxDetailedTabled((byte)3);
      Config config8 = Config.getInstance();
      config8.setDb("UTF-8");
      assertSame(config8, config1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W}:lpF", (byte) (-97), (byte) (-97));
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config1.getDb();
      config1.getDriverPath();
      config0.getSchemas();
      config1.setMaxDetailedTabled(33);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte) (-97));
      Config config2 = Config.getInstance();
      Config config3 = Config.getInstance();
      config3.getGraphvizDir();
      Config.getInstance();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      config3.setEvaluateAllEnabled(true);
      config5.setHost("UTF-8");
      config5.getDescription();
      config5.setDb("UTF-8");
      config2.setEncodeCommentsEnabled(true);
      config4.setDb("o");
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      config0.setMaxDetailedTabled(33);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config6 = Config.getInstance();
      config6.setDb("UTF-8");
      foreignKeyConstraint0.isNullOnDelete();
      config6.getMaxDbThreads();
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      assertNotNull(resourceBundle_Control0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "\"2` It04#Vh;\"");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", 744, (-2535));
      foreignKeyConstraint0.getChildTable();
      assertEquals(744, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-2535), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "l7?uQ=>i]=`7Pp");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", 744, (-2535));
      foreignKeyConstraint0.getChildTable();
      assertEquals(744, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-2535), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")CEjEN&<FlTnBG2tS'");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Da");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Da");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "l7?uQ=>i]=`7Pp");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("65[o6L");
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l7?uQ=>i]=`7Pp");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, ")CEjEN&<FlTnBG2tS'");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Da");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "E2Z+N%3:E3Q&V", 744, (-2535));
      foreignKeyConstraint0.getChildTable();
      assertEquals(744, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-2535), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w{>VfG[dhR0%~{Ocq", 3, 3);
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W}:lpF", (byte) (-102), (byte) (-102));
      Config config0 = Config.getInstance();
      Config config1 = Config.getInstance();
      config1.getDb();
      config1.getDriverPath();
      config0.getSchemas();
      config1.setMaxDetailedTabled(33);
      config0.setDb("UTF-8");
      Integer integer0 = new Integer((byte) (-102));
      Config config2 = Config.getInstance();
      Config config3 = Config.getInstance();
      config3.getGraphvizDir();
      Config config4 = Config.getInstance();
      Config config5 = Config.getInstance();
      Config config6 = Config.getInstance();
      config3.setEvaluateAllEnabled(true);
      config6.setHost("UTF-8");
      config6.setDbType("UTF-8");
      config6.getDescription();
      config2.setEvaluateAllEnabled(true);
      config4.setHost("UTF-8");
      config2.getDescription();
      config0.setDb("^b");
      config6.setEncodeCommentsEnabled(false);
      config1.setDb("W}:lpF");
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      config0.setMaxDetailedTabled(33);
      Config.getInstance();
      Config.getInstance();
      config5.setDb("UTF-8");
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-102), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-102), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      tableColumn0.unlinkChildren();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn0.setShortType("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta3);
      tableColumn0.unlinkChildren();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn2, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "D)N@", 102, 1);
      foreignKeyConstraint0.isCascadeOnDelete();
      String string0 = "CON)TI?NUE";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("CON)TI?NUE", "6vxJ?.gdD=hm27Gs2n", "CON)TI?NUE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"CON)TI?NUE\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.removeParent((TableColumn) null);
      tableColumn0.setComments("a|FDuLh .h");
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0, (-4), (-145));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta1);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkChildren();
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
