/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:02:06 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactoryArray0[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(64508);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Chs}hh..8zQ");
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory((int) (byte)0, queueConnectionFactory0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      connectionFactories0.isValid();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, false);
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Chs}hh..8zQ");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      connectionFactories0.getQueueConnectionFactory((int) (byte)0);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hs}hh.8zQ");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hs}hh.8zQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hs}hh.8zQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/B${hd>VweYN0B${hd>VweYN");
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "hs}hh.8zQ");
      MockFile mockFile0 = new MockFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      file0.toURL();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hs}hh.8zQ");
      mockFile0.toURL();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/0=u3W 9rH.BQFxva1B${hd>VweYN");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/0=u3W 9r.hBQFxva1B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "B${hd>VweYN");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "hs}hh.8zQ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory((int) (byte)0, xATopicConnectionFactory0);
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "B${d>VweYN");
      MockFile mockFile0 = new MockFile("org.exolab.castor.mapping.loader.CollectionHandlers$Info", "B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "B${d>VweYN");
      Marshaller.enableDebug = true;
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Ig+?K^");
      Marshaller.enableDebug = false;
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Ig+?K^");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mk");
      connectionFactories0.setTopicConnectionFactory((int) (byte)0, topicConnectionFactory0);
      assertEquals(1, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      ConnectionFactory connectionFactory1 = connectionFactories0.getConnectionFactory(0);
      assertSame(connectionFactory1, connectionFactory0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl3);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl2);
      locator2Impl0.setLineNumber(1242);
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      attributes2Impl2.getQName(1242);
      attributes2Impl2.getIndex("");
      attributes2Impl1.getValue(6);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl1);
      locator2Impl3.getEncoding();
      locator2Impl3.setXMLVersion("1gLKn");
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl1);
      locator2Impl1.getLineNumber();
      locator2Impl3.setXMLVersion("[Lj6^");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl0);
      attributes2Impl2.getValue(6);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl1);
      attributes2Impl0.getType((-776));
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[10];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory(0);
      assertEquals(10, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
      connectionFactories0.getTopicConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      assertEquals(0, connectionFactoryArray0.length);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      attributes2Impl2.setAttributes(attributes2Impl3);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl2);
      locator2Impl0.setLineNumber(1242);
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      attributes2Impl2.getQName(1242);
      attributes2Impl2.getIndex("");
      locator2Impl3.getPublicId();
      attributes2Impl1.getValue(6);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl1);
      locator2Impl3.getEncoding();
      locator2Impl3.setXMLVersion("1gLKn");
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl1);
      locator2Impl1.getLineNumber();
      locator2Impl3.setXMLVersion("[Lj6^");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl0);
      attributes2Impl2.getValue(6);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl1);
      attributes2Impl0.getType((-776));
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[10];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.setConnectionFactory(1, connectionFactory0);
      assertEquals(10, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactory0.setName("=\"");
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      objectArray0[0] = (Object) "S'bkCR";
      objectArray0[1] = (Object) null;
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "";
      Object object1 = new Object();
      objectArray1[2] = objectArray0[1];
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "S'bkCR";
      Object object2 = new Object();
      objectArray1[6] = (Object) "";
      objectArray1[7] = object0;
      Object object3 = new Object();
      Object object4 = new Object();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(1, xAQueueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      Object[] objectArray1 = new Object[8];
      Object object0 = new Object();
      StringReader stringReader0 = new StringReader("K;m}s@j4l0qy[E");
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[2];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory1;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory2 = new XAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory2);
      assertEquals(2, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList8);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList9, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList11, (Collection<Locale>) linkedList2);
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList12, (Collection<Locale>) list1, locale_FilteringMode1);
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList12, (Collection<Locale>) list0, locale_FilteringMode3);
      LinkedList<Locale> linkedList16 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList17 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList18 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList19 = new LinkedList<Locale.LanguageRange>();
      connectionFactories0.getXAQueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      assertNull(topicConnectionFactory1.getName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl0);
      attributes2Impl1.getType((String) null, (String) null);
      // Undeclared exception!
      try { 
        attributes2Impl1.isDeclared("[null]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such attribute: [null]
         //
         verifyException("org.xml.sax.ext.Attributes2Impl", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "S'bkCR";
      Object object0 = new Object();
      Object[] objectArray1 = new Object[27];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[2] = objectArray0[1];
      objectArray1[4] = (Object) "S-*!D{aQ=@8#(YEn5fy";
      objectArray1[0] = (Object) "R";
      Object object2 = new Object();
      objectArray1[6] = (Object) "S'bkCR";
      Object object3 = new Object();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[6];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      assertEquals(6, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = MockFile.createTempFile("fr*\"", "fr*\"");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "fr*\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      file0.deleteOnExit();
      file0.toURI();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "fr*\"");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(file0);
      Object object0 = new Object();
      mockPrintWriter0.println(false);
      StringReader stringReader0 = new StringReader("(K*");
      StringReader stringReader1 = new StringReader("!f5~#Z,p#'!qpl");
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = MockFile.createTempFile("fr*\"", "fr*\"");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "fr*\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      file0.deleteOnExit();
      file0.toURI();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "fr*\"");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(file0);
      Object object0 = new Object();
      mockPrintWriter0.println(false);
      StringReader stringReader0 = new StringReader("fr*\"");
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("(EB${d>VweYN", "(EB${d>VweYN");
      file0.createNewFile();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "(EB${d>VweYN";
      objectArray0[1] = (Object) null;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/(EB${d>VweYN0(EB${d>VweYN");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      objectArray0[2] = (Object) file0;
      objectArray0[3] = (Object) file0;
      objectArray0[4] = (Object) file0;
      objectArray0[5] = (Object) connectionFactories0;
      objectArray0[7] = (Object) connectionFactories0;
      PrintWriter printWriter0 = mockPrintWriter0.printf((Locale) null, "(EB${d>VweYN", objectArray0);
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) mockPrintWriter0;
      objectArray1[1] = (Object) file0;
      objectArray1[2] = (Object) printWriter0;
      objectArray1[3] = (Object) "(EB${d>VweYN";
      objectArray1[4] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray1[5] = object0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      XAConnectionFactory xAConnectionFactory1 = connectionFactories0.getXAConnectionFactory(0);
      assertNull(xAConnectionFactory1.getName());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      String string0 = "";
      xATopicConnectionFactory0.setName("");
      connectionFactories0.addQueueConnectionFactory((QueueConnectionFactory) null);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.isValid();
      int int0 = 1890;
      try { 
        connectionFactories0.addXATopicConnectionFactory(1890, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1890, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "S'bkCR";
      Object object0 = new Object();
      Object[] objectArray1 = new Object[21];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[2] = objectArray0[1];
      objectArray1[4] = (Object) "org.exolab.castor.arer";
      objectArray1[0] = (Object) "split-cdata-sections";
      Object object2 = new Object();
      objectArray1[6] = (Object) "S'bkCR";
      objectArray1[7] = object0;
      Object object3 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "split-cdata-sections");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter0.print((double) (-204));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter1.print((double) (-204));
      mockPrintWriter1.print(false);
      mockPrintWriter0.println(73);
      mockPrintWriter1.print((-72L));
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter2.println(true);
      mockPrintWriter1.print('#');
      mockPrintWriter2.println((-204));
      PrintWriter printWriter0 = mockPrintWriter0.append('#');
      printWriter0.println(true);
      printWriter0.print('#');
      mockPrintWriter0.print(115);
      printWriter0.flush();
      printWriter0.write(73);
      printWriter0.print('#');
      printWriter0.close();
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.print((Object) mockPrintWriter2);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter("mapper.knvhlidFrmeverIJdex");
      printWriter0.println("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.println();
      mockPrintWriter3.print(true);
      mockPrintWriter1.print((long) 73);
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[9];
      xAConnectionFactoryArray0[0] = xAConnectionFactory1;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory1;
      xAConnectionFactoryArray0[3] = xAConnectionFactory1;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory1;
      xAConnectionFactoryArray0[6] = xAConnectionFactory1;
      xAConnectionFactoryArray0[7] = xAConnectionFactory0;
      xAConnectionFactoryArray0[8] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFactories");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0, 0, 0);
      stringReader0.skip(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(9, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("fr*\"", "fr*\"");
      MockFile mockFile1 = new MockFile("fr*\"");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "fr*\"");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "fr*\"");
      char[] charArray0 = new char[9];
      charArray0[1] = 'a';
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "");
      charArray0[6] = 'l';
      charArray0[4] = 'D';
      charArray0[5] = '\u0000';
      charArray0[6] = '.';
      charArray0[7] = 'l';
      charArray0[8] = 'J';
      StringReader stringReader0 = new StringReader("/?S-9Z;xk'=");
      StringReader stringReader1 = new StringReader("fr*\"");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("(EB${d>VweYN", "(EB${d>VweYN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      file0.mkdir();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "(EB${d>VweYN";
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) file0;
      objectArray0[3] = (Object) file0;
      objectArray0[4] = (Object) file0;
      objectArray0[5] = (Object) connectionFactories0;
      objectArray0[7] = (Object) connectionFactories0;
      mockPrintWriter0.printf((Locale) null, "(EB${d>VweYN", objectArray0);
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) mockPrintWriter0;
      objectArray1[1] = (Object) file0;
      objectArray1[2] = (Object) mockPrintWriter0;
      objectArray1[3] = (Object) "(EB${d>VweYN";
      objectArray1[4] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      objectArray1[5] = object0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      boolean boolean0 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertEquals(1, connectionFactories0.getConnectionFactoryCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter0.println(73);
      mockPrintWriter1.print((-72L));
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter2.println(true);
      mockPrintWriter1.print('#');
      PrintWriter printWriter0 = mockPrintWriter0.append('#');
      printWriter0.println(true);
      printWriter0.print('#');
      mockPrintWriter0.print(115);
      printWriter0.flush();
      printWriter0.write(73);
      printWriter0.print('#');
      printWriter0.close();
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.print((Object) mockPrintWriter2);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter("mapper.knvhlidFrmeverIJdex");
      printWriter0.println("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.println();
      mockPrintWriter3.print(true);
      mockPrintWriter1.print((long) 73);
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      int int0 = (-1213);
      connectionFactories0.getXAQueueConnectionFactory(0);
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader(",BcrIV.[5c%!");
      stringReader0.markSupported();
      stringReader0.skip(0);
      StringReader stringReader1 = new StringReader(",BcrIV.[5c%!");
      stringReader0.ready();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/qj4]faV");
      try { 
        connectionFactories2.setXAConnectionFactory((-1213), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("(EB${d>VweYN", "(EB${d>VweYN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      file0.mkdir();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "(EB${d>VweYN";
      objectArray0[2] = (Object) file0;
      mockPrintWriter0.format((Locale) null, "(EB${d>VweYN", objectArray0);
      objectArray0[3] = (Object) file0;
      objectArray0[4] = (Object) file0;
      objectArray0[5] = (Object) connectionFactories0;
      objectArray0[7] = (Object) connectionFactories0;
      PrintWriter printWriter0 = mockPrintWriter0.printf((Locale) null, "(EB${d>VweYN", objectArray0);
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) mockPrintWriter0;
      file0.setWritable(false);
      objectArray1[1] = (Object) file0;
      objectArray1[3] = (Object) "(EB${d>VweYN";
      objectArray1[4] = (Object) mockPrintWriter0;
      Object object0 = new Object();
      printWriter0.println(false);
      objectArray1[5] = object0;
      printWriter0.printf((Locale) null, "(EB${d>VweYN", objectArray0);
      Locale locale1 = Locale.GERMANY;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(615, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 615, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-89);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte)115;
      byteArray0[2] = (byte)0;
      byteArray0[5] = (byte)56;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("B${d>VweYN", "B${d>VweYN");
      file0.getCanonicalFile();
      file0.setReadable(false);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list3, locale_FilteringMode1);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      try { 
        connectionFactories0.addTopicConnectionFactory((-68), (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -68, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      StringReader stringReader0 = new StringReader("7");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list0, locale_FilteringMode2);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list2, locale_FilteringMode1);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode3);
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList16 = new LinkedList<Locale>();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFactories");
      connectionFactories0.getConnectionFactoryCount();
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode2);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1, locale_FilteringMode2);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList5, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList5, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode4);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList8 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList8, locale_FilteringMode5);
      assertTrue(list3.equals((Object)list1));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) linkedList5);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list3, locale_FilteringMode2);
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) linkedList2);
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list5, locale_FilteringMode3);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4);
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list2, locale_FilteringMode4);
      LinkedList<Locale> linkedList14 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList17 = new LinkedList<Locale.LanguageRange>();
      assertTrue(linkedList17.equals((Object)linkedList7));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter0.print((double) (-204));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter1.print((double) (-204));
      mockPrintWriter1.print(false);
      mockPrintWriter0.println((float) (-204));
      mockPrintWriter0.println(73);
      mockPrintWriter1.print((long) 73);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter2.println(true);
      mockPrintWriter1.print('#');
      mockPrintWriter2.println((-204));
      PrintWriter printWriter0 = mockPrintWriter0.append('#');
      printWriter0.println(true);
      printWriter0.print('#');
      Locale locale0 = Locale.FRANCE;
      mockPrintWriter2.printf(locale0, "", (Object[]) null);
      mockPrintWriter0.print(115);
      printWriter0.flush();
      printWriter0.write(73);
      printWriter0.print('#');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.print((Object) mockPrintWriter2);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      printWriter0.println("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.println();
      mockPrintWriter3.print(true);
      mockPrintWriter1.print((long) 73);
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      connectionFactories0.getXATopicConnectionFactoryCount();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      connectionFactories0.addXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      try { 
        connectionFactories0.getTopicConnectionFactory(543);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXAConnectionFactory();
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.addXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.getQueueConnectionFactory(1247);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("(EB${d>VweYN", "(EB${d>VweYN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      file0.getAbsolutePath();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/(EB${d>VweYN0(EB${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "In the choice contained in <");
      byte[] byteArray0 = new byte[8];
      byteArray0[5] = (byte)75;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)75;
      byteArray0[4] = (byte) (-13);
      byteArray0[5] = (byte)75;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory((-2284), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2284, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("B${d>VweYN", "B${d>VweYN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(file0);
      mockPrintWriter1.println("!rg.exolab.jms.config.Connec3ionFactories");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) null, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList5, locale_FilteringMode1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList5, locale_FilteringMode1);
      Locale locale0 = Locale.TAIWAN;
      connectionFactories0.marshal((Writer) mockPrintWriter1);
      assertNotSame(mockPrintWriter1, mockPrintWriter0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("org.exolab.castor.mapping.loader.CollectionHandlers$Info", "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "B${d>VweYN");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "B${d>VweYN");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9X{,D:");
      try { 
        connectionFactories0.setTopicConnectionFactory(45, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.createFolder(evoSuiteFile1);
      MockFile mockFile0 = new MockFile("B${d>VweYN", "B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "B${d>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "n%hQJ_7[jb7F4{\"BMX");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "1P5JC1");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      try { 
        connectionFactories0.setTopicConnectionFactory((-1), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("org.exolab.castor.mapping.loader.CollectionHandlers$Info", "B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "B${d>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Ig+?K^");
      Marshaller.enableDebug = false;
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Ig+?K^");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mk");
      try { 
        connectionFactories0.setTopicConnectionFactory((int) (byte)0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[9];
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory1;
      xAConnectionFactoryArray0[3] = xAConnectionFactory1;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory1;
      xAConnectionFactoryArray0[6] = xAConnectionFactory1;
      xAConnectionFactoryArray0[7] = xAConnectionFactory0;
      xAConnectionFactoryArray0[8] = xAConnectionFactory0;
      char[] charArray0 = new char[0];
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.922496759508184
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.clearXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.isValid();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      int int0 = (-2495);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        connectionFactories0.getTopicConnectionFactory((-2495));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.493499203019262
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.clearXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      connectionFactories0.getConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[5];
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      assertEquals(2, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      xMLFilterImpl0.setDocumentLocator((Locator) null);
      xMLFilterImpl0.getParent();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl0.setPublicId("]@W");
      locator2Impl0.setLineNumber(1210);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl5.getXMLVersion();
      locator2Impl3.getEncoding();
      locator2Impl5.setPublicId("'CT:?}RJKTe53GL");
      locator2Impl2.setColumnNumber(5243);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl5);
      SAXParseException sAXParseException0 = new SAXParseException(":^#.md)S8", locator2Impl0);
      xMLFilterImpl0.error(sAXParseException0);
      locator2Impl2.getXMLVersion();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl3.getEncoding();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl3);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\fPLE5(I+cwN~E[' ");
      mockPrintWriter0.print((double) (-204));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("\fPLE5(I+cwN~E[' ");
      mockPrintWriter1.print(false);
      mockPrintWriter0.println(73);
      mockPrintWriter1.println(true);
      mockPrintWriter1.print('\u0017');
      mockPrintWriter0.println((-204));
      PrintWriter printWriter0 = mockPrintWriter0.append('\u0017');
      printWriter0.append('\u0017');
      printWriter0.println(true);
      printWriter0.print('\u0017');
      mockPrintWriter0.print(115);
      printWriter0.flush();
      printWriter0.print('\u0017');
      printWriter0.close();
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("\fPLE5(I+cwN~E[' ");
      mockPrintWriter2.print((Object) mockPrintWriter0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("mapper.knvhlidFrmeverIJdex");
      printWriter0.println("RAenc67S+aF");
      mockPrintWriter2.println();
      mockPrintWriter2.print(true);
      mockPrintWriter1.print((long) 73);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      try { 
        connectionFactories0.marshal((ContentHandler) xMLFilterImpl0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/B${hd>VweYN0B${hd>VweYN");
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Chs}hh..8zQ");
      MockFile mockFile0 = new MockFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      mockFile0.toURL();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/0=u3W 9r.hBQFxva1B${hd>VweYN");
      FileSystemHandling.createFolder(evoSuiteFile2);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/0=u3W 9rH.BQFxva1B${hd>VweYN");
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "Chs}hh..8zQ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray1 = connectionFactories0.getXATopicConnectionFactory();
      assertNotSame(xATopicConnectionFactoryArray1, xATopicConnectionFactoryArray0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      File file0 = MockFile.createTempFile("(/O{KZ;VweYN", "(/O{KZ;VweYN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      file0.mkdir();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "(/O{KZ;VweYN";
      objectArray0[2] = (Object) file0;
      mockPrintWriter0.println('\\');
      objectArray0[3] = (Object) file0;
      objectArray0[4] = (Object) file0;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Chs}hh..8zQ");
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "B${hd>VweYN");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/0=u3W 9r.hBQFxva1B${hd>VweYN");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/0=u3W 9rH.BQFxva1B${hd>VweYN");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, (byte[]) null);
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs})hn.8zQ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Chs})hn.8zQ");
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs})hn.8zQ");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Chs})hn.8zQ");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Chs})hn.8zQ");
      connectionFactories0.enumerateQueueConnectionFactory();
      File file0 = MockFile.createTempFile("/a?GY %o", "/a?GY %o");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/a?GY %o0/a?GY %o");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "/tmp/a?GY %o0/a?GY %o");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/a?GY %o0/a?GY %o");
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "Chs})hn.8zQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/a?GY %o0/a?GY %o");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs})hn.8zQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/a?GY %o0/a?GY %o");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/0=u3W 9r.hBQFxva1B${hd>VweYN");
      FileSystemHandling.createFolder(evoSuiteFile3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("S'bkCR");
      mockPrintWriter0.print(4568.2211307);
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "`%H ojSJH(0D'TL'\"|";
      Object object2 = new Object();
      objectArray1[6] = (Object) "e6LC{I";
      objectArray1[7] = object0;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-1300), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      xMLFilterImpl0.setDocumentLocator((Locator) null);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = (XMLFilterImpl)xMLFilterImpl0.getParent();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      locator2Impl3.setLineNumber(1210);
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl5.getXMLVersion();
      locator2Impl5.getXMLVersion();
      locator2Impl0.getEncoding();
      xMLFilterImpl1.getContentHandler();
      locator2Impl4.setColumnNumber(5243);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl2);
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl1);
      xMLFilterImpl1.error(sAXParseException0);
      locator2Impl0.getXMLVersion();
      xMLFilterImpl1.setDTDHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl2.getEncoding();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl6);
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(1210, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-89);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      connectionFactories0.removeTopicConnectionFactory((TopicConnectionFactory) null);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1283));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory((-29), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Ty");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-1), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "Chs})hn.8zQ");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "Chs})hn.8zQ");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "Chs})hn.8zQ");
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.createFolder(evoSuiteFile4);
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "Chs})hn.8zQ");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateTopicConnectionFactory();
      DefaultHandler defaultHandler0 = new DefaultHandler();
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)60;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-73);
      byteArray0[4] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList3);
      linkedList2.removeFirstOccurrence(list0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      assertTrue(linkedList10.equals((Object)linkedList4));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String string0 = "";
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      StringReader stringReader0 = new StringReader("text");
      stringReader0.ready();
      stringReader0.markSupported();
      String string1 = null;
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = "mapping.accessorReturnTypeMismatch";
      StringReader stringReader0 = new StringReader("mapping.accessorReturnTypeMismatch");
      connectionFactories0.getXAConnectionFactory();
      StringReader stringReader1 = new StringReader("x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H5Og^]1jmF|YBPC");
      stringReader1.reset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader1.markSupported();
      stringReader1.mark(77);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      assertNull(connectionFactory0.getName());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      File file0 = MockFile.createTempFile("(EB${d>VweYN", "(EB${d>VweYN");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("(EB${d>VweYN");
      file0.mkdir();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "(EB${d>VweYN";
      mockPrintWriter0.write("", (-203), (-203));
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) file0;
      PrintWriter printWriter0 = mockPrintWriter0.format((Locale) null, "(EB${d>VweYN", objectArray0);
      objectArray0[4] = (Object) file0;
      objectArray0[7] = (Object) connectionFactories0;
      PrintWriter printWriter1 = mockPrintWriter0.printf((Locale) null, "(EB${d>VweYN", objectArray0);
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray1 = new Object[9];
      char[] charArray0 = new char[7];
      charArray0[0] = 'P';
      charArray0[2] = ')';
      charArray0[3] = 'u';
      charArray0[4] = 'F';
      charArray0[5] = 'u';
      charArray0[6] = '{';
      printWriter1.print(charArray0);
      objectArray1[0] = (Object) mockPrintWriter0;
      file0.setWritable(false);
      objectArray1[1] = (Object) file0;
      objectArray1[2] = (Object) mockPrintWriter0;
      objectArray0[2] = (Object) "(EB${d>VweYN";
      objectArray1[4] = (Object) printWriter0;
      Object object0 = new Object();
      printWriter1.println(false);
      StringReader stringReader0 = new StringReader("!f5~#Z,p#'!qpl");
      StringReader stringReader1 = new StringReader("(EB${d>VweYN");
      try { 
        connectionFactories0.addXAConnectionFactory((-203), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -203, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ChQ}hh..QzQ");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ChQ}hh..QzQ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ChQ}hh..QzQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/B${hd>VweYN0B${hd>VweYN");
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "ChQ}hh..QzQ");
      MockFile mockFile0 = new MockFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ChQ}hh..QzQ");
      mockFile0.toURL();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/0=u3W 9r.hBQFxva1B${hd>VweYN");
      FileSystemHandling.createFolder(evoSuiteFile2);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/0=u3W 9rH.BQFxva1B${hd>VweYN");
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile3, "ChQ}hh..QzQ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[2] = topicConnectionFactory1;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      connectionFactories0.getTopicConnectionFactory(0);
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList7);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList10, (Collection<Locale>) linkedList2);
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList11, (Collection<Locale>) list1, locale_FilteringMode1);
      LinkedList<Locale> linkedList12 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList11, (Collection<Locale>) list0, locale_FilteringMode3);
      LinkedList<Locale> linkedList15 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList17 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList18 = new LinkedList<Locale.LanguageRange>();
      connectionFactories0.getXAQueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      assertSame(topicConnectionFactory1, topicConnectionFactory0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      xMLFilterImpl0.setDocumentLocator((Locator) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      XMLFilterImpl xMLFilterImpl1 = (XMLFilterImpl)xMLFilterImpl0.getParent();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      locator2Impl3.setLineNumber(1210);
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl5.getXMLVersion();
      locator2Impl5.getXMLVersion();
      locator2Impl0.getEncoding();
      xMLFilterImpl1.getContentHandler();
      locator2Impl4.setColumnNumber(5243);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl2);
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl1);
      xMLFilterImpl1.error(sAXParseException0);
      locator2Impl0.getXMLVersion();
      xMLFilterImpl1.setDTDHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.getLineNumber();
      locator2Impl2.getEncoding();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl6);
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      objectArray0[1] = (Object) null;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList7, (Collection<Locale>) list2, locale_FilteringMode1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList6);
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList9, (Collection<Locale>) list3, locale_FilteringMode1);
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList3, locale_FilteringMode0);
      LinkedList<Locale> linkedList14 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList16 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList17 = new LinkedList<Locale.LanguageRange>();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-4444));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "(EB${d>VweYN";
      objectArray0[1] = (Object) null;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("(EB${d>VweYN");
      mockPrintWriter0.print(4568.2211307);
      mockPrintWriter0.format("", objectArray0);
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "(EB${d>VweYN";
      Object object1 = new Object();
      objectArray1[2] = object1;
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "R";
      Object object2 = new Object();
      objectArray1[6] = (Object) "";
      objectArray1[7] = object0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object3 = new Object();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(13);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "S'bkCR";
      Object object0 = new Object();
      Object object1 = new Object();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList1.add((Locale) null);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      linkedList3.removeFirstOccurrence(linkedList4);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList9 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-1437));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader("qw%#~w]',P}|z");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("qw%#~w]',P}|z");
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list1, locale_FilteringMode2);
      LinkedList<Locale> linkedList3 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list3, locale_FilteringMode3);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(102, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      char[] charArray0 = new char[4];
      charArray0[1] = '9';
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray1 = new TopicConnectionFactory[2];
      topicConnectionFactoryArray1[0] = topicConnectionFactory0;
      topicConnectionFactoryArray1[1] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray1);
      assertEquals(2, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      xMLFilterImpl0.setParent(xMLFilterImpl0);
      xMLFilterImpl0.setDocumentLocator((Locator) null);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      xMLFilterImpl0.getParent();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      locator2Impl0.setPublicId("]@W");
      locator2Impl1.setLineNumber(1210);
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl7.getXMLVersion();
      locator2Impl5.getEncoding();
      locator2Impl7.setPublicId("'CT7:?}RJKe53GL");
      locator2Impl4.setColumnNumber(5243);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl7);
      SAXParseException sAXParseException0 = new SAXParseException("t_g%kuG)q", locator2Impl0);
      sAXParseException0.getMessage();
      xMLFilterImpl0.error(sAXParseException0);
      locator2Impl4.getXMLVersion();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl2.getLineNumber();
      locator2Impl5.getEncoding();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl3);
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl5);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      try { 
        connectionFactories0.getConnectionFactory(666);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter0.print((double) (-204));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter1.print((double) (-204));
      mockPrintWriter1.print(false);
      mockPrintWriter0.println(73);
      mockPrintWriter1.print((-72L));
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter2.println(true);
      mockPrintWriter1.print('\u001E');
      mockPrintWriter2.println((-204));
      PrintWriter printWriter0 = mockPrintWriter0.append('\u001E');
      printWriter0.println(true);
      printWriter0.print('\u001E');
      mockPrintWriter0.print(115);
      printWriter0.flush();
      printWriter0.write(73);
      printWriter0.print('\u001E');
      printWriter0.close();
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.print((Object) mockPrintWriter2);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter("mapper.knvhlidFrmeverIJdex");
      printWriter0.println("\fPLE5(I+hGN~E[' ");
      mockPrintWriter3.println();
      mockPrintWriter3.print(true);
      mockPrintWriter1.print((long) 73);
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter("\fPLE5(I+hGN~E[' ");
      try { 
        connectionFactories0.getXATopicConnectionFactory(115);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(",PLE5(I+cwN~E8' ");
      mockPrintWriter0.print(0.0);
      Object[] objectArray0 = new Object[8];
      mockPrintWriter0.write("RAenc67SI+aF", (-203), (-203));
      mockPrintWriter0.print((double) (-203));
      PrintWriter printWriter0 = mockPrintWriter0.format((Locale) null, ",PLE5(I+cwN~E8' ", objectArray0);
      printWriter0.print(4131.532645943);
      printWriter0.print(true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("RAenc67SI+aF");
      printWriter0.print('\u0016');
      printWriter0.write("@^h4Y\"eC3>eRpI", (-203), (-203));
      PrintWriter printWriter1 = mockPrintWriter0.append('\u0016');
      printWriter1.close();
      PrintWriter printWriter2 = printWriter0.format((Locale) null, "@^h4Y\"eC3>eRpI", objectArray0);
      printWriter1.println("RAenc67SI+aF");
      printWriter2.println();
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXAQueueConnectionFactory();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("S'bkCR");
      mockPrintWriter0.print(4568.2211307);
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list0);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list1, locale_FilteringMode0);
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      LinkedList<Locale> linkedList10 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList13.size());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      objectArray0[1] = (Object) null;
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[2] = objectArray0[0];
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "R";
      Object object2 = new Object();
      objectArray1[6] = (Object) "";
      objectArray1[7] = object0;
      Object object3 = new Object();
      Object object4 = new Object();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(2158, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      objectArray0[1] = (Object) null;
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[2] = objectArray0[1];
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "R";
      Object object2 = new Object();
      objectArray1[6] = (Object) "";
      objectArray1[7] = object0;
      Object object3 = new Object();
      Object object4 = new Object();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(2158, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      objectArray0[1] = (Object) null;
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray0[1] = objectArray0[1];
      objectArray1[4] = (Object) "";
      objectArray1[5] = (Object) "R";
      Object object2 = new Object();
      objectArray1[6] = (Object) "";
      objectArray1[7] = object0;
      Object object3 = new Object();
      Object object4 = new Object();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(2158, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = "6Q$CD{RtTm";
      StringReader stringReader0 = new StringReader("6Q$CD{RtTm");
      StringReader stringReader1 = new StringReader("");
      try { 
        connectionFactories0.getXAConnectionFactory(1271);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 0;
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      attributes2Impl1.addAttribute("oy2b", "oy2b", "oy2b", " X}=79&", "N')W");
      attributes2Impl2.getValue((-493));
      xMLFilterImpl0.getErrorHandler();
      StringReader stringReader0 = new StringReader("N')W");
      stringReader0.read();
      try { 
        connectionFactories0.getXAConnectionFactory((-493));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile2, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/B${hd>VweYN0B${hd>VweYN");
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "Chs}hh..8zQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      file0.toURL();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/0=u3W 9r.hBQFxva1B${hd>VweYN");
      FileSystemHandling.createFolder(evoSuiteFile3);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/tmp/0=u3W 9rH.BQFxva1B${hd>VweYN");
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile4, "Chs}hh..8zQ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        connectionFactories0.getXAConnectionFactory((int) (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "S'bkCR";
      Object object0 = new Object();
      Object[] objectArray1 = new Object[21];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[2] = objectArray0[1];
      objectArray1[4] = (Object) "org.exolab.castor.arer";
      objectArray1[0] = (Object) "split-cdata-sections";
      Object object2 = new Object();
      objectArray1[6] = (Object) "S'bkCR";
      objectArray1[7] = object0;
      Object object3 = new Object();
      int int0 = 0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "split-cdata-sections");
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 51;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(51, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-6);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-6), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      File file0 = MockFile.createTempFile("B${hd>VweYN", "B${hd>VweYN");
      file0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile2, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "/tmp/B${hd>VweYN0B${hd>VweYN");
      file0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "Chs}hh..8zQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        connectionFactories0.getQueueConnectionFactory((int) (byte)0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList7);
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) linkedList2);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list1);
      linkedList6.parallelStream();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList10, (Collection<Locale>) list2);
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      linkedList11.removeFirstOccurrence(list3);
      LinkedList<Locale.LanguageRange> linkedList13 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList11, (Collection<Locale>) linkedList6, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList14 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList15 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList16 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList17 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList18 = new LinkedList<Locale.LanguageRange>();
      try { 
        connectionFactories0.getTopicConnectionFactory((-1986));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Chs}hh..8zQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Chs}hh..8zQ");
      MockFile.createTempFile(",EA?7Ieb5@08$aS,", "4MLs1Jms)");
      MockFile mockFile0 = new MockFile("A_C8};?QMOBE4-~9xiK");
      mockFile0.getAbsolutePath();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/home/ubuntu/termite/projects/66_openjms/A_C8};?QMOBE4-~9xiK");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/B${hd>VweYN0B${hd>VweYN");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A_C8};?QMOBE4-~9xiK");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A_C8};?QMOBE4-~9xiK");
      mockFile0.toURL();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A_C8};?QMOBE4-~9xiK");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "A_C8};?QMOBE4-~9xiK");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        connectionFactories0.getQueueConnectionFactory((-884));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/B${d>VweYN0B${d>VweYN");
      String string0 = "org.exolab.castor.mapping.loader.CollectionHandlers$Info";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "org.exolab.castor.mapping.loader.CollectionHandlers$Info");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(937);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 0;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXATopicConnectionFactory();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1283));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      int int1 = (-1);
      try { 
        connectionFactories0.getConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory((-1), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      xMLFilterImpl1.setDocumentLocator((Locator) null);
      attributes2Impl2.setAttributes(attributes2Impl3);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl1);
      locatorImpl0.getLineNumber();
      locator2Impl0.setLineNumber(1210);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      attributes2Impl1.getValue((-3073));
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl0);
      locator2Impl2.getXMLVersion();
      locator2Impl2.getEncoding();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl0);
      locator2Impl2.setXMLVersion("[Lj6^");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl0);
      attributes2Impl2.getValue((-3073));
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl1);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-474), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      xMLFilterImpl1.setDocumentLocator((Locator) null);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      attributes2Impl0.getQName((-1));
      locator2Impl0.setLineNumber(1210);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getXMLVersion();
      locator2Impl1.setSystemId("");
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl3);
      attributes2Impl0.getLength();
      locator2Impl1.setXMLVersion(".&U&#L");
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl1);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl2);
      attributes2Impl1.getValue((-1));
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl4 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(1, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      MockException mockException0 = new MockException();
      SAXParseException sAXParseException0 = new SAXParseException(",", locator2Impl0, mockException0);
      xMLFilterImpl0.fatalError(sAXParseException0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      xMLFilterImpl1.setDocumentLocator((Locator) null);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      attributes2Impl0.getQName((-1));
      locator2Impl0.setLineNumber(1210);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getXMLVersion();
      locator2Impl1.setSystemId("");
      locator2Impl0.getEncoding();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl3);
      attributes2Impl0.getLength();
      locator2Impl1.setXMLVersion(".&U&#L");
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl2);
      attributes2Impl3.getValue(1210);
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "S'bkCR";
      objectArray0[1] = (Object) null;
      Object object0 = new Object();
      Object[] objectArray1 = new Object[8];
      objectArray1[1] = (Object) "S'bkCR";
      Object object1 = new Object();
      objectArray1[4] = (Object) "";
      Object object2 = new Object();
      objectArray1[6] = (Object) "be6LHI";
      objectArray1[7] = object0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("be6LHI");
      stringReader0.read();
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader("mapping.accessorReturnTypeMismatch");
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      StringReader stringReader1 = new StringReader("x");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H5Og^]1jmF|YBPC");
      stringReader1.reset();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader1.markSupported();
      connectionFactories0.clearXAConnectionFactory();
      stringReader1.mark(77);
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'g';
      charArray0[1] = '@';
      charArray0[2] = '\'';
      charArray0[3] = '%';
      charArray0[4] = 'O';
      charArray0[5] = 'L';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("95v`p<");
      StringReader stringReader3 = new StringReader("%sCV3l&Ka>lytbKhe");
      stringReader1.reset();
      StringReader stringReader4 = new StringReader("mapping.accessorReturnTypeMismatch");
      stringReader1.read();
      Object object0 = new Object();
      StringReader stringReader5 = null;
      try {
        stringReader5 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("aq%stXTp2/]l?pFD'a");
      stringReader0.mark(1247);
      try { 
        ConnectionFactories.unmarshal((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // 
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      Attributes2Impl attributes2Impl4 = null;
      AttributesImpl attributesImpl1 = new AttributesImpl();
      Attributes2Impl attributes2Impl5 = null;
      try {
        attributes2Impl5 = new Attributes2Impl((Attributes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.xml.sax.ext.Attributes2Impl", e);
      }
  }
}
