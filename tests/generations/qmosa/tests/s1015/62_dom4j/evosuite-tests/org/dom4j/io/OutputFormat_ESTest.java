/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:33:30 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.972898969350992
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      stringArray0[4] = "";
      stringArray0[5] = "1ot2w?\"B";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = (-2248);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-2248));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2248
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.795658070398555
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndent("-xhtml!LjC}|N!FMiwP");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("U");
      outputFormat0.setIndentSize(1);
      outputFormat0.setIndent("t5");
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent("-xhtml!LjC}|N!FMiwP");
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-neines";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-neines";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isOmitEncoding());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0096449398247995
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-padText";
      stringArray0[1] = "HZlv2xl2";
      stringArray0[2] = "-xhtmljLjC}|N!FMiwP";
      stringArray0[3] = "0Qo";
      stringArray0[4] = "-xhtmljLjC}|N!FMiwP";
      stringArray0[5] = "-padText";
      stringArray0[6] = "-padText";
      stringArray0[7] = "{}Un/#Pd(@7cJA";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isPadText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertFalse(outputFormat2.isXHTML());
      assertEquals("  ", outputFormat2.getIndent());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "-trimText";
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5495446381783404
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat("Hlv2xl2", true, "-xh$mDLuo");
      OutputFormat outputFormat2 = new OutputFormat("Hlv2xl2", true, "-indent");
      outputFormat2.setEncoding("UTF-8");
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat0.setEncoding("-newlines");
      outputFormat0.setEncoding("");
      OutputFormat outputFormat4 = new OutputFormat((String) null, false);
      OutputFormat.createPrettyPrint();
      outputFormat4.setOmitEncoding(false);
      outputFormat3.setIndent("Hlv2xl2");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-indent";
      stringArray0[1] = "";
      stringArray0[2] = "Hlv2xl2";
      stringArray0[3] = "CL{{@V^yHiV";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getEncoding());
      
      OutputFormat outputFormat5 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat5.isSuppressDeclaration());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3241452328261456
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = new OutputFormat("-xhtmlUTF-8", true, "CL{{@V^yHiV");
      OutputFormat outputFormat3 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtmlUTF-8";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "CL{{@V^yHiV";
      stringArray0[3] = "}-N`~8XS#P";
      stringArray0[4] = "Hlv2xl2";
      stringArray0[5] = "-indentSize";
      stringArray0[6] = "Hlv2xl2";
      stringArray0[7] = "}-N`~8XS#P";
      stringArray0[8] = "-xhtml";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"CL{{@V^yHiV\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.17083333145498
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat1.getAttributeQuoteCharacter());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-indett9pSize";
      stringArray0[1] = "-indett9pSize";
      stringArray0[2] = "";
      stringArray0[1] = "";
      stringArray0[4] = "-indett9pSize";
      stringArray0[5] = "-indett9pSize";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.286504609875222
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", true);
      OutputFormat outputFormat1 = new OutputFormat("-xhtmlqV+OXc2@_eMRn", false, "");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtmlqV+OXc2@_eMRn";
      stringArray0[1] = "-xh$mDLuo";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat1.parseOptions(stringArray0, 1);
      OutputFormat outputFormat2 = new OutputFormat((String) null, true, "-xh$mDLuo");
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-xh$mDLuo";
      stringArray1[1] = "-suppressDeclaration";
      stringArray1[2] = "-suppressDeclaration";
      stringArray1[3] = "-suppressDeclaration";
      outputFormat2.parseOptions(stringArray1, 1164);
      outputFormat0.parseOptions(stringArray1, 2974);
      assertTrue(outputFormat0.isXHTML());
      
      int int0 = outputFormat2.parseOptions(stringArray1, 1);
      assertTrue(outputFormat2.isSuppressDeclaration());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[1] = "-xh$mDLuo";
      stringArray0[2] = "";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-xh$mDLuo";
      stringArray1[1] = "-xh$mDLuo";
      stringArray1[2] = "qV+OXc";
      stringArray1[3] = "";
      String[] stringArray2 = new String[8];
      stringArray2[0] = "";
      OutputFormat outputFormat0 = new OutputFormat(":", true, (String) null);
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isNewlines());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isXHTML());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      
      String string0 = outputFormat0.getEncoding();
      assertNull(string0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals(":", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2680430714136834
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-xhtml!LjC}|N!FMiwP";
      stringArray0[4] = "-expandEmpmy-ohemL[o";
      stringArray0[6] = "1ot2w?\"B";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.161923168495342
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat0.isTrimText());
      
      outputFormat0.setTrimText(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getIndent();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent(true);
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.getLineSeparator();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent((String) null);
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      outputFormat2.parseOptions(stringArray0, 39);
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtml-iTndet9pSize";
      stringArray0[1] = "-xhtml-iTndet9pSize";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-xhtml!LjC}|N!FMiwP";
      stringArray0[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray1 = new String[8];
      stringArray0[1] = "";
      outputFormat0.setNewLineAfterNTags((-1));
      stringArray1[1] = "-xhtml-iTndet9pSize";
      stringArray1[2] = "-expandEmpmy-ohemL[o";
      stringArray1[3] = "";
      stringArray1[4] = "-expandEmpmy-ohemL[o";
      stringArray1[5] = "Hlv2xl2";
      stringArray1[6] = "";
      stringArray1[7] = "-expandEmpmy-ohemL[o";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.627662971986547
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-encoding", false, "-expandEmpty-trimText");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-encoding";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("", outputFormat0.getEncoding());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("");
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat2.isXHTML());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("Hlv2xl2", true, "HZlv2xl2");
      assertEquals("Hlv2xl2", outputFormat0.getIndent());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xh$mDLuo";
      stringArray0[1] = "-xhtmlqV+OXc2@_eMRn";
      stringArray0[2] = "-expandEmptyqV+Oc2@_eRn";
      stringArray0[3] = "";
      stringArray0[4] = "-indent";
      stringArray0[5] = "";
      outputFormat0.setIndent("");
      outputFormat0.setIndent("");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("HZlv2xl2", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6631578398506526
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-xhtml!LjC}|N!FMiwP";
      outputFormat0.setNewLineAfterNTags(3749);
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty-ohemL[o");
      int int0 = 2;
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9527752609540896
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      assertFalse(outputFormat0.isTrimText());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      stringArray0[4] = "";
      stringArray0[5] = "1ot2w?\"B";
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 3);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-trimText";
      stringArray1[1] = "1ot2w?\"B";
      stringArray1[2] = "1ot2w?\"B";
      stringArray1[3] = "-trimText";
      stringArray1[4] = "1ot2w?\"B";
      stringArray1[5] = "-trimText";
      outputFormat0.parseOptions(stringArray1, 3);
      outputFormat0.parseOptions(stringArray0, 4);
      String[] stringArray2 = new String[3];
      stringArray2[0] = "";
      stringArray2[1] = "-trimText";
      stringArray2[2] = null;
      outputFormat0.parseOptions(stringArray2, 3);
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5571707565175417
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndentSize((-809));
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.setIndent(".#c8ES*");
      outputFormat0.setIndent("a!D^e)M6J_[S%vm");
      assertEquals("a!D^e)M6J_[S%vm", outputFormat0.getIndent());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.228574328429839
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      outputFormat0.setEncoding((String) null);
      stringArray0[1] = "-indenpSize";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      OutputFormat.createPrettyPrint();
      OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(true);
      assertTrue(outputFormat1.isOmitEncoding());
      
      outputFormat2.parseOptions(stringArray0, 1026);
      assertFalse(outputFormat2.isOmitEncoding());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(" :~", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ANcBS:", true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-exp]ndEmpty-ohemL[o";
      stringArray0[2] = "ANcBS:";
      stringArray0[3] = "ANcBS:";
      stringArray0[4] = "-exp]ndEmpty-ohemL[o";
      stringArray0[5] = "-trimText";
      stringArray0[6] = "-trimText";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("ANcBS:", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals(0, int0);
      assertFalse(outputFormat0.isTrimText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.027841181869761
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = new OutputFormat("89~QDG=0:>qF", true, "89~QDG=0:>qF");
      String[] stringArray0 = new String[3];
      OutputFormat outputFormat2 = new OutputFormat("89~QDG=0:>qF");
      stringArray0[0] = "89~QDG=0:>qF";
      stringArray0[1] = "";
      stringArray0[2] = "89~QDG=0:>qF";
      outputFormat2.setEncoding("");
      OutputFormat.createCompactFormat();
      outputFormat1.setEncoding("Oj;JC~!?W'!j*,.");
      outputFormat1.setEncoding("-newlines");
      OutputFormat outputFormat3 = new OutputFormat("89~QDG=0:>qF", true);
      outputFormat2.setEncoding("");
      outputFormat0.setEncoding("-padText");
      assertEquals("-padText", outputFormat0.getEncoding());
      
      String string0 = outputFormat2.getEncoding();
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("3YNVJxX?6@M+MlE", false);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(false);
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.2388461041110035
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getIndent();
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "  ";
      stringArray0[1] = "  ";
      stringArray0[2] = "  ";
      stringArray0[3] = "  ";
      stringArray0[4] = "  ";
      stringArray0[5] = "  ";
      stringArray0[6] = " ";
      stringArray0[8] = "=rd21wC96kGhOt~";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1137));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1137
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.694124545362909
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "0!";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setNewLineAfterDeclaration(true);
      OutputFormat outputFormat2 = new OutputFormat("", true, (String) null);
      assertFalse(outputFormat2.isTrimText());
      
      OutputFormat outputFormat3 = new OutputFormat((String) null);
      outputFormat2.setTrimText(true);
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat2.setTrimText(true);
      outputFormat1.isSuppressDeclaration();
      outputFormat2.setIndent("");
      assertTrue(outputFormat2.isTrimText());
      
      outputFormat3.setIndent("wKYBl? SZvbDAg");
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.053778405293998
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent("");
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(false);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("");
      outputFormat0.setPadText(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize((-113));
      outputFormat0.setTrimText(false);
      outputFormat0.setLineSeparator("l26pc9:j,rC");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.getEncoding();
      outputFormat0.getIndent();
      outputFormat0.setIndent("y@Y\u0011(}sP:Kt<GP{");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "y@Y\u0011(}sP:Kt<GP{";
      stringArray0[5] = "-lineSeparator";
      stringArray0[6] = "f~/FrO4.+!Ti";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1718320895));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1718320895
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.056794996545883
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HZ&lv2x2", true);
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent("HZ&lv2x2");
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(1);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(false);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent((String) null);
      outputFormat0.setIndent("HZ&lv2x2");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(false);
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setTrimText(false);
      outputFormat1.setTrimText(true);
      outputFormat0.setEncoding("HZ&lv2x2");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.7257348275872986
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-oh$mLu";
      stringArray0[1] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1480065695));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1480065695
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.546269624945665
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("HZlv2x2", true);
      outputFormat0.setNewlines(true);
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Rs&OOX}2I]$L@6p";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("HZlv2x2");
      outputFormat0.setPadText(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndentSize(0);
      OutputFormat outputFormat1 = new OutputFormat("Rs&OOX}2I]$L@6p", false, "HZlv2x2");
      outputFormat1.setExpandEmptyElements(true);
      outputFormat0.setIndent("Rs&OOX}2I]$L@6p");
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setIndent("Rs&OOX}2I]$L@6p");
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setOmitEncoding(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setEncoding("p- %b&S\u0004C 4T");
      outputFormat1.isExpandEmptyElements();
      outputFormat1.setIndent("-indent");
      outputFormat0.setIndent("\n");
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.457848345704652
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "du8S%u";
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setXHTML(true);
      String[] stringArray1 = new String[6];
      outputFormat0.setOmitEncoding(true);
      stringArray1[0] = "du8S%u";
      stringArray1[1] = "du8S%u";
      stringArray1[2] = "du8S%u";
      stringArray1[3] = "du8S%u";
      outputFormat0.setNewlines(true);
      stringArray1[5] = "du8S%u";
      boolean boolean0 = outputFormat0.isTrimText();
      assertEquals("du8S%u", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("E#>/T_Jh05");
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding("du8S%u");
      outputFormat0.isPadText();
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "HZlv2x";
      stringArray0[1] = "E#>/T_Jh05";
      stringArray0[2] = "E#>/T_Jh05";
      stringArray0[3] = "du8S%u";
      stringArray0[4] = "E#>/T_Jh05";
      stringArray0[5] = "E#>/T_Jh05";
      stringArray0[6] = "du8S%u";
      stringArray0[7] = "E#>/T_Jh05";
      stringArray0[8] = "E#>/T_Jh05";
      outputFormat0.parseOptions(stringArray0, 433);
      outputFormat0.setXHTML(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(false);
      outputFormat0.isTrimText();
      outputFormat0.getEncoding();
      assertEquals("du8S%u", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[2];
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = new OutputFormat("", true, "s");
      OutputFormat outputFormat2 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9670690902048545
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[1] = "-expandEmpty-ohemL[o";
      stringArray1[2] = "-expandEmpmy-ohemL[o";
      stringArray1[3] = "";
      stringArray1[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray2 = new String[7];
      stringArray2[0] = "-expandEmpty Y$nD8%ilD";
      stringArray2[1] = "-expandEmpmy-ohemL[o";
      stringArray2[2] = "-expandEmpmy-ohemL[o";
      outputFormat0.setIndent("jeBH*&K-D!N5S}T");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("1+FJt|=@a!QT,%!w7k");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("-trimText");
      outputFormat0.setIndent("-expandEmpmy-ohemL[o");
      assertEquals("-expandEmpmy-ohemL[o", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("qV+OXc2@_eMR", false);
      String string0 = outputFormat0.getEncoding();
      assertFalse(outputFormat0.isXHTML());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", string0);
      assertEquals("qV+OXc2@_eMR", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7971377304062592
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[2];
      outputFormat0.parseOptions(stringArray0, 1056);
      outputFormat0.setIndent("o~tD0}4P$%pg");
      outputFormat0.setEncoding("o~tD0}4P$%pg");
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setEncoding("o~tD0}4P$%pg");
      outputFormat0.setIndent(true);
      outputFormat0.setEncoding("t=FrX#_fgi8C");
      outputFormat0.setEncoding("3: A)0pU9uQt|&xcu");
      outputFormat0.setEncoding("t=FrX#_fgi8C");
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.getLineSeparator();
      assertEquals("t=FrX#_fgi8C", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("m0^0kDQ|M(P", false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = " ";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "FdNb?Xc;>H/'Kupo$'";
      stringArray0[5] = "-trimText";
      stringArray0[6] = "m0^0kDQ|M(P";
      stringArray0[7] = "m0^0kDQ|M(P";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isTrimText());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("ANcB:", true);
      outputFormat0.setIndentSize(1214);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-exp]ndEmpty-ohemL[o";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-trimText";
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setIndentSize((-1));
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-xhtml!LjC}|N!FMiwP";
      stringArray0[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "";
      stringArray1[2] = "-expandEmpmy-ohemL[o";
      stringArray1[3] = "";
      stringArray1[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray2 = new String[7];
      stringArray2[0] = "-expandEmpty Y$nD8%ilD";
      stringArray2[1] = "-expandEmpmy-ohemL[o";
      stringArray2[2] = "-expandEmpmy-ohemL[o";
      stringArray2[3] = "-expandEmpty-ohemL[o";
      stringArray2[4] = "-expandEmpmy";
      stringArray2[5] = "^fUx";
      stringArray2[6] = "-expandEmpmy-ohemL[o";
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0995015447694865
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setPadText(true);
      outputFormat1.setEncoding("bTqiV:*v\"WFC/F 9=F%");
      boolean boolean0 = outputFormat1.isNewlines();
      assertEquals("bTqiV:*v\"WFC/F 9=F%", outputFormat1.getEncoding());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0523132038287963
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setPadText(true);
      outputFormat1.setNewlines(true);
      outputFormat1.setEncoding("bTqiV:*v\"WFC/F 9=F%");
      outputFormat1.isNewlines();
      outputFormat0.setIndent("bTqiV:*v\"WFC/F 9=F%");
      assertEquals("bTqiV:*v\"WFC/F 9=F%", outputFormat0.getIndent());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.769907728382837
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-xhtml!LjC}|N!FMiwP";
      stringArray0[4] = "-expandEmpmy-ohemL[o";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setXHTML(false);
      assertTrue(outputFormat1.isTrimText());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isPadText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertEquals("  ", outputFormat2.getIndent());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertFalse(outputFormat2.isOmitEncoding());
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isNewlines());
      assertEquals("\n", outputFormat2.getLineSeparator());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6379081509320192
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      outputFormat0.setTrimText(true);
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setTrimText(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.setIndent(".Pt#c8ES*");
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5164586295246056
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-oh$mLu");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("#<");
      assertEquals("#<", outputFormat0.getIndent());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.121410475323288
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-ohemL[o";
      stringArray0[1] = "-expandEmpty-ohemL[o";
      stringArray0[2] = "-expandEmpty Y$nD8%ilD";
      stringArray0[3] = "-xhtml!LjC}|)!FMiwP";
      stringArray0[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray1 = new String[8];
      stringArray1[1] = "-expandEmpty-ohemL[o";
      stringArray1[2] = "-expandEmpmy-ohemL[o";
      stringArray1[4] = "-expandEmpmy-ohemL[o";
      String[] stringArray2 = new String[7];
      stringArray2[0] = "-expandEmpty Y$nD8%ilD";
      stringArray2[1] = "-expandEmpty-ohemL[o";
      stringArray2[2] = "-expandEmpty-ohemL[o";
      stringArray2[3] = "-expandEmpty-ohemL[o";
      stringArray2[4] = "-expandEmpmy";
      stringArray2[6] = "-expandEmpty-ohemL[o";
      OutputFormat outputFormat0 = new OutputFormat("pxqMS5iYk9}Ec_aK", true, "-xhtml-xhtml!LjC}|N!FMiwP");
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isXHTML());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "-expandEmpty-ohemL[o";
      String string1 = "-expandEmpmy-ohemL[o";
      OutputFormat outputFormat0 = new OutputFormat("", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('U');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (U)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }
}
