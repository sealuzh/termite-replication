/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 06:52:45 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5948390726837485
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      byte[] byteArray0 = new byte[13];
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)39;
      byteArray0[1] = (byte)10;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)39;
      byteArray0[8] = (byte)10;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.ProgressSet = base64Decoder0.ProgressSet;
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.markSupported();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "EPLR$#yq0g/;");
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.updateProgress();
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      base64Decoder0.setReader(mockFileInputStream0);
      base64Decoder0.decodeStream();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "EPLR$#yq0g/;";
      stringArray0[1] = null;
      stringArray0[2] = "mK[v9";
      Newzgrabber.main(stringArray0);
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      assertNotSame(base64Decoder1, base64Decoder0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.608621558216484
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)119;
      byteArray0[4] = (byte)38;
      byteArray0[1] = (byte)10;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Newzgrabber Application 1.1\nAuthor: Jeffee Kiser\nJune 2003");
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)38;
      byteArray0[8] = (byte)10;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null, 1432, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.ABORT = false;
      base64Decoder0.decodeStream();
      bufferedCustomInputStream0.markSupported();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      mockFile0.getAbsolutePath();
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.markSupported();
      mockFileInputStream0.release();
      base64Decoder0.setReader(mockFileInputStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5710772959641663
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)38;
      byteArray0[1] = (byte)10;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{O6XMl_|_SC(*rr");
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)10;
      byteArray0[8] = (byte)10;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      file0.toURI();
      mockFile0.toURL();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
      MockFile mockFile1 = new MockFile("*&m-|6{(B,1r");
      file0.renameTo(mockFile1);
      mockFile1.toURL();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      file0.deleteOnExit();
      base64Decoder0.setTotalLines((byte)38);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-19977), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CH:Y>?*{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)10;
      byteArray0[8] = (byte)58;
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      mockFile0.mkdirs();
      file0.renameTo(mockFile0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.ProgressSet = true;
      base64Decoder0.decodeStream();
      assertEquals(2L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6868359830561608
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "CH:Y>?*{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte) (-11);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)10;
      byteArray0[7] = (byte)11;
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      Object object0 = new Object();
      file0.setExecutable(false, false);
      mockFile0.mkdirs();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, (byte)10, true);
      Object object1 = new Object();
      Object object2 = new Object();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.setBegin(true);
      base64Decoder0.decodeStream();
      //  // Unstable assertion: assertEquals((-9992), mockFileInputStream0.available());
      //  // Unstable assertion: assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("mK[v9/mK[v90.tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[\u0000\"\u0000");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)38;
      byteArray0[1] = (byte)10;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte) (-107);
      byteArray0[8] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile((String) null, "mK[v9");
      File file0 = MockFile.createTempFile("mK[v9", (String) null, (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      mockFileInputStream0.release();
      file0.toURI();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(mockFileInputStream0, true);
      mockFileInputStream0.markSupported();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.ABORT = true;
      base64Decoder0.decodeStream();
      Object object0 = new Object();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1031808349614796
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream((InputStream) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, (OutputStream) null);
      base64Decoder0.setStatusRow((byte)6);
      String[] stringArray0 = new String[0];
      base64Decoder0.MARKLIMIT = (-4098);
      bufferedCustomInputStream0.TIMEOUT = 0;
      Newzgrabber.verbose = true;
      base64Decoder0.foundbegin = true;
      Newzgrabber.main(stringArray0);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.ProgressSet = true;
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertFalse(base64Decoder0.ABORT);
  }
}
