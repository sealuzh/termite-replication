/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 07:35:11 GMT 2020
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.main.FreeMind;
import freemind.main.FreeMindApplet;
import freemind.modes.MindMap;
import freemind.view.mindmapview.MultipleImage;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Panel;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.InputEvent;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.image.ImageObserver;
import java.beans.PropertyChangeListener;
import java.sql.Date;
import java.sql.Time;
import java.util.Calendar;
import java.util.Locale;
import java.util.Properties;
import java.util.TimeZone;
import javax.help.DefaultHelpModel;
import javax.help.HelpSet;
import javax.help.JHelpFavoritesNavigator;
import javax.help.NavigatorView;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JSlider;
import javax.swing.JSpinner;
import javax.swing.JToggleButton;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.event.MenuKeyEvent;
import javax.xml.transform.sax.SAXSource;
import javax.xml.transform.sax.TransformerHandler;
import javax.xml.transform.stream.StreamSource;
import org.apache.batik.css.engine.value.svg12.MarginShorthandManager;
import org.apache.batik.dom.GenericDocumentType;
import org.apache.batik.dom.svg.SVGDOMImplementation;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.crimson.tree.XmlDocument;
import org.apache.fop.pdf.PDFDocument;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.xalan.processor.TransformerFactoryImpl;
import org.apache.xerces.dom.ASDOMImplementationImpl;
import org.apache.xerces.parsers.SAXParser;
import org.apache.xml.serializer.ToTextSAXHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.Coordinate;
import org.openstreetmap.gui.jmapviewer.tilesources.BingAerialTileSource;
import org.w3c.dom.DOMException;
import org.xml.sax.ContentHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXParseException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.616230775360895
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, inputMethodListener2);
      jDayChooser0.removeInputMethodListener(inputMethodListener3);
      jDayChooser0.getDaysInMonth();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jDayChooser0.setWeekOfYearVisible(false);
      System.setCurrentTimeMillis(588L);
      jDayChooser0.drawWeeks();
      // Undeclared exception!
      try { 
        Time.valueOf("accessories.plugins.time.JDayChooser$DecoratorButton");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.sql.Time", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getMouseListeners();
      jDayChooser0.setName("j~3}isIG:3");
      Color color0 = Color.white;
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser0.setDecorationBordersVisible(false);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C7%yo");
      Panel panel0 = new Panel();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(panel0, 16, 917L, 16, 403, 'O', menuElementArray0, menuSelectionManager0);
      SystemColor systemColor0 = SystemColor.textHighlight;
      jDayChooser0.setForeground(color0);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.addListeners(31);
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7272463499302093
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = new Date((-2761L));
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource1 = new BingAerialTileSource();
      bingAerialTileSource1.getAttributionImage();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.isValidateRoot();
      jDayChooser0.setDay(1283);
      jDayChooser0.getSelectedDay();
      jDayChooser0.setMonth(1283);
      jDayChooser0.isOptimizedDrawingEnabled();
      jDayChooser0.setMaxDayCharacters(280);
      jDayChooser0.isWeekOfYearVisible();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.698009616895563
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Date date0 = new Date((-2761L));
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource1 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource2 = new BingAerialTileSource();
      Locale locale0 = new Locale("x(5@oAdu9hf'EI!0z", "x(5@oAdu9hf'EI!0z");
      JDayChooser jDayChooser0 = new JDayChooser();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      jDayChooser0.setMonth(744);
      jDayChooser0.setMaxDayCharacters(79);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = SwingConstants.WEST;
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.EXPLICIT_LAYOUT;
      KeyEvent.getKeyModifiersText((-3467));
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      bingAerialTileSource0.getAttributionImage();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDay((int) gVTAttributedCharacterIterator_TextAttribute0.WRITING_MODE_TTB);
      jDayChooser0.getSelectedDay();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.6665081787162883
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDayBordersVisible(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.grabFocus();
      jDayChooser0.setAlignmentX(0);
      jDayChooser0.getSelectedDay();
      jDayChooser0.setMonth(0);
      jDayChooser0.setDay(0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.repaint(505L, 50, 50, 50, (-2991));
      jDayChooser0.getName();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      jDayChooser0.firePropertyChange("<\"OD w3v?j@'BxOXq", 0.0, 0.0);
      jDayChooser0.isPaintingTile();
      jDayChooser0.getDay();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getMinSelectableDate();
      MindMap mindMap0 = null;
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setName("j~3}isIG:3");
      jDayChooser0.setName("j~3}isIG:3");
      jDayChooser0.setDecorationBordersVisible(false);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      jDayChooser0.setYear((-2952));
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setDayBordersVisible(false);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setName("j~3}isIG:3");
      jDayChooser0.setDecorationBordersVisible(false);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      MarginShorthandManager marginShorthandManager0 = new MarginShorthandManager();
      sVGDOMImplementation0.registerCustomCSSShorthandManager(marginShorthandManager0);
      sVGDOMImplementation0.getLocale();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      jDayChooser0.isDayBordersVisible();
      StreamSource streamSource0 = new StreamSource();
      InputSource inputSource0 = SAXSource.sourceToInputSource(streamSource0);
      try { 
        XmlDocument.createXmlDocument(inputSource0, true);
        fail("Expecting exception: SAXParseException");
      
      } catch(SAXParseException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.crimson.parser.Parser2", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Font.getFont(",|Z");
      MockDate mockDate0 = new MockDate(2475L);
      MockDate mockDate1 = new MockDate(2475L);
      jDayChooser0.isDecorationBackgroundVisible();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.76639130174906
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockDate mockDate0 = new MockDate(1961L);
      java.util.Date date0 = jDayChooser0.setMaxSelectableDate(mockDate0);
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.setSelectableDateRange(date0, date0);
      int int0 = 796;
      MockFile mockFile0 = new MockFile("org.hsqldb.lib.HsqlByteArrayInputStream");
      SAXParser sAXParser0 = new SAXParser();
      sAXParser0.getContentHandler();
      TransformerFactoryImpl transformerFactoryImpl0 = new TransformerFactoryImpl();
      TransformerHandler transformerHandler0 = transformerFactoryImpl0.newTransformerHandler();
      ToTextSAXHandler toTextSAXHandler0 = new ToTextSAXHandler((ContentHandler) null, transformerHandler0, "day");
      toTextSAXHandler0.getOutputFormat();
      FreeMind freeMind0 = null;
      try {
        freeMind0 = new FreeMind((Properties) null, (Properties) null, mockFile0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8176716672820588
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setEnabled(false);
      jDayChooser0.init();
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxDayCharacters((-2125));
      MultipleImage multipleImage0 = new MultipleImage((-637.304));
      multipleImage0.getImage();
      jDayChooser0.prepareImage((Image) null, (-291), 210, (ImageObserver) null);
      jDayChooser0.setFocus();
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7666238054495484
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "West";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HelpSet helpSet0 = new HelpSet(classLoader0);
      helpSet0.getNavigatorView("pRElBx~~^");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DefaultHelpModel defaultHelpModel0 = new DefaultHelpModel(helpSet0);
      DefaultHelpModel defaultHelpModel1 = new DefaultHelpModel(helpSet0);
      JHelpFavoritesNavigator jHelpFavoritesNavigator0 = new JHelpFavoritesNavigator((NavigatorView) null, defaultHelpModel1);
      KeyEvent keyEvent0 = new KeyEvent(jHelpFavoritesNavigator0, (-1718), (-1718), (-766), 2430, 'm');
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.requestFocus(false);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setMaxDayCharacters(3669);
      jDayChooser0.setMaxSelectableDate((java.util.Date) null);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxSelectableDate((java.util.Date) null);
      SystemColor systemColor0 = SystemColor.activeCaption;
      jDayChooser0.setWeekdayForeground(systemColor0);
      jDayChooser0.getDayPanel();
      ASDOMImplementationImpl aSDOMImplementationImpl0 = new ASDOMImplementationImpl();
      GenericDocumentType genericDocumentType0 = new GenericDocumentType("day", "+8H&)2>r!,", "day");
      try { 
        aSDOMImplementationImpl0.createDocument("+8H&)2>r!,", "+8H&)2>r!,", genericDocumentType0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // WRONG_DOCUMENT_ERR: A node is used in a different document than the one that created it.
         //
         verifyException("org.apache.xerces.dom.CoreDocumentImpl", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.grabFocus();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7325637712329622
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "West";
      stringArray0[1] = "(d";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HelpSet helpSet0 = new HelpSet(classLoader0);
      helpSet0.getNavigatorViews();
      DefaultHelpModel defaultHelpModel0 = new DefaultHelpModel(helpSet0);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(1775);
      jDayChooser0.getSundayForeground();
      jDayChooser0.getLocale();
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6266116706270752
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.putClientProperty(",|Z", ",|Z");
      jDayChooser0.isFocusable();
      Font.getFont(",|Z");
      jDayChooser0.setFont((Font) null);
      jDayChooser0.initDecorations();
      Date date0 = new Date(0L);
      date0.clone();
      jDayChooser0.setSelectableDateRange((java.util.Date) null, date0);
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7666238054495484
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "West";
      stringArray0[1] = "(d";
      stringArray0[2] = "";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HelpSet helpSet0 = new HelpSet(classLoader0);
      helpSet0.getNavigatorView("West");
      DefaultHelpModel defaultHelpModel0 = new DefaultHelpModel(helpSet0);
      JHelpFavoritesNavigator jHelpFavoritesNavigator0 = new JHelpFavoritesNavigator((NavigatorView) null, defaultHelpModel0);
      KeyEvent keyEvent0 = new KeyEvent(jHelpFavoritesNavigator0, 1775, 796, 1775, 796, '^');
      JDayChooser jDayChooser0 = new JDayChooser(true);
      PDFDocument pDFDocument0 = new PDFDocument("accessories.plugins.time.JDayChooser$DecoratorButton");
      PDFInfo pDFInfo0 = pDFDocument0.getInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setMinSelectableDate((java.util.Date) null);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setMaxDayCharacters(1775);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.799517964535027
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockDate mockDate0 = new MockDate(1961L);
      java.util.Date date0 = jDayChooser0.setMaxSelectableDate(mockDate0);
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setMaxSelectableDate(date0);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 40);
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.initDecorations();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      jDayChooser0.getLocale();
      jDayChooser0.getLocale();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      MockDate mockDate0 = new MockDate(0L);
      jDayChooser0.setMinSelectableDate(mockDate0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8961071893502184
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setEnabled(false);
      jDayChooser0.init();
      java.util.Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.getWeekdayForeground();
      MultipleImage multipleImage0 = new MultipleImage(1.7976931348623157E308);
      multipleImage0.getImage();
      jDayChooser0.prepareImage((Image) null, (-2631), (-1353), (ImageObserver) null);
      jDayChooser0.setFocus();
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.updateUI();
      JSlider jSlider0 = new JSlider(0);
      KeyEvent keyEvent0 = new KeyEvent(jSlider0, (-2631), (-486L), (-2631), 84, 'o');
      jDayChooser0.keyReleased(keyEvent0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 0);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 228);
      jDayChooser0.focusGained(focusEvent0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.616230775360895
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setName("j~3}isIG:3");
      jDayChooser0.setDecorationBordersVisible(false);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      MarginShorthandManager marginShorthandManager0 = new MarginShorthandManager();
      sVGDOMImplementation0.registerCustomCSSShorthandManager(marginShorthandManager0);
      sVGDOMImplementation0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMouseListeners();
      jDayChooser0.setDecorationBordersVisible(true);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      MarginShorthandManager marginShorthandManager0 = new MarginShorthandManager();
      sVGDOMImplementation0.registerCustomCSSShorthandManager(marginShorthandManager0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getVetoableChangeListeners();
      Color color0 = Color.white;
      jDayChooser0.sundayForeground = color0;
      color0.getRGBComponents((float[]) null);
      float[] floatArray0 = new float[5];
      floatArray0[0] = (-1001.1103F);
      floatArray0[1] = 2039.5173F;
      floatArray0[2] = 464.25F;
      jDayChooser0.updateUI();
      floatArray0[3] = 0.0F;
      floatArray0[4] = 1616.5F;
      jDayChooser0.setBackground(color0);
      float[] floatArray1 = color0.getRGBComponents(floatArray0);
      color0.getRGBColorComponents(floatArray1);
      int int0 = (-9);
      jDayChooser0.firePropertyChange("aGZ&", 116, (-9));
      jDayChooser0.decorationBordersVisible = false;
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.init();
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners((-1026));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.662701752014223
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = new Date(0L);
      jDayChooser0.setSelectableDateRange(date0, (java.util.Date) null);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "freemind.modes.mindmapmode.actions.NodeUpAction";
      stringArray0[1] = "JYearChooser";
      stringArray0[2] = ":#]EZ'\f}Kq";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getTransferHandler();
      jDayChooser0.setMaxDayCharacters(0);
      MultipleImage multipleImage0 = new MultipleImage(1.7976931348623157E308);
      multipleImage0.getImage();
      jDayChooser0.prepareImage((Image) null, 0, (-291), (ImageObserver) null);
      jDayChooser0.setFocus();
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.updateUI();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.797362550286864
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.contains(5, 5);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.getWeekdayForeground();
      MultipleImage multipleImage0 = new MultipleImage(1.7976931348623157E308);
      multipleImage0.getImage();
      boolean boolean0 = new Boolean(false);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser1, (-4245), (-1L), 0, 0, ';', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.setMaxDayCharacters(2359);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDayPanel();
      // Undeclared exception!
      try { 
        TimeZone.getTimeZone((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TimeZone", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.isDecorationBordersVisible();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setName("j~3}isIG:3");
      jDayChooser0.setDecorationBordersVisible(false);
      SVGDOMImplementation sVGDOMImplementation0 = new SVGDOMImplementation();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6665081787162883
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      bingAerialTileSource0.getAttributionText(1848, (Coordinate) null, (Coordinate) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Loading Bing attribution data...");
      BingAerialTileSource bingAerialTileSource1 = new BingAerialTileSource();
      bingAerialTileSource1.getAttributionImage();
      jDayChooser0.setDay(1283);
      jDayChooser0.getSelectedDay();
      jDayChooser0.updateUI();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(11, 2, 3944);
      ActionEvent actionEvent0 = new ActionEvent(mockGregorianCalendar0, 100, "Ap!?od)v.0:F]HRp1G1");
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.util.MockGregorianCalendar cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel(0.0, 0.0, 0.0, 0.05);
      JSpinner jSpinner0 = new JSpinner(spinnerNumberModel0);
      JSpinner.DefaultEditor jSpinner_DefaultEditor0 = new JSpinner.DefaultEditor(jSpinner0);
      jDayChooser0.addPropertyChangeListener((PropertyChangeListener) jSpinner_DefaultEditor0);
      jDayChooser0.drawDays();
      jDayChooser0.drawDays();
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Calendar calendar0 = MockCalendar.getInstance();
      jDayChooser0.setCalendar(calendar0);
      jDayChooser0.getDaysInMonth();
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = (-911);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-911), (-911), (-911), 1249, 'X', 0);
      InputEvent.getModifiersExText(1249);
      keyEvent0.setSource(jDayChooser0);
      jDayChooser0.keyTyped(keyEvent0);
      jDayChooser0.drawDays();
      jDayChooser0.setIgnoreRepaint(false);
      jDayChooser0.getDaysInMonth();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getTopLevelAncestor();
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false);
      jDayChooser_DecoratorButton0.paint(pDFDocumentGraphics2D0);
      jDayChooser0.updateUI();
      SystemColor systemColor0 = SystemColor.text;
      jDayChooser0.setSundayForeground(systemColor0);
      KeyEvent keyEvent1 = null;
      try {
        keyEvent1 = new KeyEvent((Component) null, 3411, (-911), 8928, 0, 'X', (-3619));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 2433);
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7419541084422874
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Metal");
      java.util.Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.getMinSelectableDate();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.7376047233857554
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      jDayChooser0.setEnabled(true);
      java.util.Date date0 = jDayChooser0.getMaxSelectableDate();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.setMaxSelectableDate(date0);
      jDayChooser0.getMinSelectableDate();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8747, (String) null, 2433);
      actionEvent0.setSource((Object) null);
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JToggleButton jToggleButton0 = new JToggleButton("");
      int int0 = 10138;
      ItemEvent itemEvent0 = new ItemEvent(jToggleButton0, 10138, "", (-968));
      jDayChooser0.dispatchEvent(itemEvent0);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection((HsqlProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcConnection", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6929037542586003
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Date date0 = new Date((-2761L));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource1 = new BingAerialTileSource();
      bingAerialTileSource1.getAttributionText(39, (Coordinate) null, (Coordinate) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "onAddChildren");
      bingAerialTileSource1.getAttributionImage();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDay(1283);
      jDayChooser0.getSelectedDay();
      jDayChooser0.setMonth(1283);
      jDayChooser0.setMaxDayCharacters(280);
      jDayChooser0.drawWeeks();
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.7325637712329622
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Date date0 = new Date((-2761L));
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource1 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource2 = new BingAerialTileSource();
      Locale locale0 = new Locale("x(5@oAdu9hf'EI!0z", "1");
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.getLocale();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.698009616895563
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 8728, (String) null, 2433);
      jDayChooser0.getToolTipText();
      MockDate mockDate0 = new MockDate(32, 90, 11);
      jDayChooser0.setSelectableDateRange(mockDate0, mockDate0);
      jDayChooser0.getMinSelectableDate();
      java.util.Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setMinSelectableDate(date0);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Date date0 = new Date((-2761L));
      BingAerialTileSource bingAerialTileSource0 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource1 = new BingAerialTileSource();
      BingAerialTileSource bingAerialTileSource2 = new BingAerialTileSource();
      bingAerialTileSource2.getAttributionImage();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      SystemColor systemColor0 = SystemColor.windowText;
      jDayChooser0.setForeground(systemColor0);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }
}
