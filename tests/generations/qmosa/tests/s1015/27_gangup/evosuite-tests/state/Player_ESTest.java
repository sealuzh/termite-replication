/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:30:26 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-24129), "gjHbays5l%", "gjHbays5l%", (-686));
      byte[] byteArray0 = player0.pack();
      Party party0 = new Party(10);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.head = party0;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(60.4F);
      assertEquals(60.4F, player0.getX(), 0.01F);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode2);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player((byte) (-106), "", "", 8452, 0);
      int int0 = player1.gangStrength();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode5);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2, locale_FilteringMode1);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate.isEqual((Object) "");
      predicate1.and(predicate0);
      predicate0.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2157, "", 2157);
      player0.setZ((-2164.2F));
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.setY(0.1F);
      player1.setX(692.5F);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(692.5F, player1.getX(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4435896416877303
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale locale0 = Locale.GERMAN;
      linkedList2.add(locale0);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode2);
      linkedList0.add((Locale) null);
      linkedList1.pollLast();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale locale1 = Locale.FRANCE;
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) list1);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode4);
      linkedList2.poll();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0, locale_FilteringMode3);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Locale.LanguageRange.mapEquivalents(linkedList3, hashMap0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList4.listIterator();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list2, locale_FilteringMode1);
      Player player0 = new Player(2157, "4\"Z;-XJi}#.qm|n/", 2157);
      linkedList0.add(locale0);
      player0.setZ((-2163.4216F));
      player0.setJoinOK(player0, true);
      player0.setY(0.1F);
      player0.setX(741.43365F);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertEquals(0.1F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(2020, (String) null, 565);
      player0.getSubparty();
      player0.getName();
      assertEquals(1, player0.getStrength());
      assertEquals(565, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0309453947300713
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(1676, "_}~hT", "_}~hT", 1676, 1676);
      Player player1 = new Player(1676, (String) null, (String) null, (-5912), (-850));
      player1.getSubparty();
      player1.getSubparty();
      Player player2 = new Player((short)4919);
      byte[] byteArray0 = player2.pack();
      Player player3 = new Player();
      player3.reset(false);
      Player player4 = new Player((-2795), "_}~hT", "_}~hT", (short)4919);
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.gangStrength();
      assertEquals(1676, int0);
      
      player2.reset(false);
      float float1 = player3.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      player3.getSubparty();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertEquals(31, byteArray0.length);
      assertFalse(player2.isDead());
      assertEquals(0L, player2.getTimeOfDeath());
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player5 = new Player(1676, "_}~hT", (String) null, 447, 1217);
      int int1 = player4.type();
      assertEquals(5, int1);
      assertEquals(1, player4.getStrength());
      
      player1.getIP();
      assertTrue(player1.isConnected());
      assertEquals((-850), player1.getStrength());
      assertEquals((-5912), player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vN[bMccJb|;t");
      Player player0 = new Player();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3162), 1099);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.026522790307467
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setY(10.0F);
      player0.setMoney(0.0F);
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.reset(true);
      player0.getMoney();
      player0.gangStrength();
      player0.pack();
      Player player1 = new Player(1);
      player1.setMoney(1742.0F);
      player1.isJoinOK(player0, false);
      player1.pack();
      player1.setX((-1.0F));
      float float0 = player0.getY();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(4427, "-z|YL|8+dEMd&", "-z|YL|8+dEMd&", 4427, 4427);
      Player player1 = new Player();
      player0.setY(0.0F);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.setX(0.1F);
      player0.add(player1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-z|YL|8+dEMd&");
      player0.setDead();
      int int0 = player0.gangStrength();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(4428, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.174317417693044
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((-5213.965F));
      player0.setMoney((-1.0F));
      player0.setZ(0.0F);
      player0.gangStrength();
      player0.reset(true);
      player0.getMoney();
      player0.gangStrength();
      player0.pack();
      Player player1 = new Player(5);
      player0.setMoney(0.0F);
      Player player2 = new Player(325, "", "", 1);
      player2.isJoinOK(player0, true);
      Player player3 = new Player((-1052), "-2a1k%;", 1);
      player0.setX(0.0F);
      float float0 = player0.getY();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertEquals((-5213.965F), float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.322743708942299
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player((-4919), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 161);
      player0.setDead((long) 161, false);
      player0.setConnected(false);
      player0.setZ((-652.2832F));
      int int0 = Packable.GAME_STATE;
      Player player1 = (Player)player0.gangBoss();
      player0.setDead();
      Player player2 = new Player((short)4919, ":Z) hDK<f2OzWl[U", ":Z) hDK<f2OzWl[U", 3, (short)4919);
      player2.boss = (Party) player1;
      Player player3 = new Player((-4919), "", "o)`s)w/u%]xT*;|MV", 161);
      player2.setJoinOK(player3, false);
      player3.setConnected(false);
      player2.setDead();
      player3.setY((short)4919);
      player2.setX(3861.4802F);
      player2.isJoinOK(player3, false);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(146, "", "", 146, 146);
      player0.toString();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(146, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(146, player0.getPictureId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8542306045431616
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-993));
      player0.getPictureId();
      player0.pack();
      player0.getPictureId();
      player0.gangStrength();
      Player player1 = new Player();
      player1.getX();
      float float0 = (-2337.313F);
      player0.setZ((-2337.313F));
      Player player2 = new Player(4, "", "E0[656WX|=}{8=L_D", (-3113), (-3049));
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(255, "j)[O922oLwyKX|Rvr", "module.ModuleBrowserDialog$ModuleFilter", 10, 255);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)116;
      Player player1 = new Player((byte) (-56), "module.ModuleBrowserDialog$ModuleFilter", (byte) (-56));
      player1.setMoney((byte)116);
      player1.reset(true);
      player1.setZ((byte) (-117));
      Player player2 = new Player((-5376), "j)[O922oLwyKX|Rvr", "", (byte) (-117), 855);
      player1.getZ();
      assertEquals(0.0F, player1.getMoney(), 0.01F);
      
      player2.unpack(byteArray0);
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(973, "", (-1820));
      player0.getIP();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setDead((-3411L));
      player0.getTimeOfDeath();
      player0.type();
      System.setCurrentTimeMillis((-30L));
      player0.type();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0.0.0.0");
      player0.reset(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.getZ();
      player0.type();
      player0.getMoney();
      player0.getZ();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis((-3411L));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(10, "B`(PN", "B`(PN", 5);
      player0.setDead((long) 5);
      Party party0 = player0.prev;
      player0.head = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      player0.setMoney(0.2F);
      float float0 = player0.getMoney();
      assertEquals(5L, player0.getTimeOfDeath());
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode5);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list4, locale_FilteringMode6);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list6 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list5);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode7 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list7 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list3, locale_FilteringMode7);
      Locale.FilteringMode locale_FilteringMode8 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list7, locale_FilteringMode8);
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.pollFirst();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list2, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list6, locale_FilteringMode6);
      Player player0 = new Player(512, "pHw", (String) null, 512, 712);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Player player0 = new Player(5, "#`(P3N", "", (-1325));
      player0.getName();
      assertEquals((-1325), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("#`(P3N", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.525950491234776
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getSubparty();
      player0.setX(0.0F);
      player0.gangStrength();
      player0.getX();
      Player player1 = new Player(0, (String) null, 1);
      Player player2 = new Player((-14136), (String) null, (String) null, (short)4919);
      player0.getSubparty();
      Player player3 = new Player((-909), (String) null, 3190);
      player3.setX(10.0F);
      player0.getY();
      player0.type();
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode4);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list3, locale_FilteringMode5);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list4);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list5, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list3, locale_FilteringMode2);
      Player player0 = new Player(2255, ".[.cMlass$", ".[.cMlass$", 712, 5);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-21);
      Player player0 = new Player((-1120), "", 3190);
      Player player1 = new Player(889, "", "", (byte) (-21));
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-21);
      byteArray1[1] = (byte) (-21);
      byteArray1[2] = (byte) (-91);
      byteArray1[4] = (byte) (-91);
      Player player2 = new Player(0, "", "", (byte) (-91));
      player2.setY(0.0F);
      player2.setX((-876.89F));
      player2.getIP();
      assertEquals((-876.89F), player2.getX(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(239L);
      long long0 = player0.getTimeOfDeath();
      assertEquals(239L, long0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(0);
      Party party0 = new Party((-1794));
      player0.next = party0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.pack();
      player0.toString();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(4919, (String) null, (String) null, 4919, (-728));
      player0.toString();
      assertEquals((-728), player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(4919, player0.getPictureId());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player((-1039), "module.ModuleBrowserDialog$ModuleFilter", "", (-1039), (-1039));
      player0.getStrength();
      player0.setY(0.0F);
      player0.getX();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player(4919, "", (short)4919);
      player1.getSubparty();
      Player player2 = new Player();
      player2.reset(true);
      player1.isJoinOK(player0, true);
      player0.setX(0.0F);
      player1.getX();
      player1.getZ();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player1.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      player0.setDead((long) 0, true);
      player0.setConnected(false);
      player0.setZ(0);
      player0.gangStrength();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte)5;
      player0.unpack(byteArray0);
      player0.setZ((byte)19);
      int int0 = Packable.TEXT_MESSAGE;
      player0.isConnected();
      player0.getZ();
      System.setCurrentTimeMillis((byte)10);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      player0.setDead((long) 0, true);
      player0.setConnected(false);
      player0.setZ(0);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte)1;
      player0.setMoney((byte)10);
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-39);
      byteArray0[7] = (byte)5;
      player0.unpack(byteArray0);
      player0.setZ((byte)19);
      int int0 = Packable.TEXT_MESSAGE;
      player0.isBoss();
      player0.getZ();
      System.setCurrentTimeMillis((byte)10);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[1];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      mockPrintStream0.checkError();
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "", objectArray0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("state.Player$JoinInfo");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream2);
      DataOutputStream dataOutputStream1 = new DataOutputStream(printStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(mockPrintStream2);
      DataOutputStream dataOutputStream3 = new DataOutputStream(mockPrintStream2);
      dataOutputStream3.writeUTF("Q[i\"Pzzzy^P");
      dataOutputStream1.flush();
      mockPrintStream2.print('a');
      DataOutputStream dataOutputStream4 = new DataOutputStream(mockPrintStream2);
      dataOutputStream3.writeBytes("");
      dataOutputStream2.writeBytes("");
      dataOutputStream2.writeBytes("1u");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream5 = new DataOutputStream(filterOutputStream0);
      Player player0 = new Player();
      byteArrayOutputStream0.toByteArray();
      boolean boolean0 = player0.isConnected();
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.262777159644211
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(60.4F);
      Player player1 = new Player((-201), "", "&!m!Y{flJ+9SQP_0", (-12289), 79);
      player0.next = (Party) player1;
      player1.setDead((long) 0, false);
      player1.setConnected(false);
      player1.setZ((-17.935913F));
      player0.id = 5;
      int int0 = Packable.GAME_STATE;
      player1.setDead();
      player0.setJoinOK(player1, true);
      player0.setConnected(true);
      player0.setDead();
      player0.setJoinOK(player1, false);
      player1.setConnected(true);
      player1.setDead();
      player0.setY(79);
      player1.setX((short)4919);
      player1.isDead();
      player0.pack();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-17.935913F), player1.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(5, "", "", 0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}[n");
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-106);
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(10, "#`(P3N", "#`(P3N", 5);
      byte[] byteArray0 = player0.pack();
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      player0.setMoney(0.2F);
      player0.unpack(byteArray0);
      float float0 = player0.getMoney();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(255, "j)[O922oLwyKX|Rvr", "module.ModuleBrowerDialog$ModuleFilter", 16, 255);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-56);
      MockPrintStream mockPrintStream0 = new MockPrintStream("module.ModuleBrowerDialog$ModuleFilter");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[8];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "state.Player$JoinInfo";
      objectArray0[3] = (Object) "";
      objectArray0[3] = (Object) "";
      objectArray0[5] = (Object) "j)[O922oLwyKX|Rvr";
      mockPrintStream0.checkError();
      mockPrintStream0.printf(locale0, "c5S[XYQ@u\"lgp;Y", objectArray0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(filterOutputStream0);
      filterOutputStream0.write(255);
      MockPrintStream mockPrintStream2 = new MockPrintStream("state.Player$JoinInfo");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(dataOutputStream0);
      dataOutputStream0.writeUTF("state.Player$JoinInfo");
      filterOutputStream0.flush();
      dataOutputStream2.writeBytes("0sUv]d`lAf ");
      DataOutputStream dataOutputStream3 = new DataOutputStream(mockPrintStream1);
      Player player0 = new Player(255);
      Player player1 = new Player();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("`#t2KbjC");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      Player player0 = new Player((byte) (-56), "module.ModuleBrowserDialog$ModuleFilter", "`#t2KbjC", (byte) (-56));
      player0.pack(dataOutputStream0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals((-56), player0.getPictureId());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(10, "l_C`QuapZ", (-4145));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.mark((-227));
      player0.unpack(dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals((-4145), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-7979), "state.Party", "state.Player$JoinInfo", (-509));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("state.Party", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(float1, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals((-509), player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(255, "j)[O922oLwyKX|Rvr", "module.ModuleBrowserDialog$ModuleFilter", 10, 255);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-21);
      player0.isDead();
      player0.setX(0.0F);
      player0.getPictureId();
      player0.gangStrength();
      player0.getX();
      player0.getName();
      player0.setZ(0.0F);
      Player player1 = new Player(603, "", "module.ModuleBrowserDialog$ModuleFilter", (byte) (-21), 4919);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(565, "", "", (-1218));
      float float0 = player0.getMoney();
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player1.getX();
      assertEquals(10.0F, float1, 0.01F);
      assertEquals((-1218), player1.getPictureId());
      
      Player player2 = new Player((-2148), "KI\b<W>t]kmdq^QLp", 2);
      assertEquals(1, player2.getStrength());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertFalse(player2.isDead());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals("0.0.0.0", player2.getIP());
      assertTrue(player2.isConnected());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode5);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list3, locale_FilteringMode1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list1, locale_FilteringMode4);
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list5, locale_FilteringMode0);
      linkedList1.pollFirst();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list4, locale_FilteringMode5);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list4, locale_FilteringMode6);
      Player player0 = new Player((-13));
      Player player1 = new Player((-1), "ipKxA,4Q\"p>6NZ-:", "g\"5#@L", 726);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertTrue(player1.isConnected());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-13", player0.toString());
      assertEquals("ipKxA,4Q\"p>6NZ-:", player1.getIP());
      assertFalse(boolean0);
      assertEquals(726, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(255, "j)[O922oLwyKX|Rvr", "module.ModuleBrowserDialog$ModuleFilter", 10, 255);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-56);
      Player player1 = new Player(1185);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.setMoney((byte) (-56));
      player0.unpack(byteArray0);
      float float0 = player0.getMoney();
      assertEquals((-56.0F), float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.1265200744119195
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate0);
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate4);
      predicate1.test(predicate4);
      Predicate.isEqual((Object) "");
      predicate2.or(predicate5);
      predicate1.and(predicate0);
      Player player0 = new Player((-3484), "", (-3484));
      Predicate.isEqual((Object) player0);
      predicate2.or(predicate6);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player1 = new Player(2157, "H@K%t!+YV%!R4x[tUp", (-1424));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)105;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)39;
      player1.unpack(byteArray0);
      player1.setZ((-3939.0F));
      Player player2 = new Player((short)4919, "j{na6v[MCSzOwAI-", "j{na6v[MCSzOwAI-", 10);
      player1.setJoinOK(player2, false);
      player2.setConnected(true);
      player1.setDead();
      player2.setY(2157);
      player2.setX((-790.3541F));
      boolean boolean0 = player1.isJoinOK(player2, true);
      assertEquals((-790.3541F), player2.getX(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) mockPrintStream0;
      objectArray0[2] = (Object) "state.Player$JoinInfo";
      objectArray0[3] = (Object) "";
      objectArray0[4] = (Object) "";
      objectArray0[5] = (Object) "j)[O922oLwyKX|Rvr";
      objectArray0[6] = (Object) locale0;
      objectArray0[7] = (Object) locale0;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "c5S[XYQ@u\"lgp;Y", objectArray0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("c5S[XYQ@u\"lgp;Y");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream1);
      DataOutputStream dataOutputStream1 = new DataOutputStream(printStream0);
      dataOutputStream0.writeBytes("");
      DataOutputStream dataOutputStream2 = new DataOutputStream(mockPrintStream2);
      Player player0 = new Player();
      float float0 = player0.getY();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(0, "o9yN^qr[g;>7'eT&", "o9yN^qr[g;>7'eT&", (-1), (-2588));
      player0.getIP();
      assertEquals((-1), player0.getPictureId());
      assertEquals((-2588), player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale0 = Locale.CANADA_FRENCH;
      linkedList2.add(locale0);
      linkedList0.add((Locale) null);
      linkedList1.pollLast();
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      linkedList3.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      linkedList4.offerLast((Locale.LanguageRange) null);
      linkedList4.listIterator();
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode1);
      Predicate.isEqual((Object) "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2157, "", 2157);
      player0.setZ((-2163.4216F));
      player0.setJoinOK(player0, true);
      player0.setY(0.1F);
      player0.setDead((long) 2157);
      player0.setX(692.5F);
      boolean boolean0 = player0.isJoinOK(player0, true);
      assertEquals((-2163.4216F), player0.getZ(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "");
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate4);
      predicate1.test(predicate4);
      Predicate.isEqual((Object) "");
      predicate2.or(predicate5);
      predicate2.or(predicate6);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2157, "H@K%t!+YV%!R4x[tUp", (-1424));
      player0.setZ((-3939.0F));
      Player player1 = new Player((short)4919, "j{na6v[MCSzOwAI-", "j{na6v[MCSzOwAI-", 10);
      player1.setConnected(true);
      player0.setDead();
      player1.setY(2157);
      player1.setX((-790.3541F));
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-3939.0F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player((-3619), "Gj_#OE:_NLz7{=", "Gj_#OE:_NLz7{=", 10);
      player0.reset(true);
      assertEquals(10, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode5);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list3, locale_FilteringMode6);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list4);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode7 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2, locale_FilteringMode7);
      int int0 = 161;
      Player player0 = new Player(161, "o)`s)w/u%]xT*;|MV", "o)`s)w/u%]xT*;|MV", 161);
      Player player1 = null;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1765, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 10, 10);
      player0.pack();
      assertTrue(player0.isConnected());
      assertEquals(10, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      Player player0 = new Player((-866), "", "", (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (short)4919, 1676);
      byteArrayInputStream1.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      
      int int0 = player0.getStrength();
      assertTrue(player0.isConnected());
      assertEquals(0, int0);
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player(3190, (String) null, (-1120));
      int int0 = player0.getStrength();
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-1120), player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[8];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      mockPrintStream0.checkError();
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "", objectArray0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("state.Player$JoinInfo");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream2);
      DataOutputStream dataOutputStream1 = new DataOutputStream(printStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(printStream0);
      dataOutputStream2.writeUTF("n#g1{QOPco!9GUv9~");
      dataOutputStream2.flush();
      mockPrintStream2.print('j');
      DataOutputStream dataOutputStream3 = new DataOutputStream(printStream0);
      dataOutputStream0.writeBytes("state.Player$JoinInfo");
      dataOutputStream3.writeBytes("");
      dataOutputStream1.writeBytes("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Player player0 = new Player((-2986), "", "", 0);
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      player1.setX((-1031.77F));
      float float0 = player1.getX();
      assertEquals((-1031.77F), float0, 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-728), "gui.ModuleBrowserDialog$ModuleFilter", (-728));
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals((-728), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-1322));
      int int0 = player0.getPictureId();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player-1322", player0.getName());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player();
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(2766L);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("state.Player$JoinInfo");
      Locale locale0 = Locale.FRANCE;
      Object[] objectArray0 = new Object[8];
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      mockPrintStream0.checkError();
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "", objectArray0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(printStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("state.Player$JoinInfo");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream2);
      DataOutputStream dataOutputStream1 = new DataOutputStream(printStream0);
      DataOutputStream dataOutputStream2 = new DataOutputStream(mockPrintStream2);
      DataOutputStream dataOutputStream3 = new DataOutputStream(mockPrintStream2);
      dataOutputStream3.writeUTF("Q[i\"Pzzzy^P");
      dataOutputStream1.flush();
      mockPrintStream2.print('a');
      DataOutputStream dataOutputStream4 = new DataOutputStream(mockPrintStream2);
      dataOutputStream3.writeBytes("");
      dataOutputStream2.writeBytes("");
      dataOutputStream2.writeBytes("1u");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream5 = new DataOutputStream(filterOutputStream0);
      Player player0 = new Player();
      byteArrayOutputStream0.toByteArray();
      Player player1 = new Player((short)4919);
      boolean boolean0 = player1.isDead();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player4919", player1.getName());
      assertEquals(1, player1.getStrength());
      assertEquals(0, player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList0, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list1, locale_FilteringMode4);
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList0, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list2, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list4 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list5 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode6 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list6 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) list2, locale_FilteringMode6);
      Locale.FilteringMode locale_FilteringMode7 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) list6, locale_FilteringMode7);
      linkedList3.spliterator();
      linkedList1.pollFirst();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList6, (Collection<Locale>) list3, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) linkedList8, (Collection<Locale>) list5, locale_FilteringMode5);
      Player player0 = new Player((-1517), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", (-1995), (-1517));
      Player player1 = new Player((-1995));
      player0.gangStrength();
      System.setCurrentTimeMillis(4919L);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("`#t2KbjC");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      Player player0 = new Player((byte) (-41), "", "`#t2KbjC", (byte) (-41));
      player0.pack(dataOutputStream0);
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-41), player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      Player player0 = new Player((-866), "", (String) null, (byte)0, (byte)0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 1, 360);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals(3, byteArrayInputStream0.available());
      
      player0.unpack(byteArray0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player(10, "module.ModuleBrowserDialog$ModuleFilter", 10);
      Player player1 = new Player(10, "7f}dpHPbBsyI?^jgT-", "module.ModuleBrowserDialog$ModuleFilter", (-101), 10);
      player0.setJoinOK(player1, false);
      assertEquals("7f}dpHPbBsyI?^jgT-", player1.getIP());
      assertTrue(player1.isConnected());
      assertEquals((-101), player1.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Player player0 = new Player(833, "", 659);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Player player1 = new Player(1220, "", "", 833);
      player0.setDead(1L, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
  }
}
