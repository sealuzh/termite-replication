/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:27:30 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.SyncFailedException;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtGetParent();
      simpleNode0.identifiers = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.jjtGetParent();
      String string0 = ")";
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0753492132123688
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("PrimaryExpression");
      int int0 = 91;
      StringReader stringReader0 = new StringReader("PrimaryExpression");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 91);
      simpleNode0.dump("^-eW", stringWriter0);
      simpleNode0.setIdentifier("^-eW");
      simpleNode0.jjtAddChild(simpleNode0, 91);
      simpleNode0.setIdentifier("PrimaryExpression");
      // Undeclared exception!
      simpleNode0.dump("^-eW", stringWriter0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.2213836861256668
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("7");
      simpleNode0.toString("mXkO3G1Jg`oSFJ");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("}A;-Dp5cF", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 18);
      pushbackInputStream0.mark(18);
      int int0 = 0;
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(dataInputStream0, (-864));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "DRH_);W";
      ArrayList<String> arrayList0 = null;
      simpleNode0.identifiers = null;
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString("DRH_);W");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">=");
      stringReader0.read();
      String string0 = "RSIGNEDSHIFT";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(61);
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3033095367464425
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/nullCompilationUnit06VO2n/nullCompilationUnit");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-63);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[2] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      SimpleNode simpleNode0 = new SimpleNode(5);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/nullCompilationUnit06VO2n");
      FileSystemHandling.createFolder(evoSuiteFile2);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      SimpleNode simpleNode1 = new SimpleNode((byte)59);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.setIdentifier("|");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      simpleNode0.dump((String) null, stringWriter0);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2240010401516312
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString((String) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      stringWriter0.flush();
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier("|");
      simpleNode0.dump("|", stringWriter0);
      String string0 = "\\u";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.toString(string0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("nullCompilationUnit", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*gt</identifier>\n  <identifier>|</identifier>\n</CompilationUnit>\n<CompilationUnit>\n  <identifier>*gt</identifier>\n  <identifier>|</identifier>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      String string1 = simpleNode0.toString();
      assertEquals("CompilationUnit : > : | : &", string1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "FA< s*f";
      StringReader stringReader0 = new StringReader("FA< s*f");
      SimpleNode simpleNode0 = new SimpleNode(19);
      String string1 = "<<";
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump(")2E)$JR}pab7LA1", stringWriter0);
      stringWriter0.close();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileDescriptor fileDescriptor1 = new FileDescriptor();
      stringReader0.skip(1011058116345724928L);
      FileDescriptor fileDescriptor2 = new FileDescriptor();
      FileDescriptor fileDescriptor3 = new FileDescriptor();
      // Undeclared exception!
      try { 
        stringReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9925623248862889
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("<=");
      JavaParser javaParser0 = new JavaParser("<=");
      int int0 = 91;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 91);
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump(">", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream1);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(10);
      stringWriter0.close();
      String string0 = "+>ttf&U^dx.BvG";
      StringReader stringReader0 = new StringReader("+>ttf&U^dx.BvG");
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(43);
      SystemInUtil.addInputLine("+>ttf&U^dx.BvG");
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("<", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4314802149614008
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Literal");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SystemInUtil.addInputLine("ZLiteral");
      SimpleNode simpleNode1 = new SimpleNode((byte)10);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.toString("ZLiteral");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "ZLiteral");
      stringWriter1.flush();
      StringWriter stringWriter2 = new StringWriter(0);
      simpleNode1.dump("ZLiteral", stringWriter2);
      simpleNode1.setIdentifier("{");
      simpleNode1.dump("8", stringWriter2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode1.toString();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2358722265948696
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1);
      SystemInUtil.addInputLine("DjR&rW|Wt?<FY1%");
      simpleNode0.id = 597;
      simpleNode0.id = 1;
      simpleNode0.jjtGetParent();
      simpleNode0.toString("}IuW`1!H");
      simpleNode0.parent = null;
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.toString();
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 2506);
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hj|;Q");
      simpleNode0.toString("*ge");
      simpleNode0.jjtAddChild((Node) null, 2506);
      simpleNode0.toString();
      simpleNode0.toString("*ge");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      int int0 = (-1106823794);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1106823794));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106823794
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3709563182309956
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("nullCompilationUnit");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "}");
      FileSystemHandling.createFolder(evoSuiteFile0);
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      stringWriter0.flush();
      simpleNode0.setIdentifier("}");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("  <identifier>", stringWriter0);
      FileSystemHandling.createFolder(evoSuiteFile1);
      simpleNode0.toString("  <identifier>");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "W29Ah");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/nullCompilationUnit06VO2n/nullCompilationUnit");
      byte[] byteArray0 = new byte[3];
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/nullCompilationUnit06VO2n");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      SimpleNode simpleNode0 = new SimpleNode((byte)0);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/tmp/nullCompilationUnit06VO2n");
      FileSystemHandling.createFolder(evoSuiteFile3);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      String string0 = null;
      simpleNode0.setIdentifier((String) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      stringWriter0.flush();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2438228280066395
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("Oi.}<||i^w2Jj_Y");
      stringReader0.mark(0);
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaParserTreeConstants");
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(79);
      simpleNode0.setIdentifier("&&");
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.asReadOnlyBuffer();
      stringReader0.read(charBuffer0);
      stringWriter0.write((-1106552649));
      StringWriter stringWriter1 = new StringWriter(1916);
      simpleNode0.dump((String) null, stringWriter0);
      char[] charArray1 = new char[7];
      charArray1[0] = 'S';
      charArray1[1] = 'w';
      charArray1[2] = 'F';
      simpleNode0.toString("&&");
      charArray1[3] = 'n';
      charArray1[4] = 'H';
      // Undeclared exception!
      try { 
        stringWriter1.write(charArray1, 79, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3085781000463084
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = null;
      StringWriter stringWriter0 = new StringWriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.toString("?7*I!t5ip");
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(" aT4i+\"&&HXXoKSxX|", stringWriter0);
      InputStream inputStream0 = null;
      int int1 = 777;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 777);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.157677035511023
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ClassOrInterfaceDeclaration0.tmp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString((String) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      stringWriter0.flush();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump((String) null, stringWriter0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      File file0 = MockFile.createTempFile("nullCompilationUnit", "nullCompilationUnit");
      MockFile mockFile0 = new MockFile(file0, "|");
      MockFile mockFile1 = new MockFile("a~+!I9 ");
      MockFile.createTempFile("12)+e@}al", ",U50L^>\"=Q", (File) mockFile1);
      mockFile0.createNewFile();
      mockFile0.setWritable(false);
      MockFile mockFile2 = new MockFile("    ");
      file0.setReadOnly();
      MockFile mockFile3 = new MockFile("=j_:J`{[!<");
      try { 
        MockFile.createTempFile(">*Hl[Fe6A<YX[", "l%Siw}qQQ-kD", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0572842263622997
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("CompilationUnit");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 340);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 341);
      SimpleNode simpleNode1 = new SimpleNode(341);
      simpleNode0.jjtAddChild(simpleNode1, 341);
      JavaParser javaParser0 = new JavaParser("CompilationUnit");
      try { 
        javaParser0.MemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("<=");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("VariableDeclaratorId");
      stringReader1.ready();
      char[] charArray0 = new char[18];
      charArray0[1] = 'q';
      charArray0[1] = 'l';
      charArray0[0] = 'V';
      charArray0[5] = '\u001F';
      charArray0[6] = '\u001F';
      charArray0[7] = '$';
      charArray0[8] = '|';
      stringReader1.read(charArray0);
      stringReader0.reset();
      stringReader0.mark(2147483639);
      stringReader1.ready();
      stringReader0.markSupported();
      stringReader1.read();
      stringReader1.ready();
      stringReader0.read();
      stringReader1.reset();
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(61);
      stringReader1.read(charArray0);
      stringReader1.read(charArray0);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<PrimaryPrefix>\n  <identifier>*ge</identifier>\n</PrimaryPrefix>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2558763149981917
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("<=");
      JavaParser javaParser0 = new JavaParser("<=");
      int int0 = 91;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 91);
      char[] charArray0 = new char[7];
      CharBuffer.wrap(charArray0);
      SimpleNode simpleNode1 = new SimpleNode((-1715));
      Node node0 = simpleNode1.parent;
      simpleNode0.jjtAddChild((Node) null, 126);
      simpleNode0.toString(">");
      simpleNode0.dump("^-W", stringWriter0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump(">", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(sequenceInputStream1);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7602965197278015
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(22);
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser(">");
      simpleNode0.setIdentifier(">");
      int int0 = 81;
      char[] charArray0 = new char[2];
      charArray0[0] = '\u008D';
      charArray0[0] = 'p';
      CharBuffer.allocate('p');
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode1.setIdentifier("^-W");
      Node[] nodeArray0 = new Node[3];
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode1.children = nodeArray0;
      StringWriter stringWriter1 = new StringWriter(81);
      simpleNode1.dump("^-W", stringWriter1);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8172513212853555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "I";
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("7<>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringWriter0.append((CharSequence) "I");
      CharBuffer.allocate('}');
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(55);
      simpleNode0.setIdentifier("I");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("I", stringWriter0);
      simpleNode0.setIdentifier(";");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter2 = new StringWriter(55);
      simpleNode0.dump("ThrowStatemens[t", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4558921533008302
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ClassOrInterfaceDeclaration0.tmp");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString((String) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      stringWriter0.flush();
      simpleNode0.setIdentifier("");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump("|", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      File file0 = MockFile.createTempFile("nullCompilationUnit", "nullCompilationUnit");
      MockFile mockFile0 = new MockFile(file0, "|");
      MockFile mockFile1 = new MockFile("a~+!I9 ");
      MockFile.createTempFile("12)+e@}al", ",U5eL^>\"=Q", (File) mockFile1);
      mockFile0.createNewFile();
      mockFile0.setWritable(false);
      MockFile mockFile2 = new MockFile("qDOJeNVr^ZU.PV&} UN");
      file0.setReadOnly();
      MockFile mockFile3 = new MockFile("=j_:J`{[!<");
      try { 
        MockFile.createTempFile(">*Hl[Fe6A<YX[", "l%SiwqQQ-kD", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      SimpleNode simpleNode1 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.031298644335524
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      StringReader stringReader0 = new StringReader("kL2G4");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode1;
      nodeArray0[1] = (Node) simpleNode1;
      nodeArray0[2] = (Node) simpleNode1;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode1;
      nodeArray0[6] = (Node) simpleNode1;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode1.identifiers = arrayList0;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      simpleNode1.identifiers = arrayList1;
      simpleNode1.identifiers.add("<9#2Y3M 19|$X(Vp#");
      simpleNode0.jjtAddChild(simpleNode1, 1);
      simpleNode1.jjtGetNumChildren();
      simpleNode0.jjtAddChild(nodeArray0[4], 0);
      simpleNode1.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2213836861256668
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("7");
      simpleNode0.toString("mXkO3G1Jg`oSFJ");
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump("}A;-Dp5cF", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(18);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 18);
      pushbackInputStream0.mark(18);
      int int0 = 0;
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(dataInputStream0, (-864));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(10);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtGetChild(1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1436));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1436
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("e:XY@0VVD:@Q2Y");
      SystemInUtil.addInputLine("");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1829);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("<<", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.jjtSetParent(nodeArray0[1]);
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(0);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtClose();
      simpleNode0.toString();
      simpleNode0.jjtAddChild(nodeArray0[0], 3);
      assertEquals(4, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 2910;
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2910);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(4817);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-8323580));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4817
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("j@");
      stringReader0.read();
      StringReader stringReader1 = new StringReader("VariableDeclaratorId");
      char[] charArray0 = new char[18];
      charArray0[1] = 'l';
      stringReader0.markSupported();
      charArray0[0] = 'V';
      charArray0[5] = 'V';
      charArray0[6] = '\u001F';
      stringReader0.mark(106);
      charArray0[7] = '$';
      charArray0[8] = '\u001F';
      stringReader1.read(charArray0);
      stringReader0.reset();
      stringReader0.mark(2147483639);
      stringReader1.ready();
      stringReader0.markSupported();
      stringReader1.read();
      stringReader1.ready();
      stringReader1.reset();
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(64);
      stringReader1.read(charArray0);
      stringReader1.read(charArray0);
      JavaParser javaParser0 = new JavaParser("EqualityExpression");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-1256));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1256));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 22;
      SimpleNode simpleNode0 = new SimpleNode(22);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(22);
      simpleNode0.setIdentifier(":");
      simpleNode0.toString();
      simpleNode0.dump("MethodDeclarator : :", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 22);
      int int1 = (-1460);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(pipedInputStream0, (-1460));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8350516730230504
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("volatile");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CharBuffer.allocate(19);
      SimpleNode simpleNode0 = new SimpleNode(19);
      stringWriter0.flush();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.setIdentifier("|");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "]:OpT`V[E;HX[0p7w");
      simpleNode0.dump("^t", stringWriter0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Y}CDIJzMVcU{!*((?x");
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, "^t");
      simpleNode0.setIdentifier("<DIGIT>");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<DIGIT>");
      simpleNode0.dump("^t", stringWriter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f(x`i9$en2");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y}CDIJzMVcU{!*((?x");
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.16467004250403
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/ClassOrInterfaceDeclaration0.tmp");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile1);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString((String) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      stringWriter0.flush();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump("|", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      File file0 = MockFile.createTempFile("nullCompilationUnit", "nullCompilationUnit");
      MockFile mockFile0 = new MockFile(file0, "|");
      MockFile mockFile1 = new MockFile("a~+!I9 ");
      MockFile.createTempFile("12)+e@}al", ",U5eL^>\"=Q", (File) mockFile1);
      mockFile0.createNewFile();
      mockFile0.setWritable(false);
      MockFile mockFile2 = new MockFile("    ");
      file0.setReadOnly();
      MockFile mockFile3 = new MockFile("=j_:J`{[!<");
      try { 
        MockFile.createTempFile(">*Hl[Fe6A<YX[", "l%Siw}qQQ-kD", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(22);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(22);
      simpleNode0.setIdentifier("8");
      simpleNode0.toString();
      simpleNode0.dump("MethodDeclarator : 8", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 22);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(pushbackInputStream0);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('1');
      stringWriter1.close();
      stringWriter1.flush();
      StringWriter stringWriter2 = new StringWriter(2368);
      stringWriter0.flush();
      StringWriter stringWriter3 = stringWriter1.append('%');
      stringWriter0.flush();
      StringWriter stringWriter4 = new StringWriter('%');
      simpleNode0.setIdentifier("%");
      StringWriter stringWriter5 = new StringWriter('%');
      simpleNode0.dump("<", stringWriter3);
      assertEquals("1%<EnumConstant>\n  <identifier>%</identifier>\n</EnumConstant>\n", stringWriter3.toString());
      assertEquals("1%<EnumConstant>\n  <identifier>%</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = 22;
      SimpleNode simpleNode0 = new SimpleNode(22);
      StringWriter stringWriter0 = new StringWriter(22);
      stringWriter0.write(22);
      simpleNode0.setIdentifier(":");
      simpleNode0.toString();
      simpleNode0.dump("MethodDeclarator : :", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 22);
      int int1 = (-1460);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(pipedInputStream0, (-1460));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(10);
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.jjtAddChild(simpleNode0, 1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1084916051));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1084916051
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("g(D&VyxZd<N/|(<-meS");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFile mockFile0 = new MockFile("g(D&VyxZd<N", "|(<-meS");
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1625));
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.toString("Literal");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1625
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5554861453499473
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("AllocationExpression");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      javaParser0.PostfixExpression();
      simpleNode0.toString("\":\"");
      simpleNode0.dump("AllocationExpression", (Writer) null);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("");
      stringWriter0.write("\"instanceof\"");
      JavaParser javaParser0 = new JavaParser(">=");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtOpen();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)84;
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-1631));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }
}
