/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 07:18:46 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5707757863649698
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">J>zp}$K");
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.150549404173754
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      XPathLexer xPathLexer2 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer2.nextToken();
      xPathLexer2.operatorName();
      xPathLexer0.dots();
      xPathLexer1.or();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer1.dollar();
      Token token1 = xPathLexer1.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.821056028984572
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      XPathLexer xPathLexer2 = new XPathLexer("ZqF~;HH5DRL");
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer1.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer4.minus();
      assertEquals(6, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("B?Z2@)QG|");
      Token token5 = xPathLexer5.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer3.not();
      assertEquals("[", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer6.nextToken();
      assertEquals("B", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token8 = xPathLexer8.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer4.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals(" (", token10.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5879004814741164
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)Zr,x0b1'U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(")Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      token0.toString();
      Token token3 = xPathLexer0.at();
      token0.toString();
      token3.toString();
      token0.toString();
      String string0 = token3.toString();
      assertEquals("[ (16) (,)", string0);
      
      xPathLexer0.consume();
      String string1 = token0.toString();
      assertEquals("[ (17) ($)", string1);
      
      xPathLexer0.at();
      Token token4 = xPathLexer0.slashes();
      assertEquals("b", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("1", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      xPathLexer0.slashes();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("0-0amz\"");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.not();
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("-", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer3.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer6.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1967764831882866
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      token0.toString();
      String string0 = token2.toString();
      assertEquals("[ (16) (c)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (3) (!)", string1);
      
      xPathLexer0.consume();
      xPathLexer0.at();
      Token token3 = xPathLexer0.slashes();
      assertEquals("n", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.literal();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      int int0 = xPathLexer0.currentPosition();
      assertEquals(18, int0);
      
      xPathLexer0.nextToken();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('9');
      assertFalse(boolean0);
      
      Token token6 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("q%Y'L/WEM");
      xPathLexer1.identifierOrOperatorName();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer1.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("q%Y'L/WEM");
      Token token8 = xPathLexer1.nextToken();
      assertEquals("Y", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.dots();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("[ (3) (!)");
      xPathLexer3.setPreviousToken(token6);
      Token token9 = xPathLexer3.leftParen();
      assertEquals("[", token9.getTokenText());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("%", token11.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer2.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("Y", token12.getTokenText());
      
      xPathLexer3.getPreviousToken();
      Token token13 = xPathLexer3.plus();
      assertEquals(5, token13.getTokenType());
      assertEquals(" ", token13.getTokenText());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.095639875060596
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(")A", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      String string0 = token2.toString();
      assertEquals("[ (22) (Zr)", string0);
      
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("x", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("0", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token2);
      Token token5 = xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      String string1 = token0.toString();
      assertEquals("[ (17) ($)", string1);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(">", token6.getTokenText());
      assertEquals(9, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.leftBracket();
      String string2 = token5.toString();
      assertEquals("[ (15) (b16U)", string2);
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token8);
      assertEquals("C", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (17) ($)");
      Token token12 = xPathLexer1.leftBracket();
      assertEquals("[", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertNull(token13);
      
      Token token14 = xPathLexer1.colon();
      assertEquals(" ", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6527592460588534
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("rd", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token2 = xPathLexer1.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals("1", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("Ya JF@TN'&]NaNE");
      XPathLexer xPathLexer5 = new XPathLexer("LGHH+wY-bB'");
      Token token8 = xPathLexer4.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("Ya", token8.getTokenText());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8782377010725404
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("m", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer0.notEquals();
      assertEquals("co", token5.getTokenText());
      
      xPathLexer0.plus();
      Token token6 = xPathLexer0.pipe();
      assertEquals(".", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("e", token7.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.consume();
      Token token9 = xPathLexer0.dots();
      assertEquals("n.", token9.getTokenText());
      assertEquals(14, token9.getTokenType());
      
      xPathLexer0.consume();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("ax", token10.getTokenText());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("path.XPathLexer", token11.getTokenText());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftParen();
      assertEquals(1, token13.getTokenType());
      
      Token token14 = xPathLexer0.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer0.slashes();
      assertEquals(11, token15.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.437174134624561
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("pgl\tjBTL(e=}{c@");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("pgl", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7045643697503083
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.hasMoreChars();
      xPathLexer0.plus();
      xPathLexer0.setXPath("dQ)");
      xPathLexer0.number();
      xPathLexer0.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.002003857328997
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer1.star();
      Token token5 = xPathLexer1.comma();
      assertEquals("m", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(".", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("LGHH+wY-bB'");
      Token token10 = xPathLexer2.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer1.nextToken();
      Token token12 = xPathLexer2.leftParen();
      assertEquals(1, token12.getTokenType());
      
      xPathLexer3.setPreviousToken(token4);
      assertEquals("o", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.identifierOrOperatorName();
      Token token13 = xPathLexer2.identifierOrOperatorName();
      assertNull(token13);
      
      Token token14 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9134551811635956
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.endPosition();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.LA(0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      xPathLexer0.consume((-900));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6955020477555363
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("l", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (!)", string0);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("P", token3.getTokenText());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (3) (!)");
      XPathLexer xPathLexer2 = new XPathLexer("\"={`d");
      xPathLexer1.identifier();
      Token token5 = xPathLexer2.nextToken();
      assertEquals("", token5.getTokenText());
      
      xPathLexer1.identifier();
      Token token6 = xPathLexer1.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer2.or();
      xPathLexer1.operatorName();
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(" ", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9664440485323467
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.consume((-3152));
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8292413162525012
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">J>zp}$K");
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("?+ij|-kBu9rH=\".0O");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.and();
      Token token2 = xPathLexer2.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("?", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("V");
      xPathLexer2.slashes();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.identifierOrOperatorName();
      Token token3 = xPathLexer5.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer3.setPreviousToken(token0);
      assertEquals("J", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer3.currentPosition();
      XPathLexer xPathLexer6 = new XPathLexer("pNct[H:#8bRNTb&`");
      Token token4 = xPathLexer6.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("pN", token4.getTokenText());
      
      xPathLexer4.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer("?+ij|-kBu9rH=\".0O");
      xPathLexer7.identifier();
      XPathLexer xPathLexer8 = new XPathLexer("V");
      Token token5 = xPathLexer1.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token5.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("?+ij|-kBu9rH=\".0O");
      xPathLexer9.mod();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token6 = xPathLexer10.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer4.nextToken();
      Token token7 = xPathLexer10.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer8.dollar();
      assertEquals("V", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer4.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer10.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7590479998760498
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      token0.toString();
      xPathLexer0.consume((-520));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.112970088218715
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhO-~");
      XPathLexer xPathLexer1 = new XPathLexer("=rd21wC96kGhO-~");
      XPathLexer xPathLexer2 = new XPathLexer("comwerken.saxpath.Token");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer1.not();
      assertEquals("r", token1.getTokenText());
      
      Token token2 = xPathLexer2.notEquals();
      assertEquals("co", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("d21wC96kGhO-", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("comwerken.saxpath.Token");
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.setXPath("n'f@O=(&fMiqOm.");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.notEquals();
      Token token4 = xPathLexer1.pipe();
      assertEquals("~", token4.getTokenText());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.rightBracket();
      Token token5 = xPathLexer0.at();
      assertEquals("r", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer4.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("'", token8.getTokenText());
      
      Token token9 = xPathLexer5.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer6.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer5.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9308466954971348
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("er", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("ken.saxpath.XPathLexer", token6.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("r", token8.getTokenText());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals(21, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("+Tdcj!L");
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token10 = xPathLexer1.nextToken();
      assertEquals(5, token10.getTokenType());
      assertEquals("+", token10.getTokenText());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals("Td", token11.getTokenText());
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("n", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8857015620748085
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.slashes();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("!5clPn:F[Su9 WR");
      XPathLexer xPathLexer4 = new XPathLexer("%:zZyM{(]]InlM*");
      xPathLexer4.minus();
      XPathLexer xPathLexer5 = new XPathLexer("[ (3) (!)");
      xPathLexer0.comma();
      xPathLexer4.not();
      xPathLexer4.nextToken();
      Token token2 = xPathLexer2.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0060091158630007
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(")A", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      String string0 = token2.toString();
      assertEquals("[ (22) (Zr)", string0);
      
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(0);
      Token token3 = xPathLexer0.at();
      assertEquals("x", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token2);
      Token token5 = xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      String string1 = token0.toString();
      assertEquals("[ (17) ($)", string1);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(">", token6.getTokenText());
      assertEquals(9, token6.getTokenType());
      
      xPathLexer0.nextToken();
      String string2 = token5.toString();
      assertEquals("[ (15) (b16U)", string2);
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.minus();
      xPathLexer0.setPreviousToken(token7);
      assertEquals("^", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals("CM", token8.getTokenText());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6699806163673032
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("=r", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("d", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("C", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      Token token4 = xPathLexer0.dollar();
      assertEquals("9", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("6", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer("?I!u");
      XPathLexer xPathLexer4 = new XPathLexer("?I!u");
      Token token7 = xPathLexer4.nextToken();
      assertEquals("?I!u", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("=rd21wC96kGhOt~");
      Token token8 = xPathLexer5.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("=", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("GhOt", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("?", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer4.plus();
      assertEquals("?", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer4.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("I", token13.getTokenText());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7128544275659459
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals("c", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (!)", string0);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("P", token3.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer1.identifier();
      xPathLexer1.at();
      xPathLexer1.or();
      xPathLexer0.dollar();
      xPathLexer1.or();
      Token token4 = xPathLexer1.star();
      assertEquals("5", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("F", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("c", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      xPathLexer0.setXPath("jA`%N9zX+C=eRlrQ]p");
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("j", token7.getTokenText());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("jA`%N9zX+C=eRlrQ]p");
      XPathLexer xPathLexer3 = new XPathLexer("_)Nqh=#");
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("jA", token8.getTokenText());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals("%", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("_)", token11.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6472835577276501
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      XPathLexer xPathLexer1 = new XPathLexer("=rd21wC96kGhOt~");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer1.not();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer2.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("co", token1.getTokenText());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.at();
      assertEquals("=", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.identifier();
      xPathLexer4.minus();
      Token token3 = xPathLexer3.minus();
      assertEquals("c", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer1.comma();
      assertEquals("~", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer6.slashes();
      assertEquals("c", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("om.werken.saxpath.Token", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals("d", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0366497997935733
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("=", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("I9*fr}tjumkng Hv");
      Token token1 = xPathLexer0.minus();
      assertEquals("I", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("*", token3.getTokenText());
      
      xPathLexer0.star();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("r}", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(" H", token6.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("C+rT2LCD");
      Token token7 = xPathLexer1.pipe();
      assertEquals("C", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.rightBracket();
      assertEquals("+", token8.getTokenText());
      
      xPathLexer1.at();
      xPathLexer0.rightBracket();
      Token token9 = xPathLexer1.plus();
      assertEquals("T", token9.getTokenText());
      
      Token token10 = xPathLexer1.at();
      assertEquals("2", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer3.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer1.number();
      assertEquals(30, token13.getTokenType());
      assertEquals("", token13.getTokenText());
      
      Token token14 = xPathLexer1.comma();
      assertEquals("L", token14.getTokenText());
      
      Token token15 = xPathLexer1.not();
      assertEquals("C", token15.getTokenText());
      assertEquals(23, token15.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token16 = xPathLexer4.notEquals();
      assertEquals(22, token16.getTokenType());
      
      xPathLexer3.rightBracket();
      Token token17 = xPathLexer0.comma();
      assertEquals(32, token17.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.069089703775913
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.minus();
      assertEquals("c", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("m", token4.getTokenText());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("m", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      Token token7 = xPathLexer0.at();
      assertEquals("k", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals("e", token8.getTokenText());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(31, token11.getTokenType());
      assertEquals(".", token11.getTokenText());
      
      xPathLexer1.comma();
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer1.comma();
      assertEquals(32, token15.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0400135338689087
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.equals();
      assertEquals(".", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      Token token6 = xPathLexer1.nextToken();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals("w", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.rightBracket();
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("e", token8.getTokenText());
      
      Token token9 = xPathLexer2.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (3) (m)", string0);
      
      xPathLexer1.setPreviousToken(token5);
      assertEquals("m", token5.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token13.getTokenText());
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer1.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer0.dollar();
      assertEquals(26, token15.getTokenType());
      
      xPathLexer2.doubleColon();
      Token token16 = xPathLexer0.notEquals();
      assertEquals(22, token16.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4946042220189042
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("'%e}Z3U\"xpXR");
      XPathLexer xPathLexer2 = new XPathLexer("'%e}Z3U\"xpXR");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      Token token0 = xPathLexer2.leftParen();
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer3.getXPath();
      xPathLexer0.mod();
      xPathLexer1.literal();
      XPathLexer xPathLexer4 = new XPathLexer("'%e}Z3U\"xpXR");
      Token token1 = xPathLexer1.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("'%e}Z3U\"xpXR");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("%e}Z3U\"xpXR", token3.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer6.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.717016321915513
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(14, token3.getTokenType());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.star();
      assertEquals("w", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.nextToken();
      Token token7 = xPathLexer2.dots();
      assertEquals("v", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer2.leftParen();
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("jM", token8.getTokenText());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.97613471996344
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      int int0 = (-3175);
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-3175));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.65829744209791
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.at();
      token1.toString();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (16) (/)");
      xPathLexer1.consume((-1));
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("lJv7KLXd4f/mT");
      xPathLexer2.slashes();
      xPathLexer2.operatorName();
      xPathLexer0.getPreviousToken();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.078664645414877
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.whitespace();
      xPathLexer0.consume(0);
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.whitespace();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer1.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("]xii-D(Ns@vN52qyP ");
      Token token10 = xPathLexer2.nextToken();
      assertEquals("]", token10.getTokenText());
      assertEquals(4, token10.getTokenType());
      
      xPathLexer1.leftParen();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals("xi", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer3.minus();
      assertEquals("c", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.753800335068724
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("2", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("1w", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.dots();
      assertEquals("6", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.setXPath("=rd21wC96kGhOt~");
      Token token3 = xPathLexer0.notEquals();
      assertEquals("=r", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("d", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.at();
      assertEquals("1", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("w", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("C", token7.getTokenText());
      
      Token token8 = xPathLexer0.star();
      assertEquals("9", token8.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.comma();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("hOt", token10.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token11 = xPathLexer2.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.0265413473559386
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      Token token1 = xPathLexer0.minus();
      assertEquals("l", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("P", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.equals();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals("F", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("Su9", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("D[W{R^Cn-(");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals("W", token10.getTokenText());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer3.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token14 = xPathLexer4.not();
      assertEquals(23, token14.getTokenType());
      
      xPathLexer4.or();
      Token token15 = xPathLexer3.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.94704603900671
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.number();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("Nk", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      token0.toString();
      Token token3 = xPathLexer0.at();
      String string0 = token3.toString();
      assertEquals("[ (16) ()", string0);
      
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (16) (/)");
      String string1 = token0.toString();
      assertEquals("[ (4) (O)", string1);
      
      xPathLexer1.consume((-1));
      Token token4 = xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("lJv7KLXd4f/mT");
      Token token5 = xPathLexer2.slashes();
      assertEquals("l", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer2.operatorName();
      Token token6 = xPathLexer0.not();
      assertEquals("^", token6.getTokenText());
      
      xPathLexer0.setPreviousToken(token4);
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("[ (4) (O)");
      xPathLexer3.setPreviousToken(token2);
      Token token7 = xPathLexer3.leftBracket();
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("v7KLXd4f", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer(";)0?fe^3PmS#r/w}");
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
      
      Token token11 = xPathLexer1.star();
      assertEquals(" ", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer4.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer2.number();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer5.colon();
      assertEquals(";", token14.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6927653023868718
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.star();
      assertEquals("m", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      xPathLexer1.nextToken();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("w", token7.getTokenText());
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("}(", token8.getTokenText());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("e", token9.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.212117252427144
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.minus();
      assertEquals("c", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.star();
      assertEquals("w", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("co", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.at();
      assertEquals("w", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.plus();
      String string0 = token8.toString();
      assertEquals("[ (5) (r)", string0);
      
      xPathLexer0.setPreviousToken(token8);
      xPathLexer0.or();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oh1jG>_[P'2n-$F");
      xPathLexer1.and();
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("o", token10.getTokenText());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token12 = xPathLexer2.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer2.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer1.equals();
      assertEquals(21, token14.getTokenType());
      assertEquals(">", token14.getTokenText());
      
      Token token15 = xPathLexer1.dollar();
      assertEquals("_", token15.getTokenText());
      
      Token token16 = xPathLexer2.dollar();
      assertEquals(26, token16.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.349959750047161
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">J>zp}$K");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      Token token3 = xPathLexer0.equals();
      Token token4 = xPathLexer0.star();
      assertEquals("K", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("q5^.:OeQfEBHzo");
      Token token6 = xPathLexer0.notEquals();
      assertEquals("q5", token6.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.dollar();
      assertEquals(".", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals("O", token9.getTokenText());
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals("e", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      String string0 = token3.toString();
      assertEquals("[ (21) ($)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("q5^.:OeQfEBHzo");
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("Q", token11.getTokenText());
      
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("q", token12.getTokenText());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals("fEBHzo", token13.getTokenText());
      
      Token token14 = xPathLexer0.dots();
      assertEquals(13, token14.getTokenType());
      
      Token token15 = xPathLexer1.nextToken();
      assertEquals("5", token15.getTokenText());
      
      xPathLexer1.leftParen();
      Token token16 = xPathLexer0.notEquals();
      assertEquals(22, token16.getTokenType());
      
      Token token17 = xPathLexer0.slashes();
      assertEquals(11, token17.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3230551097436207
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",`k~rX");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(",", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("|Q6j}M,a<#S");
      XPathLexer xPathLexer3 = new XPathLexer(",`k~rX");
      xPathLexer1.nextToken();
      Token token3 = xPathLexer3.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("C:k''m");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer5.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer3.dots();
      assertEquals("`", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(17, token6.getTokenType());
      assertEquals("|", token6.getTokenText());
      
      Token token7 = xPathLexer3.leftParen();
      assertEquals("k", token7.getTokenText());
      
      Token token8 = xPathLexer4.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("C:", token8.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6937828965654924
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals("c", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("LGHH+wY-bB'");
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("", token9.getTokenText());
      
      xPathLexer2.comma();
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer3.comma();
      assertEquals(32, token13.getTokenType());
      assertEquals("L", token13.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.2818830128195193
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = "y=^Z;DTF";
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.comma();
      token0.toString();
      Token token1 = xPathLexer0.at();
      token0.toString();
      xPathLexer0.consume();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      String string1 = "com.werken.saxpath.Token";
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.consume((-1));
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.slashes();
      xPathLexer2.operatorName();
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer1.currentPosition();
      xPathLexer2.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer1.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8223433097937245
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.at();
      token1.toString();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (16) (/)");
      xPathLexer1.consume((-1));
      Token token2 = xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("lJv7KLXd4f/mT");
      xPathLexer2.slashes();
      xPathLexer2.operatorName();
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer1.currentPosition();
      xPathLexer0.notEquals();
      xPathLexer2.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6168050328047372
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[eu9 WR");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.not();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("P", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      XPathLexer xPathLexer2 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      Token token4 = xPathLexer2.identifier();
      assertEquals("HIR7h_wF", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("n", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("!5clPn:F[eu9 WR");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
      
      Token token7 = xPathLexer1.not();
      assertEquals("H", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals("{N_VhDf'$", token8.getTokenText());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("F", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.doubleColon();
      assertEquals("5c", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer1.notEquals();
      assertEquals("IR", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.588413784688448
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume((-1158));
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6558723478600355
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("k]%UF)(9VD|mil8}m");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer5 = new XPathLexer("k]%UF)(9VD|mil8}m");
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer8 = null;
      try {
        xPathLexer8 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1250256580272118
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer0.plus();
      assertEquals("o", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token13 = xPathLexer5.dollar();
      assertEquals(26, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token14 = xPathLexer6.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0394999665850984
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("5", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals("c", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token3 = xPathLexer0.equals();
      assertEquals("n", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(":", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("F", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.plus();
      assertEquals("W", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token10 = xPathLexer2.nextToken();
      assertEquals(2, token10.getTokenType());
      assertEquals(")", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("N|P%@+'s_*xAXU7E)e");
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("e}hD`t{kR");
      Token token12 = xPathLexer3.leftBracket();
      assertEquals("N", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.nextToken();
      assertEquals(15, token13.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0135427054108836
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.notEquals();
      token2.toString();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      String string0 = token4.toString();
      assertEquals("[ (22) (x0)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (19) ()A)", string1);
      
      Token token5 = xPathLexer0.nextToken();
      Token token6 = xPathLexer0.rightParen();
      token6.toString();
      String string2 = token0.toString();
      assertEquals("[ (17) ($)", string2);
      
      String string3 = token5.toString();
      assertEquals("[ (15) (b16U)", string3);
      
      Token token7 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightParen();
      Token token8 = xPathLexer0.identifier();
      assertEquals("M", token8.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (Zr)");
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.operatorName();
      String string4 = token6.toString();
      assertEquals("[ (2) (>)", string4);
      
      String string5 = token7.toString();
      assertEquals("[ (20) (^)", string5);
      
      xPathLexer0.relationalOperator();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.getPreviousToken();
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.229029108580576
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-2268));
      String string0 = "'Dz[WO1R";
      xPathLexer0.setXPath("'Dz[WO1R");
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8179277515907706
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("5", token0.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("DqQc@A#fokJ5@vgZMb");
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.not();
      assertEquals("c", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer2.notEquals();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("DqQc@A#fokJ5@vgZMb");
      XPathLexer xPathLexer4 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      xPathLexer3.identifier();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(":F", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("[", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer2.identifier();
      assertEquals("clPn", token4.getTokenText());
      
      Token token5 = xPathLexer1.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer3.literal();
      assertEquals(27, token6.getTokenType());
      assertNotNull(token6);
      assertEquals("A#fokJ5", token6.getTokenText());
      
      xPathLexer3.or();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("S", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7380127876673965
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("c", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer1.dollar();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("S@1)>;M8Kc6hUO\"vq=");
      xPathLexer0.nextToken();
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer4.nextToken();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer5.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer2.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6004234553489063
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("I~.0K%f");
      XPathLexer xPathLexer1 = new XPathLexer("I~.0K%f");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer2.notEquals();
      assertEquals("co", token1.getTokenText());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token3 = xPathLexer2.identifier();
      assertEquals("m.werken.saxpath.Token", token3.getTokenText());
      
      xPathLexer4.minus();
      Token token4 = xPathLexer3.minus();
      assertEquals("c", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token5 = xPathLexer5.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals("~", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer5.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("om", token9.getTokenText());
      
      Token token10 = xPathLexer5.notEquals();
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8659896720958833
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("1w", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("F");
      Token token2 = xPathLexer1.identifier();
      assertEquals("F", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("C", token3.getTokenText());
      
      xPathLexer1.minus();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("96", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("8#");
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("JAV%X>5%}XY@%(c o");
      xPathLexer3.identifier();
      Token token6 = xPathLexer3.pipe();
      assertEquals("%", token6.getTokenText());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals("X", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token9 = xPathLexer4.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer0.leftParen();
      Token token12 = xPathLexer2.notEquals();
      assertEquals("8#", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer2.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.1752606613802725
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.identifier();
      token2.toString();
      xPathLexer0.at();
      Token token3 = xPathLexer0.notEquals();
      token3.toString();
      token3.toString();
      token3.toString();
      token1.toString();
      Token token4 = xPathLexer0.nextToken();
      Token token5 = xPathLexer0.rightParen();
      token4.toString();
      token5.toString();
      token0.toString();
      token4.toString();
      Token token6 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      token6.toString();
      token6.toString();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (x0)");
      xPathLexer1.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("[ (15) (Zr)");
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      xPathLexer1.not();
      xPathLexer0.dollar();
      Token token7 = xPathLexer2.relationalOperator();
      assertNull(token7);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1816904991347625
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)Zr,x0b1'U>^CM");
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.star();
      token0.toString();
      Token token2 = xPathLexer0.at();
      token0.toString();
      token2.toString();
      token0.toString();
      token2.toString();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.at();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("$)Zr,x0b1'U>^CM");
      xPathLexer1.nextToken();
      xPathLexer1.identifier();
      xPathLexer1.operatorName();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.relationalOperator();
      assertNull(token3);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0529217537225186
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("`_>bJGX");
      XPathLexer xPathLexer1 = new XPathLexer("`_>bJGX");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("`_>bJGX", token0.getTokenText());
      
      Token token1 = xPathLexer1.not();
      assertEquals("`", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer1.or();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("`", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8657624156012174
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("rd", token1.getTokenText());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("1w", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("F");
      Token token3 = xPathLexer1.identifier();
      assertEquals("F", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("C", token4.getTokenText());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("96", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("8#");
      Token token7 = xPathLexer0.comma();
      assertEquals("k", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("JAV%X>5%}XY@%(c o");
      Token token8 = xPathLexer3.pipe();
      assertEquals("J", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("AV", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer4.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      Token token13 = xPathLexer0.leftParen();
      assertEquals("G", token13.getTokenText());
      
      Token token14 = xPathLexer2.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer2.slashes();
      assertEquals(11, token15.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.8699654210720413
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.number();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      token0.toString();
      xPathLexer1.leftBracket();
      token0.toString();
      xPathLexer1.notEquals();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer0.rightParen();
      xPathLexer0.isIdentifierStartChar('H');
      xPathLexer0.getPreviousToken();
      xPathLexer1.relationalOperator();
      xPathLexer1.star();
      xPathLexer0.mod();
      xPathLexer1.literal();
      xPathLexer1.minus();
      xPathLexer1.equals();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer1.consume((-1048));
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      // Undeclared exception!
      try { 
        xPathLexer1.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.117861546544476
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer0.minus();
      assertEquals("c", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token3 = xPathLexer0.equals();
      assertEquals("m", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals("w", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer0.notEquals();
      Token token8 = xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      assertEquals("w", token10.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      
      String string0 = token8.toString();
      assertEquals("[ (3) (m)", string0);
      
      String string1 = token7.toString();
      assertEquals("[ (22) (co)", string1);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer1.or();
      Token token12 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token14 = xPathLexer3.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      Token token15 = xPathLexer2.at();
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.0781891240518413
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(".w", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("er", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("ken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.minus();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" 4G2E`zt]a<\"$");
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer1.dollar();
      Token token10 = xPathLexer1.nextToken();
      assertEquals("4", token10.getTokenText());
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer1.dollar();
      assertEquals("G", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer0.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9368030505445861
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.slashes();
      token0.toString();
      xPathLexer0.getPreviousToken();
      xPathLexer0.consume(0);
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("y=^Z;DTF");
      xPathLexer2.literal();
      xPathLexer2.comma();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer1.currentPosition();
      xPathLexer1.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer2.isIdentifierChar('_');
      xPathLexer2.getPreviousToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer1.mod();
      xPathLexer1.literal();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.minus();
      XPathLexer xPathLexer5 = new XPathLexer("ZN7oC?h[");
      xPathLexer5.comma();
      xPathLexer2.not();
      xPathLexer5.nextToken();
      Token token1 = xPathLexer3.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6811911071888561
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals("c", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (!)", string0);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("P", token3.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer1.identifier();
      Token token4 = xPathLexer1.at();
      assertEquals("!", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.dollar();
      xPathLexer1.or();
      Token token5 = xPathLexer1.star();
      assertEquals("5", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("F", token6.getTokenText());
      
      Token token7 = xPathLexer1.equals();
      assertEquals("c", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("9;bA|e$4;RsH;;=D,");
      XPathLexer xPathLexer3 = new XPathLexer("9;bA|e$4;RsH;;=D,");
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("lPn", token8.getTokenText());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("9", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(";", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.6503715978322275
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("5", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("lPn:F[Su9 WR", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("lP", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("n", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("+:/>UWWZcCvHp=K@");
      Token token6 = xPathLexer2.leftBracket();
      assertEquals(3, token6.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5397558299852288
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.rightParen();
      Token token1 = xPathLexer0.slashes();
      token0.toString();
      xPathLexer0.rightBracket();
      token1.toString();
      token0.toString();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.at();
      token2.toString();
      xPathLexer0.consume();
      token2.toString();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-3878));
      xPathLexer0.at();
      xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        xPathLexer1.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7094569468830896
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.number();
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      token2.toString();
      token1.toString();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.isIdentifierStartChar('^');
      xPathLexer0.getPreviousToken();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.consume((-1734));
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6485609653156343
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("[ (23) (5)");
      XPathLexer xPathLexer2 = new XPathLexer("y?.JK(=$7exJ`N|+NzQ");
      xPathLexer2.nextToken();
      xPathLexer1.not();
      Token token1 = xPathLexer2.or();
      assertNull(token1);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.546044018857461
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.relationalOperator();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer5 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer1.nextToken();
      xPathLexer0.equals();
      xPathLexer1.not();
      XPathLexer xPathLexer6 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer1.slashes();
      xPathLexer4.dollar();
      xPathLexer3.minus();
      xPathLexer5.nextToken();
      xPathLexer3.rightParen();
      Token token0 = xPathLexer4.or();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.215029807748267
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals("o", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      Token token3 = xPathLexer0.star();
      assertEquals("w", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("ken.saxpath.XPathLexer", token4.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.pipe();
      assertEquals("m", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("e", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("r", token8.getTokenText());
      
      xPathLexer0.consume();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("e", token9.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("ax", token11.getTokenText());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals("p", token12.getTokenText());
      
      xPathLexer0.notEquals();
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      assertEquals("h.", token13.getTokenText());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8478783393579101
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("$", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(")", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.notEquals();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("AZ", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.pipe();
      xPathLexer1.relationalOperator();
      xPathLexer1.rightBracket();
      xPathLexer1.at();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals("r", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer1.setPreviousToken(token5);
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer0.mod();
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals(23, token11.getTokenType());
      assertEquals("!", token11.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0228443941831122
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("!", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("l", token3.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6164341240783577
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.leftParen();
      token1.toString();
      xPathLexer0.or();
      String string0 = token1.toString();
      assertEquals("[ (2) (5)", string0);
      
      Token token3 = xPathLexer0.leftBracket();
      String string1 = token3.toString();
      assertEquals("[ (3) (l)", string1);
      
      xPathLexer0.rightBracket();
      String string2 = token2.toString();
      assertEquals("[ (1) (c)", string2);
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("F", token5.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("!", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Jk;-+iZd^PnR0!&");
      Token token6 = xPathLexer1.slashes();
      assertEquals("J", token6.getTokenText());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("Jk;-+iZd^PnR0!&");
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("[S", token8.getTokenText());
      
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(";", token9.getTokenText());
      
      Token token10 = xPathLexer0.colon();
      assertEquals("u", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.069623991127452
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.rightParen();
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (2) (5)", string0);
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (1) (c)", string1);
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token0);
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer0.not();
      assertEquals(" ", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.5971175588040412
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      Token token5 = xPathLexer2.doubleColon();
      assertEquals("vW", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer1.minus();
      assertEquals(6, token6.getTokenType());
      assertEquals("W", token6.getTokenText());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals("j", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6720882722087387
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.leftParen();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("I;\"3\u0001a t&s]dh");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.doubleColon();
      xPathLexer4.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer3.or();
      Token token1 = xPathLexer5.leftBracket();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.8922785101323605
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.number();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("A", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      token0.toString();
      Token token3 = xPathLexer0.at();
      assertEquals("Z", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      token0.toString();
      token0.toString();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("m436_e{#^hmMMhB/");
      Token token4 = xPathLexer1.pipe();
      assertEquals("m", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("lJv7KLXd4f/mT");
      Token token5 = xPathLexer2.star();
      xPathLexer0.operatorName();
      xPathLexer1.setPreviousToken((Token) null);
      String string0 = token5.toString();
      assertEquals("[ (20) (l)", string0);
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.number();
      String string1 = token8.toString();
      assertEquals("[ (30) ()", string1);
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(30, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("p7oRt");
      XPathLexer xPathLexer4 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token10 = xPathLexer1.leftBracket();
      assertEquals("", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      xPathLexer1.nextToken();
      Token token11 = xPathLexer4.nextToken();
      assertEquals(2, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0865406324247866
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">J>zp}$K");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("23#at9ykV[k(iWy");
      Token token1 = xPathLexer0.minus();
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("z", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.dollar();
      assertEquals("}", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("23#at9ykV[k(iWy");
      Token token4 = xPathLexer2.star();
      assertEquals("2", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("$", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.nextToken();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      xPathLexer4.nextToken();
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("23#at9ykV[k(iWy");
      Token token9 = xPathLexer5.colon();
      assertEquals("2", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer5.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer5.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.447472689041771
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".OOHm?");
      Token token0 = xPathLexer0.star();
      assertEquals(".", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("OOHm", token1.getTokenText());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals("o", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("m.", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5675557177682715
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.at();
      token1.toString();
      xPathLexer0.consume();
      token0.toString();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (16) (/)");
      token0.toString();
      xPathLexer1.consume((-1));
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("lJv7KLXd4f/mT");
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("7CrVN");
      XPathLexer xPathLexer4 = new XPathLexer("7CrVN");
      xPathLexer3.nextToken();
      xPathLexer2.not();
      xPathLexer4.or();
      // Undeclared exception!
      try { 
        xPathLexer1.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.6437672690898113
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.rightBracket();
      token1.toString();
      token1.toString();
      token0.toString();
      xPathLexer0.at();
      token1.toString();
      xPathLexer0.consume();
      token2.toString();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.consume((-1));
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.slashes();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      xPathLexer2.identifier();
      // Undeclared exception!
      try { 
        xPathLexer1.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9463646662884728
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.equals();
      assertEquals("y", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y=^Z;DTF");
      XPathLexer xPathLexer2 = new XPathLexer("y=^Z;DTF");
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer1.notEquals();
      assertEquals("=^", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("01");
      Token token3 = xPathLexer3.nextToken();
      assertEquals("01", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("/P:$xG>1J;^/#]D[r");
      xPathLexer2.identifier();
      Token token4 = xPathLexer5.nextToken();
      assertEquals("/", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer4.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer2.operatorName();
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      xPathLexer3.or();
      xPathLexer4.operatorName();
      xPathLexer4.slashes();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.9684557960550915
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("Nk", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("/", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      token4.toString();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.div();
      token0.toString();
      String string0 = token4.toString();
      assertEquals("[ (4) ()", string0);
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.at();
      assertEquals("A", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("/", token7.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("e");
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("h", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals("X", token9.getTokenText());
      
      xPathLexer2.or();
      Token token10 = xPathLexer2.nextToken();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.621542246824247
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("r", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("d2", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("F");
      Token token3 = xPathLexer1.identifier();
      assertEquals("F", token3.getTokenText());
      
      xPathLexer0.minus();
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("wC96kGhOt", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("8#");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("~", token6.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals("8", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.761686304476121
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.identifier();
      token2.toString();
      Token token3 = xPathLexer0.at();
      String string0 = token3.toString();
      assertEquals("[ (16) (!)", string0);
      
      token1.toString();
      String string1 = token1.toString();
      assertEquals("[ (19) ()A)", string1);
      
      Token token4 = xPathLexer0.nextToken();
      Token token5 = xPathLexer0.rightParen();
      token4.toString();
      token5.toString();
      String string2 = token0.toString();
      assertEquals("[ (17) ($)", string2);
      
      String string3 = token4.toString();
      assertEquals("[ (15) (x0b16U)", string3);
      
      Token token6 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightParen();
      token6.toString();
      String string4 = token6.toString();
      assertEquals("[ (20) (^)", string4);
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("M", token7.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (Zr)");
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer1.operatorName();
      String string5 = token5.toString();
      assertEquals("[ (2) (>)", string5);
      
      Token token9 = xPathLexer1.dollar();
      assertEquals("[", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      xPathLexer1.doubleColon();
      Token token10 = xPathLexer1.notEquals();
      assertEquals("15", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.892632215463725
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">J>zp}$K");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("23#at9ykV[k(iWy");
      xPathLexer0.minus();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("z", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("}", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("23#at9ykV[k(iWy");
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("$", token5.getTokenText());
      
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.plus();
      assertEquals("#", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("23#at9ykV[k(iWy");
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer(">J>zp}$K");
      Token token8 = xPathLexer5.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer5.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("J", token9.getTokenText());
      
      Token token10 = xPathLexer5.not();
      assertEquals(23, token10.getTokenType());
      assertEquals(">", token10.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer6.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.dots();
      assertEquals("3", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer4.nextToken();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer4.leftParen();
      assertEquals("#", token14.getTokenText());
      
      xPathLexer6.notEquals();
      Token token15 = xPathLexer0.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.68479685950832
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      String string0 = "eOD5HSx/|qL[E>2?0\\";
      XPathLexer xPathLexer1 = new XPathLexer("eOD5HSx/|qL[E>2?0");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      String string1 = "";
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5732720112876328
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("rd", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("1w", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("C", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("_aQ!d:K|jcvP");
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("_", token5.getTokenText());
      
      xPathLexer1.and();
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("a", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("Q", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.130431516859777
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("rd", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("2", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("1w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("F");
      Token token4 = xPathLexer1.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("F", token4.getTokenText());
      
      Token token5 = xPathLexer0.minus();
      assertEquals("C", token5.getTokenText());
      
      Token token6 = xPathLexer1.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("96", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("8#");
      Token token8 = xPathLexer2.dots();
      assertEquals("8", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals("k", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("G", token11.getTokenText());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      Token token13 = xPathLexer1.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2432182231111133
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.equals();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      xPathLexer1.star();
      Token token4 = xPathLexer1.comma();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("@POq!^2?=i<6u");
      Token token6 = xPathLexer3.star();
      xPathLexer3.operatorName();
      xPathLexer0.not();
      xPathLexer3.setPreviousToken(token5);
      assertEquals(17, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      token6.toString();
      xPathLexer3.nextToken();
      Token token7 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.Token", token7.getTokenText());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      String string0 = token6.toString();
      assertEquals("[ (20) (@)", string0);
      
      xPathLexer1.relationalOperator();
      xPathLexer2.setPreviousToken(token4);
      assertEquals(32, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("lJv7KLXd4f/mT");
      xPathLexer4.identifierOrOperatorName();
      Token token9 = xPathLexer4.equals();
      assertEquals("/", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("lJv7KLXd4f/mT");
      Token token10 = xPathLexer5.identifierOrOperatorName();
      assertEquals("lJv7KLXd4f", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer3.not();
      assertEquals("!", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer6.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.6225797996171796
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lsUcEgX9)");
      XPathLexer xPathLexer1 = new XPathLexer("lsUcEgX9)");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("l", token0.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("lsUcEgX9)");
      xPathLexer2.leftParen();
      xPathLexer2.or();
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("l", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightBracket();
      String string0 = token2.toString();
      assertEquals("[ (4) (s)", string0);
      
      Token token3 = xPathLexer1.leftParen();
      assertEquals("U", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      xPathLexer2.nextToken();
      Token token4 = xPathLexer0.at();
      assertEquals("U", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("wt8HnfK");
      Token token5 = xPathLexer0.equals();
      assertEquals("c", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(2, token6.getTokenType());
      assertEquals(")", token6.getTokenText());
      
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("EgX9", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.0560051788074643
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(")A", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      String string0 = token2.toString();
      assertEquals("[ (15) (Zr)", string0);
      
      Token token3 = xPathLexer0.at();
      Token token4 = xPathLexer0.notEquals();
      token4.toString();
      Token token5 = xPathLexer0.rightBracket();
      token5.toString();
      String string1 = token3.toString();
      assertEquals("[ (16) (!)", string1);
      
      String string2 = token4.toString();
      assertEquals("[ (22) (x0)", string2);
      
      Token token6 = xPathLexer0.rightBracket();
      String string3 = token5.toString();
      assertEquals("[ (4) (b)", string3);
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token6);
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (Zr)");
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      xPathLexer1.leftBracket();
      Token token9 = xPathLexer1.colon();
      assertEquals("1", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals("5", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.literal();
      assertEquals(" (Zr", token11.getTokenText());
      assertNotNull(token11);
      assertEquals(27, token11.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.606084349862642
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("c", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("23#at9ykV[k(iWy");
      xPathLexer0.minus();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(":", token4.getTokenText());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("23#at9ykV[k(iWy");
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("S", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("23", token7.getTokenText());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("!5clPn:F[Su9 WR");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.nextToken();
      Token token9 = xPathLexer5.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer3.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("(`)?HzzwqY/bNLzZZ,b");
      Token token11 = xPathLexer4.slashes();
      assertEquals("!", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals("u", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
      assertEquals("", token13.getTokenText());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8397991271840586
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.setXPath("E0uQ3*:}V_:");
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("u", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("Q", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("3", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals(":", token4.getTokenText());
      
      xPathLexer0.setXPath("");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s@Z\"[zkI(y%|.^?>");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(";8@/[ j");
      Token token9 = xPathLexer4.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals(";", token9.getTokenText());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer2.dots();
      assertEquals("s", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0209931733678967
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("5", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("n", token3.getTokenText());
      
      xPathLexer0.dollar();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("Su9", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("WR", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.plus();
      assertEquals("W", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("LGHH+wY-bB'");
      Token token10 = xPathLexer4.nextToken();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer3.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(")", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.minus();
      assertEquals("", token14.getTokenText());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5946171854029583
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("uK");
      Token token0 = xPathLexer0.slashes();
      assertEquals("u", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifier();
      xPathLexer1.minus();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("uK");
      Token token4 = xPathLexer1.comma();
      assertEquals("m", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("uK", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.790037945834845
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals("=", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("rd", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("2", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("1w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifier();
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("~", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("F");
      Token token8 = xPathLexer4.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("F", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer6 = new XPathLexer(") (");
      Token token9 = xPathLexer6.nextToken();
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer7.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer4.nextToken();
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token13 = xPathLexer3.plus();
      assertEquals(5, token13.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token14 = xPathLexer8.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.9220461328004887
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals("P", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.pipe();
      assertEquals("S", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("u9", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer0.plus();
      assertEquals(" ", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("LGHH+wY-bB'");
      XPathLexer xPathLexer3 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals("!", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("W", token10.getTokenText());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals("L", token11.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5495446657936531
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (3) (!)");
      XPathLexer xPathLexer2 = new XPathLexer("\"={`d");
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.minus();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.760864664765692
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ir?hj%V|UJ&G%~r");
      Token token0 = xPathLexer0.rightParen();
      String string0 = token0.toString();
      assertEquals("[ (2) (i)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.consume((-1193));
      xPathLexer0.setXPath("-.07#[]R_#G--g");
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.literal();
      assertEquals(27, token2.getTokenType());
      assertNotNull(token2);
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("-g", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.number();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.6743966888862014
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("'%e}Z3U\"xpXR");
      XPathLexer xPathLexer2 = new XPathLexer("'%e}Z3U\"xpXR");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("", token0.getTokenText());
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("'%", token2.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      XPathLexer xPathLexer4 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.identifier();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token3 = xPathLexer2.minus();
      assertEquals("e", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      xPathLexer2.nextToken();
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer4.nextToken();
      assertEquals("HIR7h_wF", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer5.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer5.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.2423128070487923
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      token0.toString();
      Token token3 = xPathLexer0.leftParen();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      String string0 = token3.toString();
      assertEquals("[ (1) (P)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.consume((-1));
      Token token5 = xPathLexer0.at();
      xPathLexer1.getPreviousToken();
      Token token6 = xPathLexer1.whitespace();
      xPathLexer1.setPreviousToken(token3);
      String string1 = token5.toString();
      assertEquals("[ (16) (n)", string1);
      
      xPathLexer0.getPreviousToken();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(":", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      xPathLexer1.getPreviousToken();
      String string2 = token0.toString();
      assertEquals("[ (3) (!)", string2);
      
      Token token8 = xPathLexer0.pipe();
      assertEquals("F", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(30, token9.getTokenType());
      assertEquals("5", token9.getTokenText());
      
      String string3 = token6.toString();
      assertEquals("[ (-2) ()", string3);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token5);
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      Token token12 = xPathLexer1.dots();
      assertEquals("P", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.898508548702124
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[eu9 WR");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer1.at();
      Token token2 = xPathLexer0.leftBracket();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.1107762080955115
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("1w", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("C", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("_aQ!d:K|jcvP");
      xPathLexer1.and();
      Token token4 = xPathLexer1.dollar();
      assertEquals("_", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("96", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.0647722550348915
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">J>zp}$K");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("J", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("z", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("p", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals("}", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("VG3a");
      XPathLexer xPathLexer2 = new XPathLexer(">J>zp}$K");
      Token token6 = xPathLexer2.not();
      assertEquals(">", token6.getTokenText());
      
      xPathLexer1.currentPosition();
      xPathLexer2.nextToken();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      Token token8 = xPathLexer2.star();
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("+FC0}<l|\bS%F-");
      Token token9 = xPathLexer4.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("+", token9.getTokenText());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token11 = xPathLexer4.nextToken();
      assertEquals("FC0", token11.getTokenText());
      
      xPathLexer3.leftParen();
      Token token12 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.572363301501669
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      xPathLexer0.number();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3180));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.6324911775912592
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.identifier();
      assertEquals("com.werken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.minus();
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer1.plus();
      xPathLexer1.nextToken();
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.829996891405773
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.identifier();
      token2.toString();
      Token token3 = xPathLexer0.at();
      assertEquals("!", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      token4.toString();
      token4.toString();
      String string0 = token4.toString();
      assertEquals("[ (22) (x0)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (19) ()A)", string1);
      
      Token token5 = xPathLexer0.nextToken();
      Token token6 = xPathLexer0.rightParen();
      token5.toString();
      token6.toString();
      String string2 = token0.toString();
      assertEquals("[ (17) ($)", string2);
      
      String string3 = token5.toString();
      assertEquals("[ (15) (b16U)", string3);
      
      Token token7 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightParen();
      token7.toString();
      String string4 = token7.toString();
      assertEquals("[ (20) (^)", string4);
      
      Token token8 = xPathLexer0.identifier();
      assertEquals("M", token8.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (Zr)");
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.operatorName();
      String string5 = token6.toString();
      assertEquals("[ (2) (>)", string5);
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("[", token10.getTokenText());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer1.dollar();
      assertEquals(" ", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.1970286241384636
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.leftBracket();
      xPathLexer0.or();
      Token token2 = xPathLexer0.equals();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals(".w", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("er", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.getPreviousToken();
      xPathLexer1.getXPath();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.minus();
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer0.nextToken();
      assertEquals("en.saxpath.XPathLexer", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.8061651008178774
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.minus();
      assertEquals("o", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer1.dollar();
      assertEquals("c", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.star();
      assertEquals("o", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(13, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer(")]|!\"2|s,\"(B&5i]h[");
      Token token7 = xPathLexer1.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer4.nextToken();
      assertEquals(")", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer3.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer5.plus();
      assertEquals("c", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.1093014631035003
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.consume((-2028));
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.7130003580202964
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.2834668924446677
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("W'e!?AfJyC0xyR^");
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals("W", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("'", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.colon();
      assertEquals("!", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("A", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("fJ", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("yC", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      char char0 = xPathLexer0.LA(2);
      assertEquals('y', char0);
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("x", token9.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0517311719263374
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(")A", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      token2.toString();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("x", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      token5.toString();
      String string0 = token5.toString();
      assertEquals("[ (22) (0b)", string0);
      
      Token token6 = xPathLexer0.nextToken();
      Token token7 = xPathLexer0.rightParen();
      token6.toString();
      token7.toString();
      String string1 = token0.toString();
      assertEquals("[ (17) ($)", string1);
      
      String string2 = token6.toString();
      assertEquals("[ (30) (16)", string2);
      
      Token token8 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightParen();
      token8.toString();
      Token token9 = xPathLexer0.identifier();
      assertEquals("CM", token9.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (Zr)");
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      xPathLexer1.operatorName();
      String string3 = token7.toString();
      assertEquals("[ (2) (U)", string3);
      
      String string4 = token8.toString();
      assertEquals("[ (20) (>)", string4);
      
      String string5 = token2.toString();
      assertEquals("[ (15) (Zr)", string5);
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer1.not();
      assertEquals(23, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals("(", token12.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.016501050613818
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals(")A", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("r!", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      Token token4 = xPathLexer0.dollar();
      assertEquals("1", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("?I!u");
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer0.nextToken();
      assertNotSame(token11, token8);
      
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token13 = xPathLexer8.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer5.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("?", token14.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.055352249499756
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (!)", string0);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("P", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(":", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (3) (!)");
      XPathLexer xPathLexer2 = new XPathLexer("\"={`d");
      xPathLexer2.identifier();
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("[ ", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("F", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer1.identifier();
      xPathLexer1.identifier();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer("[ (3) (!)");
      Token token8 = xPathLexer3.literal();
      assertNull(token8);
      
      xPathLexer3.or();
      xPathLexer1.operatorName();
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer3.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.20723502916918
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("rd", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("1w", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("_aQ!d:K|jcvP");
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("_", token4.getTokenText());
      
      xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("_aQ!d:K|jcvP");
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer2.operatorName();
      Token token6 = xPathLexer2.dots();
      assertEquals("!", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("d:K|jcvP", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals("6", token8.getTokenText());
      
      Token token9 = xPathLexer2.not();
      assertEquals("d", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      assertEquals("k", token11.getTokenText());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.9046882138221033
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      XPathLexer xPathLexer1 = new XPathLexer("=rd21wC96kGhOt~");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      xPathLexer1.not();
      Token token1 = xPathLexer2.notEquals();
      assertEquals("co", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token4 = xPathLexer2.identifier();
      assertEquals("m.werken.saxpath.Token", token4.getTokenText());
      
      xPathLexer4.minus();
      Token token5 = xPathLexer3.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token6 = xPathLexer5.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("~", token7.getTokenText());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals("om", token11.getTokenText());
      
      Token token12 = xPathLexer5.notEquals();
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5747485447124547
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("F");
      xPathLexer1.identifier();
      xPathLexer1.minus();
      xPathLexer1.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer1.nextToken();
      xPathLexer0.plus();
      Token token0 = xPathLexer1.nextToken();
      xPathLexer2.colon();
      xPathLexer2.plus();
      Token token1 = xPathLexer2.at();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.7428707672121062
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer1.comma();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer2.not();
      assertEquals("v", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      Token token7 = xPathLexer3.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("vW", token7.getTokenText());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals("we", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("W", token9.getTokenText());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer3.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals("j", token11.getTokenText());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.7060029702901256
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("1w", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("F");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("C96kGhOt", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("x");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      Token token4 = xPathLexer1.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("F", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer4.minus();
      assertEquals("H", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(">");
      xPathLexer7.mod();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("~", token6.getTokenText());
      
      Token token7 = xPathLexer7.not();
      assertEquals(23, token7.getTokenType());
      assertEquals(">", token7.getTokenText());
      
      Token token8 = xPathLexer5.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer2.slashes();
      assertEquals("x", token9.getTokenText());
      
      Token token10 = xPathLexer5.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer5.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer2.plus();
      assertEquals(5, token12.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.6211470300413808
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.2793355665204453
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.getXPath();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.9671652488022207
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)AZr!x0b16U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.identifier();
      token2.toString();
      Token token3 = xPathLexer0.at();
      assertEquals("!", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      token4.toString();
      token4.toString();
      String string0 = token4.toString();
      assertEquals("[ (22) (x0)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (19) ()A)", string1);
      
      Token token5 = xPathLexer0.nextToken();
      Token token6 = xPathLexer0.rightParen();
      token5.toString();
      token6.toString();
      String string2 = token0.toString();
      assertEquals("[ (17) ($)", string2);
      
      String string3 = token5.toString();
      assertEquals("[ (15) (b16U)", string3);
      
      Token token7 = xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token2);
      token2.toString();
      xPathLexer0.rightParen();
      token7.toString();
      Token token8 = xPathLexer0.identifier();
      assertEquals("M", token8.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (Zr)");
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.operatorName();
      String string4 = token6.toString();
      assertEquals("[ (2) (>)", string4);
      
      String string5 = token7.toString();
      assertEquals("[ (20) (^)", string5);
      
      token2.toString();
      xPathLexer0.relationalOperator();
      xPathLexer1.not();
      Token token10 = xPathLexer1.nextToken();
      assertEquals("(", token10.getTokenText());
      assertEquals(1, token10.getTokenType());
      
      xPathLexer1.div();
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.803954629329648
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werkensaxpah.Token");
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer1.dollar();
      xPathLexer1.star();
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("LGHH+wY-bB'");
      xPathLexer2.nextToken();
      xPathLexer2.equals();
      xPathLexer1.nextToken();
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.slashes();
      xPathLexer4.dollar();
      xPathLexer2.minus();
      Token token0 = xPathLexer4.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.096548963316797
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals("P", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('~');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer0.operatorName();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.6806339703875481
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$)Zr,x0b1'U>^CM");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(")Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (17) ($)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("$)Zr,x0b1'U>^CM");
      Token token3 = xPathLexer1.leftParen();
      assertEquals("$", token3.getTokenText());
      
      xPathLexer1.or();
      Token token4 = xPathLexer0.not();
      assertEquals(",", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      String string1 = token5.toString();
      assertEquals("[ (4) (x)", string1);
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("b", token7.getTokenText());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("1", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("$)Zr,x0b1'U>^CM");
      XPathLexer xPathLexer3 = new XPathLexer("g,");
      Token token9 = xPathLexer3.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("g", token9.getTokenText());
      
      Token token10 = xPathLexer3.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals(",", token10.getTokenText());
      
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.896546827671671
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.not();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.495745050769473
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("");
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifier();
      xPathLexer0.literal();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-182));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.257688704323764
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T");
      Token token0 = xPathLexer0.at();
      assertEquals("T", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      char char0 = xPathLexer0.LA(1307);
      assertEquals('\uFFFF', char0);
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.not();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.7263244100598338
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("F");
      xPathLexer1.identifier();
      xPathLexer0.minus();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer("dmu7'");
      xPathLexer2.minus();
      xPathLexer2.or();
      xPathLexer1.dots();
      XPathLexer xPathLexer3 = new XPathLexer("=rd21wC96kGhOt~");
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("dmu7'");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.nextToken();
      xPathLexer4.colon();
      xPathLexer4.plus();
      xPathLexer2.at();
      Token token0 = xPathLexer4.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.9796686189532193
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q@``");
      xPathLexer0.whitespace();
      xPathLexer0.consume(692);
      XPathLexer xPathLexer1 = new XPathLexer("q@``");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("q", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("q@``");
      Token token3 = xPathLexer2.dots();
      assertEquals("q", token3.getTokenText());
      
      xPathLexer2.consume();
      XPathLexer xPathLexer3 = new XPathLexer("q@``");
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer2.whitespace();
      xPathLexer0.dots();
      xPathLexer1.whitespace();
      Token token6 = xPathLexer3.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.colon();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token9);
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer2.consume();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.consume();
      xPathLexer5.doubleColon();
      Token token11 = xPathLexer7.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer4.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token13 = xPathLexer8.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer8.leftParen();
      assertEquals(1, token14.getTokenType());
      
      Token token15 = xPathLexer8.star();
      assertEquals(20, token15.getTokenType());
      
      Token token16 = xPathLexer5.colon();
      assertEquals(18, token16.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RHA");
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.3243000000815894
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[eu9 WR");
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.equals();
      xPathLexer1.leftParen();
      xPathLexer1.star();
      xPathLexer0.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer1.notEquals();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.6471320649014305
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("we", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer0.notEquals();
      assertEquals("co", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.at();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals("e", token8.getTokenText());
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals("n", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer0.leftParen();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals("p", token13.getTokenText());
      assertEquals(21, token13.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.8903313123958743
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("c", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("lP", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.plus();
      assertEquals("F", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals("[", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.0782510739979947
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.equals();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.at();
      int int0 = xPathLexer0.endPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      int int1 = xPathLexer0.endPosition();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8651121732997165
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("=", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("^", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals(";", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals("c", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("om.werken.saxpath.Token", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("vWjM}(ZX`e?a\"P{=\"@b");
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer2.minus();
      assertEquals("v", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer1.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.973086787106084
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y=^Z;DTF");
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      Token token2 = xPathLexer0.rightBracket();
      token1.toString();
      token0.toString();
      xPathLexer0.nextToken();
      token1.toString();
      Token token3 = xPathLexer0.leftBracket();
      token3.toString();
      Token token4 = xPathLexer0.notEquals();
      token4.toString();
      Token token5 = xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.rightParen();
      xPathLexer0.isIdentifierStartChar('H');
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.setPreviousToken(token5);
      Token token6 = xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token6.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.758013016307356
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ONk/W*^A/hX(0");
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("Nk", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("/", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.rightParen();
      xPathLexer0.div();
      Token token5 = xPathLexer0.at();
      assertEquals("*", token5.getTokenText());
      
      xPathLexer0.div();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      String string0 = token4.toString();
      assertEquals("[ (2) (W)", string0);
      
      String string1 = token3.toString();
      assertEquals("[ (4) ()", string1);
      
      xPathLexer0.comma();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken(token0);
      Token token6 = xPathLexer0.slashes();
      assertEquals("A/", token6.getTokenText());
      assertEquals(12, token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('^');
      assertFalse(boolean0);
      
      Token token7 = xPathLexer0.comma();
      assertEquals("h", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.plus();
      assertEquals(5, token13.getTokenType());
      
      xPathLexer0.leftParen();
      Token token14 = xPathLexer0.identifier();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.7034436654302427
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      Token token0 = xPathLexer0.at();
      assertEquals("!", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer1.minus();
      xPathLexer0.leftBracket();
      xPathLexer1.equals();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("l", token3.getTokenText());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.plus();
      assertEquals("l", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.equals();
      assertEquals(":", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer1.dollar();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("[", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token9 = xPathLexer1.slashes();
      assertEquals("S", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.4581148274199305
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.8755084935852058
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("=rd21wC96kGhOt~");
      XPathLexer xPathLexer1 = new XPathLexer("=rd21wC96kGhOt~");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer1.nextToken();
      assertEquals(21, token0.getTokenType());
      assertEquals("=", token0.getTokenText());
      
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("r", token1.getTokenText());
      
      Token token2 = xPathLexer2.notEquals();
      assertEquals("co", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("d21wC96kGhOt", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.at();
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer2.rightBracket();
      Token token6 = xPathLexer1.at();
      assertEquals("~", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("d", token7.getTokenText());
      
      Token token8 = xPathLexer3.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      xPathLexer1.consume();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("2", token9.getTokenText());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("edCa,,,{0v");
      Token token10 = xPathLexer5.nextToken();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer5.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer5.leftParen();
      assertEquals(",", token12.getTokenText());
      
      Token token13 = xPathLexer5.star();
      assertEquals("{", token13.getTokenText());
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.380334165263313
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("m", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("c", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      Token token5 = xPathLexer1.comma();
      assertEquals("m", token5.getTokenText());
      
      xPathLexer1.nextToken();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(13, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer5.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      Token token9 = xPathLexer3.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("c", token10.getTokenText());
      
      Token token11 = xPathLexer0.plus();
      assertEquals("e", token11.getTokenText());
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer6.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("co", token12.getTokenText());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.6249912034130924
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("jjoU6N91i:");
      xPathLexer3.identifierOrOperatorName();
      xPathLexer1.identifier();
      int int0 = 3338;
      xPathLexer2.consume((-2));
      // Undeclared exception!
      try { 
        xPathLexer2.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.152441098876463
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.9912629165030327
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!5clPn:F[Su9 WR");
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("LGHH+wY-bB'");
      xPathLexer4.consume((-2091));
      // Undeclared exception!
      try { 
        xPathLexer4.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.5041021477270793
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("'%e}Z3U\"xpXR");
      XPathLexer xPathLexer2 = new XPathLexer("'%e}Z3U\"xpXR");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("", token1.getTokenText());
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.not();
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("'%", token2.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      XPathLexer xPathLexer4 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("HIR7h_wF{N_VhDf'$");
      Token token5 = xPathLexer2.comma();
      assertEquals("}", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer4.not();
      assertEquals("H", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token7 = xPathLexer8.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer7.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.at();
      assertEquals("Z", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
  }
}
