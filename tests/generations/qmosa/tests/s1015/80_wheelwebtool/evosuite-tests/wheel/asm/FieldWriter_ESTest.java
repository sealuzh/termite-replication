/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 08:02:35 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5268098127853196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-33));
      classWriter0.index = (-33);
      String[] stringArray0 = new String[0];
      classWriter0.visit(46, 1, "ag^uXo9", "EliY]uy", "EliY]uy", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-33), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(1, 2);
      byteVector0.putUTF8("EliY]uy");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 811, "RuntimeVisibleAnnotations", "i?&? $r*>ZO", "Deprecated", "ag^uXo9");
      fieldWriter1.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector1.put12((-1772), (-65));
      byteVector1.put12(19, 811);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      fieldWriter0.put(byteVector1);
      fieldWriter1.visitAnnotation("#'/b\"2Y2&bg2C|}3Zt", false);
      fieldWriter1.put(byteVector2);
      fieldWriter1.getSize();
      fieldWriter0.put(byteVector2);
      AnnotationVisitor annotationVisitor1 = fieldWriter1.visitAnnotation("Y,-", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5159138986937974
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      fieldWriter0.getSize();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      stringArray0[1] = "z2^q";
      classWriter0.index = (-1858);
      classWriter0.visit(1637, 20, "wheel.asm.Handler", "U", "VeCYRmQ", stringArray0);
      fieldWriter0.getSize();
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 4096, "wheel.asm.Handler", "|0WkQW7^85pz\"L~y!%", "RuntimeVisibleAnnotations", "z2^q");
      fieldWriter1.getSize();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector0.put11(2516, 1637);
      fieldWriter0.put(byteVector1);
      fieldWriter0.getSize();
      fieldWriter1.visitAnnotation("SourceDebugExtension", false);
      fieldWriter1.put(byteVector1);
      fieldWriter0.visitAnnotation("SourceDebugExtension", false);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5599638995215366
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1044);
      String[] stringArray0 = new String[0];
      classWriter0.visit(49, 278, "ag^uXo9", "z2^q", "z2^q", stringArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1044, "z2^q", "z2^q", "z2^q", "z2^q");
      fieldWriter0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12(11, 278);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1584), "#'/b\"2Y2&bg2C|}3Zt", "wheel.asm.Handler", "wheel.asm.Handler", (Object) null);
      ByteVector byteVector2 = new ByteVector();
      ByteVector byteVector3 = byteVector1.putShort(2);
      byteVector3.put11((-1584), 11);
      ByteVector byteVector4 = byteVector1.putUTF8("RuntimeInvisibleAnnotations");
      fieldWriter0.put(byteVector4);
      fieldWriter1.visitAnnotation("RuntimeInvisibleAnnotations", false);
      fieldWriter1.getSize();
      fieldWriter1.visitAnnotation("wheel.asm.Handler", false);
      fieldWriter1.put(byteVector4);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("YzFw=", true);
      fieldWriter1.visitAnnotation("z2^q", true);
      fieldWriter0.getSize();
      fieldWriter1.getSize();
      AnnotationVisitor annotationVisitor1 = fieldWriter1.visitAnnotation("YzFw=", false);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "RuntimeVisibleAnnotatios";
      stringArray0[1] = "z2^q";
      classWriter0.visit(1637, 20, "wheel.asm.Handler", "U", "VeCYRmQ", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "wheel.asm.Handler", "|0WkQW7^85pz\"L~y!%", "RuntimeVisibleAnnotatios", "z2^q");
      fieldWriter0.getSize();
      Type type0 = Type.SHORT_TYPE;
      Type type1 = Type.BOOLEAN_TYPE;
      Type type2 = Type.INT_TYPE;
      // Undeclared exception!
      try { 
        Type.getType(".SxlzZdrz>XB7ksC@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      Item item0 = classWriter0.newClassItem("RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fieldWriter0.put(byteVector0);
      Item[] itemArray0 = new Item[5];
      item0.hashCode = 46;
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      classWriter0.version = (-126);
      item0.set(1935L);
      itemArray0[2] = item0;
      itemArray0[2] = item0;
      itemArray0[4] = item0;
      ByteVector byteVector1 = byteVector0.put11((-126), 59);
      fieldWriter0.put(byteVector1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("@*gAw.|k@6j@Ge");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6058727826360202
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(66);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 66, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Q>YQ=/RuntimeVisibleAnnotations");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("", false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.getSize();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("6ntI](VqssK8{:HX/", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-33));
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-33), "6^!E],P XF:`T", "RuntimeVisibleAnnotations", "Do`K~cYG+_C/B~BB", "");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2704;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0832409930999294
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 49;
      ClassWriter classWriter0 = new ClassWriter(49);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "TvwJ`SGf:bT}r8:1", "TvwJ`SGf:bT}r8:1", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("d");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.218839396646019
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("long");
      attribute0.next = attribute1;
      Attribute attribute2 = new Attribute((String) null);
      attribute0.next = attribute2;
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.putShort(4096);
      byteVector0.putByte((-1));
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0225955941538991
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "TvwJ`SGf:bT}r8:1", "TvwJ`SGf:bT}r8:1", (String) null, (Object) null);
      Attribute attribute0 = new Attribute(" Z!Dg$4I");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(20);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 20, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      Attribute attribute0 = new Attribute("es");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 11;
      ClassWriter classWriter0 = new ClassWriter(11);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 11, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      String string0 = "1V7FTo\\ X_e5`V`wd";
      String string1 = "ML30M3za$!wl1\\&";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.write((-1692));
      int int1 = 0;
      pipedOutputStream0.write(1);
      PipedInputStream pipedInputStream1 = new PipedInputStream(11);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, (-1692), "aDF", (String) null, "ML30M3za$!wl1&", pipedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.getSize();
      fieldWriter0.visitEnd();
      String string0 = null;
      Attribute attribute0 = new Attribute((String) null);
      String string1 = null;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(mockFileInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-101), "eA", "eA", "", "eA");
      fieldWriter0.put(byteVector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = null;
      Type[] typeArray0 = new Type[6];
      Type type0 = Type.VOID_TYPE;
      typeArray0[0] = type0;
      Type type1 = Type.SHORT_TYPE;
      typeArray0[1] = type1;
      Type type2 = Type.BOOLEAN_TYPE;
      ClassWriter classWriter0 = new ClassWriter(10);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 4647, "n_b`GtwH", "m^bV:bs\"i", "m^bV:bs\"i", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@59baf080
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
