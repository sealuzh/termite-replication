/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 23:27:47 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.StartFrame;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.sql.SQLDataException;
import java.sql.SQLTransientException;
import java.util.function.Consumer;
import messages.global.GlobalChatMsg;
import messages.global.LoginMsg;
import messages.global.SessionListMsg;
import messages.session.SessionParticipationMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = null;
      SQLDataException sQLDataException0 = new SQLDataException(string0, string0);
      SQLDataException sQLDataException1 = new SQLDataException(string0, sQLDataException0);
      SQLTransientException sQLTransientException0 = new SQLTransientException(string0, sQLDataException1);
      SessionListMsg sessionListMsg0 = new SessionListMsg();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      int int0 = MockThread.MAX_PRIORITY;
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "", (-1683));
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElementArray0[1];
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray1[2] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "", 126);
      stackTraceElementArray1[3] = stackTraceElement0;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[5] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("agE*pjV", "", "", 657);
      StackTraceElement stackTraceElement3 = new StackTraceElement("UZ.Pi$cq", "^5!<47)`~i", "[j%wrZ$\"`_)0a", 10);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      mockSocket0.setReuseAddress(true);
      System.setCurrentTimeMillis((-978L));
      System.setCurrentTimeMillis(10);
      System.setCurrentTimeMillis(303L);
      System.setCurrentTimeMillis((-2792L));
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = null;
      SQLDataException sQLDataException0 = new SQLDataException(string0, string0);
      SQLTransientException sQLTransientException0 = new SQLTransientException(string0, sQLDataException0);
      boolean boolean0 = true;
      int int0 = 0;
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(boolean0, int0, string0);
      sessionParticipationMsg0.execute(bomberClient0);
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      int int0 = MockThread.MAX_PRIORITY;
      StackTraceElement stackTraceElement0 = new StackTraceElement("3ustom level class [", "3ustom level class [", "3ustom level class [", (-1683));
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElementArray0[1];
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      stackTraceElementArray1[2] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("3ustom level class [", "3ustom level class [", "3ustom level class [", 150);
      stackTraceElementArray1[3] = stackTraceElement0;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[5] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "", 657);
      StackTraceElement stackTraceElement3 = new StackTraceElement("UZ.Pi$cq", "^5!<47)`~i", "[j%wrZ$\"`_)0a", 10);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      System.setCurrentTimeMillis((-978L));
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(",DtTC{", "M^%$");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.GlobalChatMsg", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "a=*Wv_Y[l";
      String string1 = "E_\\(m\\NbAWy QQR";
      int int0 = 300;
      LoginMsg loginMsg0 = new LoginMsg(string0, string1, int0);
      int int1 = (-1730);
      loginMsg0.setAction(int1);
      clientMsgReceiver0.processMsg(loginMsg0);
      assertEquals(3, LoginMsg.GUEST_LOGIN);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      byte byte0 = (byte)0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)123;
      byteArray0[1] = (byte)30;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(bomberClient0.server, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("start() exiting", 10027);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0u");
      StartFrame startFrame0 = StartFrame.startFrame;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      StartFrame startFrame1 = StartFrame.startFrame;
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "CONNECTION LOST");
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockSocket0.getTrafficClass();
      StackTraceElement stackTraceElement0 = new StackTraceElement("*22vf*9G", "wjq|Ic", "*22vf*9G", (-1694));
      SQLDataException sQLDataException0 = new SQLDataException("kM=2cl;bZ34! .", "wjq|Ic");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[4];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[6];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      stackTraceElementArray1[2] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("*22vf*9G", "Couldn't close input stream", "kM=2cl;bZ34! .", 150);
      stackTraceElementArray1[3] = stackTraceElement1;
      stackTraceElementArray1[4] = stackTraceElement0;
      stackTraceElementArray1[5] = stackTraceElement0;
      sQLDataException0.setStackTrace(stackTraceElementArray1);
      StackTraceElement stackTraceElement2 = new StackTraceElement("K*=[:_ut<{10}<H]XmC", "*22vf*9G", "kM=2cl;bZ34! .", (-1694));
      stackTraceElementArray0[3] = stackTraceElement2;
      sQLDataException0.setStackTrace(stackTraceElementArray0);
      SQLDataException sQLDataException1 = new SQLDataException("8jT-~?r2j#E#6", "ERROR", (-1694));
      sQLDataException0.setNextException(sQLDataException1);
      SQLTransientException sQLTransientException0 = new SQLTransientException("8jT-~?r2j#E#6", "ERROR", (-1694));
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLDataException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      byte[] byteArray0 = new byte[6];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3CKKQ$4$,h xW4w\"c");
      byteArray0[1] = (byte)39;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      LoginMsg loginMsg0 = new LoginMsg((String) null, (byte)1);
      LoginMsg loginMsg1 = new LoginMsg((String) null, (byte)0);
      LoginMsg.REGISTER = (int) (byte)30;
      loginMsg1.setAction(86);
      System.setCurrentTimeMillis(0L);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(loginMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }
}
