/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 23:18:57 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user2 = new User("UNABLE_TO_CREATE_AVAILABILITY_STATE", "UNABLE_TO_CREATE_AVAILABILITY_STATE");
      user1.setCity("87c ZsSzh$=XmR");
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setQuestionNumber("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      User user3 = new User();
      RawVariable.detectFieldChanges(user3, rawVariable0, rawVariable2);
      User user4 = new User("#>m$l", "87c ZsSzh$=XmR");
      assertEquals("0", user4.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0912696688213708
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setIdentifier((-1483944185));
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier((-1));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("`^;M{");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      User user0 = new User("UNABLE_TO_VALIDATE_USER", "UNABLE_TO_VALIDATE_USER");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, rawVariable1);
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setIsNewRecord(true);
      ArrayList<Variable> arrayList2 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.isNewRecord();
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable1.addSourceVariables(arrayList2);
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.856773563873258
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("MB8CmVA!");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.remove((Object) supportingDocument0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setTitle("J/");
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable1.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable1.isCoded());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCoded(true);
      rawVariable2.cloneAttributes(rawVariable1);
      User user1 = new User("", (String) null);
      rawVariable1.isCoded();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8938546574316315
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      derivedVariable0.getSourceVariables();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User();
      user0.setFirstName("varibte.columnStartlabel");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      derivedVariable0.getAlternativeVariable();
      User user2 = new User();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable3);
      assertFalse(derivedVariable3.isNewRecord());
      assertEquals("Unknown", derivedVariable3.getCategory());
      assertEquals("Unknown", derivedVariable3.getAvailability());
      assertEquals("Unknown", derivedVariable3.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.9090913373612404
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "bVxje]lo<So";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setName("\"2#W;n%G<");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("7Y*Xa*Rny");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      arrayList0.add(supportingDocument0);
      arrayList0.clone();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.clone();
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.9390564997824082
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("ZxQ/2zMdgo3z^");
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier(953);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle("ZxQ/2zMdgo3z^");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user2 = new User("U06($$B*6cw/n/", (String) null);
      User user3 = new User();
      user2.setPostCode("ZxQ/2zMdgo3z^");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      User user4 = new User((String) null, "UNABLE_TO_VALIDATE_USER");
      assertNull(user4.getUserID());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      supportingDocument0.setFileName((String) null);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      String string0 = "";
      String string1 = ",k=K_wtd8x*?2Nt";
      rawVariable1.setFilePath(",k=K_wtd8x*?2Nt");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getAlias();
      User user0 = new User();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.7306455215841265
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.setAvailability("TD'Czi0;khaYtm36Oqv");
      rawVariable0.setCleaned(true);
      derivedVariable0.getIdentifier();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.clone();
      System.setCurrentTimeMillis(0);
      rawVariable0.setCleaned(true);
      rawVariable0.getValueLabels();
      derivedVariable0.isCoded();
      derivedVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      UnaryOperator<Variable> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getColumnStart();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      User user0 = new User("@=bx3?pGRuP`DU&'Um5", "xO'Mx:cD9BEbt");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getAvailability();
      rawVariable0.getAlias();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getAvailability();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.33270670580812
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm3));
      
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.709985275794408
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable0.getSourceVariables();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.getIdentifier();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setLabel((String) null);
      rawVariable0.getFilePath();
      User user2 = new User((String) null, "");
      User user3 = new User();
      user0.setAddressLine1("");
      RawVariable rawVariable2 = new RawVariable();
      User user4 = new User("variable.saveChanges.valueChanged", "DUPLICATE_USER");
      ArrayList<MacawChangeEvent> arrayList1 = RawVariable.detectFieldChanges(user4, rawVariable1, rawVariable2);
      user0.setEmail("DUPLICATE_USER");
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      
      String string0 = rawVariable0.getLabel();
      assertNull(string0);
      
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.getColumnEnd();
      RawVariable rawVariable4 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable4, rawVariable2);
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      rawVariable2.getFilePath();
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      String string0 = "";
      rawVariable0.setForm("");
      rawVariable0.getIdentifier();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setIdentifier((-2246));
      User user1 = new User("WzB5_i['@b{U}h9", "LLz\"%.)T-FI(`p");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.745357502289668
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable4.removeSourceVariable(derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable5.getSourceVariables();
      derivedVariable3.addSourceVariables(arrayList1);
      ArrayList<DerivedVariable> arrayList2 = new ArrayList<DerivedVariable>();
      rawVariable0.setName("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable1.getLabel();
      rawVariable1.getFilePath();
      rawVariable0.getName();
      rawVariable0.getFilePath();
      assertEquals("DUPLICATE_SUPPORTING_DOCUMENT_CODE", rawVariable0.getName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = null;
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.179862749176277
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      rawVariable0.setForm("");
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier(731);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ontologyTerm0.setDescription("UNABLE_TO_VALIDATE_USER");
      derivedVariable1.containsSupportingDocument(supportingDocument2);
      User user0 = new User("7G 59( v-vAK(.!Zl", "");
      User user1 = new User();
      user1.setPostCode("");
      User.detectFieldChanges(user1, user1, user1);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.getSourceVariables();
      rawVariable0.getColumnEnd();
      assertEquals("C,1t", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("J: icSuA7RcDt5Sq2k");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setColumnEnd("'dD]g");
      ontologyTerm0.setDescription("'dD]g");
      ontologyTerm0.setNameSpace("'dD]g");
      ontologyTerm1.setDescription("A_5,T~;EB#u9er_^>");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user1 = new User("H2H]C$xsVvmhb<6", "A_5,T~;EB#u9er_^>");
      User user2 = new User("UNABLE_TO_CREATE_ALIAS_FILE_PATH", "@");
      assertEquals("", user2.getAffiliation());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1719330103601107
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName(":oS*{5cOga@L");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList1.clear();
      arrayList0.removeAll(arrayList1);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User();
      assertEquals(0, user1.getIdentifier());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.6639117106505044
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      User user0 = new User();
      user0.setAddressLine1("user.addressLine2.saveChanges");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("y3ttrJeDOBsSDVu4");
      rawVariable0.setLabel("NON_EXISTENT_AVAILABILITY_STATE");
      rawVariable0.getFilePath();
      User user1 = new User("supportingDocument.fileName.saveChanges", "slHA(29o1sgGFp&-i;");
      user0.setEmail("Ys+|");
      user1.setEmail("y6");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user1.setAddressLine1("8Xcb");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("LHA");
      rawVariable1.setCleaningStatus("5A`_JNOdmVp):Z9");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable3.cloneAttributes(derivedVariable0);
      rawVariable0.getLabel();
      assertEquals("y3ttrJeDOBsSDVu4", rawVariable0.getCleaningDescription());
      
      rawVariable3.getFilePath();
      assertFalse(rawVariable3.isCoded());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.082352070461471
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setIdentifier((-1483944185));
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      ontologyTerm0.setIdentifier((-1));
      ontologyTerm0.setOntologyName("k?w1.]>");
      ontologyTerm0.setNewRecord(false);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      User user0 = new User("aj", "variable.notes.label");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory("Sw!NO4)(wt$&yX");
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getCodeBookNumber();
      RawVariable rawVariable2 = new RawVariable();
      User user1 = new User(">KfUS", "q5+CS");
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.User");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1877315132322956
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("R");
      supportingDocument0.setFileName("");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier(31);
      derivedVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      User user0 = new User("variable.alias.label", "R");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getCodeBookNumber();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals(0, arrayList2.size());
      
      derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariable(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.7524734142348426
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setIdentifier((-1483944185));
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      ontologyTerm0.setOntologyName("k?w1.]>");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm2);
      ontologyTerm1.setOntologyName(">T]jz");
      ontologyTerm1.setIdentifier(0);
      ontologyTerm1.setOntologyName("k?w1.]>");
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.setName("\"2#W;n%G<");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getLabel();
      rawVariable0.getFilePath();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getName();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals("\"2#W;n%G<", rawVariable0.getName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.211667659113366
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      User user1 = new User();
      user0.setFirstName("variable.columnStart.label");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.createVariableSummary();
      derivedVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.694079844809587
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      ontologyTerm0.setIdentifier((-1));
      ontologyTerm0.setOntologyName("k?w1.]>");
      ontologyTerm0.setNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User("6WZpR)c", "k?w1.]>");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      rawVariable0.getDisplayItemIdentifier();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.isCleaned();
      rawVariable0.getAlias();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getLabel();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.getValueLabels();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("_");
      ontologyTerm0.setOntologyName("L9](");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      ontologyTerm0.setDescription("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8250860201041013
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("6WZpR)c");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("k?w1.]>");
      ontologyTerm0.setOntologyName("k?w1.]>");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setOntologyName("user.affiliation.saveChanges");
      ontologyTerm1.setOntologyName("6WZpR)c");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNewRecord(true);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      ontologyTerm0.setDescription("user.affiliation.saveChanges");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3080561808079394
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setIdentifier((-1483944185));
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      ontologyTerm0.setOntologyName("k?w1.]>");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm2);
      ontologyTerm1.setOntologyName(">T]jz");
      ontologyTerm1.setOntologyName("k?w1.]>");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertTrue(arrayList0.contains(ontologyTerm2));
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.312632839846841
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setIdentifier((-1483944185));
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.removeAll(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      assertEquals("", user0.getAddressLine2());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = null;
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.621433800201212
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      supportingDocument0.setDocumentCode("");
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument2);
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      arrayList0.remove((Object) "");
      derivedVariable1.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument1.setTitle("X>.");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user1 = new User("jB|T,tM2Axd", "general.fieldValue.unknown");
      User user2 = new User();
      user0.setPostCode("general.fieldValue.unknown");
      User user3 = new User();
      user3.setEmail("jB|T,tM2Axd");
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, derivedVariable1);
      User user4 = new User("+'2m$PeSlqEvbth", "");
      assertFalse(user4.equals((Object)user1));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.620808409331919
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      supportingDocument0.setDocumentCode("");
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.remove((Object) supportingDocument0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setTitle("J/");
      User user1 = new User("7G 59( v-vAK(.!Zl", "");
      User user2 = new User();
      user2.setPostCode("");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable2.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      arrayList0.clear();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9762294758398307
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      ontologyTerm0.setIdentifier((-1483944185));
      ontologyTerm0.setNameSpace("6WZpR)c");
      ontologyTerm0.setOntologyName("6WZpR)c");
      ontologyTerm0.setOntologyName("k?w1.]>");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm2);
      ontologyTerm1.setOntologyName(">Tjz");
      ontologyTerm1.setOntologyName("k?w1.]>");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      user0.setPostCode("variable.year.label");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList2);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.893097626325439
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getColumnStart();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.setCodeBookNumber((String) null);
      derivedVariable0.getDisplayName();
      derivedVariable0.setQuestionNumber((String) null);
      String string0 = derivedVariable0.getNotes();
      assertNotNull(string0);
      
      String string1 = derivedVariable0.getForm();
      assertNull(string1);
      
      derivedVariable1.removeSourceVariable(rawVariable1);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.clone();
      derivedVariable1.setLabel((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      derivedVariable2.getDisplayName();
      derivedVariable1.getAvailability();
      derivedVariable1.removeSourceVariable(rawVariable0);
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.6960226004019288
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.User");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaningDescription("PS)b0`Z<Ib=HA'f!");
      rawVariable0.setLabel("/EM5");
      rawVariable1.getFilePath();
      User user1 = new User("-LHA", "variable.isCoded.label");
      user0.setEmail("macaw.businessLayer.User");
      user0.setEmail("");
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      user1.setAddressLine1("LHA");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setName("\"2#W;n%G<");
      rawVariable1.setYear("-LHA");
      rawVariable1.setCleaningStatus("5A`_JNOdmVp):Z9");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable3.getLabel();
      RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable0);
      assertEquals("\"2#W;n%G<", rawVariable0.getName());
      
      rawVariable3.cloneAttributes(rawVariable0);
      rawVariable3.getLabel();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getFilePath();
      rawVariable3.getName();
      assertEquals("Unknown", rawVariable3.getAvailability());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      UnaryOperator<Locale.LanguageRange> unaryOperator0 = UnaryOperator.identity();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList1.replaceAll(unaryOperator0);
      LinkedList<ValueLabel> linkedList2 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList2.add(valueLabel0);
      derivedVariable0.setFilePath("");
      derivedVariable0.getSourceVariables();
      User user1 = new User("macaw.system.ChangeEventType", "macaw.system.ChangeEventType");
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User("j1{&#<z:/<E;JwW5", "general.error.promotesSecurityRisk");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.6224348946641847
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable2.addSupportingDocuments(arrayList1);
      derivedVariable3.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable4);
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertFalse(derivedVariable4.isCleaned());
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertFalse(derivedVariable4.isCoded());
      assertEquals("0", derivedVariable4.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertFalse(derivedVariable4.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.6673108848350298
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.toArray();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      derivedVariable0.createVariableSummary();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      LinkedList<ValueLabel> linkedList1 = new LinkedList<ValueLabel>();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      linkedList1.addAll((Collection<? extends ValueLabel>) arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList1.add(valueLabel0);
      derivedVariable0.setFilePath("macaw.system.ChangeEventType");
      User user0 = new User("#~", "WXmMwfz5|]Yg");
      derivedVariable0.clone();
      derivedVariable0.getCategory();
      assertEquals("macaw.system.ChangeEventType", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.8999209613975405
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName((String) null);
      supportingDocument0.setFileName("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.setIdentifier((-1));
      rawVariable0.removeSupportingDocument(supportingDocument0);
      User user0 = new User("", "");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability((String) null);
      derivedVariable0.setYear("");
      derivedVariable0.setLabel("");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setColumnEnd("UNABLE_TO_GET_VARIABLE_NAMES");
      rawVariable0.getAvailability();
      User user1 = new User((String) null, "");
      user0.setAddressLine1("");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.753718596447475
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.User");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("-LHA");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaningDescription("PS)b0`Z<Ib=HA'f!");
      rawVariable0.setLabel("/EM5");
      rawVariable1.getFilePath();
      User user1 = new User("-LHA", "variabl.isCoded.label");
      user0.setEmail("macaw.businessLayer.User");
      user0.setEmail("");
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      user1.setAddressLine1("LHA");
      rawVariable1.createVariableSummary();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setName("\"2#W;n%G<");
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable3.getLabel();
      rawVariable0.getFilePath();
      rawVariable3.getName();
      rawVariable1.getCleaningStatus();
      assertEquals("PS)b0`Z<Ib=HA'f!", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.862218290000827
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      supportingDocument0.setTitle(".i_-dlMZa%\"");
      supportingDocument0.setDescription(".i_-dlMZa%\"");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation(".i_-dlMZa%\"");
      supportingDocument0.setTitle(".i_-dlMZa%\"");
      rawVariable0.setName("X");
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User("Q@aMk4L)n5p<d9/>G", "variable.isCleaned.saveChanges.changedToNotClean");
      assertEquals("", user1.getCity());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.805383313963734
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("eCfy}ih1HG}H,qqP");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("hIAiX?Dk");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable1.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      user0.setAffiliation("(");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.setAlias("NO_ONTOLOGY_TERM_FILTER");
      supportingDocument2.setTitle("D6!S:M");
      rawVariable0.setName("UNABLE_TO_CHECK_VARIABLE_EXISTS");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user2 = new User("(", "X");
      assertEquals("(", user2.getUserID());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.413861375019163
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.User");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaningDescription("PS)b0`Z<Ib=HA'f!");
      rawVariable0.setLabel("/EM5");
      ontologyTerm0.setOntologyName("/EM5");
      rawVariable1.getFilePath();
      User user1 = new User("-LHA", "variabl.isCoded.label");
      user0.setEmail("macaw.businessLayer.User");
      user0.setEmail("");
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList3 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getCleaningDescription();
      assertEquals("PS)b0`Z<Ib=HA'f!", rawVariable1.getCleaningDescription());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.488436373692247
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      User user1 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("lfwmXX");
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      String string0 = "variable.isCleaned.saveChanges.changedToNotClean";
      ontologyTerm0.setNameSpace("variable.isCleaned.saveChanges.changedToNotClean");
      ontologyTerm1.setDescription("macaw.businessLayer.User");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.form = "macaw.businessLayer.User";
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.6367404601432085
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "general.fieldValue.blank");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      supportingDocument0.setDescription("general.fieldValue.blank");
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      rawVariable0.setName("X");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCleaningStatus("9A`F<JNOdmVpEv:Z9");
      user1.setLastName("(LYX1I{:'F`?F/@");
      rawVariable0.setAlias("n5H");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      boolean boolean0 = derivedVariable0.isNewRecord();
      assertEquals("9A`F<JNOdmVpEv:Z9", derivedVariable0.getCleaningStatus());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument1.setDescription("generUl.fieldValue.blank");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_CREATE_VALUE_LABELS");
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.columnStart = "supportingDocument.fileName.saveChanges";
      rawVariable0.setName("X");
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      User user1 = new User("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER", "Q@aMk4L)n5p<d9/>G");
      assertEquals(0, user1.getIdentifier());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.8624599234428953
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.setDescription("general.fieldValue.blank");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("q\"p!=");
      rawVariable0.setName("X");
      rawVariable0.codeBookNumber = "X";
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      User user1 = new User("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER", "Q@tMknL)nUL<d9/>}");
      assertEquals("UNVERIFIED", user1.getStatus());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.714642523462388
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      User user1 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("lfwmXX");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("A_5,T~;EB#u9er_^>");
      ontologyTerm1.setDescription("MISSING_DISPLAY_LIST_DELETER");
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("MISSING_DISPLAY_LIST_DELETER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      assertEquals("MISSING_DISPLAY_LIST_DELETER", rawVariable0.getCleaningStatus());
      
      rawVariable1.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.705039356631593
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setCleaningDescription("}b0");
      rawVariable1.setLabel("}b0");
      rawVariable0.getFilePath();
      User user0 = new User();
      user0.setEmail("");
      user0.setEmail("8VddNNdf.L [2lA_");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user0.setCounty("?lIbD1~,_;budMU:");
      user0.setAddressLine1("");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setName("lkm7G<|xfS9K_.Xg");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable3);
      rawVariable1.cloneAttributes(rawVariable3);
      assertEquals("}b0", rawVariable3.getLabel());
      
      Variable.validateFields(rawVariable2);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6974330648004607
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setCleaningDescription("$MA<SGp~+`'%9DDJM");
      rawVariable1.setLabel((String) null);
      User user0 = new User();
      user0.setEmail("gfwzD1LL{");
      user0.setEmail("");
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      user0.setCounty((String) null);
      user0.setAddressLine1("BO8'mXr_=8");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setName("7G 59( v-vAK(.!Zl");
      RawVariable rawVariable4 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable3, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.810086940828018
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setAvailability("VARIABLE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(3083);
      ontologyTerm0.setDescription("f1>Nv|lZCqm<,");
      rawVariable0.notes = "y3ttrJeDOBsSDVu4";
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setColumnEnd("");
      rawVariable0.getAvailability();
      User user0 = new User("", "");
      user0.setAddressLine1("f1>Nv|lZCqm<,");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getNotes();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("y3ttrJeDOBsSDVu4", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.3143719702816234
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      User user0 = new User("?;D\u0004~>'Y?j ezV4> J", "8bZI54en=Wf[jT");
      rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.147461933429295
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setIdentifier(68);
      ontologyTerm4.setDescription("<lQF>");
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getAlias();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.038951288708
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      rawVariable0.setForm("");
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.getCodeBookNumber();
      assertEquals("C,1t", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable2);
      derivedVariable2.columnEnd = "variable.cleaningDescription.label";
      String string0 = derivedVariable2.getAlias();
      assertEquals("", string0);
      
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable4.addSupportingDocuments(arrayList0);
      derivedVariable0.removeSourceVariable(derivedVariable4);
      derivedVariable0.codeBookNumber = "#;T/PXn";
      User user1 = new User();
      ArrayList<Variable> arrayList1 = derivedVariable4.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      User user2 = new User("d5e-AORwO!]n8X'9", "WXmMwfz5|]Yg");
      derivedVariable0.setSourceVariables(arrayList1);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", derivedVariable0.getAlias());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.574337865325543
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.questionNumber = "R";
      supportingDocument0.setDescription("R");
      supportingDocument0.setFileName("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      User user0 = new User("l?17)2nw<y)kcD@:", "R4;Q1$C*Qe{(R;'5l");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getYear();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("", string1);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.6626856349083416
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable2.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable1);
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.6875440376031756
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("-LHA");
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setIdentifier((-1));
      ontologyTerm0.setOntologyName("k?w1.]>");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-2004318069));
      ontologyTerm0.setOntologyName("C,1t");
      ontologyTerm0.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable1.containsSourceVariable(rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.0701047529412824
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDescription("R");
      supportingDocument0.setFileName("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier(38);
      derivedVariable0.setCodeBookNumber(";?bms>YyfM)e,O!~c");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      User user0 = new User("l?17)2nw<y)UkcD@:", "R4;Q1$C*Qe{(R;'5l");
      User user1 = new User("", "blank");
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals(";?bms>YyfM)e,O!~c", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.971225923746323
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      User user0 = new User("C,1t", "W9@$W.P%W_2vkXE5uV");
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      user1.setAffiliation("^CL|>");
      rawVariable1.setName("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaningStatus((String) null);
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user1, rawVariable2, rawVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add((OntologyTerm) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.7489376732215685
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("A_5,T~;EB#u9er_^>");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setFilePath("A_5,T~;EB#u9er_^>");
      rawVariable0.setCodeBookNumber("XsOk23lm");
      rawVariable0.setColumnStart("Sw!NO4)(wt$&yX");
      rawVariable0.setName("Sw!NO4)(wt$&yX");
      rawVariable0.setAlias("Sw!NO4)(wt$&yX");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("Sw!NO4)(wt$&yX");
      ontologyTerm0.setIdentifier((-3462));
      ontologyTerm0.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaningDescription("Sw!NO4)(wt$&yX");
      rawVariable0.setLabel("GpV?ET?Vtc5Bu}?");
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.clone();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.isNewRecord();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      assertEquals("Sw!NO4)(wt$&yX", rawVariable0.getAlias());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.8306888307977416
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("QPn7&&^C4hl W");
      derivedVariable0.getFilePath();
      String string0 = null;
      derivedVariable0.setAvailability("vI+,F:[-^d,2vjp&DFD");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.spliterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnEnd = null;
      derivedVariable0.clone();
      derivedVariable0.getIdentifier();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.8627857624784117
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.containsAll(arrayList1);
      arrayList0.add(supportingDocument0);
      arrayList0.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument1.setDescription("generUl.fieldValue.blank");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_CREATE_VALUE_LABELS");
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.columnStart = "supportingDocumnt.fileN*me.saveChanges";
      rawVariable0.setName("X");
      rawVariable0.setName(";SbtSEnntH<p0#");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.getLabel();
      rawVariable0.getFilePath();
      rawVariable0.getFilePath();
      assertEquals(";SbtSEnntH<p0#", rawVariable0.getName());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=4.024103872929835
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setDescription("R");
      supportingDocument0.setFileName("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier(31);
      derivedVariable0.setCodeBookNumber(";?bms>YyfM)e,O!~c");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      User user0 = new User("l?17)2nw<y)UkcD@:", "R4;Q1$C*Qe{(R;'5l");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.getCodeBookNumber();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.getFilePath();
      assertEquals(";?bms>YyfM)e,O!~c", derivedVariable0.getCodeBookNumber());
      
      rawVariable1.removeOntologyTerms(arrayList0);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.6333411098669
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("A_5,T~;EB#u9er_^>");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      rawVariable0.setFilePath("A_5,T~;EB#u9er_^>");
      rawVariable0.setCodeBookNumber("XsOk23lm");
      rawVariable0.setColumnStart("Sw!NO4)(wt$&yX");
      rawVariable0.setName("Sw!NO4)(wt$&yX");
      rawVariable0.setAlias("Sw!NO4)(wt$&yX");
      User user0 = new User("Sw!NO4)(wt$&yX", "VALUE_LABEL");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaningDescription("Sw!NO4)(wt$&yX");
      rawVariable0.setLabel("GpV?ET?Vtc5Bu}?");
      rawVariable0.getFilePath();
      User user1 = new User("A<!D|XL", "GpV?ET?Vtc5Bu}?");
      User user2 = new User();
      user2.setAddressLine1("AGw");
      rawVariable0.setCleaningStatus("");
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      rawVariable1.cloneAttributes(rawVariable1);
      assertEquals("XsOk23lm", rawVariable0.getCodeBookNumber());
      assertEquals("A_5,T~;EB#u9er_^>", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.781763783828019
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.setAvailability("d-!hv!5_7?<Qw.Hx-0");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("f1>Nv|lZCqm<,");
      rawVariable0.notes = "y3ttrJeDOBsSDVu4";
      ontologyTerm0.setDescription("d-!hv!5_7?<Qw.Hx-0");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      User user0 = new User("y3ttrJeDOBsSDVu4", "A<!D|_P`L");
      User user1 = new User();
      user1.setAddressLine1("d-!hv!5_7?<Qw.Hx-0");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCleaningStatus("f1>Nv|lZCqm<,");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("y3ttrJeDOBsSDVu4", rawVariable0.getNotes());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.1087652871192892
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.codeBookNumber = "C,1t";
      rawVariable0.setColumnEnd("C,1t");
      rawVariable0.setForm("");
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setIdentifier(694);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setTitle("J4,");
      ontologyTerm0.setDescription("UNABLE_TO_VALIDATE_USER");
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      User user1 = new User("7G 59( v-vAK(.!Zl", "");
      User user2 = new User();
      user2.setPostCode("");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      User user3 = new User("#~", "");
      rawVariable0.getFilePath();
      assertEquals("C,1t", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setDescription("C_");
      derivedVariable0.setYear("general.fieldValue.unknown");
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm3.setDescription("C_");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User("A_5,T~;EB#u9er_^>", "A_5,T~;EB#u9er_^>");
      User user1 = new User("C_", "E");
      assertEquals("C_", user1.getUserID());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      derivedVariable0.form = "~P==C/+ b`_t{(w";
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      rawVariable0.getIdentifier();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.remove((Object) supportingDocument0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setTitle("J/");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getAlternativeVariable();
      User user1 = new User("7Y*Xa*Rny", "bVxje]lo<So");
      assertEquals("", user1.getCity());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.665866264964773
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "general.fieldValue.blank");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      supportingDocument0.setDescription("general.fieldValue.blank");
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      rawVariable0.setName("X");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCleaningStatus("9A`F<JNOdmVpEv:Z9");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("X", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.3171305909712787
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList2);
      String string0 = rawVariable1.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.91744264088867
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<Object> arrayList1 = new ArrayList<Object>();
      arrayList0.containsAll(arrayList1);
      arrayList0.add(supportingDocument0);
      arrayList0.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument1.setDescription("generUl.fieldValue.blank");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("generUl.fieldValue.blank");
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.columnStart = "supportingDocument.fileName.saveChanges";
      rawVariable0.setName("X");
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setForm("6NS/^9nU&i4");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      User user1 = new User("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER", "Q@aMk4L)n5p<d9/>G");
      assertEquals("UNABLE_TO_GET_AVAILABILITY_STATE_IDENTIFIER", user1.getDisplayName());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.7163652509834257
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument1.setTitle("variable.name.label");
      supportingDocument0.setDescription("variable.isCleaned.sav^Changes.changedToNotClean");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getDisplayName();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.setNotes("lfwmXX");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      User user0 = new User("variable.notes.label", "variable.category.label");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      derivedVariable0.getSourceVariables();
      rawVariable0.createVariableSummary();
      rawVariable0.getName();
      assertEquals("lfwmXX", rawVariable0.getNotes());
      
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.7051692548779664
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.setCoded(true);
      rawVariable0.setLabel("variable.questionNumber.label");
      rawVariable0.setIdentifier((-350));
      rawVariable0.notes = "variable.questionNumber.label";
      rawVariable0.clone();
      rawVariable0.getDisplayName();
      rawVariable0.getCleaningStatus();
      rawVariable0.createVariableSummary();
      User user0 = new User("", "%)K_R");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("-350", rawVariable0.getDisplayItemIdentifier());
      assertEquals("variable.questionNumber.label", rawVariable0.getLabel());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.7534149746734564
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAvailability("general.fieldValue.unknown");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("Lxs{$ur/Pb");
      ontologyTerm2.setDescription("hA6fcWa{g");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      user0.setAddressLine1("general.fieldValue.unknown");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setCleaningStatus("W");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable2.cloneAttributes(derivedVariable1);
      assertEquals("W", derivedVariable1.getCleaningStatus());
      assertEquals("W", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.3310687041701184
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("variable.notes.label");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      assertEquals("variable.notes.label", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.1584692558038987
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      rawVariable1.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm6);
      String string0 = rawVariable0.getCleaningStatus();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.814615196602895
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnEnd();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      arrayList0.retainAll(list1);
      LinkedList<ValueLabel> linkedList1 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList1.add(valueLabel0);
      arrayList0.removeAll(linkedList1);
      derivedVariable0.setFilePath("macaw.system.ChangeEventType");
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.setNotes(")8r5qAlX5b+[3T\"Q");
      derivedVariable0.getSourceVariables();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel1.setValue("");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      valueLabel1.clone();
      rawVariable0.addValueLabel(valueLabel1);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getColumnEnd();
      rawVariable0.setCleaningDescription((String) null);
      derivedVariable0.getCleaningStatus();
      assertEquals("macaw.system.ChangeEventType", derivedVariable0.getFilePath());
      
      rawVariable0.setCategory((String) null);
      rawVariable0.getOntologyTerms();
      rawVariable0.setCleaned(true);
      rawVariable0.getColumnEnd();
      rawVariable0.clone();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) linkedList1);
      LinkedList<ValueLabel> linkedList3 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList3.add(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(true);
      derivedVariable0.setFilePath("macaw.system.ChangeEventType");
      derivedVariable0.getSourceVariables();
      User user0 = new User(")8r5qAlX5b+[3T\"Q", "B)`')uS_BbtPab3[");
      derivedVariable0.getColumnEnd();
      assertEquals("macaw.system.ChangeEventType", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.805248087459339
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setTitle("generUl.fieldValue.blank");
      supportingDocument1.setDescription("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_CREATE_VALUE_LABELS");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.setName("user.password.label");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User("Q@aMk4L)n5p<d9/>G", "supportingDocument.fileName.saveChanges");
      assertEquals("", user1.getAddressLine2());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.7911058713071575
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.questionNumber = "f-k";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      Variable.validateFields(derivedVariable4);
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable4.removeSourceVariable(derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable5.getSourceVariables();
      derivedVariable3.addSourceVariables(arrayList1);
      ArrayList<DerivedVariable> arrayList2 = new ArrayList<DerivedVariable>();
      arrayList2.add(derivedVariable3);
      derivedVariable4.setCategory("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      ArrayList<DerivedVariable> arrayList3 = new ArrayList<DerivedVariable>();
      User user2 = new User("DUPLICATE_SUPPORTING_DOCUMENT_CODE", "DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      derivedVariable4.setSourceVariables(arrayList1);
      assertEquals("DUPLICATE_SUPPORTING_DOCUMENT_CODE", derivedVariable4.getCategory());
      
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.setSourceVariables(arrayList1);
      derivedVariable3.addSourceVariables(arrayList1);
      assertFalse(derivedVariable5.isCleaned());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.6626856349083416
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable3.addSupportingDocuments(arrayList0);
      derivedVariable4.columnStart = "DUPLICATE_SUPPORTING_DOCUMENT_CODE";
      derivedVariable1.removeSourceVariable(derivedVariable2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(derivedVariable4);
      assertEquals(0, derivedVariable4.getIdentifier());
      assertFalse(derivedVariable4.isCleaned());
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertFalse(derivedVariable4.isCoded());
      assertEquals("", derivedVariable4.getYear());
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertEquals("", derivedVariable4.getCleaningDescription());
      assertFalse(derivedVariable4.isNewRecord());
      assertEquals("", derivedVariable4.getCodeBookNumber());
      assertEquals("", derivedVariable4.getLabel());
      assertEquals("", derivedVariable4.getForm());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.684376264090133
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertFalse(arrayList0.contains(ontologyTerm3));
      
      rawVariable0.clone();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.745910136412458
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("hoD+r");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("hoD+r");
      arrayList0.add(supportingDocument1);
      derivedVariable0.setSupportingDocuments(arrayList0);
      User user0 = new User("general.fieldValue.blank", "general.error.promotesSecurityRisk");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("hoD+r", derivedVariable0.getColumnStart());
      assertEquals("", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.196422294125466
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("R");
      supportingDocument0.setFileName("");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setCodeBookNumber(";?bms>YyfM)e,O!~c");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList1);
      User user0 = new User("l?17)2nw<y)UkcD@:", "R4;Q1$C*Qe{(R;'5l");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setAvailability("variable.cleaningStatus.label");
      rawVariable0.addSupportingDocuments(arrayList1);
      assertEquals(";?bms>YyfM)e,O!~c", derivedVariable0.getCodeBookNumber());
      
      rawVariable0.getCodeBookNumber();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.324481088886851
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-661));
      ontologyTerm0.setNameSpace("6WZpR)c");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("k?w1.]>");
      ontologyTerm0.setOntologyName("k?w1.]>");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm4);
      ontologyTerm0.setOntologyName("user.affiliation.saveChanges");
      ontologyTerm1.setOntologyName("6WZpR)c");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm5, ontologyTerm3);
      ontologyTerm5.setNewRecord(false);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.7033490862672633
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable3.addSupportingDocuments(arrayList0);
      derivedVariable4.columnStart = "DUPLICATE_SUPPORTING_DOCUMENT_CODE";
      derivedVariable1.removeSourceVariable(derivedVariable2);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.cloneAttributes(derivedVariable4);
      assertEquals("Unknown", derivedVariable4.getCleaningStatus());
      assertEquals("", derivedVariable4.getQuestionNumber());
      assertEquals("Unknown", derivedVariable4.getAvailability());
      assertEquals("", derivedVariable4.getYear());
      assertEquals("", derivedVariable4.getForm());
      assertEquals("Unknown", derivedVariable4.getCategory());
      assertEquals("0", derivedVariable4.getDisplayItemIdentifier());
      assertFalse(derivedVariable4.isNewRecord());
      assertEquals("", derivedVariable4.getLabel());
      
      int int0 = rawVariable1.getIdentifier();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3889133672295046
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.setAlias("variable.alternativeVariable.label");
      derivedVariable4.removeSourceVariable(derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable5.getSourceVariables();
      derivedVariable3.addSourceVariables(arrayList1);
      ArrayList<DerivedVariable> arrayList2 = new ArrayList<DerivedVariable>();
      arrayList2.add(derivedVariable3);
      ArrayList<DerivedVariable> arrayList3 = new ArrayList<DerivedVariable>();
      User user2 = new User("DUPLICATE_SUPPORTING_OCUMENT_CODE", "DUPLICATE_SUPPORTING_OCUMENT_CODE");
      derivedVariable4.setSourceVariables(arrayList1);
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.setSourceVariables(arrayList1);
      assertEquals("variable.alternativeVariable.label", derivedVariable1.getAlias());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.5357295733736676
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setFirstName("`-NS4h-");
      user1.clone();
      User user2 = new User("UNABLE_TO_CREATE_AVAILABILITY_STATE", "UNABLE_TO_CREATE_AVAILABILITY_STATE");
      user1.setCity("87c ZsSzh$=XmR");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.notes = "UNABLE_TO_CREATE_AVAILABILITY_STATE";
      rawVariable2.cloneAttributes(rawVariable3);
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertEquals("", rawVariable3.getColumnEnd());
      assertFalse(rawVariable3.isCoded());
      assertEquals("Unknown", rawVariable3.getAvailability());
      assertEquals("Unknown", rawVariable3.getCategory());
      assertEquals("", rawVariable3.getFilePath());
      assertEquals("", rawVariable3.getName());
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
      assertFalse(rawVariable3.isNewRecord());
      assertFalse(rawVariable3.isCleaned());
      assertEquals("", rawVariable3.getAlias());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaned(true);
      String string0 = "6WZpR)c";
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.7854767979977026
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setAlias("UNABLE_TO_GET_CATEGORIES");
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setColumnEnd("user.email.saveChanges");
      derivedVariable0.setName("variable.year.label");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setLabel("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES");
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.clone();
      derivedVariable0.getCategory();
      derivedVariable0.getDisplayName();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = null;
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.3262202193216335
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      derivedVariable0.getYear();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.7852027308481446
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAvailability("general.fieldValue.unknown");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("Lxs{$ur/Pb");
      ontologyTerm2.setDescription("hA6fcWa{g");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("variable.notes.label");
      ontologyTerm2.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable1.isCleaned();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("general.fieldValue.unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.3143719702816234
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      arrayList0.clear();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.059615150468091
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getSourceVariables();
      User user1 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user0.setFirstName("variable.columnStart.label");
      ontologyTerm0.setOntologyName("lfwmXX");
      ArrayList<MacawChangeEvent> arrayList0 = OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("A_5,T~;EB#u9er_^>");
      ontologyTerm0.setDescription("lfwmXX");
      derivedVariable0.getAlternativeVariable();
      User user2 = new User((String) null, (String) null);
      ArrayList<MacawChangeEvent> arrayList1 = OntologyTerm.detectFieldChanges(user2, ontologyTerm0, ontologyTerm0);
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnEnd();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      arrayList0.retainAll(linkedList1);
      LinkedList<ValueLabel> linkedList2 = new LinkedList<ValueLabel>();
      rawVariable0.setName("");
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList2.add(valueLabel0);
      derivedVariable0.setFilePath("A_5,T~;EB#u9er_^>");
      ArrayList<ValueLabel> arrayList1 = derivedVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList1);
      rawVariable0.setNotes("");
      rawVariable0.setColumnStart((String) null);
      User user0 = new User("A_5,T~;EB#u9er_^>", "A_5,T~;EB#u9er_^>");
      derivedVariable0.getSourceVariables();
      assertEquals("A_5,T~;EB#u9er_^>", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.689026068941394
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      User user0 = new User("M>[50P' w", "{,(Oz-x3Y(l5dJ*$l");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      predicate1.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      arrayList0.iterator();
      predicate2.and(predicate0);
      predicate3.or(predicate1);
      arrayList0.removeIf(predicate3);
      derivedVariable1.setValueLabels(arrayList0);
      derivedVariable1.setIdentifier((-1723701927));
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable1.isCoded();
      derivedVariable1.getName();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.625390528762087
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.questionNumber = ".X";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument0.setDescription("general.fieldValue.blank");
      derivedVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.setIdentifier((-1490732899));
      User user0 = new User();
      user0.setPassword("variable.alternativeVariable.label");
      user0.setAffiliation("q\"p!=");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getForm());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals(".X", derivedVariable1.getQuestionNumber());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertEquals("", derivedVariable1.getFilePath());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.5819853473450114
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.clear();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      supportingDocument1.setTitle("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument1.setDescription("generUl.fieldValue.blank");
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setAffiliation("UNABLE_TO_CREATE_VALUE_LABELS");
      rawVariable0.columnStart = "supportingDocument.fileName.saveChanges";
      rawVariable0.setName("X");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("X", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.7480682592066143
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAvailability("general.fieldValue.unknown");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("&]=#tykedx");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("Lxs{$ur/Pb");
      ontologyTerm2.setDescription("hA6fcWa{g");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("hA6fcWa{g");
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.codeBookNumber = "hA6fcWa{g";
      rawVariable2.cloneAttributes(derivedVariable0);
      assertEquals("hA6fcWa{g", derivedVariable0.getCodeBookNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.7045158443679154
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable4.removeSourceVariable(derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable5.getSourceVariables();
      derivedVariable3.addSourceVariables(arrayList1);
      ArrayList<DerivedVariable> arrayList2 = new ArrayList<DerivedVariable>();
      arrayList2.add(derivedVariable3);
      ArrayList<DerivedVariable> arrayList3 = new ArrayList<DerivedVariable>();
      rawVariable0.setLabel("DUPLICATE_SUPPORTING_DOCUMENT_CODE");
      ArrayList<OntologyTerm> arrayList4 = derivedVariable4.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList4);
      rawVariable0.cloneAttributes(derivedVariable1);
      User user2 = new User((String) null, "variable.columnEnd.label");
      assertEquals("", user2.getLastName());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.6226629321488604
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "65Wlx?\"A$(QRh#EPYz";
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("65Wlx?\"A$(QRh#EPYz", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.7664037899361476
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setColumnEnd((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName((String) null);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable1.getColumnStart();
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = new Integer((-2040449422));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2707);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(0);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-1464346430));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[0]);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer(2707);
      integerArray0[5] = integer5;
      Integer integer6 = new Integer((-1464346430));
      integerArray0[6] = integer6;
      Integer integer7 = new Integer((int) integerArray0[0]);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) derivedVariable1);
      arrayList0.removeIf(predicate0);
      integerArray0[7] = integer7;
      arrayList0.toArray(integerArray0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.1569877743224173
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList0.add(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user1 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user1.setFirstName("variable.columnStart.label");
      ontologyTerm0.setOntologyName("Hklf:8tH30![g");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      String string0 = "A_5,T~;EB#u9er_^>";
      ontologyTerm1.setNameSpace("lfwmXX");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("Hklf:8tH30![g");
      derivedVariable0.createVariableSummary();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.682604890528611
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable5.setQuestionNumber("^[w-+&*]+(?:.[w-_+&*]+)*@(?:[w-]+.)+[a-zA-Z]{2,7}$");
      rawVariable5.cloneAttributes(rawVariable2);
      RawVariable rawVariable6 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.679983198025875
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAvailability("general.fieldValue.unknown");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("Lxs{$ur/Pb");
      ontologyTerm2.setDescription("hA6fcWa{g");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      assertEquals("general.fieldValue.unknown", rawVariable0.getAvailability());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.getSourceVariables();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.324481088886851
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName(":oS*{5cOga@L");
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      arrayList0.removeAll(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean1 = derivedVariable0.isNewRecord();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.User");
      ontologyTerm0.setTerm("variabl.isCoded.label");
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaningDescription("PS)b0`Z<Ib=HA'f!");
      rawVariable0.setLabel("/EM5");
      User user1 = new User("variabl.isCoded.label-LHA", "variabl.isCoded.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      assertEquals("/EM5", rawVariable0.getLabel());
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm3);
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.1552486438876346
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      User user0 = new User("C2+4W]Rxby", "C2+4W]Rxby");
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      LinkedList<ValueLabel> linkedList1 = new LinkedList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      linkedList1.add(valueLabel0);
      derivedVariable0.setFilePath("macaw.system.ChangeEventType");
      derivedVariable0.getSourceVariables();
      User user0 = new User("#~", "WXmMwfz5|]Yg");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("macaw.system.ChangeEventType", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.parallelStream();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = null;
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }
}
