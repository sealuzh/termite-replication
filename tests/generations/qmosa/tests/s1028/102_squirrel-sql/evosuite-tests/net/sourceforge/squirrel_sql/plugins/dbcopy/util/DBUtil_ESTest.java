/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 22:15:11 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Button;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.event.ContainerListener;
import java.awt.event.ItemEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.TextListener;
import java.awt.event.WindowStateListener;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Dimension2D;
import java.awt.image.ImageObserver;
import java.io.File;
import java.io.FilenameFilter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.AttributedCharacterIterator;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.function.Predicate;
import javax.swing.ActionMap;
import javax.swing.DebugGraphics;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DropMode;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JTextPane;
import javax.swing.JToggleButton;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.ui.FilesystemFilter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      Dimension dimension0 = new Dimension();
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem((Icon) null);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jCheckBoxMenuItem0, 9, 187, 2989, 2001, 2989, 2004, true, 6, (-3524), (-6));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("jm?:");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 6, 6, 1206, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null);
      locale0.getDisplayName();
      locale0.toLanguageTag();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.setContentType("fQB|_");
      jTextPane0.getTransferHandler();
      jTextPane0.getDropMode();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), (-5), (-144), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString(";e%etL&=}Bn%+N74");
      uidIdentifier1.setString("`");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString(";e%etL&=}Bn%+N74");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString(";e%etL&=}Bn%+N74");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier4.setString("SYSTEM INDEX");
      uidIdentifier1.setString(";e%etL&=}Bn%+N74");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, 2001, 1447, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-67);
      byteArray0[0] = (byte) (-67);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getPluginsDirectory();
      file0.mkdir();
      fileWrapperFactoryImpl0.create(file0);
      File file1 = applicationFiles0.getPluginsDirectory();
      file1.toPath();
      fileWrapperFactoryImpl0.create(file1);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesTreeStructureFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseDriversFile();
      applicationFileWrappersImpl2.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles0.getEditWhereColsFile();
      MockFile mockFile0 = new MockFile("^D", "$7o}TW8bv2TxZm*");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.create((File) mockFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("f5qT`-O|5");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, (-486), (byte) (-67), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      JTextPane jTextPane0 = new JTextPane();
      StyleContext.getDefaultStyleContext();
      StyleContext.registerStaticAttributeKey(defaultTreeCellRenderer1);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("\n");
      uidIdentifier0.setString("}/]%G");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("0tkU`crl");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("}/]%G");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("XuH&-1");
      uidIdentifier4.setString("XuH&-1");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString("KoNlX!GjrZPXx+");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      UidIdentifier uidIdentifier8 = new UidIdentifier();
      uidIdentifier8.setString("0tkU`crl");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 5, 20, (-95), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("&lt;");
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Dimension dimension0 = jToggleButton0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jToggleButton0);
      basicCheckBoxUI0.contains(jToggleButton0, (-609), 3);
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jToggleButton0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      Dimension dimension1 = basicCheckBoxUI0.getMinimumSize(jToggleButton0);
      basicCheckBoxUI0.contains(jToggleButton0, 2001, 133);
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      jToggleButton0.removeFocusListener(basicComboBoxEditor_UIResource0);
      dBCopyPlugin1.getWebSite();
      dimension0.setSize((Dimension2D) dimension1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-4), 1068, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 9);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JMenu jMenu0 = new JMenu("pcyb9x;r@1sHqE3");
      System.setCurrentTimeMillis(9);
      jMenu0.transferFocusBackward();
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      jMenu0.setAction(styledEditorKit_BoldAction0);
      ActionMap actionMap0 = new ActionMap();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getVerifyInputWhenFocusTarget();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      StyleContext.registerStaticAttributeKey(defaultCaret0);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      jTextPane0.getLogicalStyle();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      defaultTreeCellRenderer0.getTextNonSelectionColor();
      defaultTreeCellRenderer0.add(".U[$l01hq", (Component) jTextPane0);
      jTextPane0.printAll(debugGraphics1);
      jTextPane0.requestFocus(true);
      jTextPane0.getDropMode();
      jTextPane0.getLogicalStyle();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2000, 1007, 15, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>(4609, 243);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("jm?:");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 92, 92, (-95), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      StyleContext.getDefaultStyleContext();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("\n");
      uidIdentifier0.setString("}/]%G");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("\n");
      uidIdentifier1.setString("0tkU`crl");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier2.setString("<FX Zp?2I>Y!Tn>");
      uidIdentifier1.setString("XuH&-1");
      uidIdentifier4.setString("XuH&-1");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString("KoNlX!GjrZPXx+");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      UidIdentifier uidIdentifier8 = new UidIdentifier();
      uidIdentifier8.setString("0tkU`crl");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 8, 20, (-95), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      JTextPane jTextPane0 = new JTextPane();
      StyleContext.getDefaultStyleContext();
      StyleContext.registerStaticAttributeKey(defaultTreeCellRenderer1);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JTextPane jTextPane1 = new JTextPane();
      jTextPane1.getSelectionColor();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics0, jTextPane0);
      jTextPane1.printAll(debugGraphics2);
      jTextPane1.requestFocus(true);
      jTextPane1.getDropMode();
      jTextPane1.getLogicalStyle();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("DB2");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2002, 1474, 70, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("org.apache.log4j.spi.Configurator");
      uidIdentifier0.setString("org.jfree.util.SortOrder");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("org.jfree.util.SortOrder");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier0.setString("WG}{zRV&TmO?:P6");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier0.setString("Null 'description' argument.");
      uidIdentifier3.setString("WG}{zRV&TmO?:P6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ");
      uidIdentifier0.setString("g/WM]");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("$");
      uidIdentifier3.setString((String) null);
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier0.setString("6rHKUt)");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3), 16, 16, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JCheckBox jCheckBox0 = new JCheckBox();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("]U!l>{?'SS8$\"Js");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("%hPHD<.Ka");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier0.setString("7RCS");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier4.setString(" CASCADE");
      uidIdentifier6.setString("o|4=BR?H~SG\"");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      uidIdentifier0.setString("$7cg37dB'");
      UidIdentifier uidIdentifier8 = new UidIdentifier();
      UidIdentifier uidIdentifier9 = new UidIdentifier();
      uidIdentifier3.setString(" and table_schema = ? ");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, 2, 5, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("&lt;", "&lt;");
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JCheckBox jCheckBox0 = new JCheckBox("&lt;", imageIcon0, true);
      jCheckBox0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      Dimension dimension0 = basicCheckBoxUI0.getMinimumSize(jToggleButton0);
      dimension0.setSize(7, 7);
      basicCheckBoxUI0.contains(jCheckBox0, 7, 7);
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI1.contains(jCheckBox0, 1340, (-4));
      basicCheckBoxUI1.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      basicCheckBoxUI3.getDefaultTextIconGap(jToggleButton0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("&lt;");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1111, 0, (-377), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      applicationFileWrappersImpl1.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getEditWhereColsFile();
      MockFile mockFile0 = new MockFile("org.apache.9ommons.cli.Opin", "org.apache.9ommons.cli.Opin");
      fileWrapperFactoryImpl0.create(file0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, 16, 4, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      Dimension dimension0 = new Dimension();
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultIcon();
      JCheckBox jCheckBox0 = new JCheckBox("lbc`u6No=ZB=o=AdT'e", (Icon) null, false);
      jCheckBox0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getMinimumSize(jToggleButton0);
      basicCheckBoxUI1.contains(jCheckBox0, 25, (-1336));
      basicCheckBoxUI1.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI2.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      JComponent.getDefaultLocale();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Myl( '#");
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      ItemEvent itemEvent0 = new ItemEvent(jToggleButton0, 25, attributedCharacterIterator_Attribute0, 32765);
      jToggleButton0.dispatchEvent(itemEvent0);
      basicCheckBoxUI2.contains(jToggleButton0, (-5), (-3));
      basicCheckBoxUI2.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI4 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getDefaultTextIconGap(jToggleButton0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, (-45), 2048, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("WG}{zVTqO?P6");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("WG}{zVTqO?P6");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier2.setString("insert into ");
      uidIdentifier2.setString("TableOrder.BY_ROW");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier6.setString("WG}{zVTqO?P6");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      UidIdentifier uidIdentifier8 = new UidIdentifier();
      uidIdentifier1.setString("WG}{zVTqO?P6");
      UidIdentifier uidIdentifier9 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, (-1227), (-177), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      JToggleButton jToggleButton0 = new JToggleButton("SELECT data_type FROM information_schema.columns where column_name = ? ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("E-!7o<5a&!");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString(", ");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier0.setString("#h'a");
      uidIdentifier1.setString("SELECT data_type FROM information_schema.columns where column_name = ? ");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier0.setString(", ");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier5.setString("Skipping FK (");
      uidIdentifier5.setString(".]`*la8}S");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 12, (-377), (-992), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getName();
      defaultTreeCellRenderer1.getToolTipText();
      defaultTreeCellRenderer1.getVerifyInputWhenFocusTarget();
      defaultTreeCellRenderer1.getVisibleRect();
      defaultTreeCellRenderer1.getClosedIcon();
      defaultTreeCellRenderer0.getPreferredSize();
      JMenuBar jMenuBar0 = new JMenuBar();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Tree.cellRenderer", "Tree.cellRenderer", "unspecifie{ in c'tor", "D(z1h", (-2148), "Tree.cellRenderer", 0, 2519, 3, 2006, (String) null, ";h;A^", 0, 0, "Y{o5V~u?SQy&Gmv=v");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
      
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("D(z1h", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("&lt;");
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JCheckBox jCheckBox0 = new JCheckBox("&lt;", imageIcon0, true);
      jCheckBox0.getMinimumSize();
      jToggleButton0.getPropertyChangeListeners();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jToggleButton0);
      basicCheckBoxUI0.contains(jCheckBox0, 25, 25);
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      Locale locale0 = JComponent.getDefaultLocale();
      ItemEvent itemEvent0 = new ItemEvent(jToggleButton0, 32765, locale0, (-3));
      jToggleButton0.dispatchEvent(itemEvent0);
      basicCheckBoxUI1.contains(jCheckBox0, 1340, (-4));
      basicCheckBoxUI1.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI2.getDefaultTextIconGap(jToggleButton0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, 0, 92, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getEditWhereColsFile();
      File file0 = applicationFiles0.getUserSQLHistoryFile();
      FileWrapper fileWrapper1 = fileWrapperFactoryImpl0.create(file0);
      fileWrapper1.getAbsolutePath();
      fileWrapper0.getPrintWriter();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      File file1 = applicationFiles0.getWelcomeFile();
      applicationFileWrappersImpl0.getPluginsDirectory();
      file1.getAbsoluteFile();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getLibraryDirectory();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 70, 1474, 2691, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("&lt;");
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JCheckBox jCheckBox0 = new JCheckBox("&lt;", imageIcon0, true);
      JCheckBox jCheckBox1 = new JCheckBox("&lt;", imageIcon0, true);
      jCheckBox1.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jCheckBox1);
      basicCheckBoxUI0.contains(jCheckBox1, 34, (-531));
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jToggleButton0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      JComponent.getDefaultLocale();
      ItemEvent itemEvent0 = new ItemEvent(jCheckBox0, 2876, basicCheckBoxUI0, 0);
      jCheckBox1.dispatchEvent(itemEvent0);
      basicCheckBoxUI0.contains(jCheckBox1, 2051, 5);
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI1.getDefaultTextIconGap(jCheckBox1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2), 6, (-166), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      applicationFileWrappersImpl1.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getEditWhereColsFile();
      MockFile mockFile0 = new MockFile("org.apache.9ommons.cli.Opin", "org.apache.9ommons.cli.Opin");
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create(file0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      FilesystemFilter filesystemFilter0 = new FilesystemFilter("org.apache.9ommons.cli.Opin", (String) null, false);
      fileWrapper0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapperImpl.createTempFile("org.apache.9ommons.cli.Opin", "org.apache.9ommons.cli.Opin");
      stringArray0[1] = "org.apache.9ommons.cli.Opin";
      FilesystemFilter filesystemFilter1 = new FilesystemFilter(stringArray0, "org.apache.9ommons.cli.Opin", false);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, 3, (-3807), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale.filter((List<Locale.LanguageRange>) vector0, (Collection<Locale>) null);
      locale0.getDisplayName();
      locale0.toLanguageTag();
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>(4609, 243);
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) priorityBlockingQueue0, locale_FilteringMode0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1843, (-1398), (-1398), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles0.getEditWhereColsFile();
      applicationFiles0.getUserSQLHistoryFile();
      System.setCurrentTimeMillis((-3402L));
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "JZGAvH4[sC]Tt");
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 2);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JMenu jMenu0 = new JMenu("p.b9x;r/1sHqE<");
      JScrollBar jScrollBar0 = new JScrollBar();
      JScrollBar jScrollBar1 = null;
      try {
        jScrollBar1 = new JScrollBar(39, 2, 2, 2, (-306));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // orientation must be one of: VERTICAL, HORIZONTAL
         //
         verifyException("javax.swing.JScrollBar", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JMenu jMenu0 = new JMenu("Skipping FK (");
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener1);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener1, (KeyListener) null);
      AWTEventMulticaster.remove(keyListener3, (KeyListener) null);
      jMenu0.removeKeyListener((KeyListener) null);
      Font font0 = new Font("org.jfree.data.general.SeriesException", (-1282), 18);
      Hashtable<AttributedCharacterIterator.Attribute, TableInfo> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, TableInfo>();
      Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      System.setCurrentTimeMillis(1740L);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "95+pH06", "95+pH06");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-1282));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      int int0 = 3;
      int int1 = (-589);
      DBUtil.typesAreEquivalent(3, (-589));
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 3);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("/5eKF;66");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("nG*)-AD");
      uidIdentifier0.setString("/5eKF;66");
      uidIdentifier1.setString("6e&6vr-7Sr)*");
      assertEquals("6e&6vr-7Sr)*", uidIdentifier1.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getEditWhereColsFile();
      applicationFileWrappersImpl1.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "LV^e$09A", "LV^e$09A");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 2001);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      JCheckBox jCheckBox0 = new JCheckBox("l7f63RMJ~BP|'", (Icon) null, false);
      jCheckBox0.setDoubleBuffered(true);
      jCheckBox0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jCheckBox0);
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      basicCheckBoxUI0.getMaximumSize(jCheckBox0);
      basicCheckBoxUI0.contains(jCheckBox0, (-1224), (-864));
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      jCheckBox0.getVetoableChangeListeners();
      jCheckBox0.firePropertyChange("u-4tXbO;hi", 1L, (long) 0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      jCheckBox0.removeNotify();
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "[nkxSy", "[nkxSy");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getEditWhereColsFile();
      File file0 = applicationFiles0.getUserSQLHistoryFile();
      FileWrapper fileWrapper1 = fileWrapperFactoryImpl0.create(file0);
      fileWrapper1.getAbsolutePath();
      fileWrapper0.getPrintWriter();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      File file1 = applicationFiles0.getWelcomeFile();
      applicationFileWrappersImpl0.getPluginsDirectory();
      file1.getAbsoluteFile();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getLibraryDirectory();
      applicationFiles1.getWelcomeFile();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles1);
      fileWrapperFactoryImpl0.createTempFile("q}7FrI5*8`", "/home/ubuntu/.squirrel-sql/sql_history.xml");
      fileWrapperFactoryImpl0.create(fileWrapper1, "q}7FrI5*8`");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "q}7FrI5*8`", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, 16);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString(">~1:FH/kx?)L#uUvM");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString(">~1:FH/kx?)L#uUvM");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("&sU0jB:hp7+`");
      assertNotSame(uidIdentifier2, uidIdentifier1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "WG{$", "WG{$", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1636, (String) null, 121, 95, 95, 1636, "WG{$", ",48W;)zn-,llRfPYN", (-397), 52, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte) (-4);
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-85);
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1~%Om`9Xm[XIzlYy%I");
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, (String) null, "A^C<b,n@|Pw!W/A/g", (String) null, (byte)1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("S3>eQj&=~x(Q^:/t", "g/WM]", "TGp{srUK0/k", "TGp{srUK0/k", (-4), "]c3xgnH>>$\nBW#/b+]", 1, 1, 7, 1, "TGp{srUK0/k", "5!\"O.JjvT", 1, 5, "More data than series to put them in");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType.createNewDatabaseObjectType("P", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (Icon) null);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis((-4));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")@Et&7i2BqgPw@+R");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z|I=");
      System.setCurrentTimeMillis((-2108L));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "null", "}");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[1] = ")@Et&7i2BqgPw@+R";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[3] = "null";
      stringArray0[4] = "generated by default as identity (start with 1)";
      stringArray0[5] = "z|I=";
      stringArray0[6] = "}";
      stringArray0[7] = "wq\"2b0-g%Wr|in61";
      stringArray0[8] = "}";
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("&lt;");
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JCheckBox jCheckBox0 = new JCheckBox("&lt;", imageIcon0, true);
      jCheckBox0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jToggleButton0);
      basicCheckBoxUI0.contains(jCheckBox0, 25, 25);
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI1.contains(jCheckBox0, (-581), (-4));
      basicCheckBoxUI1.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI2.getDefaultTextIconGap(jToggleButton0);
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "&lt;", "'cyptht!FA|Q", "~", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-61));
      assertFalse(boolean0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BIN$");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int int0 = 16;
      DBUtil.typesAreEquivalent(16, 16);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getTransferHandler();
      DropMode dropMode0 = DropMode.ON_OR_INSERT_COLS;
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      ContainerListener containerListener2 = AWTEventMulticaster.add((ContainerListener) null, containerListener1);
      ContainerListener containerListener3 = AWTEventMulticaster.add(containerListener1, containerListener2);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener2, containerListener2);
      ContainerListener containerListener4 = AWTEventMulticaster.add(containerListener3, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener1, containerListener2);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      ContainerListener containerListener5 = AWTEventMulticaster.remove(containerListener4, (ContainerListener) null);
      AWTEventMulticaster.add(containerListener2, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener5, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener5, (ContainerListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      System.setCurrentTimeMillis(1105L);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(". Skipping FK constraint", "", ". Skipping FK constraint");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte) (-27);
      byteArray0[6] = (byte) (-27);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      PriorityQueue<IndexInfo> priorityQueue0 = new PriorityQueue<IndexInfo>();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      stack0.retainAll(priorityQueue0);
      stack0.add((IDatabaseObjectInfo) null);
      stack1.parallelStream();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      linkedBlockingQueue0.removeIf(predicate2);
      stack1.containsAll(linkedBlockingQueue0);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertEquals(1, list0.size());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JMenu jMenu0 = new JMenu("Skipping FK (");
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) null, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) null, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) null, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster4, (KeyListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster4, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster1, (KeyListener) null);
      jMenu0.removeKeyListener(aWTEventMulticaster3);
      Font font0 = new Font("Skipping FK (", 18, (-1170));
      Hashtable<AttributedCharacterIterator.Attribute, TableInfo> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, TableInfo>();
      Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      Locale locale0 = Locale.GERMAN;
      System.setCurrentTimeMillis(18);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "org.jfree.data.general.SeriesException", "95+pH06");
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "org.jfree.data.general.SeriesException");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("-k'Tu>ti* RXWyU", "org.hibernate.id.IdentityGenerator", "NcR", "", 2004, ",48W;)zn-,llRfPYN", 1611, 2004, 3315, 151, "INGRES", "yKUD", 4691, (-2105376123), "1^RUVZV<[CkzOSAY2X");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "org.hibernate.id.IdentityGenerator", "U(fXeIuRUg?&", "04:\"^", 2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      ImageIcon imageIcon0 = new ImageIcon("5;[FYd(h-6-O");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(" in schema ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.CATALOG;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.COLUMN;
      DatabaseObjectType.createNewDatabaseObjectType("5;[FYd(h-6-O", (Icon) imageIcon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" in schema ", " in schema ", "Q found at end of string.", "m", (-3), "5;[FYd(h-6-O", (-3), (-3221), 2081, 12, "[2$]$U#Z", "#:M1P,jGzI)~nl9;*)", (-3221), (-3221), "");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType.createNewDatabaseObjectType("[2$]$U#Z", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.CATALOG;
      DatabaseObjectType.createNewDatabaseObjectType("l4ob", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(2081);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument0);
      Style style0 = jTextPane0.getLogicalStyle();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle((Style) null);
      styleContext_NamedStyle0.getChangeListeners();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(styleContext_NamedStyle0);
      styleContext0.getForeground(style0);
      jTextPane1.requestFocus(true);
      jTextPane1.getDropMode();
      jTextPane1.getLogicalStyle();
      styleContext_NamedStyle0.getName();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("(z,lEC&Ac`W", styleContext_NamedStyle0);
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      styleContext2.getFont((AttributeSet) styleContext_NamedStyle0);
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      styleContext3.getFont("(z,lEC&Ac`W", 530, 530);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "]ahw5^", (String) null, " schema = ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z7`{>/q9w`", "DK;o|(_FZ$+[DXwd}", "DK;o|(_FZ$+[DXwd}", "DK;o|(_FZ$+[DXwd}", 3785, "8m!\"G@~", (-5), 3785, 3785, (-7), "o%RNjH&0", "H9Z", 245, (-5), "DK;o|(_FZ$+[DXwd}");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getEditWhereColsFile();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      dBCopyPlugin0.getApplication();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte)62;
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertEquals(2, list1.size());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Font font0 = new Font("Xe>h!2/TSF_{=N4Vo", (-698), 1580);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.BEST_ROW_ID;
      DatabaseObjectType.createNewDatabaseObjectType(",G", (Icon) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(":;poPG", ":;poPG", "r%dW&D9<VDM$BBHbpP", "7", (-698), "G]<9b;", (-698), 1580, (-1959), (-933), "Xe>h!2/TSF_{=N4Vo", ",G", 6, 64, ",G");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("!0qpDPtugTohId", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("DROP TABLE ", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType.createNewDatabaseObjectType("insert into ", (Icon) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.FOREIGN_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType5);
      DBUtil.isBinaryType(tableColumnInfo0);
      System.setCurrentTimeMillis(1580);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      ContainerListener containerListener2 = AWTEventMulticaster.add(containerListener1, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener1, containerListener2);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener2, (ContainerListener) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("xxbmO{:K9l5h4s+A44;");
      uidIdentifier0.setString("<Bfl9");
      uidIdentifier0.setString("bH!K");
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Class<StyledEditorKit.ItalicAction> class0 = StyledEditorKit.ItalicAction.class;
      defaultTreeCellRenderer0.getListeners(class0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getVerifyInputWhenFocusTarget();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.getVisibleRect();
      defaultTreeCellRenderer2.getClosedIcon();
      defaultTreeCellRenderer0.getPreferredSize();
      JMenuBar jMenuBar0 = new JMenuBar();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.enableInputMethods(false);
      JMenu jMenu0 = new JMenu("0", true);
      jMenuBar0.getBackground();
      jMenu0.isPopupMenuVisible();
      jMenu0.setRolloverEnabled(true);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "mj$%AlpLn b^3!", (String) null, "mj$%AlpLn b^3!", 0, "=xA", 1667, (-2028178998), 53, 0, "Ye", "mj$%AlpLn b^3!", 0, 2432, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getEditWhereColsFile();
      applicationFiles0.getUserSQLHistoryFile();
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create(file0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[3];
      stringArray0[2] = "org.apache.9ommons.cli.Opin";
      stringArray0[1] = "org.apache.9ommons.cli.Opin";
      FilesystemFilter filesystemFilter0 = new FilesystemFilter(stringArray0, "org.apache.9ommons.cli.Opin", false);
      fileWrapper0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("org.apache.9ommons.cli.Opin", " ADD FOREIGN KEY (", fileWrapper0);
      fileWrapperImpl0.getPrintWriter();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("org.apache.9ommons.cli.Opin", "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getEditWhereColsFile();
      applicationFiles0.getUserSQLHistoryFile();
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create(file0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "org.apache.9ommons.cli.Opin";
      stringArray0[1] = "org.apache.9ommons.cli.Opin";
      FilesystemFilter filesystemFilter0 = new FilesystemFilter(stringArray0, "org.apache.9ommons.cli.Opin", false);
      fileWrapper0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("org.apache.9ommons.cli.Opin", " ADD FOREIGN KEY (", fileWrapper0);
      fileWrapperImpl0.getPrintWriter();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("org.apache.9ommons.cli.Opin", "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "kPbz@'9nmb", "cv!>@Rf,?Gd");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JMenu jMenu0 = new JMenu("++'c_j{B&jS:i6", false);
      Font font0 = new Font("Xe>h!2/TSF_{=N4Vo", (-698), 2004);
      jMenu0.setFont(font0);
      jMenu0.getName();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("I!oe_h0L>M", "eDAS?%", "Xe>h!2/TSF_{=N4Vo", "Xe>h!2/TSF_{=N4Vo", (-2711), "Xe>h!2/TSF_{=N4Vo", 92, 92, (-1982), 334, "w,", "-", (-698), 865, "w,");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-587));
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLDriver sQLDriver1 = new SQLDriver(integerIdentifier0);
      assertEquals("", sQLDriver1.getUrl());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Font.getFont("Xe>h!2/TSF_{=N4Vo");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("I!oe_nh0L>", "eDAS?%", "Xe>h!2/TSF_{=N4Vo", "Xe>h!2/TSF_{=N4Vo", (-2718), "Xe>h!2/TSF_{=N4Vo", 101, 101, (-1954), 334, "w,", "-", (-698), 865, "w,");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[18];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "m";
      DBUtil.fixCase((ISession) null, (String) null);
      String string1 = "Specify a comma-delimited list of plugins to load from the CLASSPATH";
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = "";
      DBUtil.fixCase((ISession) null, "");
      String string1 = "Specify a comma-delimited list of plugins to load from the CLASSPATH";
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getEditWhereColsFile();
      applicationFiles0.getUserSQLHistoryFile();
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create(file0);
      String[] stringArray0 = new String[3];
      stringArray0[2] = "org.apache.9ommons.cli.Opin";
      stringArray0[1] = "org.apache.9ommons.cli.Opin";
      FilesystemFilter filesystemFilter0 = new FilesystemFilter(stringArray0, "org.apache.9ommons.cli.Opin", false);
      fileWrapper0.listFiles((FilenameFilter) filesystemFilter0);
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("org.apache.9ommons.cli.Opin", " ADD FOREIGN KEY (", fileWrapper0);
      fileWrapperImpl0.getPrintWriter();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("org.apache.9ommons.cli.Opin", "org.apache.9ommons.cli.Opin");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "jnqE\\_cUO";
      int int0 = (-2034458190);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-67);
      JCheckBox jCheckBox0 = new JCheckBox("l7f63RMJ~BP|'", (Icon) null, false);
      jCheckBox0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jCheckBox0);
      basicCheckBoxUI0.contains(jCheckBox0, (-1224), (-864));
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("l7f63RMJ~BP|'", "l7f63RMJ~BP|'", "t'", "kC^;z:!SB_UYxQQ\"", (-159), "kC^;z:!SB_UYxQQ\"", 2556, (-159), 0, (-864), "kC^;z:!SB_UYxQQ\"", "t'", 23, 6461, "blob sub_type -1");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-159), int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("2W9&", "}V3~cQ5epm~?mZli", ").d`54rY0SL/p_Q=n,", (String) null, 213, "Xr^`1mqa", 213, 1907, 2479, (-481), "", "Xr^`1mqa", (-691), (-2013265917), "2W9&");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin1.getSourceSession();
      dBCopyPlugin1.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo(")(ey_!DR?9", ".-`S!;", "8ddp(O8;u,uhS?9e\":", "Xr^`1mqa", 1907, "Xr^`1mqa", 32765, (-829), 2003, (-829), (String) null, "bxa?xw$RaaMWFOE$", 213, 1198, "");
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
      String string0 = DBUtil.getSchemaNameFromDbObject(iDatabaseObjectInfo0);
      assertEquals(").d`54rY0SL/p_Q=n,", string0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DBUtil.typesAreEquivalent(9, 2);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JMenu jMenu0 = new JMenu("cyb9x;@1sHqE3");
      Frame frame0 = null;
      try {
        frame0 = new Frame("cyb9x;@1sHqE3");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, containerListener0);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      System.setCurrentTimeMillis(0L);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      JTextPane jTextPane0 = new JTextPane();
      StyleContext.getDefaultStyleContext();
      StyleContext.registerStaticAttributeKey(defaultTreeCellRenderer1);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("\n");
      uidIdentifier0.setString("}/]%G");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("0tkU`crl");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier4.setString("}/]%G");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier1.setString("XuH&-1");
      uidIdentifier4.setString("XuH&-1");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString("KoNlX!GjrZPXx+");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      UidIdentifier uidIdentifier8 = new UidIdentifier();
      uidIdentifier8.setString("0tkU`crl");
      System.setCurrentTimeMillis(0L);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("}/]%G", "KoNlX!GjrZPXx+", "]U!l>{?'SS8$\"Js", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("U'.W<;X}7]Eb:S9", (String) null, "TGp{srUK0/k");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getName();
      defaultTreeCellRenderer0.getToolTipText();
      defaultTreeCellRenderer0.getVerifyInputWhenFocusTarget();
      defaultTreeCellRenderer0.getVisibleRect();
      defaultTreeCellRenderer0.getPreferredSize();
      JMenuBar jMenuBar0 = new JMenuBar();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "O- ", "unspecifie{ in c'tor", " ADD FOREIGN KEY (", (-1556), ";", 2, 0, 187, (-3011), "mnemonic", ";", 1021, 12, "Tree.cellRenderer");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "F]N.e!l(mn", " MN'-a<>c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Font font0 = new Font("org.apache.9ommons.cli.Opin", 553, (-3570));
      JMenu jMenu0 = new JMenu("org.apache.9ommons.cli.Opin");
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      JTextPane jTextPane1 = new JTextPane();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane2 = new JTextPane(defaultStyledDocument0);
      Style style0 = jTextPane0.getLogicalStyle();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(style0);
      simpleAttributeSet0.removeAttribute(style0);
      styleContext0.getForeground(simpleAttributeSet0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      jTextPane0.printAll(debugGraphics1);
      jTextPane2.requestFocus(true);
      DropMode dropMode0 = DropMode.ON_OR_INSERT_COLS;
      Style style1 = jTextPane1.getLogicalStyle();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext1.getFont((AttributeSet) style1);
      styleContext1.getFont("org.apache.9ommons.cli.Opin", (-3570), 553);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".W*Bp;H;|146x", "LhS<3:n@b9\"Au", ".W*Bp;H;|146x", ".W*Bp;H;|146x", 553, "org.apache.9ommons.cli.Opin", (-1607), 553, 2001, (-20), "LhS<3:n@b9\"Au", ".W*Bp;H;|146x", 553, (-692), "LhS<3:n@b9\"Au");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(553, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String string0 = ";-Q]-2\\`|4)f{i#BqD";
      int int0 = (-1188);
      int int1 = (-1322);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(";-Q]-2`|4)f{i#BqD", ";-Q]-2`|4)f{i#BqD", "DBUtil.getTableInfo: found ", "$7cg\"7dB'", 1124, "DBUtil.getTableInfo: found ", 834, 18, 1124, (-1188), "Cs|,>?lS7u<D", ";-Q]-2`|4)f{i#BqD", 834, (-1322), "Cs|,>?lS7u<D");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 28);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      System.setCurrentTimeMillis(28);
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      ActionMap actionMap0 = new ActionMap();
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7576378583071737
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DBUtil.setLastStatement("/(&`k>1-O");
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      vector0.spliterator();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(vector0);
      DBUtil.convertTableToObjectList(list0);
      DBUtil.getLastStatement();
      DBUtil.typesAreEquivalent((-2028), (-2028));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("readme.html", dBCopyPlugin0.getHelpFileName());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = ",getDriverName";
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, ",getDriverName", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)119;
      byteArray0[2] = (byte)118;
      byteArray0[3] = (byte)86;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      PriorityQueue<IndexInfo> priorityQueue0 = new PriorityQueue<IndexInfo>();
      Stack<IDatabaseObjectInfo> stack1 = new Stack<IDatabaseObjectInfo>();
      stack0.retainAll(priorityQueue0);
      stack0.add((IDatabaseObjectInfo) null);
      stack1.parallelStream();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      linkedBlockingQueue0.removeIf(predicate2);
      stack1.containsAll(linkedBlockingQueue0);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertFalse(list0.isEmpty());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-67);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("No resource is associated with key \"", "No resource is associated with key \"", "No resource is associated with key \"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getHorizontalAlignment();
      defaultTreeCellRenderer0.getVerifyInputWhenFocusTarget();
      defaultTreeCellRenderer0.getVisibleRect();
      defaultTreeCellRenderer0.getClosedIcon();
      defaultTreeCellRenderer0.getPreferredSize();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("A^C<b,n@|Pw!W/A/g", "Xe>h!/TSF_{=N4Vo", "decimal($p, $s)", "write", 2049, "write", 3, (-1143), 0, (-2766), "DROP TABLE ", "Xe>h!/TSF_{=N4Vo", 0, 2003, "$xuCMKr]wbMM");
      int int0 = DBUtil.replaceDistinctDataType(2049, tableColumnInfo0, (ISession) null);
      assertEquals(2049, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JMenu jMenu0 = new JMenu("Skipping FK (");
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      KeyListener keyListener2 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      KeyListener keyListener3 = AWTEventMulticaster.add(keyListener1, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, keyListener2);
      KeyListener keyListener4 = AWTEventMulticaster.add((KeyListener) null, keyListener3);
      KeyListener keyListener5 = AWTEventMulticaster.add((KeyListener) null, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, keyListener4);
      AWTEventMulticaster.remove(keyListener5, keyListener3);
      AWTEventMulticaster.remove(keyListener1, keyListener2);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add(keyListener5, keyListener2);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Skipping FK (", "_Y", "org.jfree.util.SortOrder", "org.hibernate.type.IntegerType", (-2040109463), "org.jfree.util.SortOrder", (-2040109463), (-2040109463), 91, 88, "Skipping FK (", "org.jfree.util.SortOrder", 319, 2001, "WL%=79|%sX");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType((-2040109463), tableColumnInfo0, (ISession) null);
      assertEquals((-2040109463), int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      JMenu jMenu0 = new JMenu("1,aNL}Pq*^n4:E:sV5");
      jMenu0.addContainerListener((ContainerListener) null);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseObjectType) null).when(foreignKeyInfo0).getDatabaseObjectType();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(foreignKeyInfo0, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "0cQ(vA:PNj{Ke#");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      JTextPane jTextPane1 = new JTextPane();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(styleContext_NamedStyle0);
      simpleAttributeSet0.removeAttribute(styleContext_NamedStyle0);
      styleContext0.getForeground(simpleAttributeSet0);
      StyleContext.getDefaultStyleContext();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics((Graphics) null);
      jTextPane1.printAll((Graphics) null);
      jTextPane0.requestFocus(true);
      jTextPane0.getDropMode();
      Style style0 = jTextPane1.getLogicalStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("org.apache.9ommons.cli.Opin", style0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      Enumeration<Integer> enumeration0 = (Enumeration<Integer>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      styleContext1.removeAttributes((AttributeSet) style0, (Enumeration<?>) enumeration0);
      styleContext1.getFont((AttributeSet) style0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Font font0 = new Font("org.apache.9ommons.cli.Opin", 530, (-3570));
      JMenu jMenu0 = new JMenu("org.apache.9ommons.cli.Opin");
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      JTextPane jTextPane1 = new JTextPane();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane2 = new JTextPane(defaultStyledDocument0);
      Style style0 = jTextPane0.getLogicalStyle();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(style0);
      simpleAttributeSet0.removeAttribute(style0);
      styleContext0.getForeground(simpleAttributeSet0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      jTextPane0.printAll(debugGraphics1);
      jTextPane2.requestFocus(true);
      jTextPane0.getDropMode();
      Style style1 = jTextPane1.getLogicalStyle();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle("org.apache.9ommons.cli.Opin", style1);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext1.getFont((AttributeSet) style1);
      styleContext1.getFont("org.apache.9ommons.cli.Opin", (-3570), 530);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".W*Bp;H;|146x", "LhS<3:n@b9\"Au", ".W*Bp;H;|146x", ".W*Bp;H;|146x", 0, "org.apache.9ommons.cli.Opin", (-1607), 530, 2001, 1, "LhS<3:n@b9\"Au", ".W*Bp;H;|146x", 33, (-692), "LhS<3:n@b9\"Au");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "9?m:=";
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "9?m:=", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0264805138932787
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      String string0 = "Max function is null for dialect=";
      Font font0 = new Font("Max function is null for dialect=", 1829, 243);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>(4609, 243);
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((-3025.908));
      DBUtil dBUtil0 = new DBUtil();
      FontRenderContext fontRenderContext0 = null;
      try {
        fontRenderContext0 = new FontRenderContext(affineTransform0, font0, dBUtil0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // AA hint:java.awt.Font[family=Dialog,name=Max function is null for dialect=,style=plain,size=243]
         //
         verifyException("java.awt.font.FontRenderContext", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("&lt;");
      JToggleButton jToggleButton0 = new JToggleButton(", ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JCheckBox jCheckBox0 = new JCheckBox("&lt;", imageIcon0, true);
      Dimension dimension0 = jCheckBox0.getMinimumSize();
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      Dimension dimension1 = basicCheckBoxUI0.getMinimumSize(jToggleButton0);
      basicCheckBoxUI0.contains(jCheckBox0, 25, 34);
      basicCheckBoxUI0.getDefaultIcon();
      basicCheckBoxUI0.getDefaultTextIconGap(jCheckBox0);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getMinimumSize(jCheckBox0);
      basicCheckBoxUI1.contains(jCheckBox0, 1340, (-4));
      basicCheckBoxUI1.getDefaultIcon();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI2.getDefaultTextIconGap(jToggleButton0);
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      jToggleButton0.removeFocusListener(basicComboBoxEditor_UIResource0);
      dBCopyPlugin0.getWebSite();
      dimension1.setSize((Dimension2D) dimension0);
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DBUtil.typesAreEquivalent(9, 9);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      JMenu jMenu0 = new JMenu("pcyb9x;r@1sHqE3");
      try { 
        JOptionPane.getFrameForComponent(jMenu0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 9);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      JMenu jMenu0 = new JMenu("pcyb9x;r@1sHqE3");
      JScrollBar jScrollBar0 = new JScrollBar();
      int int0 = (-1073741822);
      Button button0 = null;
      try {
        button0 = new Button();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(747, 747);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument0);
      Style style0 = jTextPane0.getLogicalStyle();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(style0);
      jTextPane1.requestFocus(true);
      jTextPane0.getDropMode();
      Style style1 = jTextPane0.getLogicalStyle();
      style1.getName();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle("org.apache.9ommons.cli.Opin", style1);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext1.getFont((AttributeSet) style1);
      styleContext1.getFont("org.apache.9ommons.cli.Opin", (-3570), 530);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "org.apache.9ommons.cli.Opin", "default");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "zqXAVMgSw", "Eg.{z", "}76LcY-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Rectangle rectangle0 = new Rectangle();
      defaultTreeCellRenderer0.getPreferredSize();
      JMenuBar jMenuBar0 = new JMenuBar();
      JMenu jMenu0 = new JMenu("unspecified in c'tor", true);
      jMenu0.grabFocus();
      jMenuBar0.isPaintingForPrint();
      JMenu jMenu1 = jMenuBar0.add(jMenu0);
      jMenu1.addNotify();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("; ");
      imageIcon0.getImageObserver();
      imageIcon0.getIconHeight();
      JToggleButton jToggleButton0 = new JToggleButton("; ", imageIcon0);
      Dimension dimension0 = new Dimension();
      imageIcon0.setImageObserver(jToggleButton0);
      imageIcon0.setDescription("VEVuMyw%OK;j");
      imageIcon0.setImageObserver((ImageObserver) null);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("; ", "; ", "DELETE FROM ", (ISession) null, false, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      JTextPane jTextPane1 = new JTextPane();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      Style style0 = jTextPane0.getLogicalStyle();
      SimpleAttributeSet simpleAttributeSet0 = new SimpleAttributeSet(style0);
      simpleAttributeSet0.removeAttribute(style0);
      styleContext0.getForeground(simpleAttributeSet0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics((Graphics) null);
      jTextPane1.printAll((Graphics) null);
      jTextPane0.requestFocus(true);
      jTextPane0.getDropMode();
      Style style1 = jTextPane1.getLogicalStyle();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle("org.apache.9ommons.cli.Opin", style1);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      Enumeration<Integer> enumeration0 = (Enumeration<Integer>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      styleContext1.removeAttributes((AttributeSet) style1, (Enumeration<?>) enumeration0);
      styleContext1.getFont((AttributeSet) style1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" tableName=", "select last_insert_id()", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ZS~n$ow'q>c>p", 1718, ":*,Y!;", 457, (-728), (-728), (-1639), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ZS~n$ow'q>c>p", 1923, 1111, " tableName=");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "org.apache.9ommons.cli.Opin", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setAutoCommitEnabled(true);
      dBCopyPreferenceBean0.setWriteScript(false);
      DBUtil.setPreferences((DBCopyPreferenceBean) null);
      DBUtil.setLastStatementValues(">DOc&sb|';M7");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NZGlT]N,8P", (String) null, "={vXwnFKgB:PN%", "XrL 8=rTle8.5E;@", 1457, ">DOc&sb|';M7", 3116, 441, 3116, 1809, (String) null, ">DOc&sb|';M7", 3116, (-122), "NZGlT]N,8P");
      DBUtil.getLastStatement();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "xxbmO{:K9l5h4s+A44;", "Year constructor: year (", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getVisibleRect();
      defaultTreeCellRenderer0.getPreferredSize();
      JMenuBar jMenuBar0 = new JMenuBar();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "unspecified in c'tor", (String) null, "b]88;", (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("No resource is associated with key \"", "No resource is associated with key \"", "No resource is associated with key \"");
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("No resource is associated with key \"", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(". Skipping FK constraint", "", ". Skipping FK constraint");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.OTHER;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.VIEW;
      String string0 = DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      JMenu jMenu0 = new JMenu("org.apache.9ommons.cli.Opin");
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      JMenu jMenu1 = new JMenu("org.apache.9ommons.cli.Opin");
      jMenu1.removeKeyListener((KeyListener) null);
      Font font0 = new Font("org.jfree.data.general.SeriesException", 4044, (-1282));
      Hashtable<AttributedCharacterIterator.Attribute, TableInfo> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, TableInfo>();
      font0.getFamily();
      Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      Locale locale0 = Locale.ENGLISH;
      font0.deriveFont((float) (-1282));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "select ", (ITableInfo) null, (-2912));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("; ");
      imageIcon0.getImageObserver();
      imageIcon0.getIconHeight();
      JToggleButton jToggleButton0 = new JToggleButton("; ", imageIcon0);
      Dimension dimension0 = new Dimension();
      imageIcon0.setImageObserver(jToggleButton0);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "; ", (String) null, "; ", 1683);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
