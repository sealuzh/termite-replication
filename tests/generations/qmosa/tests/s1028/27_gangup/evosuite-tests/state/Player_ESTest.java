/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 08:49:55 GMT 2020
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.UnsupportedEncodingException;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S^L11B8|up:k[");
      Player player0 = new Player(0, "nC4p|HanA%UM", "(+", (-5115), 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      assertEquals((-5115), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals("nC4p|HanA%UM", player0.getIP());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.338371704803573
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player((-1123), "l+!RKiqYyf", "l+!RKiqYyf", (-1123));
      player0.setY(925.44434F);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.setZ(0.2F);
      Player player1 = new Player(3156, "uC&XC~Lg0pv", "a?F&7]mg&gX8Ca", 3156, 1);
      player0.setJoinOK(player1, false);
      player1.setX((short)4919);
      player1.getSubparty();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(3L);
      player0.next = (Party) player1;
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(3036L);
      System.setCurrentTimeMillis(1392409296338L);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1979L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      player1.pack();
      assertEquals(4919.0F, player1.getX(), 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(5, "yK`s`", "a?F&7]mg&gX8Ca", 1, 1);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player1.getSubparty();
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-236L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2640L);
      System.setCurrentTimeMillis(5);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(1392409296320L);
      System.setCurrentTimeMillis(15003L);
      System.setCurrentTimeMillis(1392409296320L);
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("Player-1", player1.toString());
      assertEquals("yK`s`", player0.getIP());
      assertEquals(0, player1.getPictureId());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-714L));
      Player player0 = new Player(859, "", 859);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-36), 1625);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|/q%%7 $hU");
      Player player0 = new Player(1287, "efDj`xP", (String) null, 1287);
      player0.next = null;
      player0.getName();
      player0.getMoney();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 12803);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte)15;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)50;
      byteArray0[6] = (byte) (-2);
      byteArray0[7] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(605, ".*[.]class$", 605);
      Party party0 = new Party();
      party0.remove(player0);
      party0.prev = (Party) player0;
      player0.boss = party0;
      player0.add((Party) null);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.821563807860364
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      player0.setConnected(false);
      player0.setY(4254);
      player0.setZ(1);
      player0.id = 1;
      Player player1 = new Player(1, " ", 1);
      player0.add(player1);
      player0.gangStrength();
      player1.setJoinOK(player0, false);
      Player player2 = new Player((-668), "", "", 3);
      player2.getSubparty();
      player0.setMoney((-6147.89F));
      player1.isJoinOK(player0, false);
      player2.getSubparty();
      Player player3 = new Player(4254, "", "", 942, (-668));
      player3.prev = (Party) player1;
      player3.getTimeOfDeath();
      System.setCurrentTimeMillis(0L);
      player0.getZ();
      player0.getMoney();
      assertTrue(player0.isDead());
      
      float float0 = player3.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1383972463477248
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-1123), "l+!RKiqYyf", "l+!RKiqYyf", (-1123));
      player0.setY(925.44434F);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.setZ(0.2F);
      Player player1 = new Player(3156, "uC&XC~Lg0pv", "a?F&7]mg&gX8Ca", 3156, 1);
      player0.setJoinOK(player1, false);
      player1.setX((short)4919);
      player1.getSubparty();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(3L);
      player0.next = (Party) player1;
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(3036L);
      System.setCurrentTimeMillis((short)4919);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1979L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(3804L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getSubparty();
      Player player1 = new Player();
      player0.setJoinOK(player1, true);
      player0.setY((-1039.915F));
      player0.getY();
      int int0 = player0.type();
      assertEquals((-1039.915F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(0, "", "", 12850, (-1959));
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(12850, player0.getPictureId());
      assertEquals((-1959), int0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1315), "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", "", (-1315), (-1315));
      player0.setDead((long) (-1315));
      int int0 = player0.getStrength();
      assertEquals((-1315L), player0.getTimeOfDeath());
      assertEquals((-1315), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player((-764), (String) null, (String) null, 4);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3978952727983707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0);
      Party party0 = player0.boss;
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setDead(0L);
      player0.remove((Party) null);
      player0.setX(0);
      player0.next = null;
      player0.setX(0);
      player0.type();
      Player player1 = new Player();
      player0.setConnected(true);
      player0.setJoinOK(player1, true);
      player0.setDead((-210L), false);
      Player player2 = new Player(0, "0.0.0.0", 0);
      player0.getTimeOfDeath();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.649158683274018
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(4225, " ", " ", 4225);
      player0.setDead();
      player0.setY(4225);
      player0.setZ(1);
      player0.id = 1;
      Player player1 = new Player(4225, " ", " ", 1, 1);
      player0.add(player1);
      player0.gangStrength();
      player1.setJoinOK(player0, false);
      player1.setX((-6147.89F));
      player0.setDead();
      player0.getSubparty();
      player0.setMoney((-6147.89F));
      player1.isJoinOK(player0, false);
      Player player2 = new Player(4225, "", "", 942, (-668));
      System.setCurrentTimeMillis(0L);
      player0.getZ();
      player2.id = (-515);
      System.setCurrentTimeMillis(1L);
      player2.isJoinOK(player1, false);
      System.setCurrentTimeMillis(0L);
      player1.isJoinOK(player2, false);
      player0.isJoinOK(player1, true);
      player0.isJoinOK(player2, true);
      assertEquals((-6147.89F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.83412587655526
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      player0.setConnected(false);
      player0.setY(4254);
      player0.setZ(1);
      player0.id = 1;
      Player player1 = new Player(1, " ", 1);
      player0.gangStrength();
      player1.setJoinOK(player0, false);
      Player player2 = new Player((-668), "", "", 3);
      player2.getSubparty();
      player0.setMoney((-6147.89F));
      player1.isJoinOK(player0, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      player0.isDead();
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player1.getName();
      player2.getMoney();
      player2.isJoinOK(player1, true);
      int int0 = player0.type();
      assertTrue(player0.isDead());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Party party0 = new Party();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
      Player player0 = new Player(3816, " ", " ", 3816, 3816);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.698011019844113
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 4254;
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      player0.setY(4254);
      player0.setZ(1);
      player0.id = 1;
      Player player1 = new Player(4254, " ", " ", 1, 1);
      player0.add(player1);
      player1.setMoney(1);
      player0.gangStrength();
      player1.setJoinOK(player0, false);
      int int1 = (-668);
      String string0 = "";
      player1.setX((-6147.89F));
      player0.setDead();
      player0.getSubparty();
      player0.setMoney((-6147.89F));
      player1.isJoinOK(player0, false);
      String string1 = "";
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-866), "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 539);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte) (-86);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)50;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1349), "F[", " vZtIPC~A", (-1349));
      player0.setZ((-3034));
      player0.gangStrength();
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (byte) (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7516666169315163
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(5, (String) null, (String) null, 1);
      player0.getSubparty();
      Player player1 = new Player(1, "Player.unpack(): *** WARNING *** data is not of proper type!", 1);
      player1.setZ(0.0F);
      player1.getZ();
      player0.getIP();
      player1.setY(10.0F);
      player0.reset(true);
      Player player2 = new Player(1, (String) null, 346);
      player2.toString();
      player1.setX(0.2F);
      Player player3 = new Player((short)4919, "", (short)4919);
      player0.setDead((long) 5, true);
      player1.setZ(2877.0F);
      player0.setDead();
      player0.getIP();
      player3.reset(true);
      player1.pack();
      assertEquals(2877.0F, player1.getZ(), 0.01F);
      
      int int0 = player2.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)71;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Player player0 = new Player(162);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      player0.unpack(dataInputStream1);
      player0.setZ((-1518.8507F));
      System.setCurrentTimeMillis(1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      System.setCurrentTimeMillis(0L);
      player0.getZ();
      System.setCurrentTimeMillis(1L);
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(2601, (String) null, "", 2601, 6912);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream1);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0, ";?bms>YyfM)e,O!~c", ";?bms>YyfM)e,O!~c", 0, 0);
      player0.setX(0.2F);
      byte[] byteArray0 = player0.pack();
      byte[] byteArray1 = player0.pack();
      player0.unpack(byteArray1);
      player0.getStrength();
      player0.getMoney();
      player0.type();
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getZ();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(0, ";?bkms>YyfM)e,O!~c", ";?bkms>YyfM)e,O!~c", 0, 0);
      player0.setX(0.2F);
      byte[] byteArray0 = player0.pack();
      byte[] byteArray1 = player0.pack();
      player0.unpack(byteArray1);
      player0.getStrength();
      player0.getMoney();
      player0.type();
      player0.unpack(byteArray0);
      player0.reset(false);
      player0.getZ();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0794415416798357
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-1176), "", "", (-1422), (-1176));
      MockFile mockFile0 = new MockFile("");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) player0;
      objectArray0[1] = (Object) pipedOutputStream0;
      objectArray0[2] = (Object) mockFile0;
      Object object0 = new Object();
      PrintStream printStream0 = mockPrintStream0.format((Locale) null, "", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      dataOutputStream0.writeBytes("");
      DataOutputStream dataOutputStream1 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, pipedInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "W~{JckMNiW~y\\31$";
      Player player0 = new Player((-1041), "W~{JckMNiW~y\u0019$", 69);
      player0.toString();
      float float0 = Player.TOLERANCE;
      String string1 = "/\\BF#|n}r_%7;5kZ";
      MockFile mockFile0 = new MockFile("/BF#|n}r_%7;5kZ");
      String string2 = "{:7n$j";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream(mockFile0, "{:7n$j");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // {:7n$j
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.70805020110221
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(10);
      player0.pack();
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.add((Party) null);
      player0.getSubparty();
      Player player1 = new Player((-2442), "", "", 141);
      player1.setZ(0.2F);
      player0.getZ();
      player1.getIP();
      Player player2 = new Player((short)4919);
      player2.setY((short)4919);
      player1.toString();
      player0.setX(1388.3F);
      player1.setX(0.1F);
      player1.setDead((long) (short)4919, false);
      player2.boss = null;
      player1.setZ(0.1F);
      player0.setDead();
      player2.getIP();
      player1.reset(false);
      player0.pack();
      assertEquals(1388.3F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#5I$0W+s_%!UsEV6[9\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|/q%%7 $hU");
      Player player0 = new Player(1287, "a?p|{hX<n@.&/", 1287);
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertEquals(1287, player0.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", "module.ModuleBrowserDialog$ModuleFilter", (-1));
      int int0 = player0.getStrength();
      assertEquals((-1), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(".*[.]class$", player0.getIP());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-1123), "l+!RKiqYyf", "l+!RKiqYyf", (-1123), (-1123));
      player0.setY(925.44434F);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.setZ(0.2F);
      Player player1 = new Player((short)4919, "a?F&7]mg&gX8Ca", "uC&XC~Lg0pv", (short)4919, (-1123));
      player1.setX((short)4919);
      player1.getSubparty();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(3L);
      player1.setZ((-1123));
      player0.next = (Party) player1;
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(123L);
      System.setCurrentTimeMillis(788L);
      System.setCurrentTimeMillis(3156);
      System.setCurrentTimeMillis(3L);
      player0.isDead();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      String string0 = player0.getName();
      assertEquals("Player-1", string0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.890371757896165
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player((-752), "{79dfORHw;V", 1);
      player0.getY();
      player0.setConnected(false);
      player0.getSubparty();
      player0.type();
      player0.setDead();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      player0.unpack(dataInputStream0);
      player0.next = null;
      player0.add((Party) null);
      player0.prev = null;
      player0.getTimeOfDeath();
      player0.setX(0.0F);
      player0.setConnected(false);
      player0.setMoney(5);
      player0.head = null;
      player0.setConnected(false);
      player0.setMoney(1392409281320L);
      player0.getName();
      player0.getX();
      player0.getMoney();
      player0.setZ(1392409281320L);
      player0.reset(false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      player0.unpack(byteArray0);
      assertEquals(1.39240931E12F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player0 = new Player(3156, "uC&XC~Lg0pv", "a?F&7]mg&gX8Ca", 3156, 3156);
      player0.getSubparty();
      System.setCurrentTimeMillis(3L);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      player0.setMoney(3036L);
      System.setCurrentTimeMillis(3036L);
      System.setCurrentTimeMillis(1392409296320L);
      System.setCurrentTimeMillis(1979L);
      player0.getMoney();
      Player player1 = new Player(2128, "Player.unpack(): *** WARNING *** data is not of proper type!", 3156);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(3036.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".x,=<Xn<?Mi}\"2%U");
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player1 = new Player(7134, "", "", 10225);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(3232, "", "", 2754, 743);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      assertTrue(player0.isConnected());
      
      player0.setConnected(false);
      player0.setConnected(false);
      player0.getY();
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.reset(false);
      Player player1 = new Player((-1318), ":DM# >V", 775);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(2601, (String) null, "", 2601, 6912);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(6912, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(2601, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-514), "", "4k6rE#>;k#eGlOx", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-80);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(3);
      player0.getSubparty();
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      Player player1 = new Player();
      player0.setY(0.2F);
      player1.gangStrength();
      float float0 = player0.getY();
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.649158683274018
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      player0.setConnected(false);
      player0.setY(4254);
      player0.setZ(1);
      player0.id = 1;
      Player player1 = new Player(1, " ", 1);
      player0.add(player1);
      player0.gangStrength();
      player1.setJoinOK(player0, false);
      Player player2 = new Player((-668), "", "", 3);
      player1.setX((-6147.89F));
      player2.setDead();
      player2.getSubparty();
      player0.setMoney((-6147.89F));
      player1.isJoinOK(player0, false);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player3 = new Player(1);
      System.setCurrentTimeMillis(0L);
      player0.getX();
      System.setCurrentTimeMillis(1L);
      player3.setDead();
      player3.isJoinOK(player1, false);
      assertEquals((-6147.89F), player1.getX(), 0.01F);
      assertEquals(10.0F, player3.getX(), 0.01F);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player0 = new Player(3156, "", "a?F&7]mg&gX8Ca", 3156, 1);
      player0.reset(true);
      player0.getSubparty();
      System.setCurrentTimeMillis(3L);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(123L);
      System.setCurrentTimeMillis(788L);
      System.setCurrentTimeMillis(3156);
      System.setCurrentTimeMillis(3L);
      System.setCurrentTimeMillis(788L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J-k");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      
      Player player1 = new Player((-20279), "", "", (-1), 914);
      player1.pack();
      assertTrue(player1.isConnected());
      assertEquals((-1), player1.getPictureId());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(914, player1.getStrength());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Party party0 = new Party();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(3816, "98y", "", 3816);
      int int0 = player0.type();
      assertEquals("98y", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(3816, player0.getPictureId());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N0On|Y8<e}@r8t");
      Player player0 = new Player(12804, "", "", (-1728), 2603);
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals((-1728), player0.getPictureId());
      assertEquals(2603, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";pQjNn(t");
      Player player0 = new Player(1, ";pQjNn(t", 10);
      player0.gangStrength();
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2094);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-3792));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player(2287);
      player0.getPictureId();
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.flush();
      int int0 = 2;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)47;
      player0.getSubparty();
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)50;
      // Undeclared exception!
      try { 
        pipedOutputStream0.write(byteArray0, 0, 1335);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.772588722239781
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(4254, " ", " ", 4254);
      player0.setDead();
      player0.setY(4254);
      player0.setZ(1);
      player0.id = 1;
      Player player1 = new Player(4254, " ", " ", 1, 1);
      player0.add(player1);
      player0.setJoinOK(player1, true);
      player1.setX(0.1F);
      player0.setDead();
      player0.getSubparty();
      player1.setMoney(0.1F);
      Player player2 = new Player();
      player2.isJoinOK(player0, true);
      Player player3 = new Player(1, "", "", 1, (-1145));
      System.setCurrentTimeMillis((-668));
      player2.getZ();
      System.setCurrentTimeMillis(1392409281320L);
      player0.isJoinOK(player3, false);
      System.setCurrentTimeMillis((-2027L));
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-668), "", "", 3);
      byte[] byteArray0 = new byte[1];
      player0.unpack(byteArray0);
      player0.getSubparty();
      player0.getSubparty();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(3, player0.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-514), "", "4k6rE#>;k#eGlOx", 5);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte) (-80);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertEquals(5, player0.getPictureId());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(3156, "", "a?F&7]mg&gX8Ca", 3156, 1);
      player0.setDead((-2721L));
      player0.getSubparty();
      Player player1 = new Player();
      System.setCurrentTimeMillis(3L);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(123L);
      System.setCurrentTimeMillis(788L);
      System.setCurrentTimeMillis(3156);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player((-1123), "l+!RKiqYyf", "l+!RKiqYyf", (-1123));
      player0.setY(925.44434F);
      player0.setZ(0.2F);
      Player player1 = new Player(3170, "uC&XC~Lg0pv", "a?F&7]mg&gX8Ca", 3170, 1);
      player0.setJoinOK(player1, true);
      player1.setX((short)4919);
      assertEquals(4919.0F, player1.getX(), 0.01F);
      
      File file0 = MockFile.createTempFile("h>.?", (String) null);
      MockFile mockFile0 = new MockFile(file0, "h>.?");
      mockFile0.getAbsoluteFile();
      Object object0 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "h>.?");
      Player player2 = new Player();
      assertEquals("Player-1", player2.toString());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.9730014063936125
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(5, "yK`s`", "a?F&7]mg&gX8Ca", 1, 1);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player1.getSubparty();
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((short)4919);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(9L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2640L);
      System.setCurrentTimeMillis(5);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1392409296320L);
      System.setCurrentTimeMillis(15003L);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      System.setCurrentTimeMillis((-27342L));
      System.setCurrentTimeMillis((-27342L));
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player(3169);
      System.setCurrentTimeMillis(1074);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player(0, "mJ5|T<x':^HyaOU", (short)4919);
      player0.prev = (Party) player1;
      assertEquals(4919, player1.getPictureId());
      
      String string0 = player0.getIP();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", string0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      Player player0 = new Player(3156, "", "a?F&7]mg&gX8Ca", 3156, 1);
      player0.setDead((long) (-1123), false);
      System.setCurrentTimeMillis(3L);
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(123L);
      System.setCurrentTimeMillis(788L);
      System.setCurrentTimeMillis(3156);
      System.setCurrentTimeMillis(3L);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~g[l(6t[8~m");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.pack();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player(326);
      MockFile mockFile0 = new MockFile("2Inv;' +zx0*", "VM!");
      File file0 = MockFile.createTempFile("2Inv;' +zx0*", "2Inv;' +zx0*", (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals(30L, file0.length());
      assertEquals("Player326", player0.toString());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MockFile mockFile0 = new MockFile("V({29Z3;H@)S?{0?`=", "s");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) mockPrintStream1;
      mockPrintStream0.format((Locale) null, "", objectArray0);
      Object object0 = new Object();
      mockPrintStream0.format((Locale) null, "hzBA&}<)OeybR?Q:2", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      dataOutputStream1.writeBytes("");
      Player player0 = new Player(3714, "s", "hzBA&}<)OeybR?Q:2", 30798);
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(30798, player0.getPictureId());
      assertEquals("s", player0.getIP());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player((-3992), "-R@}QcN6=2D/", "]>*v*-]I;@d?c6V<1t5", (-2954), (-3190));
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.3025850929940455
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Player player0 = new Player((-1123), "l+!RKiqYyf", "l+!RKiqYyf", (-1123));
      player0.setY(925.44434F);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.setZ(0.2F);
      Player player1 = new Player(3156, "uC&XC~Lg0pv", "a?F&7]mg&gX8Ca", 3156, 1);
      player0.getSubparty();
      player1.setX(0.0F);
      System.setCurrentTimeMillis(3156);
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(3L);
      System.setCurrentTimeMillis(1850L);
      player1.setMoney((-4167.0F));
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((-1887L));
      System.setCurrentTimeMillis((-1057L));
      System.setCurrentTimeMillis((-1123));
      player0.pack();
      assertEquals(0.2F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player(2872, "`GGKmcrLTe.nG", "state.Player$JoinInfo", 5);
      long long0 = player0.getTimeOfDeath();
      assertTrue(player0.isConnected());
      assertEquals(0L, long0);
      assertEquals("`GGKmcrLTe.nG", player0.getIP());
      assertEquals(5, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Player player0 = new Player(2916, "", "module.ModuleBrowserDialog$ModuleFilter", 674, 674);
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertEquals(674, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(674, int0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#lhR9U,l?");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#lhR9U,l?");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.getSubparty();
      Player player1 = new Player((-300), "", "", (short)4919, 2789);
      assertEquals(2789, player1.getStrength());
      assertEquals(4919, player1.getPictureId());
      
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }
}
