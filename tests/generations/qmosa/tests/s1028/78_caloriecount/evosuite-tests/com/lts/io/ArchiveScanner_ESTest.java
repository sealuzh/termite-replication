/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 00:46:14 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y?DsZf+|^@j)T\"", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Y?DsZf+|^@j)T\"";
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      stringArray0[1] = "A5<Yinrxj;W";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsIncluded = vector0;
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      archiveScanner0.setExcludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      Vector<Object> vector2 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector1.add((InputStream) pipedInputStream0);
      vector1.add((InputStream) pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedInputStream0.close();
      Vector<InputStream> vector3 = new Vector<InputStream>();
      vector3.add((InputStream) pipedInputStream0);
      vector3.add((InputStream) null);
      pipedInputStream1.connect(pipedOutputStream1);
      DirectoryScanner.match("i$3_zK(^8r", "A5<Yinrxj;W");
      Vector<InputStream> vector4 = new Vector<InputStream>();
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.isArchive(improvedFile1);
      archiveScanner0.scandir(improvedFile1, "Y?DsZf+|^@j)T\"", true);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Y?DsZf+|^@j)T\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4486869174985209
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y?DsZf+|^@j)T\"", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Y?DsZf+|^@j)T\"";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      stringArray0[1] = "A5<Yinrxj;W";
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      archiveScanner0.setExcludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<Object> vector1 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1);
      vector0.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedInputStream1.close();
      Vector<InputStream> vector2 = new Vector<InputStream>();
      vector2.add((InputStream) pipedInputStream0);
      pipedInputStream2.connect(pipedOutputStream1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Vector<InputStream> vector3 = new Vector<InputStream>();
      archiveScanner0.isArchive(improvedFile0);
      Vector<SequenceInputStream> vector4 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsExcluded = vector4;
      archiveScanner0.isArchive(improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Y?DsZf+|^@j)T\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile0.toPath();
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "");
      mockFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      System.setCurrentTimeMillis((-2131L));
      archiveScanner0.haveSlowResults = true;
      Vector<Object> vector1 = new Vector<Object>();
      vector0.stream();
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.processDirectory(mockFile0, "G1wb>k1=Yxakk9Ep1", false);
      vector1.add((Object) archiveScanner0);
      archiveScanner0.processDirectory(mockFile0, "=aLW0=aLW.jar", false);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      ImprovedFile improvedFile1 = new ImprovedFile("");
      improvedFile1.setWritable(false);
      try { 
        improvedFile1.createTempDir("=aLW0=aLW.jar", "W?_1h_Hqwg*Jfx<%");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0639354877575324
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      improvedFile0.toPath();
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      String[] stringArray0 = new String[2];
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "";
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((-2160L));
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector1;
      File file0 = MockFile.createTempFile("S}a;D^x=g*Q{r", "", (File) improvedFile1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)99;
      archiveScanner0.filesNotIncluded = null;
      archiveScanner0.processDirectory(file0, "dSrW514asaC", true);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "=aLW0=aiW.RjFr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "i$3_zK(^8r";
      ImprovedFile improvedFile0 = new ImprovedFile("com.lts.io.ArchiveScanner", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.addDefaultExcludes();
      long long0 = (-1L);
      System.setCurrentTimeMillis(long0);
      long long1 = 1L;
      System.setCurrentTimeMillis(archiveScanner0.DIRECTORY);
      long long2 = 7L;
      System.setCurrentTimeMillis(long2);
      improvedFile0.createNewFile();
      System.setCurrentTimeMillis(long0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("kU i?aUs}c) Z", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i$3_zK(^8r";
      stringArray0[1] = "i$3_zK(^8r";
      stringArray0[2] = "kU i?aUs}c) Z";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis((-1L));
      long long0 = 1L;
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      System.setCurrentTimeMillis(1);
      long long1 = 7L;
      System.setCurrentTimeMillis(7L);
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "i$3_zK(^8r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.800249584148876
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "");
      mockFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      archiveScanner0.scandir(improvedFile0, "+O\"", false);
      stringArray0[0] = "";
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      archiveScanner0.setExcludes(stringArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-84);
      boolean boolean0 = archiveScanner0.haveSlowResults;
      byteArray0[2] = (byte)9;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      boolean boolean1 = archiveScanner0.haveSlowResults;
      archiveScanner0.scandir(improvedFile0, "", false);
      System.setCurrentTimeMillis(0);
      archiveScanner0.processArchive(mockFile0, "");
      archiveScanner0.scandir(improvedFile0, "", false);
      archiveScanner0.isExcluded("");
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((byte)9);
      archiveScanner0.processArchive(improvedFile0, "");
      archiveScanner0.scandir(improvedFile0, "f=q)]f^", false);
      try { 
        archiveScanner0.scanArchive(mockFile0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "-ziDAZf[+}^jL)T\"";
      ImprovedFile improvedFile0 = new ImprovedFile("-ziDAZf[+}^jL)T\"");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      MockFile.createTempFile("-ziDAZf[+}^jL)T\"", "-ziDAZf[+}^jL)T\"", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Object> vector1 = new Vector<Object>();
      int int0 = ArchiveScanner.ARCHIVE;
      int int1 = ArchiveScanner.DIRECTORY;
      archiveScanner0.processArchive(improvedFile1, string0);
      long long0 = (-1L);
      System.setCurrentTimeMillis(long0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string1 = "Ol5h[v2Ag_I=2C;mF{?";
      ImprovedFile improvedFile2 = ImprovedFile.createTempImprovedFile(string0, string1, improvedFile1);
      ImprovedFile.buildName(string1, archiveScanner0.ARCHIVE, string0, improvedFile2);
      System.setCurrentTimeMillis(int1);
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Error trying to create temp directory, .jar");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "Error trying to create temp directory, .jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Error trying to create temp directory, .jar";
      stringArray0[1] = "Error trying to create temp directory, .jar";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      archiveScanner0.setExcludes(stringArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-84);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      byteArray0[2] = (byte)9;
      archiveScanner0.setIncludes(stringArray0);
      String string0 = "ghcu9>,3\\Kq$b<b";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      vector0.add((InputStream) pipedInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ghcu9>,3Kq$b<b");
      DirectoryScanner.matchPatternStart("ghcu9>,3Kq$b<b", "Error trying to create temp directory, .jar");
      Vector<Object> vector1 = new Vector<Object>();
      vector0.add((InputStream) pipedInputStream0);
      Vector<Object> vector2 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector2;
      System.setCurrentTimeMillis(1);
      Vector<Object> vector3 = new Vector<Object>();
      System.setCurrentTimeMillis(1770L);
      Vector<InputStream> vector4 = new Vector<InputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Error trying to create temp directory, .jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Error trying to create temp directory, .jar");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "Error trying to create temp directory, .jar");
      mockFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Error trying to create temp directory, .jar";
      stringArray0[1] = "Error trying to create temp directory, .jar";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      archiveScanner0.setExcludes(stringArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-84);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      byteArray0[2] = (byte)9;
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.processDirectory(mockFile0, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/Error trying to create temp directory, .jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Error trying to create temp directory, .jar");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "Error trying to create temp directory, .jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Error trying to create temp directory, .jar";
      stringArray0[1] = "Error trying to create temp directory, .jar";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      byte[] byteArray0 = new byte[4];
      Vector<InputStream> vector0 = new Vector<InputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)9);
      archiveScanner0.dirsNotIncluded = vector0;
      byteArray0[2] = (byte)9;
      archiveScanner0.setIncludes(stringArray0);
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector1;
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.markSupported();
      vector0.add((InputStream) pipedInputStream1);
      DirectoryScanner.matchPatternStart("ghcu9>,3Kq$b<b", "Error trying to create temp directory, .jar");
      pipedInputStream1.mark((-1654051508));
      mockFile0.getAbsoluteFile();
      vector0.add((InputStream) pipedInputStream1);
      System.setCurrentTimeMillis(1);
      Vector<Object> vector2 = new Vector<Object>();
      System.setCurrentTimeMillis(1770L);
      Vector<InputStream> vector3 = new Vector<InputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Error trying to create temp directory, .jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "");
      mockFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.setIncludes(stringArray0);
      long long0 = (-1L);
      System.setCurrentTimeMillis((-1L));
      Vector<Object> vector0 = new Vector<Object>();
      System.setCurrentTimeMillis((-567L));
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector1;
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-567L));
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DirectoryScanner.matchPatternStart("\"-zsZf+|^j)T", "\"-zsZf+|^j)T");
      Vector<InputStream> vector0 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-76);
      byteArray0[5] = (byte) (-2);
      byteArray0[6] = (byte) (-34);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 7, 622);
      vector0.add((InputStream) byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Integer integer0 = new Integer((-3969));
      ImprovedFile improvedFile0 = new ImprovedFile("", "O}bh>5@\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "Pe?Z_F305");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DirectoryScanner.matchPath(".ear", ".ear");
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object1 = new Object();
      linkedList0.remove(object1);
      linkedList0.listIterator();
      ImprovedFile improvedFile0 = new ImprovedFile(".jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<SequenceInputStream> vector1 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      stringArray0[2] = ".ear";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(1);
      Vector<Object> vector2 = new Vector<Object>();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".ear", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      improvedFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      String[] stringArray0 = new String[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      stringArray0[0] = "i|#{%{l`iTp`+)?mTOi";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "i|#{%{l`iTp`+)?mTOi");
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "i|#{%{l`iTp`+)?mTOi");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray1 = new byte[7];
      byteArray1[5] = (byte)0;
      improvedFile0.getAbsolutePath();
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      improvedFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "");
      String[] stringArray0 = new String[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      stringArray0[0] = "i|#{%{l`iTp`+)?mTOi";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)36;
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "i|#{%{l`iTp`+)?mTOi");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "i|#{%{l`iTp`+)?mTOi");
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray1 = new byte[7];
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsExcluded = vector0;
      byteArray1[5] = (byte)0;
      byteArray1[1] = (byte)0;
      improvedFile0.getAbsolutePath();
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile1, true, false, false);
      improvedFile0.toPath();
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "");
      String[] stringArray0 = new String[2];
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "");
      stringArray0[0] = "i|#{%{l`iTp`+)?mTOi";
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)36;
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "i|#{%{l`iTp`+)?mTOi");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "i|#{%{l`iTp`+)?mTOi");
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      byte[] byteArray1 = new byte[7];
      byteArray1[5] = (byte)3;
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      archiveScanner0.filesExcluded = vector0;
      byteArray1[1] = (byte)0;
      improvedFile0.getAbsolutePath();
      FileSystemHandling.appendDataToFile(evoSuiteFile4, byteArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = ".jar";
      DirectoryScanner.matchPath(".ear", ".ear");
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Object object1 = new Object();
      linkedList0.remove(object1);
      linkedList0.listIterator();
      ImprovedFile improvedFile0 = new ImprovedFile(".jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<SequenceInputStream> vector1 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsIncluded = vector1;
      archiveScanner0.addDefaultExcludes();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      stringArray0[2] = ".ear";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector2 = new Vector<Object>();
      System.setCurrentTimeMillis(1);
      Vector<Object> vector3 = new Vector<Object>();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1);
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".jar", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "");
      improvedFile0.mkdir();
      mockFile0.toPath();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      Vector<SequenceInputStream> vector0 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      stringArray0[0] = "";
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      archiveScanner0.setExcludes(stringArray0);
      MockFile mockFile1 = new MockFile("", "");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-84);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)41;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("com.lts.io.ArchiveScanner", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i$3_zK(^8r";
      stringArray0[1] = "i$3_zK(^8r";
      stringArray0[2] = "com.lts.io.ArchiveScanner";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis((-1L));
      long long0 = (-42L);
      System.setCurrentTimeMillis(1);
      long long1 = 7L;
      System.setCurrentTimeMillis((-1L));
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.filesIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "i$3_zK(^8r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5735143214270813
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Y?DsZf+|^@j)T\"", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Y?DsZf+|^@j)T\"";
      improvedFile0.createTempDir();
      stringArray0[1] = "A5<Yinrxj;W";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      vector1.add((InputStream) pipedInputStream0);
      Vector<SequenceInputStream> vector2 = new Vector<SequenceInputStream>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1);
      vector1.addElement(pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      vector1.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      Vector<SequenceInputStream> vector3 = new Vector<SequenceInputStream>();
      archiveScanner0.dirsExcluded = vector3;
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      vector3.add((SequenceInputStream) null);
      byteArray0[0] = (byte) (-65);
      pipedOutputStream0.write(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A5<Yinrxj;W");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Y?DsZf+|^@j)T\"", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("ie3_zKd^8r", "ie3_zKd^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(2);
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1);
      System.setCurrentTimeMillis(0);
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsNotIncluded = vector0;
      improvedFile0.toURI();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "ie3_zKd^8r");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-680L));
      Vector<InputStream> vector0 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      vector0.add((InputStream) bufferedInputStream0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) pipedInputStream0);
      predicate0.and(predicate0);
      predicate0.negate();
      vector0.add((InputStream) pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(3129);
      vector0.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      ImprovedFile improvedFile0 = new ImprovedFile("7l0H/H-/", "tYdBUd");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile(".WAR", "tYdBUd", (File) improvedFile0);
      vector0.add((InputStream) bufferedInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "-Vdu{VnS3nO1AzIq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("com.lts.io.ArchiveScanner", "i$3_zK(^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "i$3_zK(^8r";
      stringArray0[1] = "i$3_zK(^8r";
      stringArray0[2] = "com.lts.io.ArchiveScanner";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis((-1L));
      long long0 = 1L;
      System.setCurrentTimeMillis(1);
      long long1 = 7L;
      System.setCurrentTimeMillis(7L);
      improvedFile0.createNewFile();
      System.setCurrentTimeMillis((-1L));
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      try { 
        archiveScanner0.processArchive(improvedFile0, "i$3_zK(^8r");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error creating temp directory for /home/ubuntu/termite/projects/78_caloriecount/com.lts.io.ArchiveScanner/i$3_zK(^8r
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      DirectoryScanner.matchPatternStart("", "");
      mockFile0.toPath();
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      String[] stringArray0 = new String[2];
      mockFile0.deleteOnExit();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      stringArray0[0] = ".'";
      mockFile0.renameTo(improvedFile0);
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((-2160L));
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MockFile mockFile0 = new MockFile("TzD_~Qf3.v[u");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "TzD_~Qf3.v[u");
      mockFile0.toPath();
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "TzD_~Qf3.v[u");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "TzD_~Qf3.v[u");
      mockFile0.deleteOnExit();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "TzD_~Qf3.v[u");
      mockFile0.renameTo(improvedFile0);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      mockFile0.getAbsoluteFile();
      mockFile0.toURL();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      String string0 = "G1wb>k1=Yakk9Ep1";
      mockFile0.delete();
      boolean boolean0 = false;
      try { 
        archiveScanner0.processDirectory(mockFile0, string0, boolean0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/TzD_~Qf3.v[u
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<String, String> function0 = Function.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function.identity();
      unaryOperator0.apply(unaryOperator0);
      Integer integer0 = new Integer(1024);
      Integer integer1 = new Integer((-800));
      unaryOperator0.compose((Function<? super Integer, ?>) unaryOperator1);
      Function.identity();
      Function.identity();
      unaryOperator0.apply(unaryOperator0);
      UnaryOperator.identity();
      unaryOperator0.apply(integer1);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.apply(unaryOperator0);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      unaryOperator3.compose((Function<? super String, ?>) function0);
      Function.identity();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-5iDAAf[+q^jLcT\"");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      Vector<Object> vector0 = new Vector<Object>();
      improvedFile1.setWritable(true);
      archiveScanner0.filesNotIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-5iDAAf[+q^jLcT\"";
      stringArray0[1] = "-5iDAAf[+q^jLcT\"";
      stringArray0[2] = "-5iDAAf[+q^jLcT\"";
      stringArray0[3] = "-5iDAAf[+q^jLcT\"";
      stringArray0[4] = "-5iDAAf[+q^jLcT\"";
      stringArray0[5] = "-5iDAAf[+q^jLcT\"";
      stringArray0[6] = ".ear";
      stringArray0[7] = "-5iDAAf[+q^jLcT\"";
      vector0.setSize(0);
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector1 = new Vector<Object>();
      DirectoryScanner.matchPatternStart(".ear", "com.lts.event.ListenerHelper.jar");
      System.setCurrentTimeMillis(0L);
      archiveScanner0.processFile("OB'1:psY");
      System.setCurrentTimeMillis((-2131L));
      String string0 = "k(OgEg\"ahC)\\A$";
      MockFile mockFile0 = new MockFile(improvedFile0, "k(OgEg\"ahC)A$");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, ".ear", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      vector1.add((InputStream) pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      vector0.add((InputStream) pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      vector0.addElement((InputStream) null);
      vector1.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      vector0.add((InputStream) pipedInputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      Vector<InputStream> vector2 = new Vector<InputStream>();
      vector2.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) pipedInputStream2);
      vector2.add((InputStream) byteArrayInputStream0);
      Vector<InputStream> vector3 = new Vector<InputStream>();
      vector3.add((InputStream) pipedInputStream2);
      vector2.containsAll(vector3);
      DirectoryScanner.matchPath("._l0", "S}a;D^x=g*Q{r0");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.getBasedir();
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.071871442483222
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "sRE+I~3=P'TR9xAd#TL");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      improvedFile0.toPath();
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      String[] stringArray0 = new String[2];
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      stringArray0[0] = "";
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.processDirectory(improvedFile0, "G1wb>k1=Yxakk9Ep1", false);
      MockFile.createTempFile("S}a;D^x=g*Q{r", "", (File) improvedFile1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)99;
      archiveScanner0.filesNotIncluded = null;
      archiveScanner0.excludes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "=aLW0=aiW.RjFr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.107423308015556
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      improvedFile0.toPath();
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      String[] stringArray0 = new String[2];
      improvedFile0.deleteOnExit();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[0] = "";
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      stringArray0[1] = "";
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((-2160L));
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector1;
      File file0 = MockFile.createTempFile("S}a;D^x=g*Q{r", "", (File) improvedFile1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)99;
      archiveScanner0.filesNotIncluded = null;
      archiveScanner0.processDirectory(file0, "dSrW514asaC", true);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "=aLW0=aiW.RjFr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "-z?DsZf+|^j)T\"";
      String string1 = "ie3_zKd^8r";
      ImprovedFile improvedFile0 = new ImprovedFile("-z?DsZf+|^j)T\"", "ie3_zKd^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[0] = "ie3_zKd^8r";
      stringArray0[1] = "ie3_zKd^8r";
      stringArray0[2] = "-z?DsZf+|^j)T\"";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(2547L);
      Vector<Object> vector1 = new Vector<Object>();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(7L);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("com.lts.io.ArchiveScanner");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFile mockFile0 = new MockFile("TzD_~Qf3.v[u");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "TzD_~Qf3.v[u");
      mockFile0.toPath();
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, "TzD_~Qf3.v[u");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "TzD_~Qf3.v[u");
      mockFile0.deleteOnExit();
      byte[] byteArray0 = null;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "TzD_~Qf3.v[u");
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      File file0 = mockFile0.getAbsoluteFile();
      mockFile0.toURL();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      file0.getAbsolutePath();
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      String string0 = "app0-z?DsZbf+|^j)T\"0-z?DsZbf+|^j)T\".jar.jar";
      try { 
        archiveScanner0.processDirectory(file0, string0, boolean0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/TzD_~Qf3.v[u
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-z?DsZf+|^j)T\"", "ie3_zKd^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[0] = "ie3_zKd^8r";
      stringArray0[1] = "ie3_zKd^8r";
      stringArray0[2] = "-z?DsZf+|^j)T\"";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      System.setCurrentTimeMillis(2547L);
      Vector<Object> vector1 = new Vector<Object>();
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(7L);
      archiveScanner0.processFile("ie3_zKd^8r");
      archiveScanner0.processFile("-z?DsZf+|^j)T\"");
      archiveScanner0.processFile("ie3_zKd^8r");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<$AfL", "G1wb>k_=Yxakk9Ep10G1wb>k1=Yxakk9Ep1");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "G1wb>k_=Yxakk9Ep10G1wb>k1=Yxakk9Ep1";
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis((-11L));
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(27L);
      System.setCurrentTimeMillis(1443L);
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis(27L);
      System.setCurrentTimeMillis((-1638L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-585L));
      System.setCurrentTimeMillis(1443L);
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis((-11L));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("-z?DsZbf+|^j)T\"", "ie3_zKd^8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "ie3_zKd^8r";
      stringArray0[1] = "ie3_zKd^8r";
      stringArray0[2] = "-z?DsZbf+|^j)T\"";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(0);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      vector1.addElement(pipedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      vector1.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[0];
      int int0 = 1106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, int0, archiveScanner0.FILE);
      vector0.add((InputStream) byteArrayInputStream0);
      pipedInputStream1.close();
      vector0.add((InputStream) pipedInputStream0);
      pipedInputStream1.connect(pipedOutputStream0);
      Vector<InputStream> vector2 = new Vector<InputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<$AfL", "Ub=Th'wh");
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      improvedFile0.createTempDir();
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-585L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis(1L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1000000L);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<$AfL", "Ub=Th'wh");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Ub=Th'wh";
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis((-11L));
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(27L);
      System.setCurrentTimeMillis(1443L);
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis(27L);
      System.setCurrentTimeMillis((-1638L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-585L));
      System.setCurrentTimeMillis(1443L);
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis(1L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DirectoryScanner.matchPatternStart("\"-zsZf+|^j)T", "\"-zsZf+|^j)T");
      Vector<InputStream> vector0 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte) (-76);
      byteArray0[5] = (byte) (-2);
      byteArray0[6] = (byte) (-34);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 27, 622);
      byteArrayInputStream0.mark(27);
      byteArrayInputStream0.reset();
      vector0.add((InputStream) byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = vector0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Integer integer0 = new Integer((-3969));
      ImprovedFile improvedFile0 = new ImprovedFile("", "O}bh>5@\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      String[] stringArray0 = new String[0];
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((byte) (-76));
      Vector<InputStream> vector2 = new Vector<InputStream>();
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("O}bh>5@\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-680L));
      Vector<InputStream> vector0 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      vector0.add((InputStream) bufferedInputStream0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.negate();
      vector0.add((InputStream) pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(3129);
      vector0.addElement((InputStream) null);
      vector0.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      ImprovedFile improvedFile0 = new ImprovedFile("7l0H/H-/", "tYdBUd");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile("7l0H/H-/", "tYdBUd", (File) improvedFile0);
      vector0.add((InputStream) bufferedInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "-Vdu{VnS3nO1AzIq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      improvedFile0.toPath();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "");
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/");
      FileSystemHandling.appendLineToFile(evoSuiteFile4, "=");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "");
      stringArray0[0] = "i|#{%{l`iTp`+)?mTOi";
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "i|#{%{l`iTp`+)?mTOi");
      FileSystemHandling.appendLineToFile(evoSuiteFile4, "=");
      byteArray0[1] = (byte)53;
      FileSystemHandling.appendDataToFile(evoSuiteFile3, byteArray0);
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "i|#{%{l`iTp`+)?mTOi");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "i|#{%{l`iTp`+)?mTOi");
      byte[] byteArray1 = new byte[7];
      byteArray1[5] = (byte)0;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-680L));
      Vector<InputStream> vector0 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      vector0.add((InputStream) bufferedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(3129);
      vector0.addElement((InputStream) null);
      vector0.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      ImprovedFile improvedFile0 = new ImprovedFile("{6wSwq)8]4(hs", "tYBUd");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile(".WAR", "tYBUd", (File) improvedFile0);
      vector0.add((InputStream) bufferedInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "-Vdu{VnS3nO1AzIq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-680L));
      Vector<InputStream> vector0 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      vector0.add((InputStream) bufferedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(3129);
      vector0.addElement((InputStream) null);
      vector0.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      ImprovedFile improvedFile0 = new ImprovedFile("7l0H/H-/", "tYBUd");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile(".WAR", "tYBUd", (File) improvedFile0);
      vector0.add((InputStream) bufferedInputStream0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "-Vdu{VnS3nO1AzIq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<$AfL", "<$AfL");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<$AfL";
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis((-11L));
      Vector<String> vector0 = new Vector<String>();
      System.setCurrentTimeMillis(27L);
      System.setCurrentTimeMillis(1443L);
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis(27L);
      System.setCurrentTimeMillis((-1638L));
      System.setCurrentTimeMillis(2518L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis((-585L));
      System.setCurrentTimeMillis(1443L);
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis(1L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(1000000L);
      System.setCurrentTimeMillis((-24L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-680L));
      Vector<InputStream> vector0 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      vector0.add((InputStream) bufferedInputStream0);
      vector0.add((InputStream) pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(3161);
      vector0.addElement((InputStream) null);
      vector0.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      pipedOutputStream0.write(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      ImprovedFile improvedFile0 = new ImprovedFile("7l0H/H-/", "tYdBUd");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile("S}a;Dx=gQ{r0", "tYdBUd", (File) improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "-Vdu{VnS3nO1AzIq", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, Object> function2 = function1.andThen((Function<? super String, ?>) unaryOperator0);
      Function.identity();
      Function<Integer, String> function3 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, Object> function4 = unaryOperator0.compose((Function<? super Integer, ?>) function3);
      function2.compose((Function<? super Object, ?>) function1);
      Function<String, String> function5 = Function.identity();
      Function<String, Integer> function6 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function7 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function8 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function7);
      function4.andThen((Function<? super Object, ? extends String>) function1);
      Function<Integer, Object> function9 = function4.compose((Function<? super Integer, ? extends Integer>) function8);
      function9.compose((Function<? super Integer, ? extends Integer>) function8);
      function9.compose((Function<? super String, ? extends Integer>) function8);
      Function.identity();
      Function.identity();
      unaryOperator0.apply(function2);
      function8.compose((Function<? super String, ?>) function1);
      unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function8);
      Function.identity();
      function8.compose((Function<? super Locale.LanguageRange, ?>) unaryOperator0);
      Function<String, String> function10 = Function.identity();
      function1.compose((Function<? super Integer, ?>) function2);
      Function.identity();
      unaryOperator0.compose((Function<? super Integer, ?>) function2);
      unaryOperator0.apply((Object) null);
      function10.andThen((Function<? super String, ? extends String>) function5);
      unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function8);
      unaryOperator0.apply(function2);
      unaryOperator0.compose((Function<? super Integer, ?>) unaryOperator0);
      unaryOperator0.compose((Function<? super String, ?>) function10);
      Function.identity();
      ImprovedFile improvedFile0 = new ImprovedFile("0IJ%>", "._l0");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("nestedArc", "i$3_K(8r");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "nestedArc";
      stringArray0[1] = "nestedArc";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      pipedInputStream0.markSupported();
      Vector<SequenceInputStream> vector2 = new Vector<SequenceInputStream>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      vector1.addElement((InputStream) null);
      vector1.add((InputStream) null);
      vector1.add((InputStream) pipedInputStream1);
      vector0.add((InputStream) pipedInputStream0);
      vector1.add((InputStream) pipedInputStream0);
      pipedOutputStream0.flush();
      vector0.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) pipedInputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      vector0.add((InputStream) pipedInputStream1);
      pipedInputStream1.close();
      Vector<InputStream> vector3 = new Vector<InputStream>();
      vector3.add((InputStream) pipedInputStream0);
      vector0.add((InputStream) pipedInputStream2);
      vector3.add((InputStream) byteArrayInputStream0);
      pipedInputStream2.connect(pipedOutputStream1);
      vector3.add((InputStream) byteArrayInputStream0);
      Vector<InputStream> vector4 = new Vector<InputStream>();
      try { 
        archiveScanner0.scandir(improvedFile0, "nestedArc", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/nestedArc/i$3_K(8r
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function.identity();
      unaryOperator0.apply(unaryOperator0);
      Integer integer0 = new Integer(1042);
      Integer integer1 = new Integer((-800));
      unaryOperator0.compose((Function<? super Integer, ?>) unaryOperator1);
      Function.identity();
      Function.identity();
      unaryOperator0.apply(unaryOperator0);
      UnaryOperator.identity();
      unaryOperator0.apply(integer1);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator2.apply(unaryOperator0);
      UnaryOperator.identity();
      Function.identity();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "-z?DscZf+|^6)T\"");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }
}
