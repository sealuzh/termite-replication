/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 10:09:24 GMT 2020
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import java.io.InputStream;
import java.net.URI;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("DILE_DO*S_NOT_EXST.jar0(ILE_DO*S_NOT_EXST./ar.jar", "DILE_DO*S_NOT_EXST.jar0(ILE_DO*S_NOT_EXST./ar.jar");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("DILE_DO*S_NOT_EXST.jar0(ILE_DO*S_NOT_EXST./ar.jar", "DILE_DO*S_NOT_EXST.jar0(ILE_DO*S_NOT_EXST./ar.jar", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processDirectory(mockFile0, "DILE_DO*S_NOT_EXST.jar0(ILE_DO*S_NOT_EXST./ar.jar", false);
      assertEquals(0L, mockFile0.getFreeSpace());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3", "k*pdg,3");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3", "k*pdg,3", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "lm`uoV9(0U`!j1&_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3", "k*pdg,3", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "k*pdg,3";
      stringArray0[1] = "k*pdg,3";
      stringArray0[2] = "k*pdg,3";
      stringArray0[3] = "LS,mRT'j+dI";
      stringArray0[4] = "k*pdg,3";
      stringArray0[5] = "k*pdg,3";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "<separator>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile("z9lzzEz3C>{(m", "z9lzzEz3C>{(m");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("z9lzzEz3C>{(m", "z9lzzEz3C>{(m", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[15];
      archiveScanner0.excludes = stringArray0;
      stringArray0[0] = "The applicAtion has encounteBed an internal ermr.";
      stringArray0[1] = "The applicAtion has encounteBed an internal ermr.";
      stringArray0[2] = "z9lzzEz3C>{(m";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processFile("z9lzzEz3C>{(m");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("0*pd%$g,3.jar", "0*pd%$g,3.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Error trying to ascertain the existence of entry, ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "S[,M!*QNZ[o[.:";
      stringArray0[1] = "Jav:}m>";
      stringArray0[2] = "p[g`";
      stringArray0[3] = "bAEb)x";
      stringArray0[4] = ".WAR";
      archiveScanner0.dirsExcluded = null;
      stringArray0[5] = "Jav:}m>";
      stringArray0[6] = "V/&`Mkq&)T";
      stringArray0[7] = "com.lts.io.ImprovedFile";
      stringArray0[8] = "gR.\"D!ULG3J&Yeo<d";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.dirsExcluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("The directory, ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("K;NOQ~p_0,cp'\"[");
      ImprovedFile improvedFile0 = new ImprovedFile("K;NOQ~p_0,cp'\"[");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      archiveScanner0.haveSlowResults = true;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      try { 
        archiveScanner0.processDirectory(mockFile0, "K;NOQ~p_0,cp'\"[", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/K;NOQ~p_0,cp'\"[
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0751393240053733
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3=", "k*pdg,3=");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3=", "k*pdg,3=", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.excludes = stringArray0;
      stringArray0[0] = "The applicAtion has encounteBed an internal ermr.";
      stringArray0[1] = "The applicAtion has encounteBed an internal ermr.";
      stringArray0[2] = "k*pdg,3=";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.scandir(mockFile0, "k*pdg,3=0k*pdg,3=.jar", false);
      assertTrue(mockFile0.canRead());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("&hx!xfXJ", "&hx!xfXJ");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("&hx!xfXJ", "&hx!xfXJ", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = "#o25pH&-b<g_8v`~Qz";
      archiveScanner0.includes = stringArray0;
      Vector<InputStream> vector0 = new Vector<InputStream>(899, (-328756924));
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.processFile("#o25pH&-b<g_8v`~Qz");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("k*pdg,3=");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.excludes = stringArray0;
      stringArray0[0] = "The applicAtion has encounteBed an internal ermr.";
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.processArchive(improvedFile0, "The applicAtion has encounteBed an internal ermr.");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("k4u");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "HU2Jo0@q", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/k4u
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("frTVYAignV1XkFHb");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, ".jar");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, frTVYAignV1XkFHb
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "XIST");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3", "k*pdg,3", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "com.lts<i`.IOUtilities";
      archiveScanner0.setIncludes(stringArray0);
      try { 
        archiveScanner0.processArchive(mockFile0, "com.lts<i`.IOUtilities");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, k*pdg,3
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3=", "k*pdg,3=");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3=", "k*pdg,3=", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.excludes = stringArray0;
      stringArray0[0] = "The applicAtion has encounteBed an internal ermr.";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(mockFile0, "The applicAtion has encounteBed an internal ermr.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("k*pdg,3=");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = "k*pdg,3=";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "k*pdg,3=", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3=", "k*pdg,3=");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3=", "k*pdg,3=", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile("k*pdg,3=", "jar:", (File) improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "critical.question.quit.title.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFile mockFile0 = new MockFile("0*pd%$g,3.jar", "0*pd%$g,3.jar");
      ImprovedFile improvedFile0 = new ImprovedFile("0*pd%$g,3.jar", "0*pd%$g,3.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsNotIncluded = vector0;
      String[] stringArray0 = new String[0];
      archiveScanner0.includes = stringArray0;
      archiveScanner0.processDirectory(mockFile0, "0*pd%$g,3.jar", true);
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3=", "k*pdg,3=");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3=", "k*pdg,3=", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = "#o25pH&-b<g8v`~Qz";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[1] = "#o25pH&-b<g8v`~Qz";
      stringArray0[2] = "k*pdg,3=";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.scandir(mockFile0, "k*pdg,3=", true);
      assertTrue(mockFile0.isAbsolute());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0905994737794786
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFile mockFile0 = new MockFile("k*pdg,3=", "k*pdg,3=");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("k*pdg,3=", "k*pdg,3=", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[12];
      archiveScanner0.addDefaultExcludes();
      stringArray0[0] = "#o25pH&-b<g8v`~Qz";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray0[1] = "#o25pH&-b<g8v`~Qz";
      stringArray0[2] = "k*pdg,3=";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.scandir(mockFile0, "k*pdg,3=", false);
      assertEquals(0L, mockFile0.getUsableSpace());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("(+^fDR?");
      ImprovedFile.createTempImprovedFile(".zip1.zip.jar", "(+^fDR?", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("k*pdg,3=");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }
}
