/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 22:22:10 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.sql.SQLWarning;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.management.remote.JMXPrincipal;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.568588498264587
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.deepCopy();
      databaseParameterBufferImp7.removeExtensionParams();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      databaseParameterBufferImp7.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeExtensionParams();
      databaseParameterBufferImp4.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.last();
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.relative(212);
      assertEquals(3, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3291952528947535
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp8.removeExtensionParams();
      databaseParameterBufferImp8.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      databaseParameterBufferImp8.removeExtensionParams();
      databaseParameterBufferImp6.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.removeExtensionParams();
      databaseParameterBufferImp8.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow(byteArray0);
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(3, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(175);
      isc_blob_handle_impl1.getDb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_stmt_handle_impl2.ensureCapacity(5);
      isc_tr_handle_impl isc_tr_handle_impl2 = isc_blob_handle_impl2.getTr();
      isc_blob_handle_impl4.setBlobId(0);
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_blob_handle_impl1.setTr(isc_tr_handle_impl3);
      isc_tr_handle_impl isc_tr_handle_impl4 = isc_blob_handle_impl2.getTr();
      isc_blob_handle_impl3.setTr(isc_tr_handle_impl4);
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl2.registerStatementWithTransaction(isc_stmt_handle_impl2);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(" &Ws#?/N");
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal(" &Ws#?/N");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:   &Ws#?/N");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal(" &Ws#?/N");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("JMXPrincipal:   &Ws#?/N");
      jMXPrincipal3.toString();
      jMXPrincipal4.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal2.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal(" &Ws#?/N");
      jMXPrincipal1.getName();
      jMXPrincipal5.toString();
      Subject subject0 = new Subject();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-121);
      byteArray2[1] = (byte) (-1);
      byteArray2[2] = (byte)125;
      byteArray2[3] = (byte)2;
      byteArray2[4] = (byte)59;
      byteArray2[5] = (byte)28;
      byteArray2[6] = (byte)74;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)2;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte)2;
      byteArray4[2] = (byte) (-121);
      byteArray4[3] = (byte)2;
      byteArray4[4] = (byte) (-121);
      byteArray4[5] = (byte) (-1);
      byteArray4[6] = (byte)28;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte)74;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte)125;
      byteArray6[1] = (byte) (-1);
      byteArray6[2] = (byte)125;
      byteArray6[3] = (byte)28;
      byteArray6[4] = (byte)2;
      byteArray6[5] = (byte) (-121);
      byteArray6[6] = (byte)28;
      byteArray6[7] = (byte) (-1);
      byteArray6[8] = (byte)74;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte) (-80);
      byteArray7[1] = (byte) (-121);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[2];
      byteArray8[0] = (byte) (-80);
      byteArray8[1] = (byte) (-121);
      byteArray0[7] = byteArray8;
      linkedList0.addLast(byteArray0);
      jMXPrincipal5.implies(subject0);
      jMXPrincipal3.getName();
      jMXPrincipal3.toString();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(" &Ws#?/N");
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal(" &Ws#?/N");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal(" &Ws#?/N");
      jMXPrincipal8.equals(jMXPrincipal5);
      jMXPrincipal4.toString();
      jMXPrincipal8.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][3];
      LinkedBlockingDeque<Object> linkedBlockingDeque0 = new LinkedBlockingDeque<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      linkedBlockingDeque0.add(object1);
      linkedList0.add(byteArray0);
      Object object2 = new Object();
      linkedBlockingDeque0.offer(object2);
      LinkedBlockingDeque<Object> linkedBlockingDeque1 = new LinkedBlockingDeque<Object>();
      Object object3 = new Object();
      linkedBlockingDeque0.toArray();
      linkedBlockingDeque0.add(object1);
      Object object4 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque2 = new LinkedBlockingDeque<Object>();
      Object object5 = new Object();
      Object object6 = new Object();
      linkedBlockingDeque1.removeFirstOccurrence(object6);
      linkedBlockingDeque2.add(object5);
      linkedList0.removeAll(linkedBlockingDeque2);
      linkedBlockingDeque0.drainTo((Collection<? super Object>) linkedBlockingDeque2, (-1667));
      Object object7 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque3 = new LinkedBlockingDeque<Object>();
      Integer integer0 = new Integer((byte) (-84));
      linkedBlockingDeque1.pollFirst();
      Integer.compare(2192, 13);
      linkedBlockingDeque2.offer((Object) linkedBlockingDeque1);
      LinkedBlockingDeque<Object> linkedBlockingDeque4 = new LinkedBlockingDeque<Object>();
      LinkedBlockingDeque<Object> linkedBlockingDeque5 = new LinkedBlockingDeque<Object>();
      linkedList0.add(byteArray0);
      LinkedBlockingDeque<Integer> linkedBlockingDeque6 = new LinkedBlockingDeque<Integer>();
      PriorityBlockingQueue<Delayed> priorityBlockingQueue0 = new PriorityBlockingQueue<Delayed>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.599746334050902
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-86);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-86);
      byteArray2[1] = (byte) (-86);
      byteArray2[2] = (byte) (-86);
      byteArray2[3] = (byte) (-86);
      byteArray2[4] = (byte) (-86);
      byteArray2[5] = (byte) (-86);
      byteArray2[6] = (byte) (-86);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte) (-86);
      byteArray3[1] = (byte) (-86);
      byteArray3[2] = (byte) (-86);
      byteArray3[3] = (byte) (-86);
      byteArray3[4] = (byte) (-86);
      byteArray3[5] = (byte)1;
      byteArray3[6] = (byte) (-102);
      byteArray3[7] = (byte) (-86);
      byteArray3[8] = (byte) (-86);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte) (-86);
      byteArray4[1] = (byte)1;
      byteArray4[2] = (byte)1;
      byteArray4[3] = (byte) (-59);
      byteArray4[4] = (byte)1;
      byteArray4[5] = (byte) (-86);
      byteArray4[6] = (byte) (-86);
      byteArray4[7] = (byte)1;
      byteArray4[8] = (byte)1;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte)1;
      byteArray5[1] = (byte) (-86);
      byteArray5[2] = (byte)1;
      byteArray5[4] = (byte) (-86);
      byteArray5[5] = (byte)60;
      byteArray5[6] = (byte) (-59);
      byteArray5[7] = (byte) (-86);
      byteArray5[8] = (byte) (-59);
      byteArray0[4] = byteArray5;
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isEmpty();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader(pipedWriter0, (-2187));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.053209400402682
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.setFetchSize((-586));
      linkedList0.offer((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isBeforeFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.relative((-586));
      fBCachedFetcher0.relative((-2187));
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.previous();
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-586));
      boolean boolean0 = fBCachedFetcher0.relative((-2184));
      assertEquals((-586), fBCachedFetcher0.getFetchSize());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.660907732681425
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp8.removeExtensionParams();
      databaseParameterBufferImp8.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      databaseParameterBufferImp8.removeExtensionParams();
      databaseParameterBufferImp6.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.removeExtensionParams();
      databaseParameterBufferImp8.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute(39);
      assertEquals(3, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.097878170750067
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = (DatabaseParameterBufferImp)databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp9.removeExtensionParams();
      databaseParameterBufferImp8.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      byte[][] byteArray0 = new byte[0][0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      databaseParameterBufferImp8.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp18 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp19 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp20 = new DatabaseParameterBufferImp();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super byte[][], ? extends byte[][]>) unaryOperator1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      boolean boolean0 = fBCachedFetcher0.last();
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.971475870936329
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      int int0 = (-2187);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.setFetchSize(1);
      linkedList0.offer((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.getRowNum();
      try { 
        fBResultSet0.getBoolean((-2187));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // The resultSet is not in a row, use next
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1828123148325145
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp8.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = (DatabaseParameterBufferImp)databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp9.removeExtensionParams();
      databaseParameterBufferImp8.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      byte[][] byteArray0 = new byte[0][0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp18 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp19 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp20 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp21 = new DatabaseParameterBufferImp();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(byteArray0);
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super byte[][], ? extends byte[][]>) unaryOperator1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBResultSet0.isAfterLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.9303934034846026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isEmpty();
      PipedWriter pipedWriter0 = new PipedWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.relative((-2));
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isLast();
      int int0 = fBCachedFetcher0.getRowNum();
      assertTrue(fBCachedFetcher0.isFirst());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp18 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp19 = new DatabaseParameterBufferImp();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.absolute(3064);
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0108940605206342
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setRblId((-3535));
      isc_blob_handle_impl0.getDb();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertFalse(isc_stmt_handle_impl0.hasOpenResultSet());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][3];
      LinkedBlockingDeque<Object> linkedBlockingDeque0 = new LinkedBlockingDeque<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      linkedBlockingDeque0.add(object1);
      Object object2 = new Object();
      linkedBlockingDeque0.offer(object2);
      LinkedBlockingDeque<Object> linkedBlockingDeque1 = new LinkedBlockingDeque<Object>();
      Object object3 = new Object();
      linkedBlockingDeque0.toArray();
      linkedBlockingDeque0.add(object1);
      Object object4 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque2 = new LinkedBlockingDeque<Object>();
      Object object5 = new Object();
      Object object6 = new Object();
      linkedBlockingDeque1.removeFirstOccurrence(object6);
      linkedBlockingDeque2.add(object5);
      linkedList0.removeAll(linkedBlockingDeque2);
      linkedBlockingDeque0.drainTo((Collection<? super Object>) linkedBlockingDeque2, (-1667));
      Object object7 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque3 = new LinkedBlockingDeque<Object>();
      Integer integer0 = new Integer((byte) (-84));
      linkedBlockingDeque1.pollFirst();
      Integer.compare(2192, 13);
      linkedBlockingDeque2.offer((Object) linkedBlockingDeque1);
      LinkedBlockingDeque<Object> linkedBlockingDeque4 = new LinkedBlockingDeque<Object>();
      LinkedBlockingDeque<Object> linkedBlockingDeque5 = new LinkedBlockingDeque<Object>();
      LinkedBlockingDeque linkedBlockingDeque6 = new LinkedBlockingDeque<Integer>();
      PriorityBlockingQueue<Delayed> priorityBlockingQueue0 = new PriorityBlockingQueue<Delayed>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6860152329788263
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      int int0 = (-1);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.firebirdsql.jdbc.FBCachedFetcher$1");
      fBCachedFetcher0.next();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isEmpty();
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8865062045689394
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.setFetchSize(1);
      linkedList0.offer((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isEmpty();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][3];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)116;
      byteArray1[1] = (byte)83;
      byteArray1[2] = (byte) (-46);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte) (-46);
      byteArray3[1] = (byte)83;
      byteArray3[2] = (byte) (-46);
      byteArray3[3] = (byte)4;
      byteArray3[4] = (byte) (-46);
      byteArray3[5] = (byte)3;
      byteArray3[6] = (byte)116;
      byteArray3[7] = (byte)116;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-46);
      byteArray4[1] = (byte)116;
      byteArray4[2] = (byte) (-46);
      byteArray4[3] = (byte) (-17);
      byteArray4[4] = (byte)83;
      byteArray4[5] = (byte)4;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-17);
      byteArray5[1] = (byte)4;
      byteArray5[2] = (byte) (-46);
      byteArray5[3] = (byte) (-46);
      byteArray5[4] = (byte)4;
      byteArray5[5] = (byte) (-46);
      byteArray5[6] = (byte) (-17);
      byteArray5[7] = (byte)4;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte) (-42);
      byteArray6[1] = (byte)3;
      byteArray6[2] = (byte) (-46);
      byteArray6[3] = (byte) (-17);
      byteArray6[4] = (byte)116;
      byteArray6[5] = (byte)3;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte)83;
      byteArray7[1] = (byte) (-42);
      byteArray7[2] = (byte)4;
      byteArray7[3] = (byte) (-17);
      byteArray7[5] = (byte) (-42);
      byteArray0[6] = byteArray7;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isBeforeFirst();
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.731054012677664
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isEmpty();
      PipedWriter pipedWriter0 = new PipedWriter();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.getRowNum();
      int int0 = (-2);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.relative((-2));
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setBlobId((-261L));
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl2.setRblId(68);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getRsr_rdb();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_blob_handle_impl3.setDb(isc_db_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl1.registerStatementWithTransaction(isc_stmt_handle_impl0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      System.setCurrentTimeMillis(68);
      System.setCurrentTimeMillis((-128L));
      System.setCurrentTimeMillis(2718L);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][3];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)116;
      byteArray1[1] = (byte)83;
      byteArray1[2] = (byte) (-46);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte) (-46);
      byteArray3[1] = (byte)83;
      byteArray3[2] = (byte) (-46);
      byteArray3[3] = (byte)4;
      byteArray3[4] = (byte) (-46);
      byteArray3[5] = (byte)3;
      byteArray3[6] = (byte)116;
      byteArray3[7] = (byte)116;
      byteArray3[8] = (byte)83;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-46);
      byteArray4[1] = (byte)116;
      byteArray4[2] = (byte) (-46);
      byteArray4[3] = (byte) (-17);
      byteArray4[4] = (byte)83;
      byteArray4[5] = (byte)4;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte) (-17);
      byteArray5[1] = (byte)4;
      byteArray5[2] = (byte) (-46);
      byteArray5[3] = (byte) (-46);
      byteArray5[4] = (byte)4;
      byteArray5[5] = (byte) (-46);
      byteArray5[6] = (byte) (-17);
      byteArray5[7] = (byte)4;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte) (-42);
      byteArray6[1] = (byte)3;
      byteArray6[2] = (byte) (-46);
      byteArray6[3] = (byte) (-17);
      byteArray6[4] = (byte)116;
      byteArray6[5] = (byte)3;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte)83;
      byteArray7[1] = (byte) (-42);
      byteArray7[2] = (byte)4;
      byteArray7[3] = (byte) (-17);
      byteArray7[4] = (byte) (-46);
      byteArray7[5] = (byte) (-42);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isFirst();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isBeforeFirst();
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2186555838402073
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][3];
      LinkedBlockingDeque<Object> linkedBlockingDeque0 = new LinkedBlockingDeque<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      linkedBlockingDeque0.add(object1);
      Object object2 = new Object();
      linkedBlockingDeque0.offer(object2);
      LinkedBlockingDeque<Object> linkedBlockingDeque1 = new LinkedBlockingDeque<Object>();
      Object object3 = new Object();
      linkedBlockingDeque0.toArray();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object4 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque2 = new LinkedBlockingDeque<Object>();
      Object object5 = new Object();
      Object object6 = new Object();
      linkedBlockingDeque1.removeFirstOccurrence(object6);
      linkedBlockingDeque2.add(object5);
      linkedList0.removeAll(linkedBlockingDeque2);
      linkedBlockingDeque0.drainTo((Collection<? super Object>) linkedBlockingDeque2, (int) (byte) (-84));
      Object object7 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque3 = new LinkedBlockingDeque<Object>();
      Integer integer0 = new Integer((byte) (-84));
      linkedBlockingDeque1.add(linkedBlockingDeque3);
      linkedBlockingDeque1.pollFirst();
      Integer.compare(2192, 13);
      linkedBlockingDeque2.offer((Object) linkedBlockingDeque1);
      LinkedBlockingDeque<Object> linkedBlockingDeque4 = new LinkedBlockingDeque<Object>();
      LinkedBlockingDeque<Object> linkedBlockingDeque5 = new LinkedBlockingDeque<Object>();
      LinkedBlockingDeque<Delayed> linkedBlockingDeque6 = new LinkedBlockingDeque<Delayed>();
      PriorityBlockingQueue<Delayed> priorityBlockingQueue0 = new PriorityBlockingQueue<Delayed>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.updateRow(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8897685994100004
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.next();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.setFetchSize(1);
      linkedList0.offer((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      SQLWarning sQLWarning0 = new SQLWarning();
      SQLWarning sQLWarning1 = new SQLWarning("mX3`w", sQLWarning0);
      fBResultSet0.addWarning(sQLWarning1);
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isBeforeFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      int int1 = fBCachedFetcher0.getRowNum();
      assertEquals(1, fBCachedFetcher0.getFetchSize());
      assertEquals(1, int1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      isc_blob_handle_impl0.setBlobId((-261L));
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl2.setRblId(68);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.forgetResultSets();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Eni\"zk");
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl4.setBlobId(2);
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_blob_handle_impl3.setDb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl3.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 1, 5, isc_stmt_handle_impl2, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3696352485074934
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.absolute((-1));
      assertFalse(fBCachedFetcher0.isEmpty());
      
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setRblId(215);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl0.setTr(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getRsr_rdb();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.clearRows();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl0);
      isc_stmt_handle_impl2.setDeleteCount(215);
      isc_blob_handle_impl0.setRblId(4);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      isc_db_handle_impl0.getOpenTransactionCount();
      isc_blob_handle_impl1.setDb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl0.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl5 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher1.previous();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl2.setTr((isc_tr_handle_impl) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl4 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl4);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl4.setBlobId(2);
      isc_stmt_handle_impl3.removeRows();
      isc_stmt_handle_impl1.statement = null;
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_blob_handle_impl3.setDb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl5);
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("#xoe");
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("#xoe");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("");
      jMXPrincipal5.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("");
      jMXPrincipal1.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.toString();
      jMXPrincipal6.getName();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("JMXPrincipal:  #xoe");
      jMXPrincipal5.toString();
      jMXPrincipal9.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(175);
      isc_blob_handle_impl1.getDb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl3);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_stmt_handle_impl2.ensureCapacity(5);
      isc_tr_handle_impl isc_tr_handle_impl2 = isc_blob_handle_impl2.getTr();
      isc_blob_handle_impl4.setBlobId(0);
      isc_tr_handle_impl isc_tr_handle_impl3 = new isc_tr_handle_impl();
      isc_tr_handle_impl3.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl4 = isc_blob_handle_impl2.getTr();
      isc_blob_handle_impl3.setTr(isc_tr_handle_impl4);
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl2.registerStatementWithTransaction(isc_stmt_handle_impl2);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(",,#cZ");
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal(",,#cZ");
      jMXPrincipal5.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.getName();
      jMXPrincipal3.getName();
      jMXPrincipal3.toString();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal(",,#cZ");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal(",,#cZ");
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal(",,#cZ");
      jMXPrincipal0.toString();
      jMXPrincipal0.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(",,#cZ");
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal(",,#cZ");
      jMXPrincipal5.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.getName();
      jMXPrincipal3.getName();
      jMXPrincipal3.toString();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal(",,#cZ");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal(",,#cZ");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("JMXPrincipal:  JMXPrincipal:  ,,#cZ");
      jMXPrincipal5.toString();
      jMXPrincipal9.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp18 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp19 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp20 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp21 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp22 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp23 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp24 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp25 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp26 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp27 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp28 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp29 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp30 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp31 = new DatabaseParameterBufferImp();
      UnaryOperator.identity();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.469607282976206
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp18 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp19 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp20 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp21 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp22 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp23 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp24 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp25 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp26 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp27 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp28 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp29 = new DatabaseParameterBufferImp();
      UnaryOperator.identity();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.close();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.next();
      assertEquals(1, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3804082708178105
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp8.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = (DatabaseParameterBufferImp)databaseParameterBufferImp8.deepCopy();
      databaseParameterBufferImp9.removeExtensionParams();
      databaseParameterBufferImp8.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      byte[][] byteArray0 = new byte[0][0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp16 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp17 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp18 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp19 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp20 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp21 = new DatabaseParameterBufferImp();
      UnaryOperator<byte[][]> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(byteArray0);
      UnaryOperator<byte[][]> unaryOperator1 = UnaryOperator.identity();
      unaryOperator0.compose((Function<? super byte[][], ? extends byte[][]>) unaryOperator1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.702876963486656
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.iterator();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.absolute((-2187));
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.next();
      int int0 = 335544563;
      int int1 = 448;
      // Undeclared exception!
      try { 
        linkedList0.addAll(448, (Collection<? extends byte[][]>) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 448, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][3];
      LinkedBlockingDeque<Object> linkedBlockingDeque0 = new LinkedBlockingDeque<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      linkedBlockingDeque0.add(object1);
      Object object2 = new Object();
      linkedBlockingDeque0.offer(object2);
      LinkedBlockingDeque<Object> linkedBlockingDeque1 = new LinkedBlockingDeque<Object>();
      Object object3 = new Object();
      Object object4 = new Object();
      linkedBlockingDeque1.add(object4);
      LinkedBlockingDeque<Object> linkedBlockingDeque2 = new LinkedBlockingDeque<Object>();
      Object object5 = new Object();
      linkedBlockingDeque2.add(object5);
      linkedList0.removeAll(linkedBlockingDeque2);
      linkedBlockingDeque2.drainTo((Collection<? super Object>) linkedBlockingDeque1, (int) (byte) (-85));
      Object object6 = new Object();
      LinkedBlockingDeque<Object> linkedBlockingDeque3 = new LinkedBlockingDeque<Object>();
      Integer integer0 = new Integer((byte) (-85));
      linkedBlockingDeque2.offer((Object) integer0);
      LinkedBlockingDeque<Object> linkedBlockingDeque4 = new LinkedBlockingDeque<Object>();
      Integer integer1 = new Integer((byte) (-85));
      PriorityBlockingQueue<Delayed> priorityBlockingQueue0 = new PriorityBlockingQueue<Delayed>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      linkedList1.add(byteArray0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList1.addAll((Collection<? extends byte[][]>) linkedList0);
      linkedList2.add(byteArray0);
      linkedList2.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(",,#cZ");
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal(",,#cZ");
      jMXPrincipal5.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      linkedList0.add((byte[][]) null);
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.getName();
      jMXPrincipal3.getName();
      jMXPrincipal3.toString();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal(",,#cZ");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal(",,#cZ");
      jMXPrincipal3.toString();
      jMXPrincipal5.toString();
      jMXPrincipal3.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("#xoe");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("#xoe");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("");
      jMXPrincipal4.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("");
      jMXPrincipal1.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.toString();
      jMXPrincipal6.getName();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("JMXPrincipal:  ");
      jMXPrincipal2.toString();
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("JMXPrincipal:  #xoe");
      jMXPrincipal6.toString();
      jMXPrincipal8.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl1.setTr(isc_tr_handle_impl0);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_blob_handle_impl1.setTr(isc_tr_handle_impl1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl2 = new isc_tr_handle_impl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl4 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl4);
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl3.setBlobId(2);
      isc_stmt_handle_impl1.statement = null;
      isc_blob_handle_impl3.setDb((isc_db_handle_impl) null);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl2);
      isc_tr_handle_impl1.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl1.registerStatementWithTransaction(isc_stmt_handle_impl0);
      isc_db_handle_impl isc_db_handle_impl3 = new isc_db_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][4];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)74;
      byteArray1[1] = (byte)27;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)74;
      byteArray2[1] = (byte)27;
      byteArray2[2] = (byte)74;
      byteArray2[3] = (byte)74;
      byteArray2[4] = (byte)74;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)27;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)74;
      byteArray5[1] = (byte)74;
      byteArray5[2] = (byte)74;
      byteArray5[3] = (byte)74;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("B8huG2x#P#@IqJ");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      jMXPrincipal1.equals((Object) null);
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("{%FD-uX<\"wM");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("VPGt|mh$&ptr]");
      jMXPrincipal0.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("VPGt|mh$&ptr]");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("VPGt|mh$&ptr]");
      jMXPrincipal5.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("lifbbed.so");
      jMXPrincipal5.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      subject0.isReadOnly();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("VPGt|mh$&ptr]");
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(8, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      jMXPrincipal7.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)114;
      byteArray1[1] = (byte) (-112);
      byteArray1[2] = (byte) (-2);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)86;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte) (-12);
      byteArray1[7] = (byte) (-123);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-12);
      byteArray2[1] = (byte)114;
      byteArray2[2] = (byte) (-12);
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)86;
      byteArray2[5] = (byte)86;
      byteArray2[6] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)93;
      byteArray3[1] = (byte) (-123);
      byteArray3[2] = (byte)114;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)93;
      byteArray4[1] = (byte) (-123);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte)86;
      byteArray5[1] = (byte)93;
      byteArray5[2] = (byte)114;
      byteArray5[3] = (byte)114;
      byteArray5[4] = (byte) (-2);
      byteArray5[5] = (byte)86;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[1];
      byteArray6[0] = (byte)93;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[3];
      byteArray7[0] = (byte) (-1);
      byteArray7[1] = (byte)114;
      byteArray7[2] = (byte)114;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[8];
      byteArray8[0] = (byte) (-123);
      byteArray8[1] = (byte)114;
      byteArray8[2] = (byte) (-123);
      byteArray8[3] = (byte) (-12);
      byteArray8[4] = (byte)93;
      byteArray8[5] = (byte)8;
      byteArray8[6] = (byte)114;
      byteArray8[7] = (byte)114;
      byteArray0[7] = byteArray8;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][8];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)114;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray1[1] = (byte)114;
      linkedList0.iterator();
      byteArray1[1] = (byte) (-26);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][8];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)114;
      linkedList0.add(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray1[1] = (byte)114;
      linkedList0.iterator();
      byteArray1[1] = (byte) (-26);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("B8hrrG2x#P#%@4IqJ");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("B8hrrG2x#P#%@4IqJ");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  B8hrrG2x#P#%@4IqJ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("#xoe");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("#xoe");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("B8hrrG2x#P#%@4IqJ");
      jMXPrincipal5.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("B8hrrG2x#P#%@4IqJ");
      jMXPrincipal5.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      subject0.isReadOnly();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.toString();
      jMXPrincipal6.getName();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("B8hrrG2x#P#%@4IqJ");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("JMXPrincipal:  B8hrrG2x#P#%@4IqJ");
      jMXPrincipal2.toString();
      JMXPrincipal jMXPrincipal9 = new JMXPrincipal("JMXPrincipal:  #xoe");
      jMXPrincipal6.toString();
      jMXPrincipal8.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("B8huG2x#P#@IqJ");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("");
      jMXPrincipal1.toString();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("{%FD-uX<\"wM");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("VPGt|mh$&ptr]");
      jMXPrincipal0.getName();
      byte[][] byteArray0 = new byte[8][5];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-7);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-7);
      byteArray2[1] = (byte) (-7);
      byteArray2[2] = (byte) (-7);
      byteArray2[3] = (byte) (-7);
      byteArray2[4] = (byte) (-7);
      byteArray2[5] = (byte) (-7);
      byteArray2[6] = (byte) (-7);
      byteArray2[7] = (byte) (-7);
      byteArray2[8] = (byte) (-7);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-7);
      byteArray3[1] = (byte) (-7);
      byteArray3[2] = (byte) (-7);
      byteArray3[3] = (byte) (-7);
      byteArray3[4] = (byte) (-7);
      byteArray3[5] = (byte) (-7);
      byteArray3[6] = (byte) (-7);
      byteArray3[7] = (byte) (-7);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte) (-49);
      byteArray4[1] = (byte)48;
      byteArray4[2] = (byte) (-2);
      byteArray4[3] = (byte) (-7);
      byteArray4[4] = (byte) (-7);
      byteArray4[5] = (byte) (-7);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-49);
      byteArray5[1] = (byte) (-7);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte)48;
      byteArray6[1] = (byte) (-2);
      byteArray6[2] = (byte) (-7);
      byteArray6[3] = (byte) (-7);
      byteArray6[4] = (byte) (-2);
      byteArray6[5] = (byte) (-2);
      byteArray6[6] = (byte) (-7);
      byteArray6[7] = (byte) (-49);
      byteArray6[8] = (byte) (-112);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte) (-7);
      byteArray7[1] = (byte) (-7);
      byteArray7[2] = (byte)48;
      byteArray7[3] = (byte)48;
      byteArray7[4] = (byte) (-49);
      byteArray7[5] = (byte)48;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[0];
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      jMXPrincipal3.getName();
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("VPGt|mh$&ptr]");
      jMXPrincipal4.getName();
      jMXPrincipal4.toString();
      jMXPrincipal3.toString();
      jMXPrincipal2.getName();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("lifbbed.so");
      jMXPrincipal4.getName();
      jMXPrincipal5.toString();
      Subject subject0 = new Subject();
      subject0.isReadOnly();
      jMXPrincipal5.implies(subject0);
      jMXPrincipal5.toString();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("VPGt|mh$&ptr]");
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(16, threadFactory0, threadPoolExecutor_CallerRunsPolicy0);
      jMXPrincipal6.getName();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("JMXPrincipal:  ");
      jMXPrincipal7.implies(subject0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-3431));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setBlobId((-257L));
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      isc_blob_handle_impl1.setTr((isc_tr_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.setRsr_id_ptr(59, (-2274));
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_stmt_handle_impl2.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl2.getRsr_rdb();
      isc_blob_handle_impl0.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl1.setDb((isc_db_handle_impl) null);
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setExecutionPlan("W\"kXA9Wo");
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl5.getRsr_rdb();
      byte[][] byteArray0 = new byte[7][6];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-11);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-11);
      byteArray2[1] = (byte) (-11);
      byteArray2[2] = (byte) (-11);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)125;
      byteArray3[1] = (byte) (-11);
      byteArray3[2] = (byte) (-11);
      byteArray3[3] = (byte) (-11);
      byteArray3[4] = (byte) (-11);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte)125;
      byteArray4[1] = (byte)125;
      byteArray4[2] = (byte)125;
      byteArray4[3] = (byte) (-11);
      byteArray4[4] = (byte)125;
      byteArray4[5] = (byte) (-11);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)125;
      byteArray5[1] = (byte)125;
      byteArray5[2] = (byte) (-11);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[3];
      byteArray7[0] = (byte) (-11);
      byteArray7[1] = (byte)125;
      byteArray7[2] = (byte)125;
      byteArray0[6] = byteArray7;
      linkedList0.addLast(byteArray0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl6 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      System.setCurrentTimeMillis(0L);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)127;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte)98;
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte)24;
      byteArray0[8] = (byte) (-46);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((-1501L));
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((-628));
      assertFalse(boolean0);
      assertEquals(0, fBResultSet0.getRow());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setBlobId((-257L));
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp();
      isc_blob_handle_impl1.setTr((isc_tr_handle_impl) null);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.setRsr_id_ptr(59, (-2274));
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl3 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl2.getRsr_rdb();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl3.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl3.getRsr_rdb();
      isc_blob_handle_impl0.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl1.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl0.getDb();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl1.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl4.setDb((isc_db_handle_impl) null);
      byte[][] byteArray0 = new byte[4][4];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)50;
      byteArray1[1] = (byte)37;
      byteArray1[2] = (byte) (-51);
      byteArray1[3] = (byte) (-15);
      byteArray1[4] = (byte) (-111);
      byteArray1[5] = (byte) (-51);
      byteArray1[6] = (byte) (-82);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)50;
      byteArray2[2] = (byte)50;
      byteArray2[3] = (byte) (-15);
      byteArray2[4] = (byte)59;
      byteArray2[5] = (byte) (-111);
      byteArray2[6] = (byte)50;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-51);
      byteArray3[1] = (byte) (-111);
      byteArray3[2] = (byte) (-15);
      byteArray3[3] = (byte) (-82);
      byteArray3[4] = (byte) (-82);
      byteArray3[5] = (byte) (-51);
      byteArray3[6] = (byte) (-82);
      byteArray3[7] = (byte)59;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte) (-82);
      byteArray4[1] = (byte) (-111);
      byteArray4[2] = (byte) (-15);
      byteArray4[3] = (byte)37;
      byteArray4[4] = (byte) (-111);
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      isc_stmt_handle_impl0.setExecutionPlan("");
      isc_stmt_handle_impl1.getRsr_rdb();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl4 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal(",,#cZ");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal3.getName();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("JMXPrincipal:  ,,#cZ");
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal(",,#cZ");
      jMXPrincipal5.getName();
      jMXPrincipal4.toString();
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      jMXPrincipal4.toString();
      linkedList0.add((byte[][]) null);
      jMXPrincipal2.getName();
      jMXPrincipal3.toString();
      jMXPrincipal1.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(",,#cZ");
      jMXPrincipal1.getName();
      jMXPrincipal6.toString();
      Subject subject0 = new Subject();
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.getName();
      jMXPrincipal3.getName();
      jMXPrincipal3.toString();
      jMXPrincipal4.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal(",,#cZ");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal(",,#cZ");
      jMXPrincipal3.toString();
      jMXPrincipal5.toString();
      jMXPrincipal3.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.354640740535752
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.setRblId((-3535));
      isc_blob_handle_impl0.getDb();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      assertEquals(0, isc_stmt_handle_impl0.size());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      jMXPrincipal0.toString();
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("JMXPrincipal:  ");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("#xoe");
      jMXPrincipal0.getName();
      jMXPrincipal2.getName();
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("#xoe");
      jMXPrincipal2.toString();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("");
      jMXPrincipal4.getName();
      jMXPrincipal3.toString();
      jMXPrincipal0.getName();
      jMXPrincipal4.toString();
      jMXPrincipal1.getName();
      jMXPrincipal2.toString();
      jMXPrincipal0.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      jMXPrincipal5.toString();
      Subject subject0 = new Subject();
      jMXPrincipal5.implies(subject0);
      jMXPrincipal5.toString();
      jMXPrincipal5.getName();
      jMXPrincipal3.toString();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("");
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("JMXPrincipal:  ");
      jMXPrincipal1.toString();
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("#xoe");
      jMXPrincipal5.toString();
      jMXPrincipal7.getName();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.absolute((-4));
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][8];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)114;
      linkedList0.add(byteArray0);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-8);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)114;
      byteArray2[1] = (byte) (-8);
      byteArray2[2] = (byte)114;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-8);
      byteArray2[5] = (byte)114;
      byteArray0[1] = byteArray2;
      byte[][] byteArray3 = new byte[1][8];
      byteArray3[0] = byteArray1;
      linkedList0.addLast(byteArray3);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }
}
