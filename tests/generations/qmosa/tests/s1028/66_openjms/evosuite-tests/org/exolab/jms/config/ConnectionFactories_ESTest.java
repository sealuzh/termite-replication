/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 22:00:11 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Collection;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.DocumentHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      XATopicConnectionFactory xATopicConnectionFactory1 = connectionFactories0.getXATopicConnectionFactory(0);
      assertNull(xATopicConnectionFactory1.getName());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4994);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 1372);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-33);
      byteArray0[7] = (byte)0;
      bufferedOutputStream0.write(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
      Locale locale0 = Locale.JAPANESE;
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(dataOutputStream0, 1372);
      BufferedOutputStream bufferedOutputStream2 = new BufferedOutputStream(dataOutputStream0, 1372);
      bufferedOutputStream2.flush();
      bufferedOutputStream2.write(1349);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      BufferedOutputStream bufferedOutputStream3 = null;
      try {
        bufferedOutputStream3 = new BufferedOutputStream(bufferedOutputStream0, (-3412));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      connectionFactories0.enumerateConnectionFactory();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.endDocument();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      defaultHandler2_1.setDocumentLocator(locator2Impl0);
      defaultHandler2_1.endPrefixMapping("_HH8l$4c]8eXu}:");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory1;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[3] = topicConnectionFactory2;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      topicConnectionFactory0.isValid();
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
      try { 
        connectionFactories0.getTopicConnectionFactory(230);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getSystemId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl3);
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl4);
      locator2Impl7.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl2);
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[3];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertEquals(2, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8063294488351005
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl1);
      locator2Impl0.getEncoding();
      locator2Impl0.setSystemId("}vH/?1(gV+q/4qFj");
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl0.getSystemId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl1);
      locatorImpl1.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl2);
      locator2Impl2.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl8.getColumnNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl7);
      locator2Impl4.getPublicId();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl10);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories1.setConnectionFactory(connectionFactoryArray0);
      connectionFactories1.setConnectionFactory(0, connectionFactory0);
      int int0 = 1072;
      try { 
        connectionFactories1.getTopicConnectionFactory(1072);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 58;
      int int1 = 1552;
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)75;
      byteArray0[1] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.getXATopicConnectionFactoryCount();
      try { 
        connectionFactories0.getXAConnectionFactory((int) (byte)67);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactoryArray0[0];
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray1 = new XATopicConnectionFactory[2];
      xATopicConnectionFactoryArray1[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[1] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray1);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("\"j", "\"j");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLReaderAdapter1.setErrorHandler(xMLFilterImpl0);
      xMLReaderAdapter0.setDocumentHandler((DocumentHandler) null);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter3);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter2);
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter2);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(2, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getXMLVersion();
      locator2Impl1.getXMLVersion();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl3.setColumnNumber(2232);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      defaultHandler2_0.setDocumentLocator(locator2Impl3);
      DefaultHandler defaultHandler1 = new DefaultHandler();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-1);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.getXAConnectionFactory((-1231));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAConnectionFactory(0, (XAConnectionFactory) null);
      connectionFactories0.getXAConnectionFactory(0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl0.setAttributes(attributes2Impl1);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      String string0 = "";
      String string1 = "+\\^s(S:s})X'7m>";
      MockPrintStream mockPrintStream0 = new MockPrintStream("+^s(S:s})X'7m>");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(dataOutputStream0);
      MockPrintStream mockPrintStream2 = null;
      try {
        mockPrintStream2 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("vW<bEvckLUmUo.");
      MockPrintStream mockPrintStream1 = new MockPrintStream("vW<bEvckLUmUo.");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream1 = new DataOutputStream(dataOutputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locator2Impl0.getColumnNumber();
      locator2Impl0.getSystemId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      locator2Impl3.setEncoding((String) null);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl0);
      connectionFactories0.addXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories1.addTopicConnectionFactory(0, topicConnectionFactory0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      Object object0 = new Object();
      MockPrintStream mockPrintStream0 = new MockPrintStream("4G");
      Locale locale0 = new Locale("4G", "", "org.exolab.jms.config.ConnectionFactories");
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) connectionFactories1;
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) connectionFactories1;
      objectArray0[3] = (Object) "Ewv$f^l&";
      objectArray0[4] = (Object) topicConnectionFactory1;
      objectArray0[5] = (Object) locale0;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Object object2 = new Object();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      Marshaller.enableDebug = true;
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.startDocument();
      xMLReaderAdapter1.endDocument();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getEntityResolver();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      xMLReaderAdapter0.setErrorHandler(defaultHandler0);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      char[] charArray0 = new char[4];
      charArray0[0] = 'N';
      charArray0[1] = 'c';
      xMLReaderAdapter0.startPrefixMapping("Z6$S", "");
      charArray0[2] = '[';
      charArray0[3] = 'T';
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(10, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 10, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.495914456064185
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_SW'");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      queueConnectionFactoryArray0[0] = null;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactoryArray0[0]);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      connectionFactories0.isValid();
      try { 
        connectionFactories0.getXAConnectionFactory((-2183));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Object object0 = new Object();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(11);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 1);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(byteArrayOutputStream0, 288);
      bufferedOutputStream1.write(2729);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
      Locale locale0 = Locale.JAPANESE;
      Object object1 = new Object();
      bufferedOutputStream1.close();
      bufferedOutputStream0.write(1);
      MockPrintStream mockPrintStream1 = new MockPrintStream(bufferedOutputStream0);
      Locale locale1 = Locale.JAPANESE;
      Object object2 = new Object();
      MockPrintStream mockPrintStream2 = null;
      try {
        mockPrintStream2 = new MockPrintStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory();
      Object object0 = new Object();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getPublicId();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getXMLVersion();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.setDocumentLocator(locator2Impl1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      ConnectionFactory connectionFactory2 = new ConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[7];
      connectionFactoryArray0[0] = connectionFactory1;
      connectionFactoryArray0[1] = connectionFactory2;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactoryArray0[3] = connectionFactory2;
      connectionFactoryArray0[4] = connectionFactory2;
      connectionFactoryArray0[5] = connectionFactory0;
      connectionFactoryArray0[6] = connectionFactory1;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactory connectionFactory3 = new ConnectionFactory();
      connectionFactories0.getConnectionFactory(0);
      assertEquals(7, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId("org.exolab.castor.xml.Introspector");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl0);
      locator2Impl2.setSystemId(".BsWJy!oe_kfI");
      locator2Impl3.getLineNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      defaultHandler2_0.setDocumentLocator(locator2Impl2);
      locator2Impl2.setLineNumber(0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl2.setSystemId("org.exolab.castor.xml.Introspector");
      locator2Impl4.setSystemId("bSJvFOfE.X`DWJV");
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      locator2Impl7.getEncoding();
      locator2Impl7.getXMLVersion();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl3);
      defaultHandler2_1.setDocumentLocator(locator2Impl4);
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl8);
      defaultHandler2_1.setDocumentLocator(locator2Impl10);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      assertEquals(1, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4994);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 1372);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-33);
      byteArray0[7] = (byte)0;
      bufferedOutputStream0.write(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
      Locale locale0 = Locale.JAPANESE;
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(dataOutputStream0, 1372);
      BufferedOutputStream bufferedOutputStream2 = new BufferedOutputStream(dataOutputStream0, 1372);
      bufferedOutputStream2.write(1349);
      connectionFactories0.getXAQueueConnectionFactory();
      BufferedOutputStream bufferedOutputStream3 = null;
      try {
        bufferedOutputStream3 = new BufferedOutputStream(bufferedOutputStream0, (-3412));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null, locale_FilteringMode0);
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.ROOT;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.JAPANESE;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      locale1.getDisplayVariant(locale0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale1;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-17), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      Locale locale2 = Locale.TAIWAN;
      locale2.getDisplayName(locale0);
      locale1.getUnicodeLocaleKeys();
      locale2.getDisplayVariant(locale1);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.FRANCE;
      locale0.getDisplayVariant();
      locale1.getDisplayVariant();
      Locale locale4 = Locale.KOREA;
      locale2.getDisplayVariant(locale4);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list0);
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      linkedList4.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList4, locale_FilteringMode1);
      locale1.hasExtensions();
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale3);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(9, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.ROOT;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.JAPANESE;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      locale1.getDisplayVariant(locale0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale1;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("WX.-^8v*/A4|/Mn>~_", "WX.-^8v*/A4|/Mn>~_");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // WX.-^8v*_/A4|/Mn>~_
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.360380995184394
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactoryCount();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      assertEquals(1, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      String string0 = "VKnB}yTgS:?S}";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VKnB}yTgS:?S}");
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      connectionFactories2.getQueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      int int0 = 2722;
      try { 
        connectionFactories1.setXAQueueConnectionFactory(2722, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_0.endDocument();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      defaultHandler2_0.setDocumentLocator(locator2Impl1);
      String string0 = "_HH8l$4c]8e\\Xu}:";
      defaultHandler2_1.endPrefixMapping("_HH8l$4c]8eXu}:");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      int int0 = (-1892);
      try { 
        connectionFactories0.setTopicConnectionFactory((-1892), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      locatorImpl0.setColumnNumber(202);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl0);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl3);
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getColumnNumber();
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      locator2Impl5.setColumnNumber((-225));
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl6.getColumnNumber();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl9);
      locator2Impl8.getEncoding();
      locator2Impl7.getPublicId();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl8);
      locator2Impl0.setColumnNumber((-1370));
      locator2Impl8.getXMLVersion();
      locator2Impl7.setEncoding("");
      locator2Impl4.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      try { 
        connectionFactories0.getXAConnectionFactory((-2226));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("WX.-^8v*/A4|/Mn>~_");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("B3,}Y");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      connectionFactories0.marshal((Writer) mockPrintWriter0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("WX.-^8v*/A4|/Mn>~_", "WX.-^8v*/A4|/Mn>~_");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // WX.-^8v*_/A4|/Mn>~_
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      int int1 = 17;
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(24, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl2);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locatorImpl0.getColumnNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl0);
      locator2Impl5.getLineNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl4);
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl4.setColumnNumber(0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      locator2Impl6.getColumnNumber();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl1);
      locator2Impl6.getPublicId();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl4);
      locator2Impl1.getPublicId();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl15 = new Locator2Impl();
      locator2Impl1.getXMLVersion();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(17);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null, 17);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      mockPrintStream0.print(0.0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream1 = new DataOutputStream(bufferedOutputStream0);
      MockPrintStream mockPrintStream1 = new MockPrintStream("t]:?cC_?mC!)_5s$");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream2 = new DataOutputStream(byteArrayOutputStream0);
      DataOutputStream dataOutputStream3 = new DataOutputStream(byteArrayOutputStream0);
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream4 = new DataOutputStream(dataOutputStream0);
      DataOutputStream dataOutputStream5 = new DataOutputStream(mockPrintStream1);
      ByteArrayOutputStream byteArrayOutputStream2 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream6 = new DataOutputStream(mockPrintStream1);
      DataOutputStream dataOutputStream7 = new DataOutputStream(byteArrayOutputStream1);
      DataOutputStream dataOutputStream8 = new DataOutputStream(byteArrayOutputStream1);
      assertFalse(dataOutputStream8.equals((Object)dataOutputStream5));
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(3168, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl0);
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl0);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl3);
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getColumnNumber();
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl2);
      locator2Impl5.setColumnNumber((-225));
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl6.getColumnNumber();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl9);
      locator2Impl8.getEncoding();
      locator2Impl7.getPublicId();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl8);
      locator2Impl0.setColumnNumber((-1370));
      locator2Impl8.getXMLVersion();
      locator2Impl7.setEncoding("");
      locator2Impl4.getPublicId();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4994);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 1372);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)83;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-33);
      byteArray0[7] = (byte)0;
      bufferedOutputStream0.write(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
      Locale locale0 = Locale.JAPANESE;
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      BufferedOutputStream bufferedOutputStream1 = new BufferedOutputStream(dataOutputStream0, 1372);
      BufferedOutputStream bufferedOutputStream2 = new BufferedOutputStream(dataOutputStream0, 1372);
      bufferedOutputStream2.write(1349);
      BufferedOutputStream bufferedOutputStream3 = null;
      try {
        bufferedOutputStream3 = new BufferedOutputStream(bufferedOutputStream0, (-3412));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList1.sort(comparator0);
      Locale locale1 = Locale.CHINESE;
      locale0.getScript();
      Locale locale2 = Locale.JAPANESE;
      locale2.clone();
      locale2.getUnicodeLocaleKeys();
      Locale locale3 = Locale.JAPANESE;
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      locale2.getDisplayVariant();
      locale2.hasExtensions();
      objectArray0[4] = (Object) locale2;
      Locale.getISOLanguages();
      objectArray0[5] = (Object) locale3;
      Object object1 = new Object();
      Object object2 = new Object();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getEncoding();
      locator2Impl0.setSystemId((String) null);
      locator2Impl2.getLineNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getSystemId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl3.getEncoding();
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl5.getXMLVersion();
      locator2Impl1.setPublicId((String) null);
      locator2Impl4.getEncoding();
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl5);
      locator2Impl0.getColumnNumber();
      locator2Impl5.setColumnNumber(0);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl1);
      locator2Impl9.getSystemId();
      locator2Impl2.getLineNumber();
      locator2Impl5.getLineNumber();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl10);
      locator2Impl5.getLineNumber();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl9.getLineNumber();
      locator2Impl6.setLineNumber(0);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      locator2Impl14.getPublicId();
      Locator2Impl locator2Impl15 = new Locator2Impl();
      Locator2Impl locator2Impl16 = new Locator2Impl(locator2Impl13);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-407), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e@M;)Al}c9&+!GZ1T|");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("' could not be found.", "E;Qc_xoZgg}0");
      xMLReaderAdapter0.skippedEntity("E;Qc_xoZgg}0");
      xMLReaderAdapter0.skippedEntity("");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter0.characters((char[]) null, 815, 815);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler defaultHandler1 = new DefaultHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter4.setErrorHandler(defaultHandler2_0);
      xMLReaderAdapter2.endElement("", "", "");
      xMLReaderAdapter3.startPrefixMapping("E;Qc_xoZgg}0", "");
      xMLReaderAdapter2.skippedEntity("zIC}J");
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter3);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter6);
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      int int0 = 0;
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      String string0 = "";
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl2);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl0);
      locator2Impl6.getLineNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl5.setColumnNumber(10);
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl2);
      locator2Impl7.getPublicId();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl5);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl16 = new Locator2Impl();
      locator2Impl1.getXMLVersion();
      locator2Impl11.getPublicId();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-1);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.clearConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("WX.-^8v*/A4|/Mn>~_", "WX.-^8v*/A4|/Mn>~_");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // WX.-^8v*_/A4|/Mn>~_
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      try { 
        connectionFactories0.addTopicConnectionFactory(249, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 249, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale locale2 = Locale.TAIWAN;
      locale1.getUnicodeLocaleKeys();
      locale2.getDisplayVariant(locale1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = locale1.stripExtensions();
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale4 = Locale.KOREA;
      locale2.getDisplayVariant(locale4);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale3;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=WsEx(dZl|1B#-s@p@");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      connectionFactories0.clearTopicConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.enumerateXAConnectionFactory();
      connectionFactories0.enumerateXATopicConnectionFactory();
      int int0 = 48;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      StringReader stringReader0 = new StringReader("\"Id}?");
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(24, topicConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 24, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      locatorImpl0.setSystemId((String) null);
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getEncoding();
      locator2Impl2.getXMLVersion();
      locator2Impl0.setPublicId((String) null);
      locator2Impl2.getEncoding();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl2);
      locatorImpl0.getColumnNumber();
      locator2Impl1.setColumnNumber(0);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      AttributesImpl attributesImpl2 = new AttributesImpl();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl0);
      locator2Impl5.getLineNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl4);
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl4.setColumnNumber((-1));
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl2);
      locator2Impl6.getPublicId();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl4);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl15 = new Locator2Impl();
      locator2Impl1.getXMLVersion();
      locator2Impl10.getPublicId();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.ignorableWhitespace((char[]) null, (-960), 1803);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.endDocument();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter2.setErrorHandler(defaultHandler2_1);
      xMLReaderAdapter2.setDocumentHandler(parserAdapter0);
      attributes2Impl0.getIndex("(/c");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      xMLReaderAdapter0.startElement("Q-", "This node type can not contain namespaces", (String) null, attributes2Impl0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter2);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter2);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(";Gbr3");
      try { 
        connectionFactories0.getConnectionFactory((-1840));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      attributesImpl1.getValue("aK,-a3&xcDW?x$", "fdn!<");
      locator2Impl0.getSystemId();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getSystemId();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl4);
      locator2Impl0.getEncoding();
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl8);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.getExternalSubset((String) null, (String) null);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl3);
      defaultHandler2_0.setDocumentLocator(locator2Impl0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(21, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getEncoding();
      locator2Impl0.setSystemId((String) null);
      locator2Impl2.getLineNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getSystemId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl3.getEncoding();
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl5.getXMLVersion();
      locator2Impl1.setPublicId((String) null);
      locator2Impl4.getEncoding();
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl5);
      locator2Impl0.getColumnNumber();
      locator2Impl5.setColumnNumber(0);
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl1);
      locator2Impl9.getSystemId();
      locator2Impl2.getLineNumber();
      locator2Impl5.getLineNumber();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl10);
      locator2Impl5.getLineNumber();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl9.getLineNumber();
      locator2Impl6.setLineNumber(0);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      locator2Impl14.getPublicId();
      Locator2Impl locator2Impl15 = new Locator2Impl();
      Locator2Impl locator2Impl16 = new Locator2Impl(locator2Impl10);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-267), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl2);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      locatorImpl0.getSystemId();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl0.getColumnNumber();
      locator2Impl1.getSystemId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl0);
      locator2Impl0.setEncoding((String) null);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      locator2Impl2.getSystemId();
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl1);
      locator2Impl0.setSystemId("u");
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl0.getXMLVersion();
      locator2Impl0.setPublicId("");
      Locator2Impl locator2Impl7 = new Locator2Impl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl2.getColumnNumber();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      Marshaller.enableDebug = true;
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.endDocument();
      xMLReaderAdapter1.characters((char[]) null, (-1471), 214);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler defaultHandler1 = new DefaultHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      HandlerBase handlerBase0 = new HandlerBase();
      xMLReaderAdapter3.setErrorHandler(handlerBase0);
      xMLReaderAdapter1.startPrefixMapping("", (String) null);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter3);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter5.startDocument();
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter2);
      xMLReaderAdapter4.setErrorHandler(handlerBase0);
      xMLReaderAdapter5.skippedEntity("LI'C");
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter7.setDocumentHandler(parserAdapter2);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale locale2 = Locale.TAIWAN;
      locale0.getUnicodeLocaleKeys();
      locale2.getDisplayVariant(locale1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale2);
      Locale.Category locale_Category2 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category2, locale1);
      Locale locale3 = Locale.FRANCE;
      locale2.getDisplayVariant();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      linkedList4.add((Locale) null);
      Locale locale4 = Locale.KOREA;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList4);
      linkedList2.offer(locale2);
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale.setDefault(locale_Category2, locale2);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(0, xAConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList1.sort(comparator0);
      Locale locale1 = Locale.CHINESE;
      locale0.getScript();
      Locale locale2 = Locale.JAPANESE;
      locale2.clone();
      locale2.getUnicodeLocaleKeys();
      Locale locale3 = Locale.JAPANESE;
      linkedList2.add(locale2);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      locale2.getDisplayVariant();
      locale2.getDisplayVariant(locale0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      locale2.hasExtensions();
      objectArray0[4] = (Object) locale2;
      Locale.getISOLanguages();
      objectArray0[5] = (Object) locale3;
      Object object1 = new Object();
      objectArray0[7] = (Object) comparator0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.setLineNumber((-594));
      locatorImpl0.getPublicId();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.getXAQueueConnectionFactory((-26));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getEncoding();
      locatorImpl0.setSystemId((String) null);
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getSystemId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      locator2Impl4.getXMLVersion();
      locator2Impl0.setPublicId((String) null);
      locator2Impl3.getEncoding();
      locator2Impl4.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl4);
      locatorImpl0.getColumnNumber();
      locator2Impl4.setColumnNumber(0);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl9 = new Locator2Impl(locatorImpl0);
      locator2Impl8.getSystemId();
      locator2Impl9.getSystemId();
      locator2Impl1.getLineNumber();
      locator2Impl4.getLineNumber();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl9);
      locator2Impl4.getLineNumber();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      locator2Impl8.getLineNumber();
      locator2Impl5.setLineNumber(0);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl13.setXMLVersion("");
      locator2Impl13.getPublicId();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl9);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      Locale locale2 = Locale.TAIWAN;
      locale2.getDisplayName(locale0);
      locale1.getUnicodeLocaleKeys();
      locale2.getDisplayVariant(locale1);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.FRANCE;
      locale0.getDisplayVariant();
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale4 = Locale.KOREA;
      locale2.getDisplayVariant(locale4);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      boolean boolean0 = locale1.hasExtensions();
      objectArray0[5] = (Object) locale3;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      boolean boolean1 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(2354, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      boolean boolean0 = linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale locale2 = Locale.TAIWAN;
      locale0.getUnicodeLocaleKeys();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      locale1.stripExtensions();
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = locale1.stripExtensions();
      linkedList2.add((Locale) null);
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      locale1.getDisplayVariant();
      Locale locale4 = Locale.GERMAN;
      locale2.getDisplayVariant(locale4);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.getISOLanguages();
      locale3.getDisplayName();
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale3.hasExtensions();
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean1 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "g8,o0V(}99=<(");
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addXAConnectionFactory((-1), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      Marshaller.enableDebug = true;
      int int0 = 0;
      int int1 = 90;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(32, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 32, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId("org.exolab.castor.xml.Introspector");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl0);
      locator2Impl2.setSystemId("");
      locator2Impl3.getLineNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      defaultHandler2_0.setDocumentLocator(locator2Impl2);
      locator2Impl2.setLineNumber(0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl2.setSystemId("org.exolab.castor.xml.Introspector");
      locator2Impl4.setSystemId("bSJvFOfE.X`DWJV");
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      locator2Impl7.getEncoding();
      locator2Impl7.getXMLVersion();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl3);
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl8);
      defaultHandler2_1.setDocumentLocator(locator2Impl10);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(353, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 353, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateQueueConnectionFactory();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.addAll((Collection<? extends Locale>) linkedList0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) null, locale_FilteringMode0);
      Locale locale0 = Locale.JAPANESE;
      Locale locale1 = Locale.ROOT;
      Locale locale2 = Locale.PRC;
      locale2.getUnicodeLocaleKeys();
      Locale locale3 = Locale.JAPANESE;
      linkedList0.add(locale2);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null, locale_FilteringMode0);
      Locale locale4 = Locale.SIMPLIFIED_CHINESE;
      locale4.getDisplayVariant();
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale locale5 = Locale.GERMAN;
      locale5.hasExtensions();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale2);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      Locale locale6 = Locale.TRADITIONAL_CHINESE;
      Object object0 = new Object();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null, locale_FilteringMode0);
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.ROOT;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.CHINA;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      locale1.getDisplayVariant(locale0);
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList4, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale1;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      Object object0 = new Object();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-23);
      try { 
        connectionFactories0.getTopicConnectionFactory((-23));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      try { 
        connectionFactories0.setXAConnectionFactory((-670), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.removeConnectionFactory(connectionFactory0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("WX.-^8v*/A4|/Mn>~_", "WX.-^8v*/A4|/Mn>~_");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // WX.-^8v*_/A4|/Mn>~_
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(45, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 45, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 22;
      try { 
        connectionFactories0.getTopicConnectionFactory(22);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)31;
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)58;
      byteArray0[5] = (byte)68;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      attributesImpl1.getValue("aK,-a3&xcDW?x$", "fdn!<");
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getSystemId();
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      locator2Impl5.setPublicId("p%}U'oy");
      locator2Impl6.getEncoding();
      locator2Impl6.getPublicId();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl5);
      locator2Impl7.getXMLVersion();
      locator2Impl1.getPublicId();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}t}uKkzR\"z&}");
      connectionFactories0.getXAConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getEncoding();
      locator2Impl0.setSystemId((String) null);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getSystemId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl5.getXMLVersion();
      locator2Impl1.setPublicId((String) null);
      locator2Impl4.getEncoding();
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl5);
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl0);
      locator2Impl9.getSystemId();
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl7);
      locator2Impl10.getLineNumber();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locator2Impl2.getEncoding();
      locator2Impl7.getPublicId();
      locator2Impl6.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl5);
      locator2Impl1.getPublicId();
      locator2Impl11.setSystemId((String) null);
      locator2Impl1.setSystemId((String) null);
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl10);
      locator2Impl14.getEncoding();
      Locator2Impl locator2Impl16 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locator2Impl4.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      locator2Impl2.getLineNumber();
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      assertEquals(0, connectionFactoryArray0.length);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      boolean boolean0 = connectionFactories0.isValid();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale locale2 = Locale.TAIWAN;
      locale0.getUnicodeLocaleKeys();
      locale2.getDisplayVariant(locale1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = locale1.stripExtensions();
      linkedList2.add((Locale) null);
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale4 = Locale.CHINESE;
      locale2.getDisplayVariant(locale4);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale3.hasExtensions();
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      locator2Impl0.getLineNumber();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      List<Locale> list0 = new LinkedList<Locale>();
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.FRENCH;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.KOREAN;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayVariant(locale4);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale4;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.getXAQueueConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl0);
      locatorImpl0.setColumnNumber(1);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      int int0 = locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl3);
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      connectionFactories0.getTopicConnectionFactoryCount();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl3);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl8.getPublicId();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      int int1 = connectionFactories0.getTopicConnectionFactoryCount();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("#&p");
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      try { 
        dataOutputStream0.writeChars("#&p");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("' could not be found.", "E;Qc_xoZgg}0");
      xMLReaderAdapter0.skippedEntity("E;Qc_xoZgg}0");
      xMLReaderAdapter0.skippedEntity("E;Qc_xoZgg}0");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter0.setErrorHandler(defaultHandler2_0);
      xMLReaderAdapter1.setErrorHandler(defaultHandler2_0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler defaultHandler1 = new DefaultHandler();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter4.setErrorHandler(defaultHandler2_0);
      defaultHandler2_0.attributeDecl("' could not be found.", "' could not be found.", "' could not be found.", "' could not be found.", "E;Qc_xoZgg}0");
      xMLReaderAdapter0.setDTDHandler(defaultHandler2_0);
      xMLReaderAdapter4.startPrefixMapping("E;Qc_xoZgg}0", "Dz}3}MkiZw");
      xMLReaderAdapter0.setErrorHandler(defaultHandler0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter3);
      parserAdapter1.setDTDHandler(defaultHandler1);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter1);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      try { 
        connectionFactories0.getConnectionFactory(75);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.FRENCH;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayVariant(locale3);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale3;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.FRENCH;
      locale1.getUnicodeLocaleAttributes();
      linkedList0.removeFirstOccurrence(locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.KOREAN;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayVariant(locale4);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale4;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory((-3));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      parserAdapter0.getEntityResolver();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      xMLReaderAdapter0.setErrorHandler(defaultHandler2_1);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      parserAdapter1.setDTDHandler(defaultHandler0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter1.setDocumentHandler(parserAdapter0);
      xMLReaderAdapter2.setErrorHandler(defaultHandler2_1);
      connectionFactories0.validate();
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.offerFirst(locale0);
      linkedList1.add(locale0);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.CANADA;
      Locale locale2 = Locale.ROOT;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale1.getDisplayVariant();
      locale1.getDisplayVariant(locale0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale1;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(23);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.FRENCH;
      locale1.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.KOREAN;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayVariant(locale4);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale4;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.add((Locale) null);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      Locale locale2 = Locale.TAIWAN;
      locale0.getUnicodeLocaleKeys();
      locale2.getDisplayVariant(locale1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale2);
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale2);
      Locale.Category locale_Category2 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category2, locale1);
      Locale locale3 = Locale.FRANCE;
      linkedList1.offer(locale2);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList1, (Locale.FilteringMode) null);
      locale1.hasExtensions();
      Locale.setDefault(locale_Category2, locale2);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      try { 
        connectionFactories0.marshal((ContentHandler) xMLReaderAdapter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-22);
      try { 
        connectionFactories0.getXATopicConnectionFactory((-22));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 11;
      try { 
        connectionFactories0.getXATopicConnectionFactory(11);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.getISOLanguages();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList1.add(locale0);
      linkedList1.addAll((Collection<? extends Locale>) linkedList2);
      locale0.getScript();
      linkedList2.retainAll(linkedList0);
      Locale locale1 = Locale.JAPANESE;
      Locale locale2 = Locale.ROOT;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale locale3 = Locale.JAPANESE;
      locale0.getDisplayVariant();
      linkedList2.add(locale1);
      Object[] objectArray0 = new Object[9];
      locale1.getDisplayVariant();
      locale1.getDisplayVariant(locale0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      linkedList1.offer(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale1.hasExtensions();
      objectArray0[5] = (Object) locale1;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOLanguages();
      Locale.getISOLanguages();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding("");
      locator2Impl0.getPublicId();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.setQueueConnectionFactory((-3419), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.endDocument();
      char[] charArray0 = new char[9];
      charArray0[2] = '\u0000';
      charArray0[2] = '\u0000';
      charArray0[5] = '\u0000';
      charArray0[6] = 'p';
      charArray0[7] = 'p';
      charArray0[8] = '\u0000';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 1750, 1750);
      xMLReaderAdapter0.startPrefixMapping(";UUS# _:F3W`4A>", ";UUS# _:F3W`4A>");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getEntityResolver();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      parserAdapter0.characters(charArray0, 'p', 'p');
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      xMLReaderAdapter2.skippedEntity(";UUS# _:F3W`4A>");
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter6.characters(charArray0, '\u0000', '\u0000');
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter6);
      parserAdapter1.startDocument();
      xMLReaderAdapter6.characters(charArray0, '\u0000', 60);
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      xMLReaderAdapter6.startPrefixMapping(";UUS# _:F3W`4A>", "");
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter8);
      parserAdapter2.characters(charArray0, '\u0000', (-556));
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(1750, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getEncoding();
      locator2Impl0.setSystemId((String) null);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getSystemId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl3.getEncoding();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl5.getXMLVersion();
      locator2Impl3.getSystemId();
      locator2Impl1.setPublicId((String) null);
      locator2Impl4.getEncoding();
      locator2Impl5.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl9);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl0);
      locator2Impl10.getSystemId();
      Locator2Impl locator2Impl12 = new Locator2Impl(locator2Impl7);
      locator2Impl11.getLineNumber();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      locator2Impl2.getEncoding();
      locator2Impl7.getPublicId();
      locator2Impl6.getLineNumber();
      Locator2Impl locator2Impl14 = new Locator2Impl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl5);
      locator2Impl9.getPublicId();
      locator2Impl12.setSystemId((String) null);
      locator2Impl1.setSystemId((String) null);
      Locator2Impl locator2Impl16 = new Locator2Impl(locator2Impl11);
      locator2Impl15.getEncoding();
      Locator2Impl locator2Impl17 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLReaderAdapter1.endDocument();
      char[] charArray0 = new char[9];
      charArray0[2] = '\u0000';
      charArray0[3] = 'f';
      charArray0[0] = 'f';
      charArray0[4] = 'f';
      charArray0[7] = 'f';
      charArray0[8] = '\u0000';
      xMLReaderAdapter0.ignorableWhitespace(charArray0, 1750, 1750);
      xMLReaderAdapter0.startPrefixMapping(";UUS# _:F3W`4A>", ";UUS# _:F3W`4A>");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      xMLReaderAdapter6.characters(charArray0, 1383, 116);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter6);
      xMLReaderAdapter6.characters(charArray0, 153, 153);
      parserAdapter1.startDocument();
      xMLReaderAdapter6.characters(charArray0, 116, '\u0000');
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      xMLReaderAdapter6.ignorableWhitespace(charArray0, (-1), 111);
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter8);
      parserAdapter2.characters(charArray0, 1383, (-565));
      XMLReaderAdapter xMLReaderAdapter9 = new XMLReaderAdapter(parserAdapter1);
      connectionFactories0.validate();
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }
}
