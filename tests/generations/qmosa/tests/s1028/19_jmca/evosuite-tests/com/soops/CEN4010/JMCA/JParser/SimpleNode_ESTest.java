/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 00:44:13 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5768731582333273
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier("HcCf%z9hZf2O&{l");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.id = 63;
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.setIdentifier("");
      SimpleNode simpleNode1 = new SimpleNode(10);
      simpleNode1.toString();
      StringWriter stringWriter3 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter4 = stringWriter0.append('m');
      simpleNode0.setIdentifier(">=");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      stringWriter1.write("HcCf%z9hZf2O&{l");
      stringWriter0.append((CharSequence) ">=");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter5 = stringWriter1.append((CharSequence) "");
      simpleNode0.dump("bfMyRWLU\"Rl", stringWriter4);
      stringWriter5.write(37);
      SimpleNode simpleNode2 = new SimpleNode(10);
      simpleNode2.dump("<", stringWriter1);
      simpleNode0.dump("{c,}*Fg/DI>_St;QOP>", stringWriter5);
      Node node0 = simpleNode2.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      SimpleNode simpleNode0 = new SimpleNode(73);
      StringWriter stringWriter0 = new StringWriter(814);
      simpleNode0.setIdentifier("<=");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "<=");
      stringWriter1.write(charArray0);
      simpleNode0.dump("(!;1EQd`;DQ", stringWriter1);
      assertEquals("<=<Block>\n  <identifier>*le</identifier>\n</Block>\n", stringWriter1.toString());
      assertEquals("<=<Block>\n  <identifier>*le</identifier>\n</Block>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Integer integer0 = new Integer(10);
      Integer integer1 = new Integer(33);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.flush();
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier("Literal");
      stringWriter1.write(33);
      stringWriter1.append('9');
      stringWriter0.append((CharSequence) "Literal");
      StringWriter stringWriter2 = stringWriter0.append('i');
      stringWriter2.write((-502));
      stringWriter0.write("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      stringWriter2.write(charArray0);
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) ">");
      stringWriter3.append('9');
      simpleNode0.dump((String) null, stringWriter2);
      assertEquals("Literali\uFE0Ai>9<ClassOrInterfaceBody>\n  <identifier>*gt</identifier>\n  <identifier>Literal</identifier>\n</ClassOrInterfaceBody>\n", stringWriter2.toString());
      assertEquals("Literali\uFE0Ai>9<ClassOrInterfaceBody>\n  <identifier>*gt</identifier>\n  <identifier>Literal</identifier>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<<");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "07Fb");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.setIdentifier("<<");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      stringWriter0.write(";Jj7:dE{S]}>]=H][?");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals(";Jj7:dE{S]}>]=H][?<EnumConstant>\n  <identifier>*lshft</identifier>\n</EnumConstant>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(";");
      char[] charArray0 = new char[8];
      charArray0[1] = 'R';
      charArray0[2] = 'g';
      charArray0[3] = ' ';
      charArray0[4] = 'm';
      charArray0[5] = '%';
      charArray0[7] = '{';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) ";");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) ";");
      simpleNode0.dump("com.soops.CBN4010.JMCA.JParser.TokeMgrError", stringWriter3);
      assertEquals("\u0000Rg m%\u0000{;;<ClassOrInterfaceBody>\n</ClassOrInterfaceBody>\n", stringWriter3.toString());
      assertEquals("\u0000Rg m%\u0000{;;<ClassOrInterfaceBody>\n</ClassOrInterfaceBody>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.310322637655681
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.dump("", (Writer) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit0]nx{SX#TnH%2'{%K{>Uv");
      simpleNode0.jjtAddChild(simpleNode0, 0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      stringWriter0.append((CharSequence) "]nx{SX#TnH%2'{%K{>Uv", 0, 0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      simpleNode0.toString();
      SystemInUtil.addInputLine((String) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.jjtGetChild((byte)0);
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.toString("]nx{SX#TnH%2'{%K{>Uv");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("*lshft");
      SimpleNode simpleNode2 = (SimpleNode)simpleNode1.jjtGetParent();
      simpleNode1.jjtAddChild(simpleNode2, 0);
      int int1 = 435;
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 32);
      SimpleNode simpleNode1 = new SimpleNode(4764);
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertSame(node0, simpleNode1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7646308653001805
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1782);
      StringWriter stringWriter0 = new StringWriter(1782);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "XY,*R[8");
      simpleNode0.dump("XY,*R[8", stringWriter1);
      simpleNode0.jjtAddChild((Node) null, 1782);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetChild(1782);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1783);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1783
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7166528014280371
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(5);
      simpleNode0.toString();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      SimpleNode simpleNode1 = new SimpleNode(5);
      simpleNode0.id = (-38604602);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode2 = new SimpleNode(5);
      simpleNode1.jjtAddChild(simpleNode0, 5);
      simpleNode2.parent = (Node) simpleNode0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "20(?");
      MockFile.createTempFile("ClassOrInterfaceDeclaration", "20(?");
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode2.setIdentifier(">=");
      simpleNode1.setIdentifier("20(?");
      simpleNode2.dump("ClassOrInterfaceDeclaration", stringWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode1.jjtGetChild(5);
      simpleNode1.toString("i(KeW)?;T");
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "Fb";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Fb");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R&D#-W*NK");
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier(">=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8221949319455968
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("!S8");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier(".dd,zqsN`Mpr`37H");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s'.b$z+");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      stringWriter0.write("9XRo!WutIW");
      simpleNode0.dump("QzIEQ/{E|V;n-", stringWriter0);
      assertEquals("9XRo!WutIW<InstanceOfExpression>\n  <identifier>!S8</identifier>\n  <identifier>.dd,zqsN`Mpr`37H</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8437745248738278
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      Integer integer0 = new Integer(10);
      Integer integer1 = new Integer(14);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      Node[] nodeArray0 = new Node[3];
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      stringWriter0.flush();
      char[] charArray0 = new char[3];
      charArray0[0] = 'p';
      charArray0[1] = '}';
      charArray0[2] = 'z';
      stringWriter1.write(charArray0);
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter2 = new StringWriter('p');
      simpleNode0.setIdentifier("Literal");
      stringWriter1.write(14);
      stringWriter1.append('9');
      stringWriter0.append((CharSequence) "Literal");
      StringWriter stringWriter3 = stringWriter0.append('i');
      stringWriter3.write((-502));
      stringWriter0.write("");
      char[] charArray1 = new char[1];
      charArray1[0] = 'i';
      stringWriter3.write(charArray1);
      StringWriter stringWriter4 = stringWriter3.append((CharSequence) "=");
      stringWriter4.append('9');
      String string0 = null;
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter3);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6587731536234707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "20(?");
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling.appendDataToFile(evoSuiteFile1, (byte[]) null);
      int int0 = 37;
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(37);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      MockFile.createTempFile("CompilationUnit", "20(?");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "r{1VD<AOT O?9");
      SimpleNode simpleNode2 = new SimpleNode(52);
      simpleNode2.toString();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "CompilationUnit");
      String string0 = "5J{";
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter1);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Fb");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Fb");
      FileSystemHandling.createFolder(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      simpleNode0.setIdentifier(">>");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      stringWriter0.append((CharSequence) "Fb");
      simpleNode0.dump("9w^3gzv", stringWriter0);
      assertEquals("Fb<InstanceOfExpression>\n  <identifier>*rshft</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("InstanceOfExpression : >>", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-91);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode((-296));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F>]|]@RfyPcG|\"(");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("=");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+L>'+");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      String string0 = "*lshft";
      // Undeclared exception!
      try { 
        simpleNode0.dump("VariableDeclarator", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -296
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8001573041913385
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("\"true\"");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&&");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier("&&");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      stringWriter1.write("<");
      simpleNode0.dump("9", stringWriter1);
      assertEquals("<<VariableDeclaratorId>\n  <identifier>\"true\"</identifier>\n  <identifier>*amp</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1177249077560043
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")s$;#m/8");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling.createFolder(evoSuiteFile0);
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      simpleNode0.setIdentifier("&");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      stringWriter0.append((CharSequence) ")s$;#m/8");
      simpleNode0.dump(" ", stringWriter1);
      assertEquals("<ClassOrInterfaceBody>\n  <identifier>*amp</identifier>\n  <identifier>*amp</identifier>\n</ClassOrInterfaceBody>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceBody : & : &", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.23742646687433
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 17;
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.toString();
      Integer integer0 = new Integer(17);
      StringWriter stringWriter0 = new StringWriter((int) integer0);
      simpleNode0.toString("VariableDeclarator");
      simpleNode0.setIdentifier("1l>XA>OEWYR@WC`o1");
      simpleNode0.setIdentifier("}");
      simpleNode0.dump("}", stringWriter0);
      simpleNode0.toString();
      stringWriter0.append((CharSequence) "VariableDeclarator : 1l>XA>OEWYR@WC`o1 : }");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(17);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5890216965316937
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)46;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-39);
      byteArray0[8] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(86);
      simpleNode0.jjtAddChild((Node) null, (byte)0);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "{7/oMN4>");
      simpleNode0.dump("{7/oMN4>", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, (byte)0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-95528632));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -95528632
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0834763040946214
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R&D#-W*NK");
      SimpleNode simpleNode0 = new SimpleNode(37);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "l");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte) (-14);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      SimpleNode simpleNode1 = new SimpleNode((byte) (-14));
      simpleNode1.setIdentifier("");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling8 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling9 = new FileSystemHandling();
      stringWriter0.write("h&(KcjFagSV=(GFfm:>");
      simpleNode0.dump("NameList", stringWriter0);
      assertEquals("h&(KcjFagSV=(GFfm:>", stringWriter0.toString());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8640040732405438
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      StringWriter stringWriter0 = new StringWriter(17);
      stringWriter0.flush();
      simpleNode0.setIdentifier("<");
      Integer integer0 = new Integer(37);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter3.flush();
      simpleNode0.setIdentifier((String) null);
      simpleNode0.setIdentifier((String) null);
      stringWriter1.write(37);
      StringWriter stringWriter4 = stringWriter2.append('8');
      stringWriter4.close();
      stringWriter4.append((CharSequence) "AssertStatement");
      stringWriter1.write(37);
      char[] charArray0 = new char[4];
      charArray0[0] = 'e';
      charArray0[1] = 'p';
      charArray0[2] = 'e';
      charArray0[3] = 'p';
      stringWriter0.write(charArray0);
      stringWriter3.append((CharSequence) "<");
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"static\"", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0508185251367574
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      char[] charArray0 = new char[1];
      Integer integer0 = new Integer(18);
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.flush();
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.append((CharSequence) ">=");
      stringWriter1.write(">=");
      stringWriter4.flush();
      stringWriter3.close();
      simpleNode0.setIdentifier("~");
      simpleNode0.setIdentifier("<");
      stringWriter4.write(18);
      stringWriter2.append('9');
      StringWriter stringWriter5 = stringWriter1.append((CharSequence) "<");
      stringWriter5.flush();
      stringWriter4.append('O');
      stringWriter5.flush();
      StringWriter stringWriter6 = new StringWriter('O');
      StringWriter stringWriter7 = new StringWriter();
      stringWriter3.write((-1108986554));
      stringWriter1.write("Literal");
      stringWriter2.write(charArray0);
      StringWriter stringWriter8 = new StringWriter();
      stringWriter5.flush();
      StringWriter stringWriter9 = stringWriter2.append('9');
      simpleNode0.dump(">=", stringWriter9);
      assertEquals("9\u00009<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n  <identifier>~</identifier>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter9.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : >= : ~ : <", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1746);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1746
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4169372058999015
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      Integer integer0 = new Integer(17);
      StringWriter stringWriter0 = new StringWriter((int) integer0);
      byte[] byteArray0 = new byte[0];
      SimpleNode simpleNode1 = new SimpleNode((-2013730099));
      simpleNode1.jjtAddChild(simpleNode0, (byte)2);
      simpleNode1.jjtGetNumChildren();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(2629);
      simpleNode1.jjtAddChild(simpleNode0, 17);
      simpleNode1.jjtGetNumChildren();
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2381744996028692
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Fb");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Fb");
      simpleNode0.toString();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/tmp/CompilationUnit01nx{SX#%2'{%K{>Uv");
      FileSystemHandling.createFolder(evoSuiteFile1);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      simpleNode0.setIdentifier("");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringWriter0.write("9w^3gzv");
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      stringWriter0.append((CharSequence) "Fb");
      simpleNode0.dump("Fb", stringWriter0);
      assertEquals("9w^3gzvFb<InstanceOfExpression>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.16467004250403
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(17);
      simpleNode0.toString();
      Integer integer0 = new Integer(17);
      StringWriter stringWriter0 = new StringWriter((int) integer0);
      simpleNode0.toString("VariableDeclarator");
      simpleNode0.setIdentifier("1l>XA>OEWYR@WC`o1");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("`@`VI", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.append((CharSequence) "tS4");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-968));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -968
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      SimpleNode simpleNode0 = new SimpleNode(78);
      SimpleNode simpleNode1 = new SimpleNode((-1713));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-13));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtOpen();
      String string0 = "";
      Writer writer0 = null;
      simpleNode0.dump("", (Writer) null);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('A');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "");
      char[] charArray0 = new char[7];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[4] = 'A';
      charArray0[5] = 'N';
      charArray0[6] = 'A';
      // Undeclared exception!
      try { 
        stringWriter2.write(charArray0, 0, 10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-18);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      simpleNode0.parser = javaParser0;
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte)45;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)99, (byte) (-61));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream1);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "I");
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.flush();
      stringWriter1.write((-502));
      StringWriter stringWriter2 = stringWriter1.append('p');
      stringWriter2.write((-1179));
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0);
      stringWriter2.append((CharSequence) "AssertStatement");
      SimpleNode simpleNode0 = new SimpleNode((-1179));
      // Undeclared exception!
      try { 
        simpleNode0.toString(">>");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1179
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2213836861256668
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) ">=");
      StringWriter stringWriter2 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      stringWriter2.write(charArray0);
      stringWriter0.append('0');
      StringWriter stringWriter3 = new StringWriter();
      stringWriter3.append((CharSequence) "<");
      stringWriter3.flush();
      StringWriter stringWriter4 = new StringWriter(18);
      stringWriter4.append('O');
      StringWriter stringWriter5 = new StringWriter();
      stringWriter5.flush();
      stringWriter3.append('+');
      StringWriter stringWriter6 = new StringWriter();
      stringWriter3.write((-1108986554));
      stringWriter2.write("<");
      stringWriter6.write(charArray0);
      StringWriter stringWriter7 = new StringWriter();
      stringWriter6.flush();
      StringWriter stringWriter8 = new StringWriter();
      simpleNode0.dump("<", stringWriter1);
      assertEquals(">=0<VariableDeclaratorId>\n  <identifier>*ge</identifier>\n</VariableDeclaratorId>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString("XZ0jB");
      assertEquals("XZ0jBVariableDeclaratorId : >=", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("#X*r&");
      Node node0 = javaParser0.currNode;
      JavaParser javaParser1 = new JavaParser("$v5T?Ru");
      javaParser1.jjtree = null;
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 126);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 126
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.328737376090685
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z%Oc");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.EqualityExpression();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      try { 
        stringReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }
}
