/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 10:13:42 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'j';
      charArray0[2] = '.';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[3] = '4';
      charArray0[4] = 'j';
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I}a=");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I}a=");
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier("I}a=");
      simpleNode0.identifiers = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I}a=");
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1019);
      char[] charArray0 = new char[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = 'j';
      charArray0[2] = '.';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)70;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[2] = '.';
      charArray0[4] = 'j';
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X;+CX[?2CowpilationUnit");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#oPw^");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X;+CX[?2CowpilationUnit");
      simpleNode0.setIdentifier(">=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#oPw^");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#oPw^");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("<NameList>\n  <identifier>*ge</identifier>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("Literal");
      assertEquals("LiteralNameList : >=", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qD2HPJ2h4sO).iFb");
      StringWriter stringWriter0 = new StringWriter(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(18);
      stringWriter0.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I5f\"V=@-u");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I5f\"V=@-u");
      stringWriter0.append((CharSequence) "qD2HPJ2h4sO).iFb");
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier("\"null\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMS}ZT,<3ZyAAYl");
      simpleNode0.dump("volatile", stringWriter0);
      assertEquals("qD2HPJ2h4sO).iFb<VariableDeclaratorId>\n  <identifier>\"null\"</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0805738483648537
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter(3);
      SimpleNode simpleNode0 = new SimpleNode(3);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("K'#T/muz^ec!c[L4m!");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.children = nodeArray0;
      SystemInUtil.addInputLine("|90>");
      simpleNode0.setIdentifier("3");
      simpleNode0.setIdentifier("|90>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Vl@9IuCf.)qLi+y");
      SimpleNode simpleNode1 = new SimpleNode(3);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      simpleNode1.identifiers = arrayList1;
      simpleNode1.setIdentifier("");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "{FormalParameters : =");
      simpleNode1.dump("tZ|c=x[$m!&*", stringWriter0);
      simpleNode1.toString();
      Node node0 = simpleNode0.jjtGetChild(3);
      // Undeclared exception!
      try { 
        node0.jjtGetChild(10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("ELRwAk{w8A");
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("ELRwAk{w8A");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      simpleNode0.setIdentifier("ELRwAk{w8A");
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SystemInUtil.addInputLine("{");
      simpleNode0.setIdentifier("h,2");
      simpleNode0.setIdentifier(";");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%.VlQl>");
      StringWriter stringWriter1 = new StringWriter(3);
      simpleNode0.dump("x9|3_ L", stringWriter1);
      simpleNode0.dump("{", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>ELRwAk{w8A</identifier>\n  <identifier>ELRwAk{w8A</identifier>\n  <identifier>h,2</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5810937501718236
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("z%Ot");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 63);
      simpleNode0.toString("z%Ot");
      simpleNode0.setIdentifier("=");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      bufferedInputStream0.close();
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaCharStream javaCharStream1 = javaParser0.jj_input_stream;
      StringReader stringReader0 = new StringReader("w_;6*<d8{,*;*");
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream1.bufpos = (-1);
      javaCharStream1.ReInit((Reader) stringReader0);
      javaCharStream1.ReInit((InputStream) pipedInputStream0, 86, 76);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0, (-1), (-417), (-1));
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      JavaCharStream javaCharStream3 = javaParser0.jj_input_stream;
      JavaCharStream javaCharStream4 = new JavaCharStream(javaCharStream0.inputStream);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.connect(pipedInputStream1);
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      pipedInputStream2.close();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream4 = new PipedInputStream();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream1);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream2);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("t=", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.745740170586414
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1019);
      char[] charArray0 = new char[9];
      charArray0[1] = 'j';
      charArray0[2] = '.';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)37;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<Pw^");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[3] = '4';
      charArray0[4] = 'j';
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X;+CX[?2CowpilationUnit");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w&gX1v~cgN");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X;+CX[?2CowpilationUnit");
      simpleNode0.setIdentifier(">");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<Pw^");
      simpleNode0.setIdentifier("U@");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "X;+CX[?2CowpilationUnit");
      simpleNode0.dump("X;+CX[?2CowpilationUnit", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*gt</identifier>\n  <identifier>U@</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString(">");
      assertEquals(">VariableDeclaratorId : > : U@", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.7668382315802122
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[7];
      charArray0[1] = 'a';
      charArray0[2] = '.';
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w&gX1v~cgN");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=r}{TVy|=qKg");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?{Y\"W");
      simpleNode0.setIdentifier("<P=]^qnZ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      simpleNode0.setIdentifier(">>");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      simpleNode0.dump("X;+CX[?2CowpilationUnit", stringWriter0);
      assertEquals("<NameList>\n  <identifier><P=]^qnZ</identifier>\n  <identifier>*rshft</identifier>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("6kk4!6RhtE");
      assertEquals("6kk4!6RhtENameList : <P=]^qnZ : >>", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter(3);
      SimpleNode simpleNode0 = new SimpleNode(3);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("K'#T/muz^ec!c[L4m!");
      simpleNode0.identifiers = null;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      StringWriter stringWriter1 = new StringWriter(3);
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      linkedList0.clone();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      simpleNode0.setIdentifier("*l");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream1.flush();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      simpleNode0.setIdentifier("<=");
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream1);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("*l", stringWriter1);
      assertEquals("<NameList>\n  <identifier>*l</identifier>\n  <identifier>*le</identifier>\n</NameList>\n", stringWriter1.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("NameList : *l : <=", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1019);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QIA$4:$v*w");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w&gX1v~cgN");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QIA$4:$v*w");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.setIdentifier("&&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.dump("*lt", stringWriter0);
      assertEquals("<NameList>\n  <identifier>*amp</identifier>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("=>-^");
      assertEquals("=>-^NameList : &&", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8131904766573733
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[7];
      charArray0[1] = 'j';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)56;
      byteArray0[0] = (byte)37;
      byteArray0[3] = (byte)37;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = ':';
      SimpleNode simpleNode0 = new SimpleNode(47);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|qd=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jE6");
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|qd=");
      simpleNode0.dump("|qd=", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("|qd=");
      assertEquals("|qd=InstanceOfExpression : &", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("ERwAk{w8OA");
      StringWriter stringWriter0 = new StringWriter(9);
      simpleNode0.setIdentifier("z");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "z", 0, 0);
      StringWriter stringWriter3 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[1] = '&';
      StringWriter stringWriter4 = new StringWriter('&');
      charArray0[5] = '&';
      charArray0[8] = '&';
      charArray0[7] = '&';
      stringWriter3.write(charArray0);
      stringWriter1.write(charArray0);
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringWriter2.close();
      charBuffer0.put('&');
      StringWriter stringWriter7 = new StringWriter();
      stringWriter6.append('&');
      StringWriter stringWriter8 = new StringWriter(9);
      StringWriter stringWriter9 = new StringWriter(9);
      stringWriter6.write("z");
      stringWriter3.flush();
      StringWriter stringWriter10 = new StringWriter();
      stringWriter5.close();
      stringWriter6.write(charArray0);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter11 = new StringWriter();
      simpleNode0.dump("-C+uK,6hCL<", stringWriter5);
      assertEquals("<CompilationUnit>\n  <identifier>z</identifier>\n</CompilationUnit>\n", stringWriter5.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6060252027357298
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1019);
      char[] charArray0 = new char[7];
      charArray0[1] = 'j';
      stringWriter0.flush();
      charArray0[2] = '.';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = '1';
      charArray0[4] = 'j';
      SimpleNode simpleNode0 = new SimpleNode(18);
      stringWriter0.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9wPy");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w&g81JzcgN");
      simpleNode0.setIdentifier("w&g81JzcgN");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      simpleNode0.setIdentifier("<<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.dump("<P=]^qnZ", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>w&g81JzcgN</identifier>\n  <identifier>*lshft</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : w&g81JzcgN : <<", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3153962874226617
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter0 = new StringWriter(3);
      int int0 = 1;
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.dump("@/\"{[MD ", stringWriter0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.setIdentifier("CompilationUnit");
      stringWriter0.append('G');
      StringWriter stringWriter1 = stringWriter0.append('s');
      StringWriter stringWriter2 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter3 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer("@/\"{[MD ");
      stringWriter0.append((CharSequence) "CompilationUnit", 1, 1);
      stringWriter1.append((CharSequence) "@/\"{[MD ");
      String string0 = "X)\"JuqGO\\";
      // Undeclared exception!
      try { 
        simpleNode0.dump(string0, stringWriter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9371558530657009
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      locale0.toLanguageTag();
      locale0.getDisplayScript((Locale) null);
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.setDefault(locale0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write(95);
      StringWriter stringWriter2 = new StringWriter((byte)37);
      StringWriter stringWriter3 = new StringWriter((byte)37);
      stringWriter1.flush();
      stringWriter2.close();
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0);
      simpleNode0.setIdentifier("{");
      stringWriter0.write(charArray0);
      StringWriter stringWriter4 = new StringWriter();
      simpleNode0.dump("<<", stringWriter0);
      assertEquals("<NameList>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("NameList : {", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.623848004006291
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)36;
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte) (-51);
      byteArray0[6] = (byte) (-40);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<P=]^qnZ");
      SystemInUtil.addInputLine((String) null);
      StringWriter stringWriter0 = new StringWriter(1019);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = 'j';
      charArray0[2] = '.';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = ')';
      charArray0[4] = 'j';
      charArray0[5] = ']';
      charArray0[6] = '$';
      SimpleNode simpleNode0 = new SimpleNode(18);
      stringWriter0.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?4(:H_W/3*{}75L");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?4(:H_W/3*{}75L");
      simpleNode0.setIdentifier("<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?4(:H_W/3*{}75L");
      simpleNode0.dump(")", stringWriter0);
      assertEquals("<VariableDeclaratorId>\n  <identifier>*lt</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("VariableDeclaratorId : <", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1066));
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 214);
      simpleNode0.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1066));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1066
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(255);
      StringWriter stringWriter0 = new StringWriter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      simpleNode0.identifiers = null;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.close();
      StringReader stringReader0 = new StringReader(";");
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      pipedInputStream2.close();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream3 = new PipedInputStream();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream1);
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump(";", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[7];
      charArray0[1] = 'j';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)56;
      byteArray0[0] = (byte)37;
      byteArray0[3] = (byte)37;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = ':';
      SimpleNode simpleNode0 = new SimpleNode(47);
      String string0 = "|qd=";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|qd=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jE6");
      simpleNode0.setIdentifier("&");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<P=]^qnZ");
      simpleNode0.id = (-343);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|qd=");
      // Undeclared exception!
      try { 
        simpleNode0.dump("|qd=", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -343
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6595892270053698
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString();
      Node[] nodeArray0 = new Node[1];
      simpleNode0.toString("CompilationUnit");
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(86);
      stringWriter0.flush();
      simpleNode0.dump("CompilationUnit", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-632));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -632
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3706);
      simpleNode0.identifiers = null;
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.identifiers = null;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.parent = nodeArray0[0];
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(3706);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3706);
      simpleNode0.identifiers = null;
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.identifiers = null;
      nodeArray0[2] = (Node) simpleNode0;
      simpleNode0.parent = nodeArray0[0];
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(3706);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3706
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1106101594));
      Node[] nodeArray0 = new Node[19];
      nodeArray0[0] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      nodeArray0[1] = null;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(nodeArray0[5], 3355);
      // Undeclared exception!
      try { 
        simpleNode0.toString("6A");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106101594
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)19;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(3227);
      simpleNode0.id = 3227;
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(nodeArray0[3], 3227);
      // Undeclared exception!
      try { 
        simpleNode0.toString("K'#T/muz^ec!c[L4m!");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3227
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.5660857389596289
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2209);
      StringWriter stringWriter0 = new StringWriter(1019);
      SimpleNode simpleNode1 = new SimpleNode(18);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      byte[] byteArray0 = new byte[5];
      simpleNode0.identifiers = null;
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[3] = (byte) (-1);
      simpleNode1.children = nodeArray0;
      byteArray0[4] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode1.dump("*lshft", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2209
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2852930241200993
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      simpleNode0.toString();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.toString();
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(86);
      simpleNode0.toString("CompilationUnit");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnitCompilationUnit");
      simpleNode0.dump("Y`gD'/7", stringWriter0);
      assertSame(stringWriter0, stringWriter1);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      byte[] byteArray0 = new byte[0];
      SimpleNode simpleNode0 = new SimpleNode((byte)37);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1);
      simpleNode0.setIdentifier("*l");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"-=\"");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("\"-=\"", stringWriter0);
      assertEquals("<NameList>\n  <identifier>*l</identifier>\n</NameList>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("*l");
      assertEquals("*lNameList : *l", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9943536917623688
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("ERwAk{w8OA");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('&');
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "z", 0, 0);
      StringWriter stringWriter3 = new StringWriter(0);
      char[] charArray0 = new char[9];
      charArray0[1] = 'T';
      StringWriter stringWriter4 = new StringWriter('&');
      charArray0[5] = '&';
      charArray0[8] = 'T';
      charArray0[7] = '&';
      stringWriter0.append('v');
      stringWriter3.write(charArray0);
      stringWriter1.write(charArray0);
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      CharBuffer.wrap(charArray0);
      stringWriter5.close();
      StringWriter stringWriter7 = new StringWriter();
      StringWriter stringWriter8 = new StringWriter();
      StringWriter stringWriter9 = new StringWriter(0);
      stringWriter2.write("-C+uK,6hCL<");
      stringWriter1.flush();
      StringWriter stringWriter10 = new StringWriter();
      stringWriter2.close();
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter11 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      assertEquals("&v\u0000T\u0000\u0000\u0000&\u0000&T-C+uK,6hCL<\u0000T\u0000\u0000\u0000&\u0000&T<CompilationUnit>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8361755455411349
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("se#&");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("ImplementLit");
      JavaParser javaParser1 = new JavaParser(stringReader1);
      javaParser1.EqualityExpression();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      stringReader0.read();
      StringWriter stringWriter0 = new StringWriter(428);
      javaParser1.dump(stringWriter0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser1, 115);
      simpleNode0.dump("ddNNdf.L [2lA_Z| 9", stringWriter0);
      assertEquals("<EqualityExpression><InstanceOfExpression><RelationalExpression><ShiftExpression><AdditiveExpression><MultiplicativeExpression><UnaryExpression><UnaryExpressionNotPlusMinus><PostfixExpression><PrimaryExpression><PrimaryPrefix><Name>\n  <identifier>ImplementLit</identifier>\n</Name>\n</PrimaryPrefix>\n</PrimaryExpression>\n</PostfixExpression>\n</UnaryExpressionNotPlusMinus>\n</UnaryExpression>\n</MultiplicativeExpression>\n</AdditiveExpression>\n</ShiftExpression>\n</RelationalExpression>\n</InstanceOfExpression>\n</EqualityExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.close();
      JavaParser javaParser0 = new JavaParser(bufferedInputStream0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1080430200));
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1080430200));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z%Ot");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.ConditionalAndExpression();
      SimpleNode simpleNode0 = new SimpleNode((-13));
      try { 
        javaParser0.EqualityExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 4.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1106101594));
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      nodeArray0[1] = null;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "iY");
      simpleNode0.children = nodeArray0;
      int int0 = new Integer((-1106101594));
      Node node1 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1106101594));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1106101594
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      simpleNode0.jjtOpen();
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[7];
      charArray0[5] = 'N';
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1719);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)104;
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)99, (byte) (-61));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((byte)99);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(47);
      PipedInputStream pipedInputStream0 = new PipedInputStream(47);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.close();
      pipedInputStream0.close();
      bufferedInputStream0.mark(47);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 1009);
      bufferedInputStream1.mark((-1073741822));
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream1);
      pipedInputStream1.markSupported();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.connect(pipedInputStream2);
      pipedInputStream0.close();
      pipedInputStream1.close();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      pipedOutputStream1.flush();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(pipedInputStream1);
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(pipedInputStream1);
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("2GA[BWbW");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 1009);
      simpleNode0.jjtAddChild(simpleNode1, 47);
      assertEquals(48, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1019);
      char[] charArray0 = new char[7];
      charArray0[1] = 'j';
      charArray0[2] = '.';
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1009);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 1009);
      bufferedInputStream0.markSupported();
      bufferedInputStream1.skip((-3963L));
      bufferedInputStream0.markSupported();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream0, 1019);
      bufferedInputStream2.markSupported();
      StringWriter stringWriter1 = new StringWriter();
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 18, (-176), (-1994754928));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip((-5035L));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      pipedOutputStream0.flush();
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString("ERAk{Kw8");
      StringWriter stringWriter0 = new StringWriter(9);
      simpleNode0.setIdentifier("z");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter(0);
      stringWriter1.write("_z&]#]wYgBu|>Ac");
      char[] charArray0 = new char[18];
      charArray0[17] = '\u001C';
      StringWriter stringWriter4 = new StringWriter();
      stringWriter0.close();
      stringWriter0.write(charArray0);
      stringWriter1.write(charArray0);
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.allocate(9);
      stringWriter0.close();
      charBuffer0.put('c');
      stringWriter0.append('<');
      CharBuffer.allocate(9);
      StringWriter stringWriter7 = new StringWriter();
      StringWriter stringWriter8 = new StringWriter(9);
      stringWriter2.write("z");
      stringWriter4.flush();
      StringWriter stringWriter9 = new StringWriter();
      stringWriter0.close();
      StringWriter stringWriter10 = new StringWriter('\u001C');
      StringWriter stringWriter11 = new StringWriter();
      simpleNode0.dump("pzy,~b/P}YL_Y$(r}s4", stringWriter3);
      assertEquals("<CompilationUnit>\n  <identifier>z</identifier>\n</CompilationUnit>\n", stringWriter3.toString());
      
      String string0 = simpleNode0.toString((String) null);
      assertEquals("nullCompilationUnit : z", string0);
  }
}
