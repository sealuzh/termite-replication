/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 23:51:14 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.SyncFailedException;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("@=3 jHe<b:}e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1614, 1614, 1614);
      StringReader stringReader1 = new StringReader("@=3 jHe<b:}e");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 4, 74, 4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4661237861842333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "sMe#^1|!<b8a";
      MockFile mockFile0 = new MockFile("jd,KS~4nlD}Fxt+", "sMe#^1|!<b8a");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("sMe#^1|!<b8a", "jd,KS~4nlD}Fxt+");
      MockFile mockFile2 = new MockFile("sMe#^1|!<b8a", "jd,KS~4nlD}Fxt+");
      StringReader stringReader0 = new StringReader("L??0+,y:C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.adjustBeginLineColumn(3572, 71);
      stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        mockFile2.setLastModified((-818L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative time
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.362176716867637
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("@=3 jHe<b:}e");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1614, 597, 597);
      StringReader stringReader2 = new StringReader("@=3 jHe<b:}e");
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0, 93, (-897), 4066);
      javaCharStream0.ReInit((Reader) stringReader0, 4066, 93, 1614);
      javaCharStream0.readChar();
      javaCharStream0.ReadByte();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(93, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7707544457992968
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)87, (byte)87);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.available();
      sequenceInputStream0.close();
      byteArrayInputStream0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-8), (byte) (-1), (-1209));
      javaCharStream0.backup((byte)76);
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      javaCharStream0.getBeginLine();
      javaCharStream0.bufpos = (int) (byte)52;
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-342), (-3611));
      int int0 = javaCharStream0.getEndColumn();
      assertEquals((-342), javaCharStream0.getBeginLine());
      assertEquals((-3611), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4059780342090313
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = "Invalid escape character at line ";
      MockFile mockFile0 = new MockFile("jd,KS~4nlD}Fxt+", "Invalid escape character at line ");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("Invalid escape character at line ", "jd,KS~4nlD}Fxt+");
      MockFile mockFile2 = new MockFile("Invalid escape character at line ", "jd,KS~4nlD}Fxt+");
      StringReader stringReader0 = new StringReader("L??0+,y:C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(3572, 71);
      stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        mockFile2.setLastModified((-830L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative time
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.616593929073245
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jF@HQ^#q{");
      StringReader stringReader1 = new StringReader("jF@HQ^#q{");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (-2126), (byte)4);
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream2);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 4096, (-1));
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (-2126), (-1), 0);
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7460733669022432
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-2020), (-522));
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-522), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7866687254045313
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((byte)0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 3359);
      byteArrayInputStream0.mark(4072);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.reset();
      byteArrayInputStream0.read(byteArray0);
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2433), 6, 325);
      javaCharStream0.backup(4064);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.007825674474683
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)34;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 325, 81);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)0;
      byteArrayInputStream0.read(byteArray1);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)34, (-1198), (byte)0);
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.column = (int) (byte)1;
      byteArrayInputStream0.close();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn((-1), 2531);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(0, (-3122));
      assertEquals((-3122), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7148142043008177
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1205), (byte)0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1205), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]cd;X=DW6z;WlJkLD");
      stringReader0.read();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "XZ-g");
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-1), 1965, (byte)12);
      javaCharStream0.backup(1965);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(2131, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qL??0+,y:C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(117);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 117, 1666);
      byteArrayInputStream0.mark((-1));
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read(byteArray0);
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1198), (-1198), (-1));
      javaCharStream0.backup(117);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)34;
      sequenceInputStream0.mark(117);
      byteArray0[4] = (byte)34;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 325, 81);
      byteArrayInputStream0.mark((byte) (-120));
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)1;
      byteArrayInputStream0.reset();
      byteArray1[1] = (byte)0;
      byteArrayInputStream0.read(byteArray1);
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)34, (-1198), (byte)0);
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.4395720605004327
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, (-3808), 2441);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.714814204300817
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(4143, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2161604920603284
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      stringReader0.read(charArray0);
      stringReader0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1173));
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      sequenceInputStream0.read(byteArray0, 0, (int) (byte)16);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f%0Tj:oM>=l9*");
      dataInputStream0.markSupported();
      sequenceInputStream0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 1, (-407), 0);
      javaCharStream0.nextCharBuf = null;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3164250323253432
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      StringReader stringReader0 = new StringReader("-9L'.");
      stringReader0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1352), (byte)0, 1859);
      javaCharStream0.FillBuff();
      javaCharStream0.backup((-709));
      javaCharStream0.available = (int) (byte)0;
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('-');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      String string0 = "jF@HQ^#q{";
      StringReader stringReader0 = new StringReader("jF@HQ^#q{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0817061712405847
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      JavaCharStream.hexval('7');
      MockFile mockFile0 = new MockFile("jd,KS~4nlD}Fxt+", "sMe#^1|!<b8a");
      MockFile.createTempFile("rv]25Tl-9-{d", "|2T", (File) mockFile0);
      mockFile0.setLastModified(1L);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader1 = new StringReader("T5$(t&$C70{ ");
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, (byte)95, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      StringReader stringReader2 = new StringReader("!fOp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 921, 921, 0);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader3 = new StringReader("!fOp");
      StringReader stringReader4 = new StringReader("!fOp");
      stringReader4.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Reader reader0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = (-1931);
      int int1 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1931), (-1));
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.available = 89;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-^yrX#NWZWbilVK");
      StringReader stringReader1 = new StringReader("-^yrX#NWZWbilVK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("7");
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'G';
      charArray0[2] = 'U';
      charArray0[3] = 'i';
      charArray0[4] = '9';
      charArray0[5] = 'w';
      charArray0[6] = 'K';
      charArray0[7] = '6';
      charArray0[8] = 'j';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.limit(1);
      stringReader2.read(charBuffer0);
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JavaCharStream.hexval('a');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JavaCharStream.hexval('A');
      char[] charArray0 = new char[9];
      charArray0[0] = 'N';
      charArray0[2] = 'N';
      charArray0[2] = 'N';
      charArray0[3] = 'A';
      String string0 = "";
      MockFile mockFile0 = new MockFile("");
      mockFile0.setWritable(true);
      mockFile0.setExecutable(true, false);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-^yrX#NWZWbilVK");
      StringReader stringReader1 = new StringReader("-^yrX#NWZWbilVK");
      stringReader1.markSupported();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("7");
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'G';
      charArray0[2] = 'U';
      charArray0[3] = 'i';
      charArray0[4] = '9';
      charArray0[5] = 'w';
      charArray0[6] = 'K';
      charArray0[7] = '6';
      charArray0[8] = 'j';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader2.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2250), (-2250), 1);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[9] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 4);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 1350, (-1254));
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1350, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 68, 6, 0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f%0Tj:oM>=l9*");
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)34;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 325, 81);
      byteArrayInputStream0.read();
      byteArrayInputStream0.close();
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)0;
      byteArrayInputStream0.read(byteArray1);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)34, (-1198), (byte)0);
      javaCharStream0.backup((byte)1);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetSuffix(76);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      String string0 = "\"1C;5G8rcUJ,1";
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte) (-27);
      byteArray0[2] = (byte)53;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char char0 = 'i';
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.5642154773478727
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      MockFile mockFile0 = new MockFile("jd,KS~4nlD}Fxt+", "sMe#^1|!<b8a");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("sMe#^1|!<b8a", "jd,KS~4nlD}Fxt+");
      MockFile mockFile2 = new MockFile("sMe#^1|!<b8a", "jd,KS~4nlD}Fxt+");
      StringReader stringReader0 = new StringReader("L??0+,y:C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(3572, 71);
      stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-25);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      String string0 = "M&";
      File file0 = MockFile.createTempFile("sMe#^1|!<b8a", "M&");
      mockFile1.mkdirs();
      try { 
        MockFile.createTempFile("s`~>U5qL61", "0C", file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = "\"1;5G8cUJ,1";
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char char0 = 'Y';
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.616593929073245
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PfjXTjuXa\"K`3");
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = 4;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader2 = new StringReader("!fOp");
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0, 2306, (-1), (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 10, (byte)0, 10);
      javaCharStream0.backup((-1592));
      javaCharStream0.BeginToken();
      byteArrayInputStream0.skip(1012L);
      byteArrayInputStream0.skip(0L);
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(10, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-48);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[5];
      charArray0[0] = '%';
      charArray0[1] = 'r';
      charArray0[2] = 'e';
      charArray0[3] = 'U';
      charArray0[4] = 'o';
      stringReader0.read(charArray0);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaCharStream.hexval('1');
      MockFile mockFile0 = new MockFile("jd,KS~4nlD}Fxt+", "sMe#^1|!<b8a");
      mockFile0.setReadable(true);
      MockFile.createTempFile("rv]25Tl-9-{d", "|2T", (File) mockFile0);
      MockFile.createTempFile("qL??0+,y:C", "jd,KS~4nlD}Fxt+");
      mockFile0.setLastModified(1L);
      File file0 = MockFile.createTempFile("^PMV7mpO0kh)GzJ", (String) null);
      file0.toURI();
      mockFile0.mkdir();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream.hexval('3');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      String string0 = "";
      MockFile mockFile0 = new MockFile("", "");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(mockFile0, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      char[] charArray0 = new char[1];
      charArray0[0] = 'Q';
      stringReader0.read(charArray0);
      stringReader0.close();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1173));
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.524589535570513
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      JavaCharStream.hexval('C');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("*MM\"Y,U5\"b");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 12, 2159, 2159);
      javaCharStream0.BeginToken();
      stringReader0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      char char0 = 'c';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "\"C;5G8rcUJ,";
      StringReader stringReader0 = new StringReader("\"C;5G8rcUJ,");
      char char0 = 'W';
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      CharBuffer charBuffer0 = CharBuffer.allocate(4085);
      stringReader0.read(charBuffer0);
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!fOp");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = (-1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader1 = new StringReader("!fOp");
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      sequenceInputStream0.mark((-1612));
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      sequenceInputStream0.read(byteArray0, 0, (int) (byte)16);
      StringReader stringReader0 = new StringReader("[Eza");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 0, 0);
      javaCharStream0.backup(534);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader("sX6");
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("!fOp");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)63;
      int int0 = (-4536);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4536), (byte)63);
      byteArrayInputStream0.close();
      int int1 = (-2241);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1458, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3098849832717785
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)87, (byte)87);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.available();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-8), (byte) (-1), (-1209));
      javaCharStream0.backup((byte)76);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn((-39), 83);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.619814540989509
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I1'EM_$#sigYZ");
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-976), (-1504), (-1504));
      javaCharStream0.backup(95);
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1504), (-976), (-249));
      javaCharStream1.GetImage();
      javaCharStream1.getBeginLine();
      javaCharStream0.getBeginColumn();
      assertEquals(4001, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("!fOp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = 1;
      CharBuffer.wrap((CharSequence) "\"1;5G8cUJ,1", 1, 1);
      javaCharStream0.FillBuff();
      javaCharStream0.backup(1);
      javaCharStream0.readChar();
      javaCharStream0.bufpos = (-4879);
      try { 
        MockURI.URI("\"1;5G8cUJ,1", "@", "\"1;5G8cUJ,1", "", "@");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: \"1;5G8cUJ,1://@%7F%221;5G8cUJ,1?#@%7F
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.013627897522345
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader2 = new StringReader("!fOp");
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.738024354245748
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.available();
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(true);
      int int0 = javaCharStream0.getColumn();
      assertEquals(6144, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.537305235574315
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{IBuV4c&h(X7s#j!$");
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 1004, 1004);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1004, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("2i+g 4vPZ`)dJ");
      String string0 = " column ";
      StringReader stringReader3 = new StringReader(" column ");
      StringReader stringReader4 = new StringReader("");
      StringReader stringReader5 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 5, 5);
      javaCharStream0.AdjustBuffSize();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1);
      intArray0[1] = 5;
      intArray0[2] = 70;
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = 5;
      intArray0[6] = 5;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.getBeginLine();
      StringReader stringReader6 = new StringReader(" column ");
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      // Undeclared exception!
      try { 
        MockFile.createTempFile((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7610706167757537
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MockFile mockFile0 = new MockFile("", "sMe#^1|!<b8a");
      mockFile0.setReadable(true);
      MockFile mockFile1 = new MockFile("sMe#^1|!<b8a", "");
      MockFile mockFile2 = new MockFile("sMe#^1|!<b8a", "");
      StringReader stringReader0 = new StringReader("qL??0+,y:C");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(3572, 71);
      stringReader0.ready();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getBeginLine();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-25);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 71, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1), (-1354), 0);
      javaCharStream1.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.tokenBegin = 117;
      javaCharStream0.ExpandBuff(true);
      javaCharStream1.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('\\');
      // Undeclared exception!
      javaCharStream1.adjustBeginLineColumn(15, 3573);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.8381597883911174
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1828, 100);
      StringReader stringReader1 = new StringReader("jd,KS~4nlD}Fxt+");
      StringReader stringReader2 = new StringReader("jd,KS~4nlD}Fxt+");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      javaCharStream0.line = 2048;
      javaCharStream1.AdjustBuffSize();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.getBeginLine();
      StringReader stringReader3 = new StringReader("");
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream3 = new JavaCharStream(sequenceInputStream0, 1674, 100);
      javaCharStream1.maxNextCharInd = 0;
      javaCharStream2.getBeginLine();
      javaCharStream1.getBeginColumn();
      char char0 = javaCharStream2.ReadByte();
      assertEquals('j', char0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream.hexval('2');
      MockFile mockFile0 = new MockFile("", "\"1;5G8cUJ,1");
      File file0 = MockFile.createTempFile("Q/XP@ay;J", "rv]25Tl-9-{d", (File) mockFile0);
      mockFile0.setLastModified(0L);
      MockFile.createTempFile("sMe#^1|!<b8a", "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      mockFile0.mkdir();
      MockFile.createTempFile("^PMV7mpO0kh(GmJ", "^KANj`");
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "xa(B.SP#\u0005Ak{N", file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)75;
      byteArray0[1] = (byte)75;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)60;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)60, (byte)60);
      byteArrayInputStream0.markSupported();
      char[] charArray0 = new char[4];
      charArray0[0] = 'G';
      charArray0[1] = '}';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[2] = 'Y';
      charArray0[2] = 'x';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-^yrX#NWZWbilVK");
      StringReader stringReader1 = new StringReader("-^yrX#NWZWbilVK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("7");
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'G';
      charArray0[2] = 'U';
      charArray0[3] = 'i';
      charArray0[4] = '9';
      charArray0[5] = 'w';
      charArray0[6] = 'K';
      charArray0[7] = '6';
      charArray0[8] = 'j';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader2.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1, 1, 1);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jE+TeO-");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = 'X';
      charArray0[2] = 'X';
      charArray0[3] = 'X';
      charArray0[4] = '0';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.6433919641999526
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-1448), 14);
      StringReader stringReader0 = new StringReader("965a E>*}V$@)IbW0K");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      stringReader0.ready();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('j');
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getBeginColumn();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.ExpandBuff(true);
      assertEquals(2, javaCharStream0.getBeginColumn());
      
      int int1 = javaCharStream1.getBeginColumn();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("\"1;5G8cUJ,1");
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1;5G8cUJ,1");
      stringReader2.read(charArray0);
      StringReader stringReader3 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader4 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader5 = new StringReader("");
      stringReader3.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.inBuf = 6;
      javaCharStream0.adjustBeginLineColumn(0, 6);
      assertEquals(12, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.7002418469106115
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-107);
      byteArray0[5] = (byte) (-40);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-89);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)14;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)14;
      byteArray1[3] = (byte)14;
      byteArray1[4] = (byte)14;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray1, (byte)14, (byte)14);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0);
      pushbackInputStream0.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      pushbackInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1, (byte)14, (byte)14);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn((byte)0, 4077);
      int int0 = javaCharStream0.getColumn();
      assertEquals(6144, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.8193679899838853
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader0 = new StringReader("1CG8rUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-331), (-2554), 95);
      javaCharStream0.BeginToken();
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(903);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(pipedInputStream0);
      javaCharStream2.GetImage();
      javaCharStream2.AdjustBuffSize();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0);
      javaCharStream3.Done();
      // Undeclared exception!
      try { 
        javaCharStream3.adjustBeginLineColumn(0, 257);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.04461051760409
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("\"1;5G8cUJ,1");
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1;5G8cUJ,1");
      stringReader2.read(charArray0);
      StringReader stringReader3 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader4 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader5 = new StringReader("");
      stringReader3.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.line = 4051;
      javaCharStream0.adjustBeginLineColumn(4051, 4051);
      javaCharStream0.adjustBeginLineColumn(0, 6);
      assertEquals(6, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.8154852073825094
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1C;5G8rcUJ,1");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader2 = new StringReader("V{P$8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 13, 11, 0);
      javaCharStream0.ReInit((Reader) stringReader2, (-4842), (-4842), 0);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
      
      MockFile mockFile0 = new MockFile("V{P$8", "");
      int int1 = JavaCharStream.hexval('F');
      assertEquals(15, int1);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.close();
      StringReader stringReader2 = new StringReader("!fOp");
      StringReader stringReader3 = new StringReader("\"1;5G8cUJ,1");
      stringReader3.close();
      StringReader stringReader4 = new StringReader("_Y6N/");
      stringReader4.read(charArray0);
      StringReader stringReader5 = new StringReader("_Y6N/");
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 4);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-^yrX#NWZWbilVK");
      StringReader stringReader1 = new StringReader("-^yrX#NWZWbilVK");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader2 = new StringReader("7");
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[1] = 'G';
      charArray0[2] = 'U';
      charArray0[3] = 'i';
      charArray0[4] = '9';
      charArray0[5] = 'w';
      charArray0[6] = 'K';
      charArray0[7] = '6';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[8] = 'j';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.limit(1);
      stringReader2.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 11, 11, 1);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/+O_T");
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.get(charArray0);
      stringReader1.read(charBuffer0);
      StringReader stringReader2 = new StringReader("2i+g 4vPZ`)dJ");
      StringReader stringReader3 = new StringReader("t_$D*M5<^ew");
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.281116855095691
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, 2, 102);
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      stringReader0.read();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.Done();
      javaCharStream0.adjustBeginLineColumn((-1), (byte) (-1));
      // Undeclared exception!
      try { 
        javaCharStream1.UpdateLineColumn('\'');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I1'EM_$#sYZ");
      StringReader stringReader1 = new StringReader("_IMkYb.8\"zT");
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = '7';
      charArray0[2] = 'e';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("!fOp");
      stringReader2.reset();
      stringReader2.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (int) 'M';
      intArray0[1] = (int) 'e';
      intArray0[2] = (-1115);
      intArray0[3] = (int) '_';
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte)0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = 4;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader2 = new StringReader("!fOp");
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-5), (-5));
      byteArrayInputStream1.mark((-5));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      pushbackInputStream0.markSupported();
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("smW");
      StringReader stringReader2 = new StringReader("F(!@ mN");
      char[] charArray0 = new char[5];
      charArray0[0] = 'a';
      charArray0[1] = 'F';
      charArray0[2] = 'g';
      charArray0[3] = '|';
      charArray0[4] = '7';
      stringReader1.read(charArray0);
      StringReader stringReader3 = new StringReader("smW");
      stringReader0.close();
      stringReader2.read(charArray0);
      StringReader stringReader4 = new StringReader("\"1;5G8cUJ,1");
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("!fOp");
      String string0 = "N?eTm$";
      StringReader stringReader2 = new StringReader("N?eTm$");
      StringReader stringReader3 = new StringReader("sP^00tNo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 92, (-2478), 71);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(92);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader3 = new StringReader("!fOp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.nextCharInd = 4;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      MockFile mockFile0 = new MockFile("jd,KS~4nlD}Fxt+", "sMe#^1|!<b8a");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.6004020212597734
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-5), (-5));
      byteArrayInputStream1.mark((-5));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      pushbackInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.readChar();
      assertEquals(6145, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.3515380002448274
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      CharBuffer charBuffer0 = CharBuffer.allocate(4085);
      stringReader0.read(charBuffer0);
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!fOp");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (byte)0, (-3063), (byte)0);
      StringReader stringReader2 = new StringReader("!fOp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"1;5G8cUJ,1");
      javaCharStream0.ReInit((Reader) stringReader1, 4, (-363), (int) (byte)0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.703969712707443
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(4143, 0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u0004', char0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)16;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1, (-3808), 2441);
      javaCharStream0.BeginToken();
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("\u0010", string0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      char char0 = '_';
      char char1 = 'P';
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1C;5G8rcUJ,1");
      StringReader stringReader2 = new StringReader("\"1C;5G8rcUJ,1");
      stringReader2.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      charBuffer0.append((CharSequence) "\"1;5G8cUJ,1", 1, 1);
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.close();
      charBuffer0.duplicate();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = 1;
      CharBuffer.wrap((CharSequence) "\"1;5G8cUJ,1", 1, 1);
      javaCharStream0.FillBuff();
      javaCharStream0.backup(1);
      javaCharStream0.ReadByte();
      try { 
        MockURI.URI("\"1;5G8cUJ,1", "!fOp", "\"1;5G8cUJ,1", "", "!fOp");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: \"1;5G8cUJ,1://!fOp%221;5G8cUJ,1?#!fOp
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7148142043008177
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      byteArrayInputStream1.read();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream1);
      pushbackInputStream1.markSupported();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(3360, int0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, (byte)1, 9);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.230975306875143
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I1'EM_$#sYZ");
      StringReader stringReader1 = new StringReader("_IMkYb.8\"zT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 100, 1350, 117);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = ".";
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byte byte0 = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2618, 65);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-1), (-1));
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'T';
      charArray0[3] = 't';
      charArray0[4] = '<';
      charArray0[5] = '+';
      charArray0[6] = '3';
      charArray0[7] = '\\';
      charArray0[8] = ';';
      javaCharStream0.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.471346413410988
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)87, (byte)87);
      byteArrayInputStream0.close();
      byteArrayInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.available();
      byteArrayInputStream0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-8), (byte) (-1), (-1209));
      javaCharStream0.backup((byte)76);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-8), (-4023), (-4023));
      javaCharStream0.backup((byte)52);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jF@HQ^#q{");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = 675;
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jF@HQ^#q{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 675;
      javaCharStream0.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.1049474142929459
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 2, 9);
      javaCharStream0.FillBuff();
      javaCharStream0.ReInit((Reader) stringReader0);
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.184317985207887
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4), 0);
      javaCharStream0.readChar();
      javaCharStream0.getLine();
      javaCharStream0.maxNextCharInd = (-4);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char char0 = 'X';
      char char1 = 'L';
      char[] charArray0 = new char[9];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 83, 15, 90);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-120);
      byteArray0[2] = (byte)34;
      sequenceInputStream0.mark(117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-85), 1973);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char char0 = '\\';
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.1797413261689855
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("T42\"");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader(".");
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      stringReader0.read(charArray0);
      stringReader3.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.7441546224449818
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2570), 0);
      StringReader stringReader0 = new StringReader("]cd;X=DW6z;WlJkLD");
      javaCharStream0.ReInit((Reader) stringReader0, 4428, 3009);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), (-1));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 0, (byte) (-1), (byte) (-1));
      javaCharStream1.backup(83);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('d', char0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.7148142043008177
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 14, (byte)0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 4096, 14);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetSuffix((byte)0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 102, 345, 0);
      javaCharStream0.GetSuffix(0);
      StringReader stringReader2 = new StringReader("");
      assertFalse(stringReader2.equals((Object)stringReader0));
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.8908198977944366
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader(".");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 0, 0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 3360, 4143);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (int) (byte)4, (int) (byte)4);
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.1699128464012258
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4, 435);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2886), 4);
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 4, 4);
      javaCharStream1.getBeginLine();
      javaCharStream1.maxNextCharInd = 4062;
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-1), 89);
      javaCharStream2.GetImage();
      int int0 = javaCharStream2.getBeginLine();
      javaCharStream2.getBeginColumn();
      int int1 = JavaCharStream.hexval('0');
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = 1592;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1592, 3307);
      byteArrayInputStream0.read();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1592, (-1523));
      javaCharStream0.Done();
      byteArrayInputStream0.read();
      byteArrayInputStream0.skip(2980L);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-55);
      byteArray0[2] = (byte) (-1);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (byte)117, 1604, 4053);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("|JX!+rdK50{XVQ<~");
      StringReader stringReader4 = new StringReader("]1}r3Arh");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 5276, 5276, 91);
      javaCharStream0.ReInit((Reader) stringReader4, (-3291), (-165), 101);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.5418029866987526
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-2570), 0);
      StringReader stringReader0 = new StringReader("]cd;X=DW6z;WlJkLD");
      javaCharStream0.ReInit((Reader) stringReader0, 4428, 2997);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      sequenceInputStream0.read(byteArray0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 0, 0, (-1));
      javaCharStream0.Done();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("\"1C;5G8rcUJ,1");
      StringReader stringReader2 = new StringReader("\"1C;5G8rcUJ,1");
      char[] charArray0 = new char[3];
      charArray0[0] = 'd';
      charArray0[1] = 'O';
      charArray0[2] = 'd';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 89);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      sequenceInputStream0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!fOp");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufsize = 6;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader1 = new StringReader("!fOp");
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      stringReader0.close();
      javaCharStream0.Done();
      File file0 = MockFile.createTempFile("\u0000\u0000\u0000\u0000\u0000\u0000", (String) null);
      file0.mkdirs();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", (String) null, file0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("2i+g 4vPZ`)dJ");
      StringReader stringReader3 = new StringReader("2i+g 4vPZ`)dJ");
      StringReader stringReader4 = new StringReader("");
      StringReader stringReader5 = new StringReader(" ]#U!(/");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader5, 0, 1614, 4069);
      javaCharStream0.ReInit((Reader) stringReader2, 0, (-2905));
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, 4066, (-3291), (-165));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-^yrX#NWZWbilVK");
      StringReader stringReader1 = new StringReader("-^yrX#NWZWbilVK");
      StringReader stringReader2 = new StringReader("7");
      StringReader stringReader3 = new StringReader("bolB{^A7st8Xa");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 92, 71, 92);
      javaCharStream0.GetSuffix(1);
      File file0 = null;
      String string0 = "P+s'H8?";
      String string1 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((File) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFile", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      StringReader stringReader1 = new StringReader("!fOp");
      char[] charArray0 = new char[6];
      charArray0[0] = 'H';
      charArray0[1] = 'v';
      charArray0[2] = 'L';
      charArray0[3] = ';';
      charArray0[4] = '0';
      charArray0[5] = 'K';
      stringReader1.read(charArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      StringReader stringReader2 = new StringReader("p8%Kg}&gB");
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4, 2462, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream1.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";=xN,NK");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[4];
      charArray0[0] = 'B';
      charArray0[1] = 'w';
      charArray0[2] = 'j';
      charArray0[3] = 'B';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('j');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char char0 = 'X';
      char char1 = 'L';
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".(skJO&Edi_C[UNU?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, 3, 71);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 0, 89);
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-75);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte)99;
      byteArray0[6] = (byte)118;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4194), 1842);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)99, 1539, (byte)5);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)16;
      sequenceInputStream0.read(byteArray0, 0, (int) (byte)16);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f%0Tj:oM>=l9*");
      sequenceInputStream0.skip((-1));
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 1, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)82;
      byteArray0[2] = (byte) (-124);
      byteArray0[3] = (byte) (-50);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-19);
      byteArray0[6] = (byte)0;
      sequenceInputStream0.read(byteArray0, (int) (byte)0, (int) (byte) (-19));
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-48);
      byteArray1[3] = (byte)16;
      sequenceInputStream0.read(byteArray1, 0, (int) (byte)16);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      sequenceInputStream0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f%0Tj:oM>=l9*");
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte)0, (-1));
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('x');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-94);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-63);
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('e', char0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "Wu,~Tjz|V00";
      StringReader stringReader0 = new StringReader("Wu,~Tjz|V00");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      stringReader0.close();
      String string1 = "";
      String string2 = null;
      MockFile.createTempFile("Wu,~Tjz|V00", "#");
      try { 
        MockURI.URI("Wu,~Tjz|V00", "q-@Uj~E-9Mpl$u", (String) null, 74, (String) null, "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 2: Wu,~Tjz|V00:?#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I1'EM_$#sYZ");
      StringReader stringReader1 = new StringReader("!fOp");
      StringReader stringReader2 = new StringReader("_IMkYb.8\"zT");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader2, 14, 14, (-510));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1C;5G8rcUJ,1");
      StringReader stringReader1 = new StringReader("hoW)]");
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2618, (-1839), (-1839));
      javaCharStream0.line = (-1839);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-94);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-63);
      byteArray0[7] = (byte)1;
      byteArray0[3] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream1, (int) (byte)0, 1, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte) (-94);
      byteArray0[5] = (byte)0;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)6;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      sequenceInputStream1.read(byteArray0, (int) (byte)6, (int) (byte)6);
      sequenceInputStream1.read();
      javaCharStream0.ReInit((InputStream) sequenceInputStream1, (int) (byte)0, 1, (int) (byte)0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/+O_T");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("2i+g 4vPZ`)dJ");
      StringReader stringReader3 = new StringReader("t_$D*M5<^ew");
      StringReader stringReader4 = new StringReader("");
      StringReader stringReader5 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 1, 1614);
      StringReader stringReader6 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader6, 4066, 1614, (-165));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jd,KS~4nlD}Fxt+");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1541, 5896);
      javaCharStream1.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"1;5G8cUJ,1");
      char[] charArray0 = new char[6];
      StringReader stringReader1 = new StringReader("!fOp");
      stringReader1.read(charArray0);
      stringReader1.close();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[19] = (byte)0;
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      StringReader stringReader2 = new StringReader("\"1;5G8cUJ,1");
      StringReader stringReader3 = new StringReader("!fOp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 615, 4052, 74);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
