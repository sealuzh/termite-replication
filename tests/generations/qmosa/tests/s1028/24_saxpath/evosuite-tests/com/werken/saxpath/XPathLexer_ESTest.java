/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 22:39:00 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5984608096599797
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer1.and();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer("T*Jl");
      xPathLexer6.setXPath(":@L}jCjmR3B%$IO");
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer8 = new XPathLexer("Gd<!D9zLNVMTg<");
      xPathLexer6.setXPath("+a~O3TV6 Cg%[ ^E8;D");
      xPathLexer5.rightParen();
      XPathLexer xPathLexer9 = new XPathLexer("Gd<!D9zLNVMTg<");
      xPathLexer0.operatorName();
      xPathLexer6.colon();
      xPathLexer9.notEquals();
      xPathLexer8.nextToken();
      xPathLexer9.div();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7357386110218735
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer(":@L}jCjmR3B%$IO");
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("+]+F7cXCz");
      xPathLexer3.relationalOperator();
      xPathLexer3.or();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      int int0 = xPathLexer3.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-1452));
      xPathLexer0.leftParen();
      int int0 = 94;
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7972713930319526
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token0 = xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.setXPath("|NAoHXVK{%A");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.comma();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.consume((-1812));
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2181624098739197
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer1.and();
      Token token3 = xPathLexer1.equals();
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer0.setPreviousToken(token3);
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      
      xPathLexer1.dots();
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals(">", token7.getTokenText());
      
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      XPathLexer xPathLexer3 = new XPathLexer("cqN$cI=2");
      Token token10 = xPathLexer2.colon();
      assertEquals("o", token10.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer2.equals();
      assertEquals("o", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token12 = xPathLexer4.literal();
      assertNull(token12);
      
      Token token13 = xPathLexer2.rightBracket();
      assertEquals(4, token13.getTokenType());
      assertEquals("`", token13.getTokenText());
      
      Token token14 = xPathLexer3.slashes();
      assertEquals("c", token14.getTokenText());
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer1.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5785112811113662
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer(":F7S1V");
      xPathLexer1.not();
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer1.or();
      xPathLexer1.or();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      xPathLexer3.doubleColon();
      xPathLexer4.notEquals();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer2.div();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.329213344056216
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.star();
      xPathLexer0.leftBracket();
      xPathLexer1.colon();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.minus();
      XPathLexer xPathLexer4 = new XPathLexer("`<b}-qO");
      xPathLexer4.comma();
      xPathLexer3.consume((-2089));
      // Undeclared exception!
      try { 
        xPathLexer3.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.744309953330037
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("1AgHF_P<ud");
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer("1AgHF_P<ud");
      xPathLexer3.relationalOperator();
      xPathLexer2.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer3.slashes();
      assertEquals("1", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer("QW\"<oXI(sNSIE");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.dots();
      Token token2 = xPathLexer2.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      xPathLexer6.dots();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token3 = xPathLexer4.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token4 = xPathLexer4.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer8.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer6.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.213256953175996
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.notEquals();
      xPathLexer1.div();
      xPathLexer1.not();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("m", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      String string0 = token1.toString();
      assertEquals("[ (22) (co)", string0);
      
      xPathLexer2.literal();
      xPathLexer0.and();
      Token token5 = xPathLexer1.equals();
      assertEquals("w", token5.getTokenText());
      
      xPathLexer1.minus();
      Token token6 = xPathLexer0.slashes();
      assertEquals(".", token6.getTokenText());
      
      xPathLexer0.setPreviousToken(token1);
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("werken.saxpath.XPathLexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.literal();
      Token token13 = xPathLexer2.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer4.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8214942733480108
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")o7wLj~N[^w!26|@");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      xPathLexer1.colon();
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2654676998024925
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.div();
      Token token0 = xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.setXPath("N:X-kh[AiY/0-?>");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer(",|HWjM1`9?");
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer(",|HWjM1`9?");
      xPathLexer0.comma();
      xPathLexer2.dollar();
      xPathLexer0.literal();
      xPathLexer2.and();
      xPathLexer2.comma();
      xPathLexer0.minus();
      xPathLexer0.slashes();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      xPathLexer2.dots();
      xPathLexer0.literal();
      xPathLexer1.star();
      xPathLexer2.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer2.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.878090917193208
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.not();
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.at();
      xPathLexer1.at();
      xPathLexer0.or();
      xPathLexer1.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("7w?s;)]+r:`{6/[^PI");
      xPathLexer2.nextToken();
      xPathLexer1.doubleColon();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer4.dots();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.nextToken();
      Token token0 = xPathLexer2.div();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2593528958521873
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")_{q,dK!7/snIx=c");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.setXPath("qaO");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("");
      xPathLexer0.and();
      xPathLexer0.endPosition();
      xPathLexer0.not();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.minus();
      xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.263061299155272
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t&YG}m\"wI4oJN");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("t&YG}m\"wI4oJN");
      xPathLexer0.not();
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer1.div();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("t&YG}m\"wI4oJN");
      xPathLexer1.doubleColon();
      xPathLexer2.not();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer(">=3w0+XkANj,(O2");
      xPathLexer3.nextToken();
      Token token0 = xPathLexer2.div();
      assertNull(token0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.9256818547520393
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RKi|\"^DZ8");
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("RKi|\"^DZ8");
      xPathLexer1.leftBracket();
      xPathLexer1.dots();
      XPathLexer xPathLexer3 = new XPathLexer("VPu1w6^9t");
      xPathLexer1.or();
      xPathLexer3.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("VPu1w6^9t");
      xPathLexer0.div();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer3.whitespace();
      xPathLexer4.notEquals();
      xPathLexer1.notEquals();
      xPathLexer2.and();
      xPathLexer2.rightParen();
      xPathLexer4.dollar();
      xPathLexer1.slashes();
      xPathLexer3.nextToken();
      xPathLexer1.plus();
      xPathLexer4.leftBracket();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4098574135899118
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":@L}jCjmR3B%$IO");
      XPathLexer xPathLexer2 = new XPathLexer(":@L}jCjmR3B%$IO");
      xPathLexer2.nextToken();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token1 = xPathLexer1.minus();
      assertEquals(":", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer2.getPreviousToken();
      assertEquals(":", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(16, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("@L", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1159962646229666
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      xPathLexer0.or();
      Token token3 = xPathLexer1.notEquals();
      assertEquals(".w", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token2);
      assertEquals("m", token2.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer0.dots();
      assertEquals("m.", token4.getTokenText());
      assertEquals(14, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer1.star();
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer2.doubleColon();
      assertEquals("co", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("K");
      Token token11 = xPathLexer3.comma();
      assertEquals("K", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3649984147827454
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer1.or();
      xPathLexer1.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("h^k!J]V:nbJX");
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.slashes();
      XPathLexer xPathLexer4 = new XPathLexer("Zw2nmT~'bv|!*H,}G");
      xPathLexer4.doubleColon();
      xPathLexer1.notEquals();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer4.div();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3594931763347793
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oo`lEPo>]Y!f|[0dY");
      Token token0 = xPathLexer0.not();
      assertEquals("o", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("`", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("l", token3.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      Token token4 = xPathLexer0.pipe();
      assertEquals("E", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(3, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("P", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      Token token7 = xPathLexer1.nextToken();
      assertEquals("#5sX){xb", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals("o", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9734468001907153
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com!werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com!werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.not();
      xPathLexer1.leftBracket();
      xPathLexer1.literal();
      Token token1 = xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer1.at();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("}_=");
      xPathLexer2.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      xPathLexer0.nextToken();
      xPathLexer2.dollar();
      Token token2 = xPathLexer1.leftParen();
      assertNotSame(token2, token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.617224216925346
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.colon();
      assertEquals("w", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("r", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Il.g");
      xPathLexer1.or();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("ke", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("h-5@uC +");
      xPathLexer1.div();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Il.g", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer4.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6189085083780077
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer("$CZ#b:J8z2Jp)`");
      xPathLexer0.nextToken();
      xPathLexer3.consume((-2216));
      xPathLexer1.dots();
      // Undeclared exception!
      try { 
        xPathLexer3.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0709746855063482
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.div();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("V2)!6xdn");
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer3.setPreviousToken((Token) null);
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertNotNull(token6);
      
      xPathLexer1.dots();
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer3.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("A\"OW(");
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.literal();
      Token token13 = xPathLexer4.rightBracket();
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9966805256244307
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setXPath("|NAoHXVK{%A");
      xPathLexer0.or();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("|NAoHXVK{%A");
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      Token token6 = xPathLexer1.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.setPreviousToken(token5);
      assertEquals("A", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals("o", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals("H", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      xPathLexer1.and();
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token13 = xPathLexer0.pipe();
      assertEquals(17, token13.getTokenType());
      assertEquals("X", token13.getTokenText());
      
      Token token14 = xPathLexer2.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6909379536068236
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RKi|\"^DZ8");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.div();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("RKi|\"^DZ8");
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("VPu1w6^9t");
      xPathLexer2.or();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("^D", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("VPu1w6^9t");
      xPathLexer0.div();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.doubleColon();
      Token token4 = xPathLexer2.doubleColon();
      assertEquals("Ki", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[v-_");
      Token token5 = xPathLexer6.not();
      assertEquals("[", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer4.equals();
      assertEquals("V", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("P", token7.getTokenText());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9841575901608697
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t&YG}m\"wI4oJN");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("G}m\"wI4oJN", token3.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.0403991180526844
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.not();
      assertEquals("N", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("k", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("[", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(11, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(">", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.slashes();
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6581475228498666
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("$CZ#b:J8z2Jp)`");
      xPathLexer2.or();
      xPathLexer2.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer4.dots();
      XPathLexer xPathLexer5 = new XPathLexer("$CZ#b:J8z2Jp)`");
      xPathLexer3.doubleColon();
      xPathLexer5.nextToken();
      xPathLexer4.dots();
      xPathLexer1.literal();
      xPathLexer3.star();
      xPathLexer2.star();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1920085021677687
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":@L}jCjmR3B%$IO");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.dots();
      xPathLexer2.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer("=NC>@$$OJ3j)T^g");
      Token token1 = xPathLexer4.dots();
      assertEquals("=", token1.getTokenText());
      
      xPathLexer1.nextToken();
      Token token2 = xPathLexer3.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer3.dots();
      Token token4 = xPathLexer4.nextToken();
      assertEquals("NC", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer4.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer4.star();
      assertEquals("@", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer4.doubleColon();
      assertEquals("$$", token8.getTokenText());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("}j", token9.getTokenText());
      
      Token token10 = xPathLexer3.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals("CjmR3B%$IO", token11.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9217917034120764
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.star();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8706273754406042
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("=NC>@$$OJ3j)T^g");
      Token token2 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dots();
      Token token3 = xPathLexer3.nextToken();
      assertEquals(21, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      Token token4 = xPathLexer4.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("VNZwx]}<");
      Token token5 = xPathLexer5.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer5.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer6.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.0123375946917794
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      Token token1 = xPathLexer1.at();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer1.number();
      xPathLexer0.consume();
      Token token3 = xPathLexer1.slashes();
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals(".werken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer1.whitespace();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("w3");
      Token token7 = xPathLexer2.colon();
      assertEquals("w", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.and();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer2.whitespace();
      Token token11 = xPathLexer2.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4827313880010524
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("qybKWEYUa@V'<&A(obZ");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("qybKWEYUa@V'<&A(obZ");
      xPathLexer2.not();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer1.not();
      assertEquals("y", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("qybKWEYUa@V'<&A(obZ");
      Token token5 = xPathLexer4.nextToken();
      assertEquals("qybKWEYUa", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer3.leftParen();
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0806677200945143
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("m", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.literal();
      assertEquals(27, token3.getTokenType());
      assertNotNull(token3);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("m", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(".", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("w", token6.getTokenText());
      
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer0.at();
      assertEquals("k", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("en", token8.getTokenText());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer2.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals("saxpath.XPathLexer", token12.getTokenText());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6960796284535664
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      Token token0 = xPathLexer1.colon();
      assertEquals("m", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(".w", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer2.relationalOperator();
      assertEquals("<", token5.getTokenText());
      assertEquals(7, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals("b", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("}-", token8.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.874998295987786
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":@L}jCjmR3B%$IO");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer(":@L}jCjmR3B%$IO");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer2.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("@", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer2.literal();
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("L", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      char char0 = xPathLexer2.LA(0);
      assertEquals('O', char0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.841326475896776
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0OhB3(~o");
      Token token0 = xPathLexer0.minus();
      assertEquals("0", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("O", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("W _?C7=pr");
      xPathLexer5.div();
      XPathLexer xPathLexer6 = new XPathLexer("W _?C7=pr");
      Token token4 = xPathLexer3.doubleColon();
      assertEquals("m.", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer6.whitespace();
      assertEquals((-2), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer6.notEquals();
      Token token7 = xPathLexer0.notEquals();
      assertEquals("hB", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer6.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals("C7", token8.getTokenText());
      
      xPathLexer7.and();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer8.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer5.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("W", token11.getTokenText());
      
      Token token12 = xPathLexer6.pipe();
      assertEquals("=", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4214329305111297
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("4Q(P[&%c[z#c:>PVX@");
      Token token3 = xPathLexer1.leftBracket();
      assertEquals("4", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Q", token4.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.028474157009166
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer(">w}}AmhzH-");
      xPathLexer1.or();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer("W _?C7=pr");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.notEquals();
      xPathLexer4.not();
      xPathLexer0.relationalOperator();
      xPathLexer3.equals();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.literal();
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer("ffZUBl");
      Token token0 = xPathLexer7.rightBracket();
      Token token1 = xPathLexer5.comma();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0290888065537986
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.minus();
      assertEquals("N", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("X-kh", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("Ai", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("Y/0-?>", token6.getTokenText());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("Y", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3303317672032575
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t.i9|SUXHa9aeAK?9");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      Token token0 = null;
      xPathLexer0.setPreviousToken((Token) null);
      Token token1 = xPathLexer0.plus();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.consume((-4358));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9882736121064848
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer1.at();
      xPathLexer1.slashes();
      xPathLexer0.or();
      xPathLexer1.relationalOperator();
      xPathLexer0.at();
      xPathLexer1.minus();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer2.relationalOperator();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer4.leftBracket();
      xPathLexer4.setXPath("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer("+a~O3TV6 Cg%[ ^E8;D");
      xPathLexer4.setXPath("+a~O3TV6 Cg%[ ^E8;D");
      xPathLexer6.rightParen();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer6.operatorName();
      xPathLexer7.colon();
      xPathLexer1.notEquals();
      xPathLexer6.nextToken();
      xPathLexer3.div();
      Token token0 = xPathLexer4.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.17734629593197
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.or();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.LA(821);
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.or();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.not();
      assertEquals("w", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.endPosition();
      xPathLexer0.whitespace();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.notEquals();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(".s", token8.getTokenText());
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("a", token9.getTokenText());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("xpath.XPathLexer", token10.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.2896816695438735
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("o", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("`lEPo>]Y!f|[0Y", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2008059301487917
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("O", token3.getTokenText());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals("", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals("(", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("tmZ,v");
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer2.star();
      assertEquals("t", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer2.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("mZ", token11.getTokenText());
      
      xPathLexer3.number();
      XPathLexer xPathLexer4 = new XPathLexer("2Ss7E{");
      xPathLexer4.operatorName();
      Token token12 = xPathLexer4.nextToken();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.898680764317303
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RKi|\"^DZ8");
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Ki", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("\"^", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("RKi|\"^DZ8");
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      xPathLexer1.or();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("h-5@uC +");
      xPathLexer2.div();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("8", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals("i", token9.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.796198648183586
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s&cf/| YY*>");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("s&", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("|", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("YY", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("*", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("s&cf/| YY*>");
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.963745919153098
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.literal();
      assertEquals("werken", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("w", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token8 = xPathLexer0.number();
      assertEquals("", token8.getTokenText());
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer1.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("axpath.XPathLexer", token12.getTokenText());
      
      Token token13 = xPathLexer2.colon();
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.getPreviousToken();
      Token token14 = xPathLexer2.nextToken();
      assertEquals((-1), token14.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7185352200683235
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"nCvA&0F");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      xPathLexer1.comma();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.star();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7878404019544345
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.not();
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("'`xA1XV`]!eJ{'");
      xPathLexer3.nextToken();
      xPathLexer2.dots();
      xPathLexer1.literal();
      xPathLexer0.star();
      xPathLexer0.star();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0831354572841287
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.setXPath("K46A{Xe");
      Token token2 = xPathLexer0.dots();
      assertEquals("K", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("46", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("{", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("X", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.isIdentifierChar('w');
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("co", token7.getTokenText());
      
      xPathLexer1.dollar();
      xPathLexer1.nextToken();
      xPathLexer1.and();
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer0.operatorName();
      Token token9 = xPathLexer0.minus();
      assertEquals("m", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8091321032986147
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(">+20qh?Ss!");
      Token token6 = xPathLexer1.dollar();
      assertEquals(">", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("+", token8.getTokenText());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("2", token9.getTokenText());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals("0q", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.8685956447657426
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.dots();
      assertEquals("c", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer("+I)fRaMG#yjcm=tNg");
      xPathLexer2.isIdentifierStartChar('E');
      Token token2 = xPathLexer2.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      xPathLexer2.dollar();
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer1.and();
      Token token3 = xPathLexer2.minus();
      assertEquals(")", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer2.dollar();
      assertEquals("f", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer4.setXPath("*/DV");
      xPathLexer1.isIdentifierStartChar('E');
      Token token5 = xPathLexer3.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("Ra", token6.getTokenText());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("MG", token8.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.256086231811963
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      xPathLexer1.not();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.number();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("O", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("hP4V*Sr:~&");
      xPathLexer0.comma();
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer2.nextToken();
      xPathLexer2.and();
      xPathLexer0.comma();
      Token token5 = xPathLexer2.minus();
      assertEquals("*", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals("(", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("hP4V*Sr:~&");
      Token token9 = xPathLexer3.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer1.number();
      assertEquals(30, token11.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer3.div();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals("Sn", token12.getTokenText());
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer1.comma();
      assertEquals("B", token13.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8876853202424737
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("BW", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("W", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.div();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(",)");
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer0.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals(32, token10.getTokenType());
      assertEquals(",", token10.getTokenText());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8819765376782247
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.setXPath("Z5!9!-~K");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("Z5!9!-~K");
      xPathLexer0.setXPath("Z5!9!-~K");
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      xPathLexer1.rightParen();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer1.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("~(K~R~f']SgtUi");
      XPathLexer xPathLexer3 = new XPathLexer("~(K~R~f']SgtUi");
      xPathLexer0.not();
      xPathLexer0.consume((-1844));
      xPathLexer3.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.914624621510627
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.leftBracket();
      assertEquals("c", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      assertEquals("o", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.slashes();
      assertEquals("w", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m.werken.saxpath.XPathLexer", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("IpT9E\"I.J963!3t0I");
      Token token5 = xPathLexer3.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("I", token5.getTokenText());
      
      xPathLexer2.notEquals();
      xPathLexer1.div();
      XPathLexer xPathLexer4 = new XPathLexer("IpT9E\"I.J963!3t0I");
      Token token6 = xPathLexer4.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("Ip", token6.getTokenText());
      
      Token token7 = xPathLexer3.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("pT9E", token8.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5526750649788439
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      xPathLexer0.not();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token1 = xPathLexer1.notEquals();
      assertEquals("oo", token1.getTokenText());
      
      xPathLexer0.not();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals("]", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7531690095704764
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("t&YG}m\"wI4oJN");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("t", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.minus();
      assertEquals("Y", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("G", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.1543520500494973
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.setXPath(":z2");
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.comma();
      assertEquals("2", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("}%ig]Tc)Pgb!");
      xPathLexer1.hasMoreChars();
      xPathLexer0.and();
      Token token5 = xPathLexer1.minus();
      assertEquals("}", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("}%ig]Tc)Pgb!");
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("}", token6.getTokenText());
      
      Token token7 = xPathLexer2.leftParen();
      assertEquals("%", token7.getTokenText());
      
      xPathLexer0.isIdentifierStartChar('E');
      Token token8 = xPathLexer2.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.consume((-1952));
      xPathLexer0.setXPath("[]Kd4%8[sG?-lA,");
      xPathLexer1.isIdentifierStartChar('E');
      Token token9 = xPathLexer2.doubleColon();
      assertEquals("g]", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("Tc", token12.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.595302191678695
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.operatorName();
      xPathLexer0.notEquals();
      Token token2 = xPathLexer1.not();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("h[", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("EPo", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1118862185478413
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.at();
      Token token0 = xPathLexer0.star();
      xPathLexer0.setXPath("|NAoHXVK{%A");
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("|NAoHXVK{%A");
      xPathLexer0.number();
      xPathLexer1.dollar();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.dots();
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("VK7`yN^>|Pf&Lf^Uk");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer3.nextToken();
      Token token1 = xPathLexer2.div();
      assertNull(token1);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.630146479821027
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("RKi|\"^DZ8");
      xPathLexer0.div();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("R", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.or();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("\"^", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("h-5@uC +");
      xPathLexer2.div();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("DZ8", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8052501052742194
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      Token token0 = xPathLexer1.at();
      xPathLexer1.or();
      xPathLexer1.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.dots();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dots();
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("gr3!>Hr <0Bz34tVA");
      xPathLexer5.nextToken();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.844158537065648
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")o7wLj~N[^w!26|@");
      xPathLexer0.not();
      xPathLexer0.or();
      Token token0 = xPathLexer0.pipe();
      assertEquals("o", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      Token token1 = xPathLexer0.rightBracket();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (4) (j)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("^w", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(23, token7.getTokenType());
      assertEquals("!", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals("2", token8.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.8790443163798058
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(" o;D8T?=:~VbcmN");
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.dots();
      XPathLexer xPathLexer3 = new XPathLexer(" :lO8bpcdP/");
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.slashes();
      xPathLexer4.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer("U/3rK._Q6Y>KLy");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.dots();
      xPathLexer1.nextToken();
      xPathLexer3.dots();
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer("1AgHF_P<ud");
      xPathLexer2.literal();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("f[Q`Nf\"");
      xPathLexer9.star();
      xPathLexer8.doubleColon();
      xPathLexer5.nextToken();
      Token token0 = xPathLexer6.div();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.7636428621527158
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer0.at();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer0.dots();
      assertEquals(14, token4.getTokenType());
      assertEquals("m.", token4.getTokenText());
      
      xPathLexer0.setPreviousToken(token3);
      assertEquals(15, token3.getTokenType());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("we", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4567271642470487
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")o7wLj~N[^w!26|@");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("7", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      Token token4 = xPathLexer1.doubleColon();
      assertEquals("[#", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("5", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("j~", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("N", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.rightBracket();
      assertEquals(4, token8.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6792363924261249
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("N:", token0.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("^s|J8EUUtI+F2");
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("^", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token2 = xPathLexer0.not();
      assertEquals("X", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer2.or();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("-", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals("s", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("kh", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("^s|J8EUUtI+F2");
      XPathLexer xPathLexer4 = new XPathLexer("N:X-kh[AiY/0-?>");
      XPathLexer xPathLexer5 = new XPathLexer("Zw2nmT~'bv|!*H,}G");
      Token token6 = xPathLexer5.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("Zw2nmT", token6.getTokenText());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.1692745096412303
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.setXPath("|NAoHXVK{%A");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("N", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("|NAoHXVK{%A");
      Token token3 = xPathLexer1.comma();
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      xPathLexer1.and();
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("o", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("HXVK", token9.getTokenText());
      
      Token token10 = xPathLexer0.dots();
      assertEquals("{", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("|NAoHXVK{%A");
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer2.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer3.number();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals("%A", token14.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.576322487798623
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("m", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(3, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("#", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.3522996622736936
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer2.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("we", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      Token token7 = xPathLexer3.nextToken();
      assertEquals(2, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.12662205123028
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer1.pipe();
      assertEquals("o", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer1.setPreviousToken(token1);
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.setXPath("!VP");
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("!", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setXPath("=;zOs]_F ");
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("V", token6.getTokenText());
      
      xPathLexer0.rightParen();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer3.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("=;", token8.getTokenText());
      
      xPathLexer3.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      XPathLexer xPathLexer5 = new XPathLexer("hA;1juu^TE");
      Token token9 = xPathLexer3.not();
      assertEquals("]", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      xPathLexer4.consume(831);
      XPathLexer xPathLexer6 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token10 = xPathLexer6.identifier();
      assertEquals("oo", token10.getTokenText());
      
      Token token11 = xPathLexer2.rightParen();
      assertEquals("o", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.1639641691845024
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4Q(P[&%c[z#c:>PVX@");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("4", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.780321915678104
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      xPathLexer1.literal();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      xPathLexer2.nextToken();
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer2.slashes();
      Token token1 = xPathLexer0.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.9001715045309382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.not();
      assertEquals("N", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("k", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("AiY", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("/", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("0", token6.getTokenText());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.notEquals();
      assertEquals("-?", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("%0g#){]3cO7R'R");
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("0-2kH|[ vqBU{{\"Rba(");
      XPathLexer xPathLexer5 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token8 = xPathLexer5.equals();
      assertEquals("N", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4066096008747122
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer0.not();
      assertEquals("m", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals("o", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("`l", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(13, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      Token token5 = xPathLexer1.colon();
      assertEquals("E", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3119518785839772
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("xE3hWO!");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("8>&PiA<tXS`6`&YV3MW");
      Token token1 = xPathLexer2.not();
      assertEquals("8", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer1.or();
      Token token2 = xPathLexer2.relationalOperator();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer2.at();
      assertEquals("&", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.or();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("xE", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("8>&PiA<tXS`6`&YV3MW");
      XPathLexer xPathLexer4 = new XPathLexer("xE3hWO!");
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token6 = xPathLexer6.nextToken();
      assertEquals((-1), token6.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4285902979850564
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(":", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertEquals(27, token3.getTokenType());
      assertEquals("kh[AiY/0", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(">", token5.getTokenText());
      assertEquals(9, token5.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.189460331485414
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.star();
      assertEquals("c", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer1.colon();
      assertEquals("o", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      Token token3 = xPathLexer2.at();
      assertEquals("`", token3.getTokenText());
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("<b", token4.getTokenText());
      
      Token token5 = xPathLexer2.not();
      assertEquals("}", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("r", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals("-", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.6695830314387625
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")o7wLj~N[^w!26|@");
      Token token0 = xPathLexer0.not();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer(")o7wLj~N[^w!26|@");
      Token token3 = xPathLexer1.dots();
      assertEquals(")", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("~N", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer(")o7wLj~N[^w!26|@");
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("o7wLj", token6.getTokenText());
      
      Token token7 = xPathLexer2.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5273568978615106
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer1.at();
      assertEquals("o", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("o`", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("lEPo", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4225301435899096
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer0.notEquals();
      Token token2 = xPathLexer1.not();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("h[", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals("l", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("EPo", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7733370759972855
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      Token token0 = xPathLexer0.dots();
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("(", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("OPO", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      Token token7 = xPathLexer3.nextToken();
      assertEquals("0", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4221604942639035
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(":", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer1.not();
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("-k", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("h", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("-", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("kh", token6.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.2788868750514186
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer1.colon();
      assertEquals("m", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.at();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("w", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals(".w", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("]?X4c@U");
      Token token7 = xPathLexer2.nextToken();
      assertEquals("]", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.4054034009233465
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer(":@L}jCjmR3B%$IO");
      Token token3 = xPathLexer2.dots();
      assertEquals(":", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      xPathLexer2.or();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer(":@L}jCjmR3B%$IO");
      Token token6 = xPathLexer5.nextToken();
      assertEquals(":", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.9749891039981575
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer1.or();
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals(".w", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("H yzoyJy]J2N");
      Token token6 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.literal();
      assertEquals(27, token8.getTokenType());
      assertEquals("rk", token8.getTokenText());
      
      Token token9 = xPathLexer1.dots();
      assertEquals("n.", token9.getTokenText());
      assertEquals(14, token9.getTokenType());
      
      xPathLexer2.star();
      Token token10 = xPathLexer1.star();
      assertEquals("s", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      xPathLexer3.mod();
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("", token11.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.0797793395085162
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.minus();
      assertEquals("(", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("O", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("P", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("O(B}Sn,qg9[Yby`", token3.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.plus();
      assertEquals("B", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token5 = xPathLexer0.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.notEquals();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals(",q", token6.getTokenText());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("g", token7.getTokenText());
      
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.114673140320667
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.setXPath("Z5!9!-~K");
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("Z", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("5!", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("3u2A|gg4-");
      Token token6 = xPathLexer1.doubleColon();
      assertEquals("3u", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("!", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals("A", token10.getTokenText());
      
      Token token11 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.1855580620521824
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(":@L}jCjmR3B%$IO");
      XPathLexer xPathLexer2 = new XPathLexer(":@L}jCjmR3B%$IO");
      Token token0 = xPathLexer2.at();
      assertEquals(":", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer1.or();
      Token token1 = xPathLexer2.notEquals();
      assertEquals("@L", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.dots();
      XPathLexer xPathLexer4 = new XPathLexer("H yzoyJy]J2N");
      Token token3 = xPathLexer4.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
      
      Token token4 = xPathLexer2.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("j", token4.getTokenText());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer4.star();
      assertEquals(" ", token6.getTokenText());
      
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.6640882746040748
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("|^vyAGm");
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("zu~VOo;G\"Sqlz>wa@4*");
      Token token5 = xPathLexer3.dots();
      assertEquals("z", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("zu~VOo;G\"Sqlz>wa@4*");
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer1.nextToken();
      assertEquals(17, token8.getTokenType());
      assertEquals("|", token8.getTokenText());
      
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5704206353717058
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer1.or();
      xPathLexer1.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("R?|NQ#G");
      xPathLexer1.doubleColon();
      xPathLexer1.notEquals();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.791422102375674
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("<P`m0m.");
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("uj|JxPh");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer4.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer5.div();
      // Undeclared exception!
      try { 
        xPathLexer4.LA((-5));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.9331940352003247
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(ZVoy");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("(ZVoy");
      xPathLexer2.div();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("(ZVoy");
      xPathLexer0.equals();
      Token token1 = xPathLexer1.nextToken();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.166693104040788
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.div();
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.setXPath("Z5!9!-~K");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("Z", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Z5!9!-~K");
      xPathLexer1.setXPath("Z5!9!-~K");
      xPathLexer1.nextToken();
      Token token6 = xPathLexer0.comma();
      assertEquals("5", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer1.rightParen();
      Token token7 = xPathLexer1.colon();
      assertEquals("9", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals("!-", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer3.not();
      assertEquals("c", token10.getTokenText());
      
      xPathLexer3.consume(831);
      xPathLexer0.identifier();
      Token token11 = xPathLexer2.rightParen();
      assertEquals(")", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token12 = xPathLexer4.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer2.leftParen();
      assertEquals(1, token15.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.4923466934473737
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer0.or();
      xPathLexer1.notEquals();
      xPathLexer1.div();
      xPathLexer1.dots();
      xPathLexer1.notEquals();
      xPathLexer1.div();
      xPathLexer1.notEquals();
      xPathLexer1.number();
      xPathLexer1.or();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.4719898682302213
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com!werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com!werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("w", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("er", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer2.or();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.6946822540397393
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(":@L}jCjmR3B%$IO");
      XPathLexer xPathLexer2 = new XPathLexer(":@L}jCjmR3B%$IO");
      xPathLexer2.nextToken();
      xPathLexer1.plus();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.mod();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("_");
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("_");
      xPathLexer0.div();
      xPathLexer1.div();
      XPathLexer xPathLexer5 = new XPathLexer(":@L}jCjmR3B%$IO");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.slashes();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer8 = new XPathLexer("_");
      xPathLexer6.notEquals();
      xPathLexer8.nextToken();
      Token token0 = xPathLexer4.div();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.9487809747573646
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("0(OPO(B}Sn,qg9[Yby`");
      Token token0 = xPathLexer1.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("0", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("(O", token2.getTokenText());
      
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer1.at();
      assertEquals("(", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.slashes();
      assertEquals("O", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.dots();
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("B", token6.getTokenText());
      
      Token token7 = xPathLexer3.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token8 = xPathLexer2.literal();
      assertNull(token8);
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer5.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.456754976996061
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token1 = xPathLexer0.not();
      assertEquals("m", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      xPathLexer1.pipe();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer2.minus();
      assertEquals("c", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(".", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      xPathLexer2.operatorName();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("`", token6.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.485363369731595
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer1.colon();
      assertEquals("m", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("m", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("erken.saxpath.XPathLexer", token5.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8684360015560388
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(":", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer0.notEquals();
      Token token2 = xPathLexer1.not();
      assertEquals("o", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals("lE", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("Po>]Y!f|[0Y", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("h", token7.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.03317730414776
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")o7wLj~N[^w!26|@");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-2468));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.8849555177305262
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(":", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("-", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("kh", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("[", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("Ai", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.comma();
      assertEquals("Y", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals("-", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("?>", token8.getTokenText());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.0701756071672386
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("o", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("w", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("e", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("e", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer2.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals((-1), token12.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.169166984618473
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oo`lEPo>]Y!f|[0dY");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("l", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("Po", token5.getTokenText());
      
      Token token6 = xPathLexer0.relationalOperator();
      assertEquals(9, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("]", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.pipe();
      assertEquals("Y", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.846245617508416
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.slashes();
      xPathLexer0.notEquals();
      xPathLexer1.not();
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer1.identifier();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.584630946586582
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      Token token4 = xPathLexer1.star();
      assertEquals("`", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("l", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer3.dollar();
      assertEquals(")", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("o", token9.getTokenText());
      
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      assertNotNull(token10);
      assertEquals("", token10.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9500052237574619
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L}xd");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(">w}}AmhzH-");
      xPathLexer1.or();
      Token token3 = xPathLexer1.notEquals();
      assertEquals(">w", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.not();
      assertEquals("A", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("m", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("hzH-", token8.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6383491772038077
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N:X-kh[AiY/0-?>");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("X", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("k", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.6868144420809683
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.not();
      xPathLexer1.comma();
      xPathLexer1.minus();
      xPathLexer0.rightParen();
      xPathLexer1.isIdentifierChar('|');
      xPathLexer1.and();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer0.comma();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.7432182460595973
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.div();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("V2)!6xdn");
      xPathLexer3.or();
      Token token3 = xPathLexer3.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("V2", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("W _?C7=pr");
      xPathLexer1.div();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer5.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals("W", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.734490630473776
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.endPosition();
      xPathLexer0.or();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.endPosition();
      xPathLexer0.equals();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.setXPath("");
      xPathLexer0.plus();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token11);
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer0.plus();
      assertEquals(5, token12.getTokenType());
      
      xPathLexer0.getXPath();
      Token token13 = xPathLexer0.number();
      assertEquals(30, token13.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.3527647252515136
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer1.not();
      assertEquals("o", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer0.or();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.comma();
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Po", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer1.div();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer1.identifier();
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.0336008826562493
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lPo>]Y!f|[0Y");
      xPathLexer0.not();
      xPathLexer1.or();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer0.hasMoreChars();
      xPathLexer1.and();
      xPathLexer1.comma();
      xPathLexer1.minus();
      xPathLexer1.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("oo`lPo>]Y!f|[0Y");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.1264149377824064
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.dots();
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.slashes();
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertNotNull(token2);
      
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer3.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.0477424974992084
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.not();
      xPathLexer1.at();
      xPathLexer1.slashes();
      xPathLexer0.or();
      xPathLexer1.relationalOperator();
      xPathLexer0.at();
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer("#Z30zG}2a#F>_BWCu");
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.009062971502205
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w&{s~Xs[W>HR. ]C");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.or();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.0425762120873183
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.not();
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer0.not();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
      
      Token token4 = xPathLexer2.relationalOperator();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertEquals("werken", token6.getTokenText());
      assertNotNull(token6);
      assertEquals(27, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.164893988841687
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.equals();
      xPathLexer1.leftBracket();
      xPathLexer1.colon();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      xPathLexer2.at();
      xPathLexer0.notEquals();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      xPathLexer0.relationalOperator();
      xPathLexer3.pipe();
      int int0 = xPathLexer3.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.125666200425961
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("V2)!6xdn");
      xPathLexer1.or();
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("V2", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("W _?C7=pr");
      XPathLexer xPathLexer3 = new XPathLexer("5^WLqy#/RFT<GI'?5!L");
      Token token3 = xPathLexer3.not();
      assertEquals("5", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer1.at();
      assertEquals(")", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.516971126264846
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.Token", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.not();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.2141129831556563
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.2578663137015393
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer0.leftBracket();
      xPathLexer1.colon();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.at();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.leftBracket();
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer2.div();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.31244249568072
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer0.leftBracket();
      xPathLexer1.colon();
      xPathLexer0.not();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      xPathLexer2.at();
      xPathLexer2.doubleColon();
      xPathLexer2.at();
      xPathLexer1.relationalOperator();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      xPathLexer0.plus();
      xPathLexer1.leftBracket();
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.6918444493736653
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oo`lEPo>]Y!f|[0dY");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-1717));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.463004200779802
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.minus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.minus();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('');
      assertTrue(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.9019592805275725
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.LA(47);
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.7134624230573186
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      xPathLexer1.pipe();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer2.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      xPathLexer1.and();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("`", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("lEPo", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.630216592237646
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.at();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-449));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.7453982478009022
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")o7wLj~N[^w!26|@");
      xPathLexer0.not();
      xPathLexer0.or();
      Token token0 = xPathLexer0.dollar();
      assertEquals("o", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("7", token1.getTokenText());
      
      xPathLexer0.equals();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("L", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("[#", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("5", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("s", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals("X", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.consume(17);
      xPathLexer0.identifier();
      Token token7 = xPathLexer1.rightParen();
      assertEquals(")", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer2.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("{", token11.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5968213254319243
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.div();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("V2)!6xdn");
      xPathLexer3.or();
      Token token3 = xPathLexer3.notEquals();
      assertEquals("V2", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("W _?C7=pr");
      xPathLexer1.div();
      XPathLexer xPathLexer5 = new XPathLexer("5^WLqy#/RFT<GI'?5!L");
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer5.not();
      assertEquals("5", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.9186091123717084
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.div();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer(",)");
      xPathLexer0.dots();
      xPathLexer1.relationalOperator();
      xPathLexer1.or();
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierStartChar('n');
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer(",)");
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.9393071557260724
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals("o", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer1.or();
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("o`", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.slashes();
      assertEquals(".", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token5 = xPathLexer1.dots();
      assertEquals("l", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      xPathLexer0.star();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftParen();
      assertEquals("e", token11.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.925632316320864
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oo`lEPo>]Y!f|[0dY");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      xPathLexer1.notEquals();
      xPathLexer1.notEquals();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=3.5691870272888755
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token0 = xPathLexer1.pipe();
      assertEquals("o", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer1.at();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals("lEPo", token3.getTokenText());
      
      Token token4 = xPathLexer1.dots();
      assertEquals(">", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token5 = xPathLexer1.at();
      assertEquals("]", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      Token token7 = xPathLexer3.plus();
      assertEquals("o", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer2.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer3.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("o`", token9.getTokenText());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.slashes();
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      assertNotNull(token11);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.5122348682070395
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("e)(");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("(", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(',');
      assertFalse(boolean0);
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=0.8804337303344562
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&#2");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&#2", token0.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.2371427675084286
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("w&{s~Xs[W>HR. ]C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("w", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=3.5071033512239023
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.setXPath("|NAoHXVK{%A");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("|NAoHXVK{%A");
      xPathLexer1.comma();
      xPathLexer0.dollar();
      xPathLexer1.literal();
      xPathLexer1.and();
      xPathLexer1.comma();
      xPathLexer1.minus();
      xPathLexer0.slashes();
      String string0 = "Z5!9!-~K";
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.237760371882852
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.not();
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(".", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      Token token6 = xPathLexer2.at();
      assertEquals("`", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("we", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.relationalOperator();
      assertEquals(7, token8.getTokenType());
      assertEquals("<", token8.getTokenText());
      
      Token token9 = xPathLexer0.comma();
      assertEquals("r", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token10 = xPathLexer2.pipe();
      assertEquals("b", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.9367143863241796
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("oo`lEPo>]Y!f|[0dY");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("`", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("l", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals("E", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[#5sX){xb");
      Token token5 = xPathLexer1.doubleColon();
      assertEquals("[#", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("oo`lEPo>]Y!f|[0dY");
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("P", token9.getTokenText());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = null;
      try {
        xPathLexer0 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.7819677597292505
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AUBWW");
      Token token0 = xPathLexer0.comma();
      assertEquals("A", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("U", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("BW", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("W", token3.getTokenText());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.consume();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.at();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      xPathLexer0.leftParen();
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.315700598760928
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.setXPath("|NAoHXVK{%A");
      xPathLexer0.or();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("N", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("|NAoHXVK{%A");
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer1.minus();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.star();
      assertEquals("o", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer2.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer2.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("|NAoHXVK{%A");
      Token token13 = xPathLexer3.doubleColon();
      assertEquals("|N", token13.getTokenText());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.63579768971204
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer1.pipe();
      Token token0 = xPathLexer0.not();
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.dots();
      xPathLexer0.leftBracket();
      xPathLexer1.at();
      xPathLexer1.notEquals();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer3.plus();
      xPathLexer2.leftBracket();
      xPathLexer3.doubleColon();
      xPathLexer1.dollar();
      xPathLexer0.slashes();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.042076621353568
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer0.number();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.at();
      xPathLexer0.at();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('`');
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      Token token4 = xPathLexer1.slashes();
      assertEquals("y", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals("5", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("y5@znw|]\"Z6,:Zu");
      xPathLexer2.div();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer3.number();
      assertEquals(30, token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=3.3313325804658747
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.star();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(".", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("m", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("`", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("we", token6.getTokenText());
      
      Token token7 = xPathLexer2.relationalOperator();
      assertEquals(7, token7.getTokenType());
      assertNotNull(token7);
      assertEquals("<", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("r", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("`<b}-qO");
      Token token10 = xPathLexer5.dots();
      assertEquals("`", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer4.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.1940110198441136
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("oo`lEPo>]Y!f|[0Y");
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("o", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("`l", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("E", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("RJ=iCR80");
      Token token6 = xPathLexer3.pipe();
      assertEquals("R", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.036222745793528
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("`<b}-qO");
      Token token4 = xPathLexer2.at();
      assertEquals("`", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer2.relationalOperator();
      assertEquals("<", token5.getTokenText());
      assertEquals(7, token5.getTokenType());
      assertNotNull(token5);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals("w", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
  }
}
