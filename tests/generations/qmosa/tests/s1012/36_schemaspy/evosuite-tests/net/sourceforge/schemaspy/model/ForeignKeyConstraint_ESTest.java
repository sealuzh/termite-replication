/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 13:51:30 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^}Ny+a7V] 3>5\"M");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^}Ny+a7V] 3>5\"M");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      System.setCurrentTimeMillis(1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^}Ny+a7V] 3>5\"M", (-3065), 0);
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(0, int0);
      assertEquals((-3065), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.172467200040117
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "dc;6VNUaH^";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "dc;6VNUaH^", 3, 0);
      String string1 = "K3GGe;";
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "K3GGe;", 548, 0);
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint1.getParentTable();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[0] = (byte)38;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte) (-37);
      byteArray0[4] = (byte) (-127);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";,t&HoenMnNS:S");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascader3 on dlete", (byte) (-127), (byte)0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-127), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "&", (-1640), 0);
      Locale locale0 = Locale.ROOT;
      foreignKeyConstraint0.getDeleteRuleDescription();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      resourceBundle_Control0.getFallbackLocale("&", locale0);
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("=|c$JsFdOcu");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
      Locale.lookup(linkedList0, linkedHashSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        ResourceBundle.getBundle("&", (Locale) null, classLoader0, resourceBundle_Control1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.60375457215763
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "j;", 548, 2);
      foreignKeyConstraint0.isNullOnDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "j;", 548, 1);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "Null on delete", 1, 86);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
      foreignKeyConstraint1.getDeleteRuleAlias();
      foreignKeyConstraint2.getChildColumns();
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint1.isImplied();
      foreignKeyConstraint0.isCascadeOnDelete();
      foreignKeyConstraint2.compareTo(foreignKeyConstraint1);
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("KA*Pj|Mu1O0hsNEg.P", "R", "KA*Pj|Mu1O0hsNEg.P");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"KA*Pj|Mu1O0hsNEg.P\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.266914708793633
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)23;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte) (-127);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1#bC{]f4 o");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 0, (byte)23);
      foreignKeyConstraint0.getDeleteRuleAlias();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(23, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "rcY-7 [,)", 518, 1);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isNullOnDelete();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      linkedList0.add(tableColumn0);
      String string0 = ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      assertNull(string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " references ", (-5), 3);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      assertEquals((-5), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "</STRIiRm!aaNgG", 3, 3);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 1;
      String string0 = "}qp\\L%I`I";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}qpL%I`I", 1, 1);
      foreignKeyConstraint0.isRestrictDelete();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", "}qpL%I`I", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 3727);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 2178);
      Integer integer0 = new Integer((-1645));
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(3727, foreignKeyConstraint0.getDeleteRule());
      assertEquals((-1645), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "u,:4.TPp", 1, 1);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2508570947192674
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " references ", 3, 3);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      foreignKeyConstraint0.getDeleteRuleDescription();
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "0'Jl_&B@uuwOc%=c@", 960, 960);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(960, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(960, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MMb]NR8!,BT,vpuzt");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MMb]NR8!,BT,vpuzt");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "!e", (-1525), 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      System.setCurrentTimeMillis((-1525));
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      assertEquals((-1525), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "rcY-7 [,)", 41, 41);
      foreignKeyConstraint0.getChildTable();
      assertEquals(41, foreignKeyConstraint0.getUpdateRule());
      assertEquals(41, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7186438010844762
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 3727);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "RAfqp$K?", 2165, 213);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 2165);
      // Undeclared exception!
      try { 
        foreignKeyConstraint2.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 3727);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "\"whbcnG\"'/%N";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1662), 3727);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      String string1 = "kq(dsr uHKJ.0~";
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange(" }aW%;m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range= }aw%;m
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MMb]NR8!,BT,vpuzt");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MMb]NR8!,BT,vpuzt");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u:4.FPp");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "!e", (-1525), 1);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals((-1525), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " references ", 6, 3);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(6, int0);
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", foreignKeyConstraint0.getDeleteRuleDescription());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.0330444652763497
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-1640), (-1));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ".u>o`.Y5UsZsc%3;9Z", (-1640), 6199);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "oFN|oUhDv", (-1640), (-1));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint2.getDeleteRuleDescription();
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "", 219, 6199);
      foreignKeyConstraint2.getDeleteRuleAlias();
      foreignKeyConstraint0.getName();
      assertEquals((-1640), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0330444652763497
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Gk/Kn|5yvX;1ybI&-$", (-1640), (-1));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ".u>o`.Y5UsZsc%3;9Z", (-1640), 6199);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "oFN|oUhDv", (-1640), (-1));
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint2.getDeleteRuleDescription();
      ForeignKeyConstraint foreignKeyConstraint3 = new ForeignKeyConstraint((Table) null, "", 219, 6199);
      foreignKeyConstraint2.getDeleteRuleAlias();
      foreignKeyConstraint0.getName();
      assertEquals((-1640), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-1), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 3727);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "\"whbcnG\"'/%N", (-1645), 2165);
      assertEquals((-1645), foreignKeyConstraint1.getUpdateRule());
      assertEquals(2165, foreignKeyConstraint1.getDeleteRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "}qp\\L%I`I";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}qpL%I`I", 1, (-1187));
      foreignKeyConstraint0.isCascadeOnDelete();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UPDATE", "}qpL%I`I", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UPDATE\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "\"^hb[nG\"'/%N", (-1645), (-1645));
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      ForeignKeyConstraint foreignKeyConstraint1 = null;
      try {
        foreignKeyConstraint1 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, (-1645), 2165);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setComments("|;uwEJmiWR'");
      tableColumn0.setShortType("M[DR~c-BFCs\"EmJ");
      tableColumn0.setShortType("d");
      tableColumn0.unlinkParents();
      tableColumn0.unlinkChildren();
      tableColumn0.unlinkParents();
      tableColumn0.setShortType("M[DR~c-BFCs\"EmJ");
      tableColumn0.setIsAutoUpdated(false);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn1.removeChild(tableColumn0);
      tableColumn1.removeParent(tableColumn0);
      tableColumn1.setComments("Cascad vn delete");
      tableColumn0.setShortType("Cascad vn delete");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0, 94, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setComments("|;uwEJmiWR'");
      tableColumn0.setShortType("M[DR~c-6FEs\"EmJ");
      tableColumn0.setShortType("d");
      tableColumn0.unlinkParents();
      tableColumn0.unlinkChildren();
      tableColumn0.unlinkParents();
      tableColumn0.setShortType("M[DR~c-6FEs\"EmJ");
      tableColumn0.setIsAutoUpdated(false);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setIsAutoUpdated(false);
      tableColumn1.removeParent(tableColumn0);
      tableColumn1.setComments("Cascade on delete");
      tableColumn0.setShortType("Cascade on delete");
      tableColumn0.removeParent(tableColumn1);
      tableColumn0.setComments("FETCH");
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "}qp\\L%I`I";
      int int0 = (-1177);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}qpL%I`I", 1, (-1177));
      foreignKeyConstraint0.isRestrictDelete();
      Config config0 = new Config();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", "}qpL%I`I", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^}Ny+a7V] 3>5\"M");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^}Ny+a7V] 3>5\"M");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      System.setCurrentTimeMillis(1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^}Ny+a7V] 3>5\"M", (-3065), 27);
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(27, int0);
      assertEquals((-3065), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'Y. Mut be one of: ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)124;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u,:4.TPp");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^}Ny+a7V] 3>5\"M");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^}Ny+a7V] 3>5\"M");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      System.setCurrentTimeMillis(1);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "^}Ny+a7V] 3>5\"M", (-3065), (-3065));
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-3065), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-3065), int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "wiwy eDt";
      int int0 = 960;
      String string1 = "0'Jl_&B@uuwOc%=c@";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "0'Jl_&B@uuwOc%=c@", 960, 960);
      foreignKeyConstraint0.isReal();
      Config config0 = Config.getInstance();
      config0.isHighQuality();
      config0.setMeta("wiwy eDt");
      // Undeclared exception!
      try { 
        config0.getRemainingParameters();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Required parameter '-o' was not specified.
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setComments("|;uwEJmiWR'");
      tableColumn0.setComments("OR");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "d";
      Config config0 = new Config(stringArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
