/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 00:42:36 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, '?', '?');
      javaCharStream0.backup(6);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-52);
      javaCharStream0.bufpos = (int) (byte)59;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte) (-85);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(78);
      MockFile mockFile0 = new MockFile("", "o?4W`?");
      mockFile0.delete();
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.mkdir();
      MockFile mockFile1 = new MockFile("");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "NG");
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "]!z", 1, 1);
      stringReader0.read(charBuffer0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)0;
      stringReader0.read();
      byteArray0[3] = (byte) (-34);
      byteArray0[4] = (byte) (-11);
      byteArray0[5] = (byte)48;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.Done();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte)64;
      byteArray0[8] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)1);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 82, (byte)64);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\r', char0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8497583656586766
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("", "jf@<y r|=!OGO0zq");
      mockFile0.delete();
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile("/jf@<y r|=!OGO0zq");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)68;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-101);
      byteArray0[5] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)68, (byte) (-101), 113);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J~%:'t70y*x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6290407622471201
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = "o?4W`?";
      StringReader stringReader0 = new StringReader("o?4W`?");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.skip(0L);
      String string1 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.mark(0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (byte) (-55), 4088);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte) (-85));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 51, 51);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 51;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[6];
      charArray0[0] = 'X';
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = 'H';
      charArray0[4] = 'H';
      charArray0[5] = '\\';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("_@}@DDgDA95/s&T?+");
      MockFile mockFile0 = new MockFile("6rqA", "");
      mockFile0.getAbsolutePath();
      mockFile0.mkdir();
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'H';
      charArray0[4] = 'X';
      javaCharStream0.available = (-3047);
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("kqoC].HK");
      MockFile mockFile0 = new MockFile("6rqA", "6rqA");
      mockFile0.getAbsolutePath();
      mockFile0.mkdir();
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-633), (-2), 4088);
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_|/1E3ox");
      int int0 = 74;
      stringReader0.mark(68);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 74);
      javaCharStream0.available = 74;
      javaCharStream0.ReadByte();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.inBuf = (-1);
      int[] intArray0 = new int[6];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-489);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      stringReader0.skip((-193L));
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(12, 83);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0050683555949265
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "o?4W`?";
      StringReader stringReader0 = new StringReader("o?4W`?");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.skip(0L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.mark(0);
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 0, 9);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 2035, 0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(2549, 4078);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.8095142558492818
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      stringReader0.skip((-781L));
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'H';
      charArray0[4] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      javaCharStream0.available = (-3047);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2035, 52, 685);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader(".");
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9902945263083707
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.skip(0L);
      stringReader0.mark(0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 191, 10);
      javaCharStream0.backup(0);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      javaCharStream0.getColumn();
      MockFile mockFile0 = new MockFile("BJjX;C", "");
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile("");
      mockFile1.getAbsolutePath();
      mockFile0.mkdir();
      mockFile1.getCanonicalFile();
      mockFile0.deleteOnExit();
      assertEquals(0L, mockFile0.length());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 2048;
      javaCharStream0.nextCharInd = 2048;
      javaCharStream0.getBeginColumn();
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile((File) null, "Bgk/@))h+aU{f(X");
      MockFile.createTempFile("Bgk/@))h+aU{f(X", "0nx~8=kT@d$a#+:k+f", (File) mockFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      stringReader0.mark(74);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.readChar();
      stringReader0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, 0, (byte)4);
      int int0 = 1682;
      javaCharStream1.ReInit((Reader) stringReader0, 0, 1682, 4);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2048);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",K@.?=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, 6, 6);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(1368);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      MockFile mockFile0 = new MockFile(".");
      mockFile0.setReadOnly();
      mockFile0.delete();
      mockFile0.setWritable(true, false);
      mockFile0.getAbsolutePath();
      StringReader stringReader1 = new StringReader("U#7p&|$sg59d$<@J_y");
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A", "A");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8497583656586766
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-4074), (-4074));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)4);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(dataInputStream0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1, (byte)4);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.178884033360715
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("{k|)~fev'AHXw");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 9);
      javaCharStream0.backup((-1));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.UpdateLineColumn('I');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 642, (-1));
      try { 
        javaCharStream1.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.341994252232425
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Kb2xZL%w");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 16, 16, 16);
      javaCharStream0.backup(16);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.FillBuff();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.getColumn();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0);
      javaCharStream1.ReInit((Reader) stringReader0, 936, (-168), 0);
      javaCharStream0.getColumn();
      javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.009172745498295
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("rdn&ZqtRYAuIRU");
      stringReader0.mark(2420);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      charArray0[5] = 'c';
      charArray0[2] = 'g';
      charArray0[7] = 'c';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 101, 1466, 2420);
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.BeginToken();
      assertEquals(101, javaCharStream0.getBeginLine());
      
      MockFile mockFile0 = new MockFile("rdn&ZqtRYAuIRU", "!|vy7VATiP|bAKT#y+6");
      mockFile0.getCanonicalFile();
      mockFile0.toURI();
      mockFile0.mkdirs();
      mockFile0.deleteOnExit();
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[8];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'P';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFile mockFile0 = new MockFile(";M.0rp'Pe", "X25nyLpW2");
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile("X25nyLpW2");
      mockFile1.getCanonicalFile();
      mockFile1.mkdirs();
      mockFile1.deleteOnExit();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = 2048;
      javaCharStream0.nextCharInd = 2048;
      javaCharStream0.getBeginColumn();
      javaCharStream0.inBuf = 2507;
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile((File) null, "Bgk/@))h+aU{f(X");
      MockFile.createTempFile("Bgk/@))h+aU{f(X", "0nx~8=kT@d$a#+:k+f", (File) mockFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      stringReader0.mark(74);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.AdjustBuffSize();
      stringReader0.markSupported();
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('D');
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte)71;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)106;
      byteArray0[4] = (byte)39;
      byteArray0[5] = (byte)82;
      byteArray0[6] = (byte)62;
      byteArray0[7] = (byte) (-47);
      byteArray0[8] = (byte) (-76);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFile mockFile0 = new MockFile("h4@[\"WZ~g#`A7-+u+");
      mockFile0.setReadOnly();
      mockFile0.delete();
      mockFile0.setWritable(false, false);
      mockFile0.getAbsolutePath();
      StringReader stringReader0 = new StringReader("%^pKn");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9227467306160153
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, 53);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 53;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(93, 2035);
      String string0 = "4G,t/IhaZf2N>";
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("]!z");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7653395327214005
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("pN~2qI");
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.markSupported();
      stringReader0.skip(0L);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 10, 9);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "pN~2qI");
      stringReader0.read(charBuffer0);
      javaCharStream0.getEndColumn();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("rdn&ZqtRYAuIRU");
      stringReader0.mark(2420);
      boolean boolean0 = JavaCharStream.staticFlag;
      char[] charArray0 = new char[8];
      charArray0[1] = 'g';
      charArray0[3] = 'c';
      charArray0[4] = 'c';
      charArray0[5] = 'c';
      charArray0[2] = 'g';
      charArray0[7] = 'c';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-739), 1466, 2420);
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte)64;
      byteArray0[8] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 82, (byte)64);
      javaCharStream0.backup((-658));
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(64, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("%RlK +L$=({$oYKu");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3334730391185028
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 309, 1136);
      javaCharStream0.bufpos = 8;
      javaCharStream0.adjustBeginLineColumn(1136, 67);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getColumn();
      javaCharStream0.getColumn();
      javaCharStream0.adjustBeginLineColumn(309, 0);
      char[] charArray0 = new char[8];
      charArray0[0] = ' ';
      charArray0[1] = '9';
      charArray0[2] = ';';
      charArray0[3] = '8';
      charArray0[4] = 'N';
      charArray0[5] = 'y';
      charArray0[6] = '_';
      charArray0[7] = '+';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = (-1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaCharStream.hexval('4');
      MockFile mockFile0 = new MockFile("A");
      mockFile0.getAbsolutePath();
      mockFile0.getCanonicalFile();
      mockFile0.mkdirs();
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1302039846129353
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      int int0 = 53;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, 53);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 53;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[4];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = '<';
      charArray0[2] = 'Q';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A", "A");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile1.setWritable(true, true);
      mockFile1.getAbsolutePath();
      StringReader stringReader0 = new StringReader("nX9|_S;H");
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.1488040388303724
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      pipedInputStream0.mark((-1));
      pipedInputStream0.markSupported();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte)117);
      javaCharStream0.ReInit((Reader) stringReader0, 412, 412, (int) (byte)117);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-3744), (int) (byte)117);
      PipedInputStream pipedInputStream1 = new PipedInputStream(4);
      javaCharStream0.backup((-1037));
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.UpdateLineColumn('/');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(4, (-1));
      int int0 = javaCharStream0.getEndLine();
      assertEquals(4, javaCharStream0.getBeginLine());
      assertEquals((-3744), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      MockFile mockFile0 = new MockFile("8");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile1.setReadOnly();
      mockFile1.mkdir();
      mockFile1.mkdir();
      mockFile1.setExecutable(true, false);
      mockFile1.setWritable(true, true);
      mockFile1.getAbsolutePath();
      StringReader stringReader0 = new StringReader("cpd4\"S^zE`+YRXNjzH");
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('e');
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "o?4W`?";
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, '?', '?');
      javaCharStream0.backup(6);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-52);
      javaCharStream0.bufpos = (int) (byte) (-52);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte) (-85);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -51
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('d');
      MockFile mockFile0 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH", "cpd4\"S^zE`+YRXNjzH");
      mockFile1.setReadOnly();
      mockFile1.delete();
      mockFile0.getCanonicalPath();
      mockFile1.setWritable(false, false);
      mockFile0.getAbsolutePath();
      StringReader stringReader0 = new StringReader("");
      MockFile mockFile2 = new MockFile("", "");
      mockFile2.deleteOnExit();
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("LF)>ZNoTO<tN)s");
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('2');
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A");
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile1.setWritable(true, true);
      mockFile1.getAbsolutePath();
      StringReader stringReader0 = new StringReader("cpd4\"S^zE`+YRXNjzH");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[2] = (-1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 451, 4113);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)106;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile1.setReadOnly();
      mockFile1.mkdir();
      mockFile1.mkdir();
      mockFile1.setExecutable(true, false);
      mockFile1.setWritable(true, true);
      mockFile1.getAbsolutePath();
      StringReader stringReader0 = new StringReader("cpd4\"S^zE`+YRXNjzH");
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("j?dUk35`RM}tG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 5);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[7];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = 'A';
      charArray0[3] = '6';
      charArray0[4] = '6';
      charArray0[5] = 'j';
      charArray0[6] = '6';
      stringReader0.read(charArray0);
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('', char0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J~%:'t70y*x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2348);
      int int0 = 991;
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1979, 991);
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream.hexval('B');
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      assertEquals((-1), javaCharStream0.bufpos);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      stringReader0.skip((-781L));
      charArray0[2] = '\\';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[3] = 'H';
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.430791328878232
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      pipedInputStream0.mark((-1));
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte)117);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-3744), (int) (byte)117);
      PipedInputStream pipedInputStream1 = new PipedInputStream(4);
      javaCharStream0.backup((-1037));
      javaCharStream0.ExpandBuff(true);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)117;
      sequenceInputStream0.read(byteArray0, (-1), (int) (byte)117);
      javaCharStream0.GetSuffix((byte)117);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      assertEquals(5132, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      pipedInputStream0.mark((-1));
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte)117);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader1 = new StringReader("gPZ%=TFa^$mjVVKW");
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[27];
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, '?', '?');
      javaCharStream0.backup(6);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byte[] byteArray1 = new byte[7];
      javaCharStream0.bufpos = 327;
      byteArray1[0] = (byte) (-48);
      byteArray1[1] = (byte) (-48);
      javaCharStream0.bufpos = (int) (byte)59;
      byteArray1[4] = (byte)23;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray1[5] = (byte) (-85);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(78);
      MockFile mockFile0 = new MockFile("", "o?4W`?");
      mockFile0.delete();
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.toURI();
      mockFile0.getAbsolutePath();
      javaCharStream0.GetImage();
      mockFile0.mkdir();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[4];
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = '<';
      charArray0[2] = 'Q';
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.8497583656586766
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A", "A");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile0.setReadOnly();
      mockFile1.delete();
      mockFile1.setReadable(true);
      mockFile1.setWritable(true, true);
      mockFile1.getAbsolutePath();
      StringReader stringReader0 = new StringReader("A");
      JavaCharStream.hexval('8');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 8);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('A', char0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 10, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.540305825226517
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      stringReader0.mark(68);
      stringReader0.ready();
      stringReader0.mark(68);
      char[] charArray0 = new char[5];
      charArray0[0] = 'x';
      charArray0[1] = 'f';
      charArray0[2] = 'e';
      charArray0[3] = 'K';
      charArray0[4] = '!';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 80, 14, 2420);
      javaCharStream0.backup(80);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader2 = new StringReader("M*dd0");
      CharBuffer charBuffer0 = CharBuffer.allocate(80);
      stringReader2.read(charBuffer0);
      stringReader2.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2420, 80, 14);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader3 = new StringReader("");
      javaCharStream0.GetImage();
      assertEquals(80, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[8];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'c';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFile mockFile0 = new MockFile(";M.0rp'Pe", "X25nyLpW2");
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile("X25nyLpW2");
      mockFile1.getCanonicalFile();
      mockFile1.mkdirs();
      mockFile1.deleteOnExit();
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.4750080554560212
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J~%:'t70y*x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String string0 = "o?4W`?";
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      stringReader0.mark(2420);
      charArray0[0] = 'S';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 2420, 0);
      javaCharStream0.backup(642);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -642
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.5919280370833981
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Reader reader0 = null;
      int int0 = 63;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 63, 63, 63);
      javaCharStream0.adjustBeginLineColumn(63, 584);
      javaCharStream0.GetImage();
      char char0 = 'a';
      JavaCharStream.hexval('a');
      int[] intArray0 = new int[0];
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")is7//DOi-c");
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.38641020283402
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 451, 4113);
      javaCharStream0.ExpandBuff(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.prevCharIsCR = true;
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)57;
      byteArray1[1] = (byte)57;
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      byte[] byteArray2 = new byte[3];
      byteArray2[1] = (byte)57;
      byteArray0[1] = (byte)57;
      sequenceInputStream2.read(byteArray2, 1, 15);
      char[] charArray0 = javaCharStream0.buffer;
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream2, 1, (byte)57);
      javaCharStream2.backup((byte)57);
      javaCharStream2.BeginToken();
      javaCharStream2.ExpandBuff(false);
      javaCharStream2.adjustBeginLineColumn(15, (-1));
      javaCharStream2.getEndLine();
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.8339260548479784
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-2154), (-2154));
      JavaCharStream.hexval('D');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 13, (-2154), 335);
      javaCharStream0.adjustBeginLineColumn(335, (-1541));
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      char char0 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1984, 991);
      javaCharStream0.ReInit((Reader) null, 91, 2736, 4069);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null, 1475, 8, 1475);
      javaCharStream0.GetImage();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 56);
      javaCharStream0.ReInit((InputStream) bufferedInputStream0, 0, 91, 8);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte) (-23);
      byteArray0[6] = (byte) (-23);
      javaCharStream0.bufsize = (-3741);
      sequenceInputStream0.read(byteArray0, (int) (byte) (-23), 1);
      javaCharStream1.GetSuffix((byte)0);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7201934592198251
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 757, 757);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = '0';
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = '0';
      charArray0[4] = 'X';
      javaCharStream0.available = (int) '0';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2035, 52, 757);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.0590443660090973
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.readChar();
      MockFile mockFile0 = new MockFile((File) null, "Bgk/@))h+aU{f(X");
      MockFile.createTempFile("Bgk/@))h+aU{f(X", "0nx~8=kT@d$a#+:k+f", (File) mockFile0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)4);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.AdjustBuffSize();
      stringReader0.mark(2619);
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream(69);
      javaCharStream0.getLine();
      pipedInputStream1.close();
      PipedInputStream pipedInputStream3 = null;
      try {
        pipedInputStream3 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      stringReader0.mark(68);
      stringReader0.ready();
      stringReader0.mark(68);
      char[] charArray0 = new char[5];
      charArray0[0] = '\u0081';
      charArray0[1] = 'f';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-5080);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-5080));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[8];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'c';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MockFile mockFile0 = new MockFile(";M.0rp'Pe", "X25nyLpW2");
      mockFile0.mkdir();
      MockFile mockFile1 = new MockFile("", "[II");
      mockFile0.deleteOnExit();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[2];
      stringReader0.mark(2420);
      charArray0[0] = 'S';
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 642, 642, 642);
      javaCharStream0.backup(2420);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4089, 4113);
      javaCharStream0.ReInit((Reader) null, 4089, (-372));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ReInit((Reader) null, 4053, (-2020), 4113);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 451, 4113);
      javaCharStream0.ExpandBuff(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      int[] intArray0 = new int[3];
      intArray0[0] = (-2772);
      intArray0[1] = 451;
      intArray0[2] = 3649;
      javaCharStream0.bufline = intArray0;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)21;
      sequenceInputStream1.read(byteArray0, (-2334), (-536));
      javaCharStream0.GetSuffix(2885);
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.9960309859581935
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, 53);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[8];
      charArray0[0] = 'X';
      charArray0[1] = '\\';
      charArray0[2] = '6';
      charArray0[3] = '\\';
      charArray0[4] = 'X';
      charArray0[5] = 'H';
      charArray0[6] = 'X';
      charArray0[7] = 'b';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("]!z");
      javaCharStream0.Done();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-3047), (-2462), 2);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      stringReader0.skip((-781L));
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.bufpos = (int) 'H';
      charArray0[4] = 'X';
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.available = (-3047);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2035, 52, 685);
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader1 = new StringReader(".");
      assertFalse(stringReader1.equals((Object)stringReader0));
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9272227153494366
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.skip(0L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.mark(0);
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 10, 9);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(2549, 4078);
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader1 = new StringReader("o?4W`?");
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.getLine();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(2549, 68);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile1.setExecutable(true, false);
      mockFile1.setWritable(true, true);
      mockFile0.deleteOnExit();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('x');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4062, 4113);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)14;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2462), 4092);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.backup((-2154));
      javaCharStream0.adjustBeginLineColumn((byte)29, 15);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.column = 4095;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-93);
      sequenceInputStream0.read(byteArray0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-224), 4081, 4081);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-20);
      byteArray1[1] = (byte)23;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(4061);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, '?', '?');
      javaCharStream0.backup(6);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-52);
      javaCharStream0.bufpos = (int) (byte)59;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte) (-85);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(78);
      MockFile mockFile0 = new MockFile("", "o?4W`?");
      mockFile0.delete();
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.mkdir();
      MockFile mockFile1 = new MockFile("");
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      assertEquals(62, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      charArray0[0] = 'S';
      charArray0[1] = 'S';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, '?', '?');
      javaCharStream0.backup(6);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-52);
      javaCharStream0.bufpos = (int) (byte)59;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte) (-85);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(62);
      MockFile mockFile0 = new MockFile("", "o?4W`?");
      mockFile0.delete();
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.mkdir();
      MockFile mockFile1 = new MockFile("");
      javaCharStream0.readChar();
      assertEquals(62, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      stringReader0.mark(2420);
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 642, 642);
      javaCharStream0.backup(6);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte) (-47);
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte) (-85);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.GetSuffix(78);
      javaCharStream0.getColumn();
      MockFile mockFile0 = new MockFile("E", "o?4W`?");
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.mkdir();
      MockFile mockFile1 = new MockFile("E");
      mockFile0.deleteOnExit();
      javaCharStream0.BeginToken();
      assertEquals(637, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[2];
      stringReader0.mark(2420);
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 642, 642, 642);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)69;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 2806, (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.6769877743224173
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("),@',V^4iw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.getBeginColumn();
      stringReader0.read();
      stringReader0.ready();
      stringReader0.reset();
      javaCharStream0.backup(0);
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 4095;
      stringReader0.reset();
      javaCharStream0.bufline = intArray0;
      javaCharStream0.backup(0);
      CharBuffer charBuffer0 = CharBuffer.allocate(4095);
      stringReader0.read(charBuffer0);
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.mark(344);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetImage();
      int int0 = 2936;
      javaCharStream0.adjustBeginLineColumn(0, 2936);
      URI uRI0 = MockURI.aHttpURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-520), (-520), (-520));
      javaCharStream0.bufpos = (-520);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7677614722893296
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9996529896960225
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      int int0 = 53;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, 53);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 53;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.UpdateLineColumn('3');
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 3);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      MockFile mockFile0 = new MockFile("A", "A");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("cpd4\"S^zE`+YRXNjzH");
      mockFile1.setReadOnly();
      mockFile1.delete();
      mockFile1.setWritable(true, true);
      mockFile1.getAbsolutePath();
      StringReader stringReader0 = new StringReader("cpd4\"S^zE`+YRXNjzH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('x');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8891591637540215
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      stringReader0.mark(2420);
      charArray0[0] = 'S';
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 642, 642);
      javaCharStream0.backup(6);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-1998));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&J5y-_");
      stringReader0.markSupported();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      javaCharStream0.backup((-2338));
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      char[] charArray0 = new char[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'c';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 10, 9);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-107);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-107), (byte) (-107));
      int[] intArray0 = new int[8];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-2379);
      intArray0[3] = (int) (byte) (-107);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte) (-107), (byte) (-107));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-36);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte) (-1), 0, (byte) (-1));
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte) (-106);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.maxNextCharInd = (int) (byte) (-36);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, (byte) (-121));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5832584594204766
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      stringReader0.ready();
      char[] charArray0 = new char[19];
      stringReader0.mark(2420);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 642, 642);
      javaCharStream0.backup(6);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.adjustBeginLineColumn(4821, 4821);
      StringReader stringReader1 = new StringReader("o?4W`?");
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-969));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.28995151603326
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 451, 4113);
      javaCharStream0.ExpandBuff(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.prevCharIsCR = true;
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)57;
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      byte[] byteArray1 = new byte[3];
      byteArray1[1] = (byte)57;
      byteArray0[1] = (byte)57;
      sequenceInputStream2.read(byteArray1, 1, 15);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream2, 1, (byte)57);
      javaCharStream2.backup((byte)57);
      javaCharStream2.ExpandBuff(false);
      javaCharStream2.adjustBeginLineColumn(15, (-1));
      javaCharStream2.getEndLine();
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4089, (-829));
      javaCharStream0.ReInit((Reader) null, (-829), (-1));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, 97, 4089, (-829));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1458417525947544
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      pipedInputStream0.mark((-1));
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte)117);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-3744), (int) (byte)117);
      PipedInputStream pipedInputStream1 = new PipedInputStream(4);
      javaCharStream0.ReInit((InputStream) pipedInputStream1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0, (byte)117);
      pipedInputStream1.close();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream3 = null;
      try {
        pipedInputStream3 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "?vt ^1L~)~|^zUd");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)106;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('P', char0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      stringReader0.skip((-781L));
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'H';
      charArray0[4] = 'X';
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (-1), (-1), (-2119));
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.4976864074866398
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J~s:'t70y*x");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 10);
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-1), javaCharStream0.getBeginLine());
      assertEquals('~', char0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.721904941357862
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = ".";
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 78, 78);
      javaCharStream0.ReInit((Reader) stringReader0, 1997, (-372));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 4089, 0, (-700));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = '{';
      charArray0[1] = 'W';
      charArray0[2] = 'b';
      charArray0[3] = '/';
      charArray0[4] = 'D';
      charArray0[5] = '5';
      charArray0[6] = 'q';
      charArray0[7] = ':';
      charArray0[8] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.slice();
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1177, 1177, 1177);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("LF)>ZNoTO<tN)s");
      stringReader0.mark(2420);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 3256);
      pipedInputStream1.markSupported();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      pipedInputStream2.mark(2420);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 81, 0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 8, 8);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QYl-P|c8o[ab9s1");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(12, 12);
      assertEquals(12, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      MockFile mockFile0 = new MockFile("<", "<");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("CVw$!KW!aN0Qre?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn((-513), (-520));
      URI uRI0 = MockURI.aHttpURI;
      URI uRI1 = MockURI.aFileURI;
      MockFile mockFile1 = new MockFile(uRI1);
      try { 
        mockFile1.getCanonicalFile();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4113, 4062);
      javaCharStream0.tokenBegin = (-3814);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      javaCharStream0.bufpos = (int) '6';
      charArray0[1] = 'H';
      stringReader0.skip((-781L));
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'H';
      charArray0[4] = 'X';
      javaCharStream0.available = (-3047);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2062, 52, 685);
      javaCharStream0.AdjustBuffSize();
      javaCharStream1.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream1.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4062, 4113);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte)64;
      byteArray0[8] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 82, (byte)64);
      javaCharStream0.buffer = null;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("J~%:'t70y*x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      stringReader0.mark(2420);
      charArray0[0] = 'S';
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 642, 642);
      javaCharStream0.backup(6);
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.readChar();
      char[] charArray1 = javaCharStream0.nextCharBuf;
      javaCharStream0.getColumn();
      MockFile mockFile0 = new MockFile("", "o?4W`?");
      mockFile0.mkdir();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.close();
      stringReader0.read();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte byte0 = (byte)95;
      StringReader stringReader0 = new StringReader(" Fl*oq.6VKz55");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-311), (-311));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.5229550675313182
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-520), (-520), (-520));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("o?4W`?");
      stringReader0.mark(2420);
      char[] charArray0 = new char[19];
      stringReader0.mark(2420);
      charArray0[0] = 'S';
      charArray0[1] = 'g';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 642, 642);
      javaCharStream0.backup(6);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte) (-47);
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)51;
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, (byte) (-55), (-82), (-699));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("%Rl! +L$=({$oYKu");
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-66);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.FillBuff();
      assertEquals(0, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4089, 4108);
      javaCharStream0.ReInit((Reader) null, 4089, (-372));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ReInit((Reader) null, 4108, (-2020), 4108);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((File) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 451, 4113);
      javaCharStream0.ExpandBuff(false);
      Enumeration<MockFileInputStream> enumeration0 = (Enumeration<MockFileInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[3];
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)0;
      sequenceInputStream2.read(byteArray2, 1, 15);
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream1.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.9560115027140728
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)117);
      pipedInputStream0.mark((-1));
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (byte)117);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-3744), (int) (byte)117);
      PipedInputStream pipedInputStream1 = new PipedInputStream(4);
      javaCharStream0.backup((-1));
      boolean boolean0 = true;
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.UpdateLineColumn('/');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream2);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)117;
      PipedInputStream pipedInputStream3 = null;
      try {
        pipedInputStream3 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.available();
      sequenceInputStream0.read();
      sequenceInputStream0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1294, 1294);
      javaCharStream0.available = 2761;
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 150, (-1), (-1));
      javaCharStream0.backup(1294);
      assertEquals(2801, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.933809998920632
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1053), 685, 685);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[5];
      charArray0[0] = '6';
      charArray0[1] = 'H';
      charArray0[2] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = 'H';
      charArray0[4] = 'X';
      javaCharStream0.available = (-3047);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 2035, 52, 685);
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.6035681031705153
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/o?4W`?");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile(".", ".");
      mockFile0.delete();
      mockFile0.mkdir();
      mockFile0.toPath();
      mockFile0.toURI();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      MockFile mockFile1 = new MockFile(mockFile0, "/home/ubuntu/replication/scripts/projects/19_jmca/./.");
      mockFile1.mkdir();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('.', char0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2348);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)106;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]!z");
      int int0 = 1;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      MockFile mockFile0 = new MockFile((File) null, "Bgk/@))h+aU{f(X");
      try { 
        MockFile.createTempFile("", "<]S}2#-1CT'u6</|GM", (File) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 153
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("1\"Y4<@I'Mh<Z'");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 650, 650, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1387, 1387, 1387);
      javaCharStream0.GetSuffix(14);
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream1);
      byte[] byteArray0 = new byte[0];
      PipedInputStream pipedInputStream2 = new PipedInputStream(94);
      PipedInputStream pipedInputStream3 = null;
      try {
        pipedInputStream3 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
}
