/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 13:36:00 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import com.sun.media.jai.codec.FPXDecodeParam;
import com.sun.media.jai.codec.SeekableStream;
import java.awt.AWTEventMulticaster;
import java.awt.CardLayout;
import java.awt.Cursor;
import java.awt.RenderingHints;
import java.awt.event.ActionListener;
import java.awt.event.AdjustmentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.image.Kernel;
import java.awt.image.renderable.ParameterBlock;
import java.beans.PropertyChangeListenerProxy;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.time.Month;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import java.util.function.Consumer;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.media.jai.operator.TransposeDescriptor;
import javax.media.jai.operator.TransposeType;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.248821541093825
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      visualListModel0.getValidElements();
      linkedList0.addFirst((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      integerArray0[1] = integerArray0[0];
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.clone();
      linkedList1.addAll((Collection<? extends Locale.LanguageRange>) linkedList2);
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      integerArray0[1] = integer1;
      visualListModel0.getSize();
      linkedList2.stream();
      visualListModel0.clearData();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[22];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(1, 11, true);
      assertEquals(11, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.675433222396815
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.getValidElements();
      linkedList0.add((VisualPageListItem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedList0.addFirst((VisualPageListItem) null);
      Stack<String> stack0 = new Stack<String>();
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.clearData();
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 4;
      intArray1[1] = 4;
      intArray1[2] = 4;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.updateElementAt(797, (VisualPageListItem) null);
      assertEquals(5, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0992975938210185
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, 0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5446690078283107
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      linkedList1.retainAll(stack0);
      linkedList0.removeFirstOccurrence(list0);
      visualListModel0.getSize();
      linkedList1.stream();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.clearData();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.moveDownIndex(0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2448999724663743
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      int int0 = 2112;
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      stack0.add((VisualPageListItem) null);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      stack0.add(visualPageListItemArray0[1]);
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElementAt(1, true);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2111
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      int int0 = 2605;
      int int1 = 20000;
      boolean boolean0 = true;
      visualListModel0.subList(1, 20000, true);
      boolean boolean1 = true;
      visualListModel0.getElements();
      int int2 = 4330;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.subList(2605, 4330);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.5446690078283107
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      visualListModel0.getValidElements();
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      linkedList1.retainAll(stack0);
      linkedList0.removeFirstOccurrence(list0);
      visualListModel0.getSize();
      linkedList1.stream();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.clearData();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.removeElements(0, 0, true);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.007310704731337
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.clone();
      int[] intArray0 = new int[2];
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = null;
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      try { 
        visualListModel1.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2112
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.880022123484118
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Stack<String> stack0 = new Stack<String>();
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      stack0.push("\"K@10x1V)op%Q#u\"OBT");
      stack0.add("FNPhqx#z/");
      linkedList0.add((Locale.LanguageRange) null);
      stack0.removeAllElements();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) stack0);
      linkedList0.retainAll(stack0);
      visualListModel0.getSize();
      linkedList0.stream();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.clearData();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(1, visualListModel0.getSize());
      
      visualListModel0.removeElements(0, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8282495135936656
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Stack<String> stack0 = new Stack<String>();
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      stack0.push("\"K@10x1V)op%Q#u\"OBT");
      stack0.add("");
      linkedList0.add((Locale.LanguageRange) null);
      stack0.removeAllElements();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) stack0);
      linkedList0.retainAll(stack0);
      visualListModel0.getSize();
      linkedList0.stream();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.clearData();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.removeElements(0, 0, false);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList1.pollLast();
      Integer[] integerArray0 = new Integer[3];
      linkedList1.clear();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.pollFirst();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList1.pollFirst();
      linkedList2.clone();
      linkedList2.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      linkedList1.remove();
      linkedList0.spliterator();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      linkedList1.toArray(integerArray0);
      linkedList0.add((VisualPageListItem) null);
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      linkedList0.removeAll(list0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      Object object0 = new Object();
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(1, 588, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1880689886806706
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      vector0.iterator();
      vector0.trimToSize();
      vector0.stream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "MYc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(vector0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5340880081128856
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      linkedList1.pollLast();
      linkedList0.addFirst((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      linkedList1.clear();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      stack0.addElement((VisualPageListItem) null);
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.clone();
      linkedList2.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      linkedList1.remove();
      linkedList0.spliterator();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      linkedList1.toArray(integerArray0);
      linkedList0.add((VisualPageListItem) null);
      Stack<String> stack1 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack1);
      linkedList0.removeAll(list0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      Object object0 = new Object();
      visualListModel0.getElements();
      visualListModel0.moveUpIndex(14);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      int[] intArray0 = new int[7];
      intArray0[0] = 0;
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      int int0 = 0;
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.moveDownIndex((-78));
      visualListModel0.moveUpIndex(0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.330346654007667
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[8];
      visualListModel0.clearData();
      intArray0[0] = 18;
      visualListModel0.moveDownIndex(18);
      intArray0[1] = 1000;
      intArray0[2] = (-2017);
      intArray0[3] = 9;
      intArray0[4] = (-1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      intArray0[5] = 9;
      intArray0[6] = (-728);
      int int0 = 9;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addAllElements(19, (Collection<VisualPageListItem>) vector0);
      intArray0[7] = 9;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.getElements();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      CollectionOp collectionOp0 = new CollectionOp("{z,5", parameterBlock0, renderingHints0);
      collectionOp0.getParameterBlock();
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"{z,5\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel1.moveUpIndexes(intArray0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
      Month month0 = Month.JUNE;
      Month month1 = Month.MARCH;
      Month month2 = Month.JUNE;
      Month[] monthArray0 = new Month[6];
      monthArray0[0] = month2;
      monthArray0[2] = month1;
      Month month3 = Month.AUGUST;
      monthArray0[3] = month3;
      monthArray0[4] = month0;
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(monthArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 0;
      intArray1[1] = 978;
      intArray1[2] = 0;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = 3113;
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      Object object0 = visualListModel1.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1458709982693738
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList1.pollLast();
      linkedList0.addFirst((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      linkedList1.clear();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add((Locale.LanguageRange) null);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList2.forEach(consumer0);
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.pollFirst();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList1.pollFirst();
      linkedList2.clone();
      linkedList2.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      linkedList1.remove();
      linkedList0.spliterator();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      linkedList1.toArray(integerArray0);
      linkedList0.add((VisualPageListItem) null);
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      linkedList0.removeAll(list0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 1;
      intArray0[1] = 1;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      Object object0 = new Object();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4620975966507315
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.parallelStream();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.addFirst((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      linkedList1.add((Locale.LanguageRange) null);
      integerArray0[1] = integerArray0[0];
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.addAll((Collection<? extends Locale.LanguageRange>) linkedList2);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) integerArray0[1];
      intArray0[1] = (int) integerArray0[0];
      intArray0[2] = (int) integerArray0[1];
      intArray0[3] = (int) integerArray0[0];
      intArray0[4] = (int) integerArray0[1];
      visualListModel0.undeleteElements(intArray0);
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[1] = integer2;
      linkedList1.toArray(integerArray0);
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      linkedList0.removeAll(list0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      visualListModel0.moveDownIndex(1);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 270);
      visualListModel0.updateElementAt((-1), (VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.548753909993042
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.stream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "`^v1*Ya+,");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`^v1*Ya+,");
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.pdfsam.guiclent.commons.models.VisualListModel");
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-128);
      byteArray0[1] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3109290309357102
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[2];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(false);
      visualListModel0.removeElements((-2525), 1421, false);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2761809225159486
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualPageListItem visualPageListItem0 = null;
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      vector0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3144496732554845
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6283210940494524
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      vector0.stream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "MYc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-128);
      byteArray0[1] = (byte)70;
      boolean boolean0 = new Boolean("MYc");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0941693886928134
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = new int[1];
      int int0 = 2112;
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[8];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      renderingHints_KeyArray0[0] = (RenderingHints.Key) sunHints_Key0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) pdfGraphics2D_HyperLinkKey0;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) pdfGraphics2D_HyperLinkKey1;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      renderingHints_KeyArray0[3] = (RenderingHints.Key) sunHints_Key1;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key2;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      renderingHints_KeyArray0[5] = (RenderingHints.Key) sunHints_Key3;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      renderingHints_KeyArray0[6] = (RenderingHints.Key) sunHints_Key4;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      renderingHints_KeyArray0[7] = (RenderingHints.Key) sunHints_LCDContrastKey0;
      stack1.toArray(renderingHints_KeyArray0);
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      stack1.add(visualPageListItemArray0[0]);
      stack1.add(visualPageListItemArray0[1]);
      stack1.add(visualPageListItemArray0[1]);
      visualPageListItemArray0[2] = null;
      stack1.pop();
      stack1.add((VisualPageListItem) null);
      visualPageListItemArray0[3] = null;
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2111
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.1572564645645604
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[12];
      intArray0[0] = (int) (byte) (-128);
      byteArray0[1] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -128
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<Month> vector1 = new Vector<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(vector1);
      Month[] monthArray0 = new Month[1];
      JComboBox<Month> jComboBox1 = new JComboBox<Month>(monthArray0);
      jComboBox1.repaint((long) 0);
      Boolean.valueOf(false);
      jComboBox1.setEnabled(false);
      jComboBox1.getBaselineResizeBehavior();
      jComboBox1.createVolatileImage(0, 0);
      jComboBox1.getActionListeners();
      Month month0 = Month.SEPTEMBER;
      vector1.add(month0);
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      vector1.add(monthArray0[0]);
      JComboBox<Month> jComboBox3 = new JComboBox<Month>();
      JComboBox<Month> jComboBox4 = new JComboBox<Month>(vector1);
      Month month1 = Month.NOVEMBER;
      jComboBox4.repaint((long) 0, 0, (-1702), (-1702), (-1702));
      jComboBox4.addNotify();
      jComboBox4.setName("gfOvq t\"");
      visualListModel0.setData(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1586864745751306
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      vector0.listIterator();
      stack0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.removeElements(0, 2112, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      vector0.add(visualPageListItemArray0[3]);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9535618935548502
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "MYc";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[12];
      intArray0[0] = (int) (byte) (-128);
      byteArray0[1] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -128
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.1782139529530196
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      int[] intArray0 = new int[2];
      intArray0[0] = 270;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(270) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1032731737259827
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Stack<String> stack0 = new Stack<String>();
      linkedList0.containsAll(stack0);
      stack0.push("\"K@10x1V)op%Q#u\"OBT");
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      visualListModel0.removeElements(18, 18, true);
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      int[] intArray0 = new int[4];
      intArray0[0] = 18;
      intArray0[1] = 18;
      intArray0[2] = 18;
      intArray0[3] = 116;
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 117
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2761809225159486
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      vector0.listIterator();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.removeElements(2112, 2112, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[1];
      visualPageListItemArray0[3] = null;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      vector0.add(visualPageListItemArray0[3]);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 2113
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      Month[] monthArray0 = new Month[9];
      Month month0 = Month.JULY;
      monthArray0[0] = month0;
      Month month1 = Month.SEPTEMBER;
      monthArray0[1] = month1;
      Month month2 = Month.DECEMBER;
      monthArray0[2] = month2;
      Month month3 = Month.APRIL;
      monthArray0[3] = month3;
      Month month4 = Month.APRIL;
      monthArray0[4] = month4;
      Month month5 = Month.SEPTEMBER;
      monthArray0[5] = month5;
      visualListModel0.getListDataListeners();
      Month month6 = Month.MAY;
      monthArray0[6] = month6;
      Month month7 = Month.OCTOBER;
      monthArray0[8] = month7;
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(monthArray0);
      visualListModel0.addAllElements((-239), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+MYc");
      visualListModel0.setData(vector0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.clearData();
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.1782139529530196
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte) (-45);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray1 = new byte[12];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.233675857741236
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[2];
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      stack0.add((VisualPageListItem) null);
      vector1.listIterator();
      stack0.add((VisualPageListItem) null);
      boolean boolean0 = new Boolean(true);
      Boolean boolean1 = new Boolean(true);
      visualListModel0.removeElements(2112, (-907), true);
      visualListModel0.setData(vector1);
      visualListModel0.moveDownIndexes(intArray0);
      vector1.add((VisualPageListItem) null);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2112
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.233675857741236
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.removeElements(2112, 2112, true);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[13];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.moveDownIndexes(intArray0);
      vector0.add(visualPageListItemArray0[3]);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2112
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1782139529530196
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.iterator();
      vector0.add((VisualPageListItem) null);
      vector0.trimToSize();
      vector0.stream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "MYc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(vector0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-128);
      byteArray0[2] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 256;
      // Undeclared exception!
      try { 
        visualListModel0.subList(256, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(256) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jPy;=Z^L>]a8Cy");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jPy;=Z^L>]a8Cy");
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jPy;=Z^L>]a8Cy");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.data = vector0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1782139529530196
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.iterator();
      vector0.trimToSize();
      vector0.stream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "MYc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(vector0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1572564645645604
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[12];
      intArray0[0] = (int) (byte) (-128);
      byteArray0[1] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -128
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 256;
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap0 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2692404415462466
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList1.pollLast();
      linkedList0.addFirst((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      linkedList1.clear();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      linkedList1.add((Locale.LanguageRange) null);
      linkedList1.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.toArray();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.pollFirst();
      linkedList2.add((Locale.LanguageRange) null);
      linkedList2.clone();
      linkedList2.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      linkedList1.remove();
      linkedList0.spliterator();
      visualListModel0.addElementAt((VisualPageListItem) null, 1);
      linkedList1.toArray(integerArray0);
      linkedList0.add((VisualPageListItem) null);
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      linkedList0.removeAll(list0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      Object object0 = new Object();
      visualListModel0.moveUpIndex(14);
      int int0 = visualListModel0.getSize();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.parallelStream();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      visualListModel0.getValidElements();
      linkedList0.addFirst((VisualPageListItem) null);
      Integer[] integerArray0 = new Integer[3];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      linkedList1.add((Locale.LanguageRange) null);
      integerArray0[1] = integerArray0[0];
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.addAll((Collection<? extends Locale.LanguageRange>) linkedList2);
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[1] = integer2;
      linkedList1.toArray(integerArray0);
      Stack<String> stack0 = new Stack<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) stack0);
      linkedList0.removeAll(list0);
      visualListModel0.prependAllElements(linkedList0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedList0);
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      jComboBox0.addContainerListener((ContainerListener) null);
      jComboBox0.setName("");
      assertFalse(jComboBox0.getIgnoreRepaint());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8885995049191862
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int[] intArray0 = new int[1];
      int int0 = 2112;
      intArray0[0] = 2112;
      visualListModel0.rotateClockwiseElements(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.reverseElements(intArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2112
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.1782139529530196
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      vector0.iterator();
      vector0.stream();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "MYc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(vector0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      byteArray0[2] = (byte) (-128);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Stack<Month> stack0 = new Stack<Month>();
      stack0.parallelStream();
      Month month0 = Month.MARCH;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Month month1 = Month.JULY;
      Month month2 = Month.OCTOBER;
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) arrayList0);
      Month month3 = Month.MARCH;
      Month month4 = Month.APRIL;
      Month[] monthArray0 = new Month[8];
      monthArray0[0] = month3;
      monthArray0[1] = month2;
      monthArray0[2] = month1;
      Month month5 = Month.AUGUST;
      monthArray0[3] = month5;
      monthArray0[4] = month3;
      monthArray0[5] = month4;
      monthArray0[6] = month4;
      monthArray0[7] = month0;
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(monthArray0);
      jComboBox0.setName("");
      assertFalse(jComboBox0.isFocusTraversalPolicyProvider());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener1);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.add(hierarchyListener2, hierarchyListener2);
      HierarchyListener hierarchyListener4 = AWTEventMulticaster.add(hierarchyListener3, hierarchyListener2);
      AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener2);
      AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener4);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(0, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.remove(hierarchyListener1, hierarchyListener1);
      AWTEventMulticaster.remove((HierarchyListener) null, hierarchyListener1);
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.add(hierarchyListener1, hierarchyListener1);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.remove(hierarchyListener1, (HierarchyListener) null);
      HierarchyListener hierarchyListener4 = AWTEventMulticaster.add(hierarchyListener3, hierarchyListener2);
      HierarchyListener hierarchyListener5 = AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener1);
      AWTEventMulticaster.remove(hierarchyListener4, hierarchyListener5);
      AWTEventMulticaster.remove((HierarchyListener) null, hierarchyListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Stack<Month> stack0 = new Stack<Month>();
      DefaultComboBoxModel<Month> defaultComboBoxModel0 = new DefaultComboBoxModel<Month>(stack0);
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      CardLayout cardLayout0 = new CardLayout();
      jComboBox0.setLayout(cardLayout0);
      jComboBox0.getPropertyChangeListeners();
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      jComboBox1.getActionListeners();
      Month[] monthArray0 = new Month[8];
      Month month0 = Month.DECEMBER;
      monthArray0[0] = month0;
      Month month1 = Month.SEPTEMBER;
      monthArray0[1] = month1;
      Month month2 = Month.JUNE;
      monthArray0[2] = month2;
      Month month3 = Month.JANUARY;
      monthArray0[2] = month3;
      monthArray0[4] = month2;
      monthArray0[5] = month1;
      Month month4 = Month.MAY;
      monthArray0[6] = month4;
      Month month5 = Month.AUGUST;
      monthArray0[7] = month5;
      JComboBox<Month> jComboBox2 = new JComboBox<Month>(monthArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.3016087164076335
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "MYc");
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.subList((int) (byte)70, (int) (byte) (-128));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(70) > toIndex(-128)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      jComboBox0.getComponents();
      jComboBox0.getInheritsPopupMenu();
      jComboBox0.removeAll();
      jComboBox0.getDebugGraphicsOptions();
      jComboBox0.setCursor((Cursor) null);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      jComboBox2.getActionListeners();
      JComboBox<Month> jComboBox3 = new JComboBox<Month>();
      JComboBox<Month> jComboBox4 = new JComboBox<Month>();
      JComboBox<Month> jComboBox5 = new JComboBox<Month>();
      float[] floatArray0 = new float[4];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 0;
      floatArray0[3] = (-1924.014F);
      Kernel kernel0 = new Kernel(0, 0, floatArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.subList(850, (-207), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(850) > toIndex(-207)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 13;
      intArray0[1] = 44;
      int int0 = 0;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "z`McYH'he[D0Np", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"z`McYH'he[D0Np\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1203));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Stack<Month> stack0 = new Stack<Month>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      jComboBox0.getInheritsPopupMenu();
      jComboBox0.removeAll();
      DefaultEditorKit.CopyAction defaultEditorKit_CopyAction0 = new DefaultEditorKit.CopyAction();
      jComboBox0.addActionListener(defaultEditorKit_CopyAction0);
      jComboBox0.setCursor((Cursor) null);
      jComboBox0.getPropertyChangeListeners();
      jComboBox0.setMaximumRowCount(0);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      JComboBox<Month> jComboBox2 = new JComboBox<Month>(stack0);
      jComboBox2.getActionListeners();
      JComboBox<Month> jComboBox3 = new JComboBox<Month>();
      JComboBox<Month> jComboBox4 = new JComboBox<Month>();
      JComboBox<Month> jComboBox5 = new JComboBox<Month>();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      jComboBox2.setName("sf#[aZq:A<+7 >O&");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(920, (-862), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements((-1695), (Collection<VisualPageListItem>) arrayDeque0);
      assertEquals(0, arrayDeque0.size());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener2, containerListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, containerListener2);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster2);
      float[] floatArray0 = new float[8];
      floatArray0[0] = 2463.1624F;
      floatArray0[2] = (float) (-2187);
      floatArray0[3] = (float) (-2187);
      floatArray0[4] = (float) 14;
      floatArray0[6] = (-1241.147F);
      floatArray0[7] = 1.0F;
      Object object0 = visualListModel0.getElementAt(14);
      assertNull(object0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<Month> stack0 = new Stack<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>(stack0);
      jComboBox0.setMaximumRowCount(1);
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      jComboBox2.setName("");
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(3);
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap0 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      TransposeType transposeType0 = TransposeDescriptor.ROTATE_90;
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap2 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap0);
      RenderingHints renderingHints2 = new RenderingHints(hashMap2);
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<PdfGraphics2D.HyperLinkKey, PropertyChangeListenerProxy> hashMap4 = new HashMap<PdfGraphics2D.HyperLinkKey, PropertyChangeListenerProxy>();
      RenderingHints renderingHints3 = new RenderingHints(hashMap2);
      HashMap<RenderingHints.Key, Integer> hashMap5 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer0 = new Integer(20000);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap6 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      hashMap3.put(pdfGraphics2D_HyperLinkKey0, integer3);
      HashMap<PdfGraphics2D.HyperLinkKey, PropertyChangeListenerProxy> hashMap7 = new HashMap<PdfGraphics2D.HyperLinkKey, PropertyChangeListenerProxy>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap8 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap9 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap8);
      hashMap9.values();
      RenderingHints renderingHints4 = new RenderingHints(hashMap3);
      RenderingHints renderingHints5 = new RenderingHints(hashMap5);
      HashMap<RenderingHints.Key, InputStream> hashMap10 = new HashMap<RenderingHints.Key, InputStream>();
      RenderingHints renderingHints6 = new RenderingHints(hashMap3);
      assertEquals(1, renderingHints6.size());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener2, containerListener2);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "bQt9|");
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, containerListener2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster3);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(90, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 90
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Stack<Month> stack0 = new Stack<Month>();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      JComboBox<Month> jComboBox1 = new JComboBox<Month>(stack0);
      jComboBox0.getActionListeners();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      jComboBox1.addMouseWheelListener((MouseWheelListener) null);
      jComboBox1.setName("");
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JComboBox<Month> jComboBox0 = new JComboBox<Month>();
      jComboBox0.getInheritsPopupMenu();
      jComboBox0.removeAll();
      jComboBox0.getDebugGraphicsOptions();
      jComboBox0.getPropertyChangeListeners();
      JComboBox<Month> jComboBox1 = new JComboBox<Month>();
      JComboBox<Month> jComboBox2 = new JComboBox<Month>();
      jComboBox2.getActionListeners();
      JComboBox<Month> jComboBox3 = new JComboBox<Month>();
      JComboBox<Month> jComboBox4 = new JComboBox<Month>();
      JComboBox<Month> jComboBox5 = new JComboBox<Month>();
      jComboBox2.setName("sf#[aZq:A<+7 >O&");
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getElements();
      int int0 = 121;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(121, "ow m:e- 16+E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      int int0 = (-347);
      Integer integer0 = new Integer(1);
      RenderingHints renderingHints1 = new RenderingHints(sunHints_Key0, renderingHints0);
      renderingHints0.entrySet();
      // Undeclared exception!
      try { 
        renderingHints0.put(integer0, (Object) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.817067682028183
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      visualListModel0.appendAllElements(vector0);
      vector0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      vector0.clear();
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(vector0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertFalse(visualListModel0.equals((Object)visualListModel2));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(2273, 116, true);
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap0 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      PipedInputStream pipedInputStream0 = new PipedInputStream(116);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, pipedInputStream0);
      TransposeType transposeType0 = TransposeDescriptor.ROTATE_90;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap2 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap0);
      RenderingHints renderingHints2 = new RenderingHints(hashMap1);
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap4 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap2);
      RenderingHints renderingHints3 = new RenderingHints(hashMap0);
      RenderingHints renderingHints4 = new RenderingHints(hashMap0);
      HashMap<RenderingHints.Key, InputStream> hashMap5 = new HashMap<RenderingHints.Key, InputStream>();
      RenderingHints renderingHints5 = new RenderingHints(hashMap5);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-537), 1, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NHPXVHEFVwVuM)iJb");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NHPXVHEFVwVuM)iJb");
      visualListModel0.elementsChanged();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NHPXVHEFVwVuM)iJb");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NHPXVHEFVwVuM)iJb");
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.180066384203239
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-2236), 5);
      visualListModel0.subList(0, 0, true);
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap0 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, sunHints_Key0);
      TransposeType transposeType0 = TransposeDescriptor.ROTATE_90;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      SeekableStream seekableStream0 = mock(SeekableStream.class, new ViolatedAssumptionAnswer());
      FPXDecodeParam fPXDecodeParam0 = mock(FPXDecodeParam.class, new ViolatedAssumptionAnswer());
      FPXDescriptor.create(seekableStream0, fPXDecodeParam0, renderingHints0);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      hashMap1.put(pdfGraphics2D_HyperLinkKey0, integer0);
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap2 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap0);
      RenderingHints renderingHints2 = new RenderingHints(hashMap1);
      float[] floatArray0 = new float[9];
      floatArray0[0] = (float) 2656;
      floatArray0[1] = (float) 2656;
      floatArray0[2] = (-1241.147F);
      floatArray0[3] = (float) 2656;
      floatArray0[4] = (float) (-2187);
      floatArray0[5] = 0.0F;
      floatArray0[6] = (-156.7811F);
      floatArray0[7] = (-1241.147F);
      floatArray0[8] = (-1241.147F);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-2187), (-2187), floatArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data array too small (is 9 and should be 4782969
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, false);
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap0 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, sunHints_Key0);
      TransposeType transposeType0 = TransposeDescriptor.ROTATE_90;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      SeekableStream seekableStream0 = mock(SeekableStream.class, new ViolatedAssumptionAnswer());
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap2 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap0);
      RenderingHints renderingHints2 = new RenderingHints(hashMap1);
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap4 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap2);
      RenderingHints renderingHints3 = new RenderingHints(hashMap2);
      RenderingHints renderingHints4 = new RenderingHints(hashMap1);
      HashMap<RenderingHints.Key, InputStream> hashMap5 = new HashMap<RenderingHints.Key, InputStream>();
      RenderingHints renderingHints5 = new RenderingHints(hashMap2);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel((-1342), 2656, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-1043), 0, true);
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap0 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, hashMap0);
      TransposeType transposeType0 = TransposeDescriptor.ROTATE_90;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap2 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap0);
      RenderingHints renderingHints2 = new RenderingHints(hashMap1);
      HashMap<RenderingHints.Key, Integer> hashMap3 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer0 = new Integer(0);
      Integer integer1 = new Integer(1);
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap4 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer3 = JLayeredPane.DEFAULT_LAYER;
      hashMap4.put(pdfGraphics2D_HyperLinkKey0, integer3);
      HashMap<PdfGraphics2D.HyperLinkKey, PropertyChangeListenerProxy> hashMap5 = new HashMap<PdfGraphics2D.HyperLinkKey, PropertyChangeListenerProxy>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap6 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap7 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashMap6);
      hashMap2.values();
      RenderingHints renderingHints3 = new RenderingHints(hashMap3);
      RenderingHints renderingHints4 = new RenderingHints(hashMap2);
      HashMap<RenderingHints.Key, InputStream> hashMap8 = new HashMap<RenderingHints.Key, InputStream>();
      RenderingHints renderingHints5 = new RenderingHints(hashMap4);
      Kernel kernel0 = null;
      try {
        kernel0 = new Kernel(1, 295, (float[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.Kernel", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster0, (MouseListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster2, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster6, (WindowFocusListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster5, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster5, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster8, (ItemListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster10, (MouseListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster7, (FocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((ActionListener) aWTEventMulticaster2, (ActionListener) aWTEventMulticaster0);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(1024, 523, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseListener) aWTEventMulticaster0, (MouseListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster2, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster9, (ItemListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster11, (MouseListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((FocusListener) defaultCaret0, (FocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster12, (InputMethodListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster8, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) null);
      AWTEventMulticaster.add((ActionListener) aWTEventMulticaster6, (ActionListener) aWTEventMulticaster5);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.removeElements(intArray0, true);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sunHints_Key0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      RenderingHints renderingHints1 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, sunHints_LCDContrastKey0);
      HashMap<RenderingHints.Key, Month> hashMap0 = new HashMap<RenderingHints.Key, Month>();
      RenderingHints renderingHints2 = new RenderingHints(hashMap0);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>(13, 1819.6542F);
      RenderingHints renderingHints3 = new RenderingHints(hashtable0);
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      Hashtable<RenderingHints.Key, PropertyChangeListenerProxy> hashtable1 = new Hashtable<RenderingHints.Key, PropertyChangeListenerProxy>();
      HashMap<RenderingHints.Key, PropertyChangeListenerProxy> hashMap2 = new HashMap<RenderingHints.Key, PropertyChangeListenerProxy>(hashtable1);
      RenderingHints renderingHints4 = new RenderingHints(hashtable0);
      HashMap<RenderingHints.Key, InputStream> hashMap3 = new HashMap<RenderingHints.Key, InputStream>();
      visualListModel0.moveDownIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Month month0 = Month.OCTOBER;
      Stack<Month> stack0 = new Stack<Month>();
      stack0.add(month0);
      Boolean boolean0 = new Boolean(true);
      Stack<Month> stack1 = new Stack<Month>();
      Month month1 = Month.MAY;
      Month month2 = Month.MARCH;
      Month month3 = Month.JUNE;
      stack1.add(month3);
      // Undeclared exception!
      try { 
        stack0.insertElementAt(month2, (-791));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
