/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 12:59:24 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3203928312357034
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Random.setNextRandom(2146633167);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-1714));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoFrameRate((-1714));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(3);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture((HomeTexture) null);
      homeEnvironment1.setVideoFrameRate(3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment1.setVideoWidth(0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoHeight(2146633167);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.getVideoHeight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RATIO_2_1", propertyChangeListener0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      System.setCurrentTimeMillis(2072L);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom((-2145427653));
      homeEnvironment1.getDrawingMode();
      System.setCurrentTimeMillis((-5372L));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.258303007954067
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("$VALUES", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("$VALUES", "+(n", homeEnvironment0, homeEnvironment_Property0);
      propertyChangeEvent0.setPropagationId("$VALUES");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.getVideoCameraPath();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      homeEnvironment0.setVideoQuality(1406);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setSkyColor(14);
      homeEnvironment0.getPhotoWidth();
      System.setCurrentTimeMillis((-3066L));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("XuO(2H");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.XuO(2H
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(48, 48, 326.6F, 3295.5542F, 3295.5542F, 2818.8F, 48, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(0L, (-2787.0F), 1.3333334F, (-1150L), 2818.8F, 48, 110L, camera_Lens1);
      camera0.setLens(camera_Lens0);
      camera0.setCamera(camera1);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      camera0.clone();
      Object object4 = new Object();
      Camera camera2 = new Camera(48, 193.648F, (-5004.501F), (-5004.501F), 1.0F, 0.0F, (-1150L), camera_Lens0);
      camera2.setX((-845.22F));
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, (-845.22F), (-2787.0F), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(48, homeTexture0, (-772), homeTexture0, 2227, 2227);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      // Undeclared exception!
      try { 
        homeEnvironment0.setSkyTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      homeEnvironment0.clone();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      String string0 = "q\"r}0";
      homeEnvironment0.setVideoQuality(1);
      byte[] byteArray1 = new byte[5];
      byteArray1[4] = (byte)58;
      byteArray1[1] = (byte)83;
      byteArray1[2] = (byte)76;
      byteArray1[3] = (byte) (-68);
      byteArray1[4] = (byte)46;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      homeEnvironment0.getVideoQuality();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("q\"r}0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.q\"r}0
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Random.setNextRandom(4530);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1824);
      homeEnvironment0.setVideoQuality(728);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setLightColor((-3314));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setWallsAlpha((-3166.306F));
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment1.setPhotoWidth((-3314));
      System.setCurrentTimeMillis(320);
      homeEnvironment1.setPhotoWidth(10);
      homeEnvironment1.setSubpartSizeUnderLight(10);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Random.setNextRandom(10);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setLightColor(12);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      homeEnvironment1.getSubpartSizeUnderLight();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "965^OsR<\"ah");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-738));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "965^OsR<\"ah", (Content) null, (-738), 684.22516F, "");
      TexturesCategory texturesCategory0 = new TexturesCategory((String) null);
      catalogTexture0.setCategory(texturesCategory0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.getVideoHeight();
      System.setCurrentTimeMillis((-553));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("5<|t\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.5<|t\"
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.733857589601352
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertTrue(boolean0);
      
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      assertFalse(homeEnvironment2.isObserverCameraElevationAdjusted());
      
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-621.8691F), 627L, (-2173.8F), 1183.4731F, 543.048F, 1183.4731F, (-1714), camera_Lens0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("q\"r}0", "", "", object0);
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object2, "q\"r}0", propertyChangeEvent0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1115.0518F), (-621.8691F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1622, homeTexture0, (-1714), 3253, (-1121.3448F));
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getPhotoWidth();
      Random.setNextRandom((-1714));
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2990696902149015
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      String string0 = "o'pV5..n~VQ.";
      homeEnvironment0.setPhotoQuality((-2336));
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoQuality((-3105));
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setSkyColor((-3105));
      homeEnvironment1.setGroundColor((-3105));
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("applicationSubFolder");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.applicationSubFolder
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("(2KwiAVcsr6#J~%m];", propertyChangeListener0);
      homeEnvironment0.setVideoFrameRate(9);
      String string0 = null;
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, (String) null, (Object) null, "(2KwiAVcsr6#J~%m];");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      int int0 = (-1224);
      homeEnvironment1.setVideoQuality((-1224));
      homeEnvironment1.getVideoCameraPath();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment1.getVideoWidth();
      homeEnvironment1.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("uk74nwVkycQ5Z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.uk74nwVkycQ5Z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3787438509194208
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-93));
      homeEnvironment0.setLightColor((-93));
      homeEnvironment0.setPhotoWidth(3789);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getGroundTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(3789);
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.setVideoQuality(3789);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getGroundTexture();
      homeEnvironment1.getVideoFrameRate();
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      assertEquals(HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED, homeEnvironment_Property0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      TexturesCategory texturesCategory0 = new TexturesCategory("PS (s=wP5~");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-1470));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-1470), homeEnvironment0.getVideoFrameRate());
      assertEquals(320, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate(1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.CEILING_LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Xh\"|", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment1.setSubpartSizeUnderLight((-684.0F));
      homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals((-684.0F), homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
      
      homeEnvironment0.getSkyTexture();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockURL.getFileExample();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("temporarySubFolder", "hct=J`nS", "", "temporarySubFolder");
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("", "J~", camera_Lens0, propertyChangeEvent0);
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("J~", "", "", "hct=J`nS");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-411));
      homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals((-411), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", temporaryURLContent0, 652.18F, 0.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-46), homeTexture0, (-503), (-2135), 1.0F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2135), homeTexture0, (-1714), (-1714), (-1714));
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("q\"r}0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.q\"r}0
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality((-1012));
      homeEnvironment0.setCeillingLightColor((-1012));
      homeEnvironment0.setVideoQuality((-1012));
      homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor((-1012));
      homeEnvironment0.setLightColor((-1012));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSubpartSizeUnderLight((-1012));
      assertEquals((-1012.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockURL.getFileExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q\"r}0");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2135), (HomeTexture) null, 12, (-46), 2560.0F);
      homeEnvironment0.getLightColor();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, (-1756.74F), 1.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(687, homeTexture0, 687, homeTexture0, 518, (-702.859F));
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.114844077099887
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment1.getVideoWidth();
      System.setCurrentTimeMillis((-4205L));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("4alu=XxX");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.4alu=XxX
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.023907271562916
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, (-1714), 1.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1714), homeTexture0, (-2135), homeTexture0, (-46), 652.18F);
      homeEnvironment0.setPhotoQuality((-1470));
      homeEnvironment0.setWallsAlpha((-46));
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setSubpartSizeUnderLight((-1470));
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight((-2135));
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-2339));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.clone();
      homeEnvironment1.isAllLevelsVisible();
      assertEquals((-1470), homeEnvironment0.getPhotoQuality());
      assertEquals((-2339), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(1.0F, 0, 1.0F, 1.0F, 1.0F, 1.0F, 0, camera_Lens0);
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "user.home", object5, "com.eteks.sweethome3d.model.Camera");
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.023907271562916
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", "", resourceURLContent0, (-1115.0518F), 1.0F, "q\"r}0");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1714), homeTexture0, (-2135), homeTexture0, (-46), 652.18F);
      homeEnvironment0.setPhotoQuality((-1470));
      homeEnvironment0.setWallsAlpha((-46));
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setSubpartSizeUnderLight((-1470));
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoHeight((-2135));
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.setPhotoHeight((-2339));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals((-2135), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.8851218920964303
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.setSubpartSizeUnderLight((-46));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object2, "", "", homeEnvironment0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setVideoWidth(40);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getVideoHeight();
      Random.setNextRandom((-2272));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.847642989259894
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.setSubpartSizeUnderLight((-46));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object2, "", "", homeEnvironment0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setVideoWidth(40);
      homeEnvironment0.setWallsAlpha(776.7F);
      Camera camera0 = new Camera(0, (-517.1F), 543.28F, (-517.1F), 1.3333334F, (-46));
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera1 = new Camera(512.1F, 44.35683F, (-2135.0F), 44.35683F, 512.1F, 0, 0, camera_Lens0);
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera1, "", object2, object3);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("Uhb-D[>]U]p", "N8E;v']>hZ$(o[_:", object1, propertyChangeEvent1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("PINHOLE", propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-46.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-46), int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.4461986360336296
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      homeEnvironment1.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setPhotoHeight(1);
      homeEnvironment1.setGroundColor(1);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment3.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment2.setLightColor(1);
      homeEnvironment1.setCeillingLightColor(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality(1);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment5 = homeEnvironment1.clone();
      homeEnvironment4.setCeillingLightColor((-763));
      homeEnvironment5.getVideoWidth();
      homeEnvironment3.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment4.getSkyColor();
      homeEnvironment4.setVideoWidth(320);
      homeEnvironment4.getVideoAspectRatio();
      assertEquals((-763), homeEnvironment4.getCeillingLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", "", resourceURLContent0, (-1714), 1.0F, "q\"r}0");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      MockURL.getHttpExample();
      MockURL.getHttpExample();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "C/s G'/gnC", resourceURLContent0, (-46), 2484.1118F, "VIDEO_ASPECT_RATIO");
      CatalogTexture catalogTexture2 = new CatalogTexture("VIDEO_ASPECT_RATIO", temporaryURLContent0, (-46), 652.18F);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture0, 2, homeTexture1, 256, 1.3333334F);
      homeEnvironment0.setPhotoHeight(15);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setWallsAlpha((-1714));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      catalogTexture1.getCategory();
      catalogTexture2.setCategory((TexturesCategory) null);
      homeEnvironment1.setPhotoHeight((-46));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoFrameRate();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality((-3438));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setSkyColor(3);
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      homeEnvironment0.setWallsAlpha((-4081.783F));
      homeEnvironment0.setGroundColor(1);
      homeEnvironment0.setSubpartSizeUnderLight((-4081.783F));
      homeEnvironment0.setSkyColor(13684944);
      homeEnvironment0.getGroundTexture();
      int int0 = 13;
      Random.setNextRandom(13);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("os.name");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.os.name
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-907.8918F), (-356.0F), (-907.8918F), (-907.8918F), (-907.8918F), 0, (-1194L), camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "WALLS_ALPHA", object2, object3);
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object5, "", object5, object6);
      Object object7 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("J~", "", object7, object2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getVideoAspectRatio();
      System.setCurrentTimeMillis((-1194L));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(65, 65, 326.6F, 3295.5542F, 3295.5542F, 0L, 65, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(0L, (-1150L), 1.3333334F, (-1150L), 65, 65, 110L, camera_Lens1);
      camera1.setZ(2496.4084F);
      camera0.setLens(camera_Lens0);
      camera0.setCamera(camera1);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("z", propertyChangeListener0);
      camera0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Camera camera2 = camera0.clone();
      camera2.setName("\"18'<(&ht2RE/3w7");
      camera2.clone();
      Object object5 = new Object();
      Camera camera3 = new Camera(1.0F, (-1150L), 3295.5542F, 415.851F, 1976.0F, 1.0F, 110L, camera_Lens1);
      camera3.setX(193.648F);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(442);
      homeEnvironment0.clone();
      assertEquals(442, homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("", "WALLS_ALPHA", object2, object3);
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object5, "", object5, object6);
      Object object7 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("J~", "", object7, object2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment1.getVideoAspectRatio();
      System.setCurrentTimeMillis((-1194L));
      System.setCurrentTimeMillis((-1086L));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(65, 65, 326.6F, 3295.5542F, 3295.5542F, 2818.8F, 65, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera.Lens camera_Lens2 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(0L, (-2787.0F), 1.3333334F, (-1150L), 2818.8F, 65, 110L, camera_Lens2);
      camera0.setLens(camera_Lens0);
      camera0.setCamera(camera1);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Camera camera2 = camera0.clone();
      camera2.clone();
      Object object4 = new Object();
      Camera camera3 = new Camera(65, 65, (-5004.501F), (-5004.501F), 1.0F, 0.0F, (-1150L), camera_Lens1);
      camera3.setX((-845.22F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object4, "%v-&R", camera3, camera_Lens0);
      Object object5 = new Object();
      Object object6 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2.0F);
      homeEnvironment0.clone();
      assertEquals(2.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6401461330725327
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((-1194L), (-356.0F), 0, (-356.0F), (-621.8691F), 1.0F, 600000L, camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera_Lens0, "", "", object0);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(camera1, "", "", object0);
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("", "temp", camera0, (Object) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setPhotoQuality(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("Mac OS X");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.Mac OS X
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(368, (HomeTexture) null, 2703, 2703, 368);
      homeEnvironment0.setPhotoHeight((-605));
      homeEnvironment0.setPhotoHeight(2703);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoHeight(2703);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoWidth();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.eteks/sweethome3d/work");
      FileSystemHandling.createFolder(evoSuiteFile0);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.setWallsAlpha((-1.2380146F));
      homeEnvironment0.setPhotoHeight(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getPhotoHeight();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("PHOTO_HEIGHT");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.PHOTO_HEIGHT
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2146231469));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2146231469), homeEnvironment0.getPhotoQuality());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("editorSubFolder", "editorSubFolder", uRLContent0, (-2146735394), (-272.0F), "editorSubFolder");
      TexturesCategory texturesCategory0 = new TexturesCategory("17JI:)kF@0(s3GR");
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture0.getCategory();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1363, homeTexture0, (-2146735394), homeTexture0, (-1032), (-539.16F));
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("editorSubFolder");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.editorSubFolder
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System.setCurrentTimeMillis(1664L);
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("5;%", "editorSubFolder", uRLContent0, (-2146735394), (-272.0F), (String) null);
      TexturesCategory texturesCategory0 = new TexturesCategory((String) null);
      CatalogTexture catalogTexture1 = new CatalogTexture("e{wX]tk<+$;!", "pV", uRLContent0, (-272.0F), 2156.8372F, "", true);
      catalogTexture1.setCategory(texturesCategory0);
      catalogTexture0.getCategory();
      CatalogTexture catalogTexture2 = new CatalogTexture("SKY_TEXTURE", uRLContent0, (-1851.9941F), 2156.8372F);
      catalogTexture2.setCategory(texturesCategory0);
      CatalogTexture catalogTexture3 = new CatalogTexture("editorSubFolder", uRLContent0, (-1115.0518F), 1015.77F);
      catalogTexture0.compareTo(catalogTexture3);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2146735394), homeTexture0, 12, 0, (-1115.0518F));
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      assertEquals(HomeEnvironment.DrawingMode.FILL, homeEnvironment_DrawingMode0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.007081920694827
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", "", resourceURLContent0, (-1714), 1.0F, "q\"r}0");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("q\"r}0", propertyChangeListenerProxy0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-46), homeTexture1, (-46), homeTexture1, (-1714), (-1714));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor((-1714));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoQuality();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyColor();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getGroundColor();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2145429162), homeTexture1, (-505), homeTexture0, (-1470), 0.0F);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getGroundColor();
      int int0 = homeEnvironment1.getVideoQuality();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setObserverCameraElevationAdjusted(true);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      System.setCurrentTimeMillis((-2125L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(2143856141);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(2143856141, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 1045.6F);
      homeEnvironment0.setAllLevelsVisible(true);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("MNRF?]0mN@", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "Unsupported aspect ratio ", object2, (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoWidth((-741));
      homeEnvironment0.setCeillingLightColor((-741));
      assertEquals((-556), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, (HomeTexture) null, 2, 2, 2);
      homeEnvironment0.setLightColor(11053224);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoQuality((-2339));
      homeEnvironment0.setVideoQuality(2);
      homeEnvironment0.setGroundColor(2);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getVideoAspectRatio());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.setLightColor(16);
      homeEnvironment0.setCeillingLightColor(0);
      int int0 = 6;
      homeEnvironment0.setGroundColor(6);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getWallsAlpha();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("'oTnQW46");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.'oTnQW46
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", "", resourceURLContent0, (-1714), 1.0F, "q\"r}0");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      MockURL.getHttpExample();
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture1 = new CatalogTexture("VIDEO_ASPECT_RATIO", "C/s G'/gnC", resourceURLContent0, (-46), 2484.1118F, "VIDEO_ASPECT_RATIO");
      CatalogTexture catalogTexture2 = new CatalogTexture("VIDEO_ASPECT_RATIO", temporaryURLContent0, (-46), 652.18F);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, 320, homeTexture0, 1052, 320);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      homeEnvironment0.setPhotoHeight(213);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoFrameRate();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(213, homeEnvironment0.getPhotoHeight());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, 1.5F, (-181.0F), 1.5F, (-181.0F), 1.5F, (-1150L), camera_Lens1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("3=dYv<wxy(h%", propertyChangeListener0);
      camera0.setLens(camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-1087));
      homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals((-1087), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, (HomeTexture) null, 33, 2872, (-2144821328));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      assertEquals(7, homeEnvironment0.getGroundColor());
      
      homeEnvironment0.setGroundColor(33);
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(33, homeEnvironment0.getGroundColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3691591637540217
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, 0, 0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      boolean boolean0 = homeEnvironment1.isAllLevelsVisible();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "9}Oe`zN$r");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8331547833861124
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Camera camera0 = new Camera(1519, 1519, 1519, 1519, (-996.15F), 1238.5256F);
      Camera camera1 = new Camera(0.0F, 363.03915F, 0.0F, 1519, 1238.5256F, 1519);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "com.eteks.sweethome3d.model.Camera$Property", camera1, camera0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.Camera$Property", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1519, (HomeTexture) null, 1519, 7, 1377.3376F);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment2.setPhotoWidth(2372);
      homeEnvironment1.setPhotoHeight(1519);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setSubpartSizeUnderLight(1.5F);
      homeEnvironment0.setPhotoQuality(2372);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.setPhotoWidth(2372);
      int int0 = homeEnvironment1.getPhotoWidth();
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment1.getVideoAspectRatio());
      assertEquals(400, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Random.setNextRandom(42);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "M]x?`r");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      homeEnvironment0.setVideoQuality(13684944);
      homeEnvironment0.setVideoFrameRate(13684944);
      homeEnvironment0.getVideoWidth();
      HomeEnvironment.Property.valueOf("VIDEO_WIDTH");
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(13684944, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z|a_sOtitMIkc9");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K<%'O");
      MockURL.getFileExample();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "applicationSubFolder");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "S)I4Vt.");
      MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K<%'O");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LIGHT_COLOR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "z|a_sOtitMIkc9");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-164));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals((-164), int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(65, 65, 326.6F, 3295.5542F, 3295.5542F, 2818.8F, 65, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera.Lens camera_Lens2 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(0L, (-2787.0F), 1.3333334F, (-1150L), 2818.8F, 65, 110L, camera_Lens2);
      camera0.setLens(camera_Lens0);
      camera0.setCamera(camera1);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Camera camera2 = camera0.clone();
      camera2.clone();
      Object object5 = new Object();
      Camera camera3 = new Camera(65, 193.648F, (-5004.501F), (-5004.501F), 1.0F, 0.0F, (-1150L), camera_Lens1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object5, "", camera3, camera_Lens0);
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-1.0F));
      homeEnvironment0.clone();
      assertEquals((-1.0F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("PS (s=wP5~", resourceURLContent0, 65, 65);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(65, homeTexture0, (-2088), homeTexture0, 7, 0.0F);
      homeEnvironment0.getSkyTexture();
      assertEquals(7, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2088), homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(65, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-621.8691F), 627L, (-2173.8F), 1213.1222F, 1213.1222F, 1213.1222F, (-1714), camera_Lens0);
      Object object0 = new Object();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("eemprarySub!older", "hct=J`nS", "K", "eemprarySub!older");
      propertyChangeEvent0.setPropagationId("hct=J`nS");
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("", "J~", camera_Lens0, propertyChangeEvent0);
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("J~", "K", "", "hct=J`nS");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(973);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment1.getPhotoAspectRatio());
      
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "q\"r}0", resourceURLContent0, 0.0F, 2.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3379, homeTexture0, 1461, homeTexture0, (-1297), (-1.0F));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundTexture();
      assertEquals(1461, homeEnvironment0.getSkyColor());
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(3379, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1297), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PS (s=wP5~", "3B@\"[^4[Mu;l", temporaryURLContent0, 1000.51746F, (-99.3F), "RATIO_2_1");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(65, homeTexture0, (-2088), homeTexture0, 65, 1000.51746F);
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-2088), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(1000.51746F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(65, homeEnvironment0.getGroundColor());
      assertEquals(65, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("mSy;'uva.CPO|-[%2@", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setWallsAlpha((-2868.0F));
      homeEnvironment0.clone();
      assertEquals((-2868.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.0983891977172062
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.eteks/sweethome3d/work");
      FileSystemHandling.createFolder(evoSuiteFile0);
      resourceURLContent0.getJAREntryURL();
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, 0.0F, 0.0F, "", true);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "", temporaryURLContent0, 0.0F, (-300.26F), "");
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", temporaryURLContent0, (-300.26F), 1.0F, "", true);
      catalogTexture0.compareTo(catalogTexture2);
      resourceURLContent0.getJAREntryURL();
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.setWallsAlpha((-1.0F));
      homeEnvironment0.setPhotoHeight(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setVideoFrameRate(25);
      homeEnvironment0.setLightColor((-742));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoWidth((-1661));
      homeEnvironment0.getGroundTexture();
      assertEquals((-1661), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1519, (HomeTexture) null, (-1), (HomeTexture) null, 1519, 1.3333334F);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoWidth(1519);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(1519, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(65, 65, 326.6F, 3295.5542F, 3295.5542F, 2818.8F, 65, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera.Lens camera_Lens2 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(0L, (-2787.9548F), 1.3333334F, (-1150L), 2818.8F, 65, 110L, camera_Lens2);
      camera0.setLens(camera_Lens0);
      camera0.setCamera(camera1);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Camera camera2 = camera0.clone();
      camera2.clone();
      Object object5 = new Object();
      Camera camera3 = new Camera(65, 193.648F, (-5004.501F), (-5004.501F), 1.0F, 0.0F, (-1150L), camera_Lens1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object5, "L%vCAR", camera3, camera_Lens0);
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(739.41F, (-2031.456F), 1.7777778F, (-1.0F), (-1.0F), 0L, 0L, camera_Lens0);
      linkedList0.add(camera0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera((-2031.456F), 1056.088F, 1.7777778F, 739.41F, (-137.0F), (-2593.6528F), 0L, camera_Lens1);
      linkedList0.add(camera1);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(320, int0);
      
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int1 = homeEnvironment0.getPhotoWidth();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(400, int1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(1183.4731F, 1183.4731F, 1183.4731F, 6.991777F, (-3671.324F), 0.0F, 1230L, camera_Lens0);
      Object object0 = new Object();
      Object object1 = new Object();
      Camera.Lens camera_Lens1 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera((-2173.8F), (-3671.324F), 627L, 2338.21F, 65, (-2728.0F), 1230L, camera_Lens1);
      Object object2 = new Object();
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "com.eteks.sweethome3d.tools.ResourceURLContent", object2, object3);
      Object object4 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("", "mO-c6tr*S~", camera1, "com.eteks.sweethome3d.tools.ResourceURLContent");
      Object object5 = new Object();
      Camera camera2 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(object5, (String) null, camera_Lens0, camera2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.getPhotoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(1342);
      homeEnvironment0.clone();
      assertEquals(1342, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", temporaryURLContent0, (-6L), (-272.0F), "editorSubFolder");
      TexturesCategory texturesCategory0 = new TexturesCategory("r`}BV(Dtpw.he.");
      CatalogTexture catalogTexture1 = new CatalogTexture("", temporaryURLContent0, (-1.0F), (-2146735394), false);
      catalogTexture1.setCategory(texturesCategory0);
      catalogTexture1.getCategory();
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture2 = new CatalogTexture("", temporaryURLContent0, (-2146735394), (-2146735394));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-1594), (-2146735394), 326.6F);
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      assertEquals(HomeEnvironment.DrawingMode.FILL, homeEnvironment_DrawingMode0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PS (s=wP5~", (Content) null, 628.4723F, 628.4723F, false);
      CatalogTexture catalogTexture1 = new CatalogTexture("PS (s=wP5~", (Content) null, (-3047.8152F), 628.4723F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(10, homeTexture0, 1610612736, homeTexture1, 65, 40.0F);
      // Undeclared exception!
      try { 
        homeEnvironment0.setGroundTexture(homeTexture1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "T'ULt5 -_usi]&*", resourceURLContent0, (-2120), (-2120), "T'ULt5 -_usi]&*", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2120), homeTexture0, (-2120), homeTexture0, (-2120), (-2.14673536E9F));
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals((-2120), homeEnvironment0.getSkyColor());
      assertEquals((-2.14673536E9F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2120), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2120), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      TexturesCategory texturesCategory0 = new TexturesCategory("PHOTO_HEIGHT");
      CatalogTexture catalogTexture0 = new CatalogTexture("UJ](L\"ok+l$.MT;:hh", resourceURLContent0, 578.0F, 578.0F, false);
      TexturesCategory texturesCategory1 = new TexturesCategory("PHOTO_HEIGHT");
      catalogTexture0.setCategory(texturesCategory1);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory(texturesCategory1);
      CatalogTexture catalogTexture1 = new CatalogTexture("editorSubFolder", uRLContent0, 326.6F, 2818.8F);
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, (-1), (-1), 1.3684944E7F);
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      assertEquals(HomeEnvironment.DrawingMode.FILL, homeEnvironment_DrawingMode0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("PS (s=wP5~", (Content) null, 65, 65);
      TexturesCategory texturesCategory0 = new TexturesCategory("PS (s=wP5~");
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", (Content) null, 2027.146F, 1496.0F);
      catalogTexture1.getCategory();
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, "b?Zx", (Content) null, 1496.0F, 2818.8F, "(x::A`/n`A9wLxi-Lpr");
      catalogTexture2.setCategory(texturesCategory0);
      CatalogTexture catalogTexture3 = new CatalogTexture((String) null, (Content) null, 1.0F, 2818.8F);
      catalogTexture1.compareTo(catalogTexture2);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(46, homeTexture0, 46, (-2612), (-2612));
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      assertEquals(HomeEnvironment.DrawingMode.FILL, homeEnvironment_DrawingMode0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      System.setCurrentTimeMillis((-2125L));
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", true);
      CatalogTexture catalogTexture0 = new CatalogTexture(")8i", resourceURLContent0, (-2125L), 1.3333334F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      resourceURLContent0.getJAREntryName();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, (-995), (-995));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-995), homeEnvironment0.getLightColor());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals((-995.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("temp", propertyChangeListener0);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("temp", "temp", "temp", (Object) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, (-109), (HomeTexture) null, (-3241), (-3241));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_QUALITY;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoWidth((-109));
      homeEnvironment0.setPhotoQuality(73);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      assertEquals(HomeEnvironment.DrawingMode.OUTLINE, homeEnvironment0.getDrawingMode());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "q\"r}0");
      HomeEnvironment.Property.values();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", uRLContent0, 5.0F, 5.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(920, homeTexture0, 1975, (-2143), 0.0F);
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1975, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2143), homeEnvironment0.getLightColor());
      assertEquals(920, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(65, 65, 326.6F, 3295.5542F, 3295.5542F, 2818.8F, 65, camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(0L, (-2787.0F), 1.3333334F, (-1150L), 2818.8F, 65, 110L, camera_Lens1);
      camera1.setYaw((-4592.2812F));
      camera0.setLens(camera_Lens0);
      camera0.setCamera(camera1);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Camera camera2 = camera0.clone();
      camera2.setFieldOfView((-388.0F));
      camera2.clone();
      Object object5 = new Object();
      Camera camera3 = new Camera(65, 193.648F, (-5004.501F), (-5004.501F), 1.0F, 0.0F, (-1150L), camera_Lens0);
      camera3.setX((-845.22F));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1847.8F);
      homeEnvironment0.clone();
      assertEquals(1847.8F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getVideoHeight();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(486);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Random.setNextRandom((-2162));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getVideoHeight();
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(365, homeEnvironment0.getVideoHeight());
      assertEquals(486, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.3476688751778507
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1, (HomeTexture) null, 1, (HomeTexture) null, 1, 1);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.getVideoCameraPath();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setPhotoHeight(1);
      homeEnvironment1.setGroundColor(1);
      homeEnvironment2.setLightColor(1);
      homeEnvironment1.setCeillingLightColor(0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment homeEnvironment4 = new HomeEnvironment();
      homeEnvironment1.setObserverCameraElevationAdjusted(false);
      HomeEnvironment homeEnvironment5 = homeEnvironment1.clone();
      homeEnvironment5.getVideoCameraPath();
      homeEnvironment4.setCeillingLightColor((-763));
      homeEnvironment5.getVideoWidth();
      homeEnvironment1.getPhotoHeight();
      homeEnvironment4.getSkyColor();
      homeEnvironment4.setVideoWidth(300);
      homeEnvironment4.getVideoAspectRatio();
      int int0 = homeEnvironment4.getLightColor();
      assertEquals((-763), homeEnvironment4.getCeillingLightColor());
      assertEquals(13684944, int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z|a_sOtitMIkc9");
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("q\"r}0", "z|a_sOtitMIkc9", resourceURLContent0, (-1114.5468F), 1.0F, "q\"r}0");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Object object0 = new Object();
      MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture1 = new CatalogTexture("q\"r}0", "", temporaryURLContent0, 2524.108F, 363.03915F, "~~:o[*d!L~.NE");
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1470), homeTexture1, 5, homeTexture0, 5, 567.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(5);
      assertEquals(5, homeEnvironment1.getSkyColor());
      
      MockURL.getFileExample();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sun.net.www.protocol.");
      HomeTexture homeTexture2 = homeEnvironment0.getSkyTexture();
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertSame(homeTexture2, homeTexture0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1470), homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(567.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(5, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      MockURL.getHttpExample();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(160, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_QUALITY;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("sn-$nxP?/d3nhF0", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor((-2135));
      homeEnvironment0.setCeillingLightColor(3863);
      MockURL.getFileExample();
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~/^k/uiG=[(CFo");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.053085404600997
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-46));
      homeEnvironment0.setSubpartSizeUnderLight((-46));
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", (PropertyChangeListener) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("N8E;v']>hZ$(o[_:", propertyChangeListener0);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setVideoWidth(2145323331);
      homeEnvironment0.getPhotoAspectRatio();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setPhotoQuality(2145323331);
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getVideoCameraPath();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("temp", "Z", (Content) null, (-919.0F), (-2074), "applicationSubFolder", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture(".U", (Content) null, 7, 65, false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2074), homeTexture0, (-2198), 65, (-2074));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2074.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-2198), homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(65, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2074), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      System.setCurrentTimeMillis(1664L);
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("editorSubFolder", "editorSubFolder", uRLContent0, (-2146735394), (-272.0F), "editorSubFolder");
      TexturesCategory texturesCategory0 = new TexturesCategory("17JI:)kF@0(s3GR");
      catalogTexture0.setCategory(texturesCategory0);
      TexturesCategory texturesCategory1 = catalogTexture0.getCategory();
      catalogTexture0.setCategory(texturesCategory1);
      CatalogTexture catalogTexture1 = new CatalogTexture("editorSubFolder", uRLContent0, 1664L, 1664L);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, 0, homeTexture0, (-2013), 567.0F);
      homeEnvironment0.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Random.setNextRandom((-2088));
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("PS (s=wP5~", temporaryURLContent0, 0.012391052F, 1577.0F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, homeTexture0, 8192, homeTexture0, 799, (-1638.043F));
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(7, homeEnvironment0.getGroundColor());
      assertEquals(8192, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-1638.043F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(799, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-1087));
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("temp", "Z", (Content) null, (-919.0F), (-2074), "applicationSubFolder", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture(".U", (Content) null, 7, 11, false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2074), homeTexture0, (-2198), 11, (-2074));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals((-2074.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2074), homeEnvironment0.getGroundColor());
      assertNotNull(homeTexture1);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2198), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Object object0 = new Object();
      Camera camera0 = new Camera(1.3333334F, (-1), 1.3333334F, 1519, (-1), 1.0F);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment0, "", camera0, object1);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("i1IWLa", propertyChangeListener0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setVideoWidth(1519);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setLightColor(13684944);
      assertEquals(1519, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(2328);
      assertEquals(2328, homeEnvironment0.getLightColor());
  }
}
