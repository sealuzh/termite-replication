/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 15:01:46 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.net.URI;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.HandlerBase;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolb.jms.config.onnetioFactories");
      Marshaller.enableDebug = false;
      connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
      connectionFactories0.getXAConnectionFactoryCount();
      StringReader stringReader0 = new StringReader("org.exolb.jms.config.onnetioFactories");
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8299341714698483
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.isValid();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      QueueConnectionFactory queueConnectionFactory1 = connectionFactories0.getQueueConnectionFactory(0);
      assertSame(queueConnectionFactory1, queueConnectionFactory0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7842068034002125
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s5BWylzo-9Q/WLK2r7.");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      byteArray0[0] = (byte) (-4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s5BWylzo-9Q/WLK2r7.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s5BWylzo-9Q/WLK2r7.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`#8kN>}d!rqvzw$ktX");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray1 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray1);
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(1, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.isValid();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(2, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      topicConnectionFactoryArray0[0] = topicConnectionFactory1;
      topicConnectionFactoryArray0[1] = topicConnectionFactory1;
      topicConnectionFactoryArray0[6] = topicConnectionFactory1;
      topicConnectionFactoryArray0[3] = topicConnectionFactory1;
      topicConnectionFactoryArray0[5] = topicConnectionFactory1;
      topicConnectionFactoryArray0[6] = topicConnectionFactory1;
      topicConnectionFactoryArray0[7] = topicConnectionFactory0;
      topicConnectionFactoryArray0[8] = topicConnectionFactory1;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[6];
      int int0 = (-1933);
      try { 
        connectionFactories0.getXAConnectionFactory((-1933));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      int int0 = 4151;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[5];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory0;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactory0.setName("$\"|{&v$$KT)PA%I=_");
      queueConnectionFactory0.setName("org.exolab.jms.config.ConnectionFactories");
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[3] = queueConnectionFactory1;
      queueConnectionFactoryArray0[4] = queueConnectionFactory0;
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      queueConnectionFactoryArray0[6] = queueConnectionFactoryArray0[5];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(8, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      connectionFactories0.getXAConnectionFactory(0);
      int int1 = (-989);
      try { 
        connectionFactories0.getXATopicConnectionFactory((-989));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      connectionFactories0.enumerateXAConnectionFactory();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.getQueueConnectionFactoryCount();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory1);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "IC");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[9];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory(1);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[2];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateQueueConnectionFactory();
      connectionFactories0.enumerateConnectionFactory();
      String string0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("", "", "", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("", locatorImpl0, sAXParseException0);
      sAXParseException1.getMessage();
      xMLFilterImpl0.warning(sAXParseException0);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl2);
      locatorImpl2.getLineNumber();
      locator2Impl1.getPublicId();
      locator2Impl1.setEncoding("ov");
      locator2Impl0.getPublicId();
      locatorImpl1.setPublicId("");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl0);
      locator2Impl1.getPublicId();
      locator2Impl2.getPublicId();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.setSystemId((String) null);
      locator2Impl4.setPublicId("");
      locator2Impl2.setEncoding((String) null);
      SAXParseException sAXParseException2 = new SAXParseException((String) null, locator2Impl3);
      sAXParseException0.getSuppressed();
      xMLFilterImpl0.warning(sAXParseException2);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[18];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(18, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("HK", "HK", "HK", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("_V8xOv0lfDlPk:7yCR1", "HK", "_V8xOv0lfDlPk:7yCR1", 2533, 2533);
      sAXParseException1.getMessage();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl3);
      locatorImpl2.getLineNumber();
      locator2Impl1.getPublicId();
      locator2Impl1.setEncoding("ov");
      locator2Impl0.getPublicId();
      locatorImpl1.setPublicId("HK");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl0);
      locator2Impl1.getPublicId();
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl5.setSystemId((String) null);
      locator2Impl3.getPublicId();
      locator2Impl5.setPublicId("_V8xOv0lfDlPk:7yCR1");
      locator2Impl2.setEncoding((String) null);
      SAXParseException sAXParseException2 = new SAXParseException((String) null, locator2Impl3);
      sAXParseException0.getSuppressed();
      xMLFilterImpl0.warning(sAXParseException2);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[18];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      assertEquals(18, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("294>1HV}1_+E");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.enumerateTopicConnectionFactory();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(107);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte) (-13);
      byteArray0[4] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      assertNull(connectionFactory0.getName());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte) (-16);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Oe{~1$p7C)7haEs");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Oe{~1$p7C)7haEs");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      topicConnectionFactoryArray0[0] = topicConnectionFactory1;
      topicConnectionFactoryArray0[1] = topicConnectionFactory1;
      topicConnectionFactoryArray0[6] = topicConnectionFactory1;
      topicConnectionFactoryArray0[2] = topicConnectionFactory1;
      topicConnectionFactoryArray0[5] = topicConnectionFactory1;
      topicConnectionFactoryArray0[6] = topicConnectionFactory1;
      topicConnectionFactoryArray0[7] = topicConnectionFactory0;
      topicConnectionFactoryArray0[8] = topicConnectionFactory1;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      try { 
        connectionFactories0.setTopicConnectionFactory((-1), topicConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "f");
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "orgexolb.jms.config.onn%tioFactories");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)18;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte) (-121);
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte) (-20);
      byteArray0[8] = (byte)98;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Marshaller.enableDebug = false;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean1 = connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locatorImpl0.setColumnNumber(0);
      locatorImpl0.setSystemId((String) null);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      locatorImpl2.getPublicId();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      locatorImpl3.getPublicId();
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl3);
      locatorImpl3.getLineNumber();
      locatorImpl3.getLineNumber();
      locatorImpl0.getPublicId();
      locator2Impl1.setEncoding((String) null);
      locator2Impl2.getPublicId();
      locator2Impl0.setPublicId(")P");
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl2);
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl3);
      locator2Impl2.getSystemId();
      locatorImpl2.getPublicId();
      locatorImpl2.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl2);
      locator2Impl1.setSystemId("_V8xOv0lfDlPk:SYyCR1");
      locator2Impl4.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locatorImpl2.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl2);
      locator2Impl4.setSystemId((String) null);
      locator2Impl6.getPublicId();
      locator2Impl6.setPublicId("8?dF");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      assertEquals(0, queueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("", (String) null, "org.Sxolab.castor.util.LocalCofguraion", (-934), 2533);
      sAXParseException0.getMessage();
      xMLFilterImpl0.warning(sAXParseException0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      locatorImpl0.setPublicId((String) null);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      sAXParseException0.getStackTrace();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.startPrefixMapping("", "ResetInMiddle");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl4.notationDecl("", "ResetInMiddle", " \"1uL");
      xMLFilterImpl2.warning(sAXParseException0);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl7.setEntityResolver(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl8.startDocument();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl9.getErrorHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      int int0 = 4151;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("HK", "HK", "HK", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("_V8xOv0lfDlPk:7yCR1", "HK", "_V8xOv0lfDlPk:7yCR1", 2533, 2533);
      sAXParseException1.getMessage();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl3);
      locatorImpl2.getLineNumber();
      locator2Impl1.getPublicId();
      locator2Impl1.setEncoding("ov");
      locator2Impl0.getPublicId();
      locatorImpl1.setPublicId("HK");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl0);
      locator2Impl0.getSystemId();
      locator2Impl1.getPublicId();
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl5.setSystemId((String) null);
      locator2Impl3.getPublicId();
      locator2Impl5.setPublicId("_V8xOv0lfDlPk:7yCR1");
      locator2Impl2.setEncoding((String) null);
      SAXParseException sAXParseException2 = new SAXParseException((String) null, locator2Impl3);
      sAXParseException0.getSuppressed();
      xMLFilterImpl0.warning(sAXParseException2);
      StringReader stringReader0 = new StringReader("_V8xOv0lfDlPk:7yCR1");
      stringReader0.read();
      try { 
        connectionFactories0.setTopicConnectionFactory(755, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0SI-tDX|XJ");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "a]G");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\" to '");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      xMLFilterImpl0.endElement("a]G", "", "mapping.fieldTypeMismatch");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      boolean boolean1 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      assertEquals(1, xAConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory((-2299), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2299, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t/a(;O");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      connectionFactories0.getConnectionFactoryCount();
      pipedOutputStream0.connect(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("#]=.gi[nu", "yo2*", "#]=.gi[nu", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("#]=.gi[nu", locatorImpl0, sAXParseException0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      locatorImpl1.getSystemId();
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl1);
      locator2Impl1.setPublicId("i\"quL");
      locator2Impl2.setEncoding("#]=.gi[nu");
      locator2Impl2.getPublicId();
      locator2Impl1.getPublicId();
      locator2Impl0.setPublicId("#]=.gi[nu");
      locatorImpl1.getLineNumber();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl0);
      locator2Impl0.getColumnNumber();
      locator2Impl2.getPublicId();
      locatorImpl0.setPublicId((String) null);
      locator2Impl2.getPublicId();
      locator2Impl1.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl5.getLineNumber();
      locator2Impl5.getSystemId();
      locator2Impl5.setPublicId("i\"quL");
      HandlerBase handlerBase0 = new HandlerBase();
      SAXParseException sAXParseException2 = new SAXParseException((String) null, locator2Impl3);
      sAXParseException2.initCause(sAXParseException1);
      sAXParseException2.getSuppressed();
      connectionFactories0.getXAConnectionFactory();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      URI uRI0 = MockURI.aFileURI;
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      MockFile mockFile0 = new MockFile(uRI1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) locale0;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "nCk*1#T^", objectArray0);
      connectionFactories0.marshal((Writer) printWriter0);
      byte byte0 = (byte)45;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = (-29);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-29), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte) (-13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.setConnectionFactory(11, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[5];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      try { 
        connectionFactories0.getXAConnectionFactory((-4023));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      byte[] byteArray0 = new byte[12];
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-79), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(15, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 15, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.getQueueConnectionFactoryCount();
      StringReader stringReader0 = new StringReader("org.exolab.castor.marshalling.validation");
      connectionFactories0.addTopicConnectionFactory(0, (TopicConnectionFactory) null);
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      connectionFactories0.isValid();
      stringReader0.close();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.enumerateXATopicConnectionFactory();
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "4\\MZ-C|M-";
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      String string1 = "NE+?";
      StringReader stringReader0 = new StringReader("NE+?");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      String string2 = "2c8`";
      StringReader stringReader4 = new StringReader("2c8`");
      StringReader stringReader5 = new StringReader("4MZ-C|M-");
      String string3 = "?kkjo";
      StringReader stringReader6 = new StringReader("?kkjo");
      stringReader6.markSupported();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        stringReader1.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((int) (byte)9, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte)9;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "H([");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.getContentHandler();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("#]=.gi[nu", "", "#]=.gi[nu", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("#]=.gi[nu", locatorImpl0, sAXParseException0);
      xMLFilterImpl0.warning(sAXParseException0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl1);
      locator2Impl1.setPublicId(" \"1uL");
      locator2Impl2.setEncoding("#]=.gi[nu");
      locator2Impl2.getPublicId();
      locator2Impl1.getPublicId();
      locator2Impl0.setPublicId("#]=.gi[nu");
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      locator2Impl2.getPublicId();
      locator2Impl3.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.setPublicId(" \"1uL");
      HandlerBase handlerBase0 = new HandlerBase();
      SAXParseException sAXParseException2 = new SAXParseException((String) null, locator2Impl4);
      sAXParseException2.getSuppressed();
      xMLFilterImpl0.warning(sAXParseException2);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[15];
      topicConnectionFactoryArray0[12] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(15, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)9;
      byteArray0[0] = (byte) (-13);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`#8kN}}d!Tqvzw$k4S");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`#8kN}}d!Tqvzw$k4S");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory((int) (byte)9, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-1355));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "o%qeI";
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-6);
      try { 
        connectionFactories0.getQueueConnectionFactory((-6));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.setXAConnectionFactory((-17), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory((-588), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -588, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte) (-13);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@G}jaC/I");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4sMZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.setConnectionFactory((-14), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte) (-13);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolb.jms.config.onnetioFactories");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("", (String) null, "org.exolab.castor.util.LocalConfiguration", (-934), 2533);
      sAXParseException0.getMessage();
      xMLFilterImpl0.warning(sAXParseException0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locatorImpl0.getPublicId();
      locator2Impl1.getPublicId();
      locator2Impl1.setXMLVersion("");
      locatorImpl0.setPublicId((String) null);
      SAXParseException sAXParseException1 = new SAXParseException("", locator2Impl1);
      xMLFilterImpl0.warning(sAXParseException1);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      sAXParseException0.getStackTrace();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[2] = (byte)9;
      byteArray0[0] = (byte) (-13);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">YAJ&.xZg;CLy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">YAJ&.xZg;CLy");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K^Gn");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactory();
      int int0 = 4151;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      connectionFactories0.getXATopicConnectionFactoryCount();
      String string0 = "b\\AKSgOaSg.GT";
      StringReader stringReader0 = new StringReader("bAKSgOaSg.GT");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("bAKSgOaSg.GT");
      String string1 = "mapping.fieldNotAccessible";
      StringReader stringReader3 = new StringReader("mapping.fieldNotAccessible");
      StringReader stringReader4 = new StringReader("bAKSgOaSg.GT");
      StringReader stringReader5 = new StringReader("vg!w");
      StringReader stringReader6 = null;
      try {
        stringReader6 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      String string0 = "o%qeI";
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-17));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[8];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[7] = xAQueueConnectionFactory0;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(833, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 833, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s5BWBjzo9Q/WLK2rK].");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      byteArray0[0] = (byte) (-4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4MZ-C|M-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`#8kN>}d!rqvzw$ktX");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s5BWBjzo9Q/WLK2rK].");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "s5BWBjzo9Q/WLK2rK].");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`#8kN>}d!rqvzw$ktX");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4MZ-C|M-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      assertNull(topicConnectionFactory0.getName());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory((-38));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-23);
      try { 
        connectionFactories0.getTopicConnectionFactory((-23));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 4;
      try { 
        connectionFactories0.getTopicConnectionFactory(4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte byte0 = (byte)24;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.startPrefixMapping("P9]?pv.<qrd(", " \"1uL");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl4.endDocument();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      char[] charArray0 = new char[8];
      xMLFilterImpl4.startDocument();
      xMLFilterImpl5.ignorableWhitespace(charArray0, 2319, 700);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl5.notationDecl("Tbs^?%", "P9]?pv.<qrd(", " \"1uL");
      xMLFilterImpl1.endPrefixMapping(" \"1uL");
      xMLFilterImpl5.unparsedEntityDecl(" \"1uL", "SSM<%.z&wRs", "Zj_%Ih:g;gq<mfIc1", "Tbs^?%");
      xMLFilterImpl4.characters(charArray0, 56, 700);
      xMLFilterImpl5.getErrorHandler();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl5.setEntityResolver(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl9.setParent(xMLFilterImpl7);
      xMLFilterImpl2.unparsedEntityDecl(" \"1uL", " \"1uL", (String) null, "OMB)<LW");
      xMLFilterImpl7.startDocument();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl11.getErrorHandler();
      connectionFactories0.getXAConnectionFactory();
      try { 
        connectionFactories0.getXAConnectionFactory(213);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      String string0 = "}4lF?";
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      StringWriter stringWriter0 = new StringWriter(2010);
      StringReader stringReader0 = new StringReader("}4lF?");
      char[] charArray0 = new char[3];
      charArray0[0] = 's';
      charArray0[1] = '5';
      charArray0[2] = 'A';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 2010, 48);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("HK", "HK", "HK", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("_V8xOv0lfDlPk:7yCR1", "HK", "_V8xOv0lfDlPk:7yCR1", 2533, 2533);
      sAXParseException1.getMessage();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl3);
      locator2Impl1.getPublicId();
      locator2Impl1.setEncoding("ov");
      locator2Impl0.getPublicId();
      locatorImpl1.setPublicId("HK");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl0);
      locator2Impl0.getSystemId();
      locator2Impl1.getPublicId();
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locatorImpl1.getLineNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl5.setSystemId((String) null);
      locator2Impl3.getPublicId();
      locator2Impl5.setPublicId("_V8xOv0lfDlPk:7yCR1");
      locator2Impl2.setEncoding((String) null);
      SAXParseException sAXParseException2 = new SAXParseException((String) null, locator2Impl3);
      sAXParseException0.getSuppressed();
      xMLFilterImpl0.warning(sAXParseException2);
      try { 
        connectionFactories0.getConnectionFactory(2533);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      String string0 = null;
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      int int0 = 41;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(41, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      int int0 = (-628);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-628), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      locatorImpl1.setColumnNumber(0);
      locatorImpl1.getSystemId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      locatorImpl3.getPublicId();
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl3);
      locatorImpl4.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl4);
      locatorImpl4.getLineNumber();
      locatorImpl1.getPublicId();
      locator2Impl0.setEncoding((String) null);
      locator2Impl1.getPublicId();
      locatorImpl0.setPublicId("");
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl3);
      locator2Impl2.getXMLVersion();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl4);
      locator2Impl1.getSystemId();
      locatorImpl3.getPublicId();
      locatorImpl3.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl0.setSystemId("_V8xOv0lfDlPk:7yCR1");
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locatorImpl3.getColumnNumber();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      locator2Impl3.setSystemId((String) null);
      LocatorImpl locatorImpl5 = new LocatorImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("#]=.gi[Fu", "", "#]=.gi[Fu", 2533, (-2297));
      LocatorImpl locatorImpl0 = new LocatorImpl();
      SAXParseException sAXParseException1 = new SAXParseException("#]=.gi[Fu", locatorImpl0, sAXParseException0);
      xMLFilterImpl0.warning(sAXParseException0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getPublicId();
      locator2Impl1.getPublicId();
      locator2Impl0.setPublicId("#]=.gi[Fu");
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl0);
      locator2Impl2.getPublicId();
      locator2Impl3.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl6.setPublicId(" \"1uL");
      try { 
        connectionFactories0.getQueueConnectionFactory(2533);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(5, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = null;
      try { 
        connectionFactories0.setXAConnectionFactory(12, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      int int0 = (-44);
      int int1 = (-270);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-44));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locatorImpl0.setColumnNumber(0);
      locatorImpl0.setSystemId((String) null);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      locatorImpl2.getPublicId();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl2);
      locatorImpl3.getPublicId();
      Locator2Impl locator2Impl2 = new Locator2Impl(locatorImpl3);
      locatorImpl3.getLineNumber();
      locatorImpl3.getLineNumber();
      locatorImpl0.getPublicId();
      locator2Impl1.setEncoding((String) null);
      locator2Impl2.getPublicId();
      locator2Impl0.setPublicId("");
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl3);
      locator2Impl2.getSystemId();
      locatorImpl2.getPublicId();
      locatorImpl2.getPublicId();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl2);
      locator2Impl1.setSystemId("_V8xOv0lfDlPk:7yCR1");
      locator2Impl4.getPublicId();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locatorImpl2.getLineNumber();
      locator2Impl0.getLineNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl2);
      locator2Impl4.setSystemId((String) null);
      locator2Impl6.getPublicId();
      int int0 = 1889;
      try { 
        connectionFactories0.getXATopicConnectionFactory(1889);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      int int0 = 0;
      int int1 = (-270);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      Marshaller.enableDebug = false;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-270));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.startPrefixMapping(" 1uL", " 1uL");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl4.endDocument();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      char[] charArray0 = new char[8];
      xMLFilterImpl4.startDocument();
      xMLFilterImpl5.ignorableWhitespace(charArray0, 2319, 700);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl5.notationDecl("T@bs^?%", " 1uL", " 1uL");
      xMLFilterImpl1.endPrefixMapping(" 1uL");
      xMLFilterImpl5.unparsedEntityDecl(" 1uL", "SH$SM<%z&wRs", "Zj_%Ih:g;gq<zamfIc1", "T@bs^?%");
      xMLFilterImpl4.characters(charArray0, 56, 700);
      xMLFilterImpl5.getErrorHandler();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl2.getErrorHandler();
      xMLFilterImpl5.setEntityResolver(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl9.setParent(xMLFilterImpl7);
      xMLFilterImpl2.unparsedEntityDecl(" 1uL", " 1uL", "SH$SM<%z&wRs", " 1uL");
      xMLFilterImpl7.startDocument();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl11.notationDecl(" 1uL", "org.exolab.castor.mapping.loader.J1CollectionHandlers$3", "Z6|(i]g/:b}K^Otu^$E");
      xMLFilterImpl11.getErrorHandler();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(56, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 56, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
