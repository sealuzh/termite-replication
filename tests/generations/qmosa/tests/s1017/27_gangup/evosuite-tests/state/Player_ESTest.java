/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 12:58:16 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)70;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player0 = new Player();
      player0.unpack(byteArray0);
      player0.setMoney((-461.07F));
      player0.pack();
      System.setCurrentTimeMillis((short)4919);
      player0.getMoney();
      System.setCurrentTimeMillis((-4790L));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2565, "@-zq=Y", (byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)0;
      Player player1 = new Player(2565, "[=B+HWvrX/R8QHsu2", "@-zq=Y", 2565, (byte)0);
      player1.getSubparty();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream3);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[=B+HWvrX/R8QHsu2");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[=B+HWvrX/R8QHsu2");
      Player player0 = new Player((-31992), "[=B+HWvrX/R8QHsu2", (-31992));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Locale locale0 = Locale.CHINESE;
      Object object0 = new Object();
      Locale locale1 = Locale.CHINESE;
      Object object1 = new Object();
      System.setCurrentTimeMillis((-2272L));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte) (-27);
      byteArray0[3] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-27), 693);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(1463L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"ee");
      Player player0 = new Player(1144, "", (-625));
      player0.id = 1144;
      player0.setDead();
      player0.setConnected(false);
      player0.pack();
      player0.setX((-1.0F));
      player0.setDead((-1211L), false);
      player0.getTimeOfDeath();
      player0.gangStrength();
      player0.pack();
      System.setCurrentTimeMillis((-1211L));
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.2069896651753322
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      Player player1 = new Player();
      player1.prev = (Party) player0;
      player0.setDead((long) (short)4919, true);
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.head = (Party) player0;
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      Player player2 = new Player(3, "0.0.0.0", "", 1272, 0);
      player2.isDead();
      player1.gangStrength();
      Player player3 = new Player((short)4919, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "Z", (short)4919);
      Player player4 = new Player(0, "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "0.0.0.0", 475, 0);
      player4.isJoinOK(player2, false);
      player3.getMoney();
      player4.getStrength();
      player1.isJoinOK(player3, true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.026522790307467
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      Player player0 = new Player((byte)70, "", 1015);
      Player player1 = new Player(2025, "", "ZX[fij|.6T/", (byte)0);
      player0.isJoinOK(player1, true);
      player1.setX((byte)70);
      player0.type();
      player1.isConnected();
      player1.setZ((-365.94058F));
      player1.setJoinOK(player0, true);
      player0.isJoinOK(player1, false);
      player0.setY(0.0F);
      player0.setJoinOK(player1, true);
      player1.gangStrength();
      float float0 = player1.getZ();
      assertEquals((-365.94058F), float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.323779381792065
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      player0.id = 1974;
      Player player1 = new Player(26129, "0.0.0.0", "", (short)4919);
      Player player2 = new Player(1974, "", "", (-3193));
      player2.isJoinOK(player1, true);
      player0.setX(433.39F);
      Player player3 = new Player((-18));
      player3.type();
      player0.isConnected();
      player0.setZ(0.1F);
      player0.isJoinOK(player2, false);
      player0.setY((-2500.42F));
      player0.reset(true);
      player1.getX();
      float float0 = player0.getY();
      assertEquals((-2500.42F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.961437002025999
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player(2002, "", 4919);
      player0.setX((-1583.015F));
      player0.type();
      Party party0 = new Party((short)4919);
      party0.prev = (Party) player0;
      player0.add(party0);
      player0.isConnected();
      player0.setZ(0.2F);
      player0.setJoinOK(player0, false);
      player0.isJoinOK(player0, false);
      player0.setMoney(2002);
      player0.setY(2126.0F);
      player0.getX();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.5821447072671853
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[=B+HWvrX/R8QHsu2");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[=B+HWvrX/R8QHsu2");
      Player player0 = new Player((-31992), "[=B+HWvrX/R8QHsu2", (-31992));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale locale0 = Locale.CHINESE;
      Player player1 = new Player((-154));
      player1.setJoinOK(player0, false);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-154", player1.getName());
      
      boolean boolean1 = player0.isDead();
      assertTrue(boolean1 == boolean0);
      
      Player player2 = new Player((-1), "fa0pD", "[=B+HWvrX/R8QHsu2", (-31992), (-154));
      player0.getSubparty();
      assertEquals("0.0.0.0", player0.getIP());
      
      Player player3 = new Player(188, "h-+uW4Unn:YU", "", (-221));
      assertEquals(1, player3.getStrength());
      
      int int0 = player2.getStrength();
      assertEquals((-31992), player2.getPictureId());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals("fa0pD", player2.getIP());
      assertTrue(player2.isConnected());
      assertEquals((-154), int0);
      assertEquals(0.0F, player2.getY(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Party party0 = new Party();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(5, (String) null, (-2946));
      player0.getSubparty();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      player0.getName();
      float float0 = player0.getY();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals((-2946), player0.getPictureId());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte byte0 = (byte)0;
      Player player0 = new Player(2565, "", (byte)0);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Object[] objectArray0 = new Object[8];
      locale0.getScript();
      Object object0 = new Object();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayScript(locale0);
      locale0.getDisplayVariant(locale1);
      objectArray0[0] = (Object) "[=B+HWvrX/R8QHsu2";
      locale0.hasExtensions();
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[4] = (Object) locale0;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      Player player0 = new Player(3933, "/HV^cys6zv/\"[rG!y", "", 4);
      Player player1 = new Player((-779));
      player0.setJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-779", player1.toString());
      assertEquals("0.0.0.0", player1.getIP());
      
      Player player2 = new Player(4, "", "", 3044);
      boolean boolean0 = player0.isJoinOK(player2, true);
      assertEquals("/HV^cys6zv/\"[rG!y", player0.getIP());
      assertFalse(boolean0);
      
      player2.getName();
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertTrue(player2.isConnected());
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals(1, player2.getStrength());
      assertFalse(player2.isDead());
      assertEquals(3044, player2.getPictureId());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.911729417674094
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte)55;
      Player player0 = new Player((-1), "", "", 2);
      Player player1 = new Player((byte) (-125), ":Lg(&A", "", (-24815));
      player1.isJoinOK(player0, true);
      player1.setX((byte) (-125));
      player1.type();
      player1.isConnected();
      player0.setZ((byte) (-125));
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      player1.setY(0.0F);
      player1.reset(false);
      float float0 = player1.getX();
      assertEquals((-125.0F), float0, 0.01F);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(912, "LFhVq:K{<C.H", "LFhVq:K{<C.H", 1138, 0);
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1138, player0.getPictureId());
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.7962719295404583
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)70;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      Player player0 = new Player((byte)70, "", 1015);
      Player player1 = new Player(2025, "", "ZX[fij|.6T/", (byte)0);
      player0.setJoinOK(player1, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 3016);
      player1.pack();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      player0.isJoinOK(player1, false);
      player0.isDead();
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      dataInputStream1.close();
      Player player2 = new Player(10, "", "ZX[fij|.6T/", (-1750));
      DataInputStream dataInputStream2 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.3310524252181906
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player((short)4919, "0.0.0.0", "", 3);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = (int) (short)4919;
      player0.type();
      player1.getIP();
      player0.setZ(10.0F);
      player0.getIP();
      player1.setJoinOK(player0, true);
      player1.isJoinOK(player0, true);
      Player player2 = new Player(4919, "lu*%E(bASL=i", (String) null, (short)4919, 3349);
      player2.toString();
      player1.setDead((long) (short)4919);
      player2.setY(0.0F);
      player2.reset(true);
      float float0 = player0.getX();
      assertTrue(player0.isDead());
      assertEquals((-1303.5709F), float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.setJoinOK(player0, false);
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (short)4919, (-3611));
      byteArrayInputStream0.mark((byte)0);
      byteArrayInputStream0.read();
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.read();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      pushbackInputStream0.available();
      pushbackInputStream0.mark(405);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      dataInputStream0.read();
      byteArrayInputStream0.close();
      pushbackInputStream0.read(byteArray0);
      dataInputStream0.close();
      Player player1 = new Player();
      player0.isJoinOK(player1, true);
      try { 
        dataInputStream0.readDouble();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Party party0 = new Party();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "state.Party");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(5, (String) null, (-2948));
      player0.getSubparty();
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      
      int int1 = player0.getPictureId();
      assertEquals((-2948), int1);
      
      Player player1 = new Player((short)4919, "state.Party", (String) null, (byte)5, (-356));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-356), player1.getStrength());
      assertTrue(player1.isConnected());
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.322102232945105
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(202, (String) null, 202);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-47);
      player0.unpack(byteArray0);
      player0.setConnected(true);
      player0.type();
      Player player1 = new Player((byte) (-47), "", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (byte) (-1));
      player0.isJoinOK(player1, true);
      player0.getPictureId();
      System.setCurrentTimeMillis((byte) (-1));
      player1.reset(true);
      player0.boss = (Party) player1;
      player1.getStrength();
      player0.getMoney();
      player1.setJoinOK(player0, false);
      player1.getZ();
      player0.getPictureId();
      System.setCurrentTimeMillis(202);
      player0.type();
      player0.type();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0497978423100225
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      party0.boss.next = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.prev.boss = party0.boss.next;
      party0.boss.boss = party0.prev;
      party0.prev.id = (int) (short)4919;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1823.94F);
      player0.setDead(15000L);
      player0.pack();
      player0.setDead(15000L);
      player0.setY(0.0F);
      player0.reset(false);
      player0.getX();
      player0.getZ();
      int int0 = player0.type();
      assertEquals(1823.94F, player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.330514356883512
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setMoney(0.0F);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(1272, (String) null, "", 3);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player0.isConnected();
      player0.setZ(1272);
      player1.getIP();
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player1.isDead();
      Player player2 = new Player(5, "", "0.0.0.0", (-1));
      System.setCurrentTimeMillis((-1));
      player0.pack();
      assertEquals((-1303.5709F), player0.getX(), 0.01F);
      
      player2.isJoinOK(player1, false);
      assertEquals(10.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.435348070075531
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      player0.id = 1974;
      Player player1 = new Player(26129, "0.0.0.0", "", (short)4919);
      Player player2 = new Player(1974, "", "", (-3193));
      player2.isJoinOK(player1, true);
      player0.setX(433.39F);
      Player player3 = new Player(1974);
      player3.type();
      player0.isConnected();
      player0.setZ(0.1F);
      player3.setJoinOK(player1, false);
      player0.setY((short)4919);
      player0.reset(true);
      player1.getX();
      float float0 = player0.getY();
      assertEquals(433.39F, player0.getX(), 0.01F);
      assertEquals(4919.0F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(4913, "", (String) null, 4913, 4913);
      player0.id = (-2330);
      int int0 = player0.getStrength();
      assertEquals(4913, int0);
      assertTrue(player0.isConnected());
      assertEquals(4913, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(2425, "", "", 1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)99;
      byteArray0[5] = (byte) (-69);
      byteArray0[6] = (byte)48;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(5, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Object[] objectArray0 = new Object[8];
      locale0.getScript();
      Object object0 = new Object();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayScript(locale0);
      locale0.getDisplayVariant(locale1);
      objectArray0[0] = (Object) "[=B+HWvrX/R8QHsu2";
      locale0.hasExtensions();
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[4] = (Object) locale0;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      Player player0 = new Player(4, "E}ha7[h=ff)=pB", (String) null, 3933, (-708));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.385627614605477
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      byte[] byteArray0 = player0.pack();
      player0.id = 1974;
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      player0.setDead((long) (short)4919, true);
      player0.isJoinOK(player1, true);
      player1.setZ((-2338.7F));
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.head = (Party) player0;
      player1.isConnected();
      player0.setZ(1272);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player1.setY((short)4919);
      player1.reset(false);
      player1.getX();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(4919L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(6, "[=B+HWvrX/R8QHsu2", "[=B+HWvrX/R8QHsu2", 6, 4);
      MockPrintStream mockPrintStream0 = new MockPrintStream("0.0.0.0");
      Locale locale0 = Locale.CHINESE;
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[2] = (Object) mockPrintStream0;
      objectArray0[3] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[4] = (Object) locale0;
      objectArray0[5] = (Object) mockPrintStream0;
      objectArray0[6] = (Object) mockPrintStream0;
      objectArray0[7] = (Object) "gui.ModuleBrowserDialog$ModuleFilter";
      mockPrintStream0.format(locale0, "gui.ModuleBrowserDialog$ModuleFilter", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      player0.pack(dataOutputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1, 4);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(5, "state.Party", 4919);
      player0.setMoney(1.0F);
      player0.getMoney();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      MockFile.createTempFile("state.Party", "module.ModuleBrowserDialog$ModuleFilter");
      Player player1 = new Player((short)4919, "FOo*<V@E^X6i46i[", 4919);
      assertEquals(4919, player1.getPictureId());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(4919);
      Player player1 = new Player(1926);
      player0.add(player1);
      int int0 = player0.gangStrength();
      assertEquals(2, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player4919", player0.getName());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.329898024063789
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      player0.setDead((long) (short)4919, true);
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.head = (Party) player0;
      player1.isConnected();
      player0.setZ(1272);
      player0.id = 0;
      player1.setDead((long) 1272);
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, true);
      player1.setY((short)4919);
      player1.reset(false);
      player1.getX();
      long long0 = player0.getTimeOfDeath();
      assertEquals(4919L, long0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.262384640607128
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      Player player0 = new Player(16409, "", (String) null, 2337);
      Player player1 = new Player(2273, "", 0);
      player0.isJoinOK(player1, false);
      player1.setJoinOK(player0, false);
      player1.setX((byte)0);
      player1.type();
      player1.getIP();
      Player player2 = new Player();
      player2.setX(0);
      player2.type();
      player1.isConnected();
      player1.setZ(1.0F);
      player0.setJoinOK(player2, true);
      player2.isJoinOK(player1, true);
      player1.setY(2273);
      player2.reset(false);
      player1.getX();
      long long0 = player1.getTimeOfDeath();
      assertEquals(1.0F, player1.getZ(), 0.01F);
      assertEquals(0L, long0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player(0, "", 619);
      player0.setX(0.0F);
      Party party1 = new Party((-56));
      party1.remove(party0);
      player0.setY(619);
      player0.add(party1);
      player0.setZ((-56));
      player0.setDead(2936L);
      player0.pack();
      player0.toString();
      player0.setDead((long) (short)4919);
      player0.setY(2936L);
      player0.reset(false);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "#0UPz`Ae!6OORr!+3V7";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player(4553, (String) null, 3288);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      long long0 = (-3941L);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.027841181869761
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      player0.setMoney(187.39F);
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)4;
      player0.setDead(1174L, false);
      Player player1 = new Player();
      player1.getPictureId();
      player0.setJoinOK(player1, true);
      player1.isJoinOK(player0, false);
      player0.isDead();
      assertEquals(1174L, player0.getTimeOfDeath());
      
      player1.gangStrength();
      Player player2 = new Player((byte)0, "xw7uP}z<we'KXCIJQ5", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", 25600);
      Player player3 = new Player((byte)122, "3@e,<-;jZ%W ", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", (byte)0, 3116);
      boolean boolean0 = player3.isJoinOK(player1, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(boolean0);
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.3798085428504843
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(1272, "0.0.0.0", "", 0);
      player1.prev = (Party) player0;
      player1.setConnected(false);
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.isConnected();
      player0.setZ(1272);
      player1.getIP();
      player0.setJoinOK(player1, true);
      player0.isJoinOK(player1, false);
      player1.isDead();
      player1.gangStrength();
      player0.pack();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.0738317680427802
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)70;
      Player player0 = new Player((byte)70);
      Player player1 = new Player((byte)70, "", "state.Player$JoinInfo", (-1));
      player0.isJoinOK(player1, false);
      player1.setX(0.0F);
      Player player2 = new Player(5, "", "", 739, 931);
      player2.type();
      player1.isConnected();
      player1.setZ(597.77795F);
      player2.getIP();
      player1.add(player0);
      Player player3 = new Player(5, "", (-1));
      player3.setZ(0.1F);
      player0.setJoinOK(player3, false);
      player3.setY(0.2F);
      player0.isJoinOK(player1, false);
      player1.isDead();
      int int0 = Packable.UNDEFINED;
      Player player4 = new Player((-274), "", "", (-1347));
      player2.setJoinOK(player0, false);
      player2.isJoinOK(player1, false);
      player3.getName();
      System.setCurrentTimeMillis(1637L);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.438808048849822
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2052, "\"Ht", "0.0.0.0", 19456, 2052);
      player0.setY(2052);
      player0.setDead(417L);
      player0.pack();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((-223), "\"Ht", "", (-1891));
      player1.setDead((long) (-1891), false);
      player1.isJoinOK(player0, true);
      player1.setX(0.1F);
      player0.type();
      player1.unpack(byteArray0);
      player0.isConnected();
      player1.setZ(0.0F);
      player1.setJoinOK(player0, false);
      player1.isJoinOK(player0, true);
      player1.setY((-1.0F));
      player0.reset(false);
      float float0 = player1.getX();
      assertEquals(4, player1.getId());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 0;
      Player player0 = new Player(1535, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 0, 856);
      player0.reset(false);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("0.0.0.0");
      Locale locale0 = Locale.GERMAN;
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[3] = (Object) "[=B+HWvrX/R8QHsu2";
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte)89;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-92);
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.489132219152509
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((short)4919);
      player0.remove(player1);
      Player player2 = new Player(1272, "0.0.0.0", "", 0);
      player2.prev = (Party) player0;
      player0.setDead((long) (short)4919, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player2.head = (Party) player0;
      player2.isConnected();
      player2.unpack(byteArray0);
      player0.setZ(1272);
      player0.setJoinOK(player2, true);
      player0.isJoinOK(player2, true);
      player2.setY((short)4919);
      player2.reset(false);
      player2.getX();
      player0.getZ();
      player1.isJoinOK(player0, true);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-125);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Player player0 = new Player();
      float float0 = player0.getX();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.getName());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.385308635339129
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(3, "0.0.0.0", "0.0.0.0", 3, 3);
      player0.setY(3);
      player0.setDead((long) 3);
      player0.pack();
      Player player1 = new Player(1272, "0.0.0.0", "", 10);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, true);
      player0.setX((-1303.5709F));
      player0.id = 1272;
      player0.type();
      player1.isConnected();
      player0.setZ(1272);
      player1.getIP();
      player0.setJoinOK(player1, false);
      player1.setJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player0.setY(1933.037F);
      player0.reset(false);
      player0.getX();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player1.getZ();
      assertEquals(10, player1.getPictureId());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(132);
      player0.setMoney(132);
      System.setCurrentTimeMillis(132);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Object[] objectArray0 = new Object[8];
      locale0.getScript();
      Object object0 = new Object();
      Locale locale1 = Locale.KOREA;
      locale1.getDisplayScript(locale0);
      locale0.getDisplayVariant(locale1);
      objectArray0[0] = (Object) "[=B+HWvrX/R8QHsu2";
      locale0.hasExtensions();
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[4] = (Object) locale0;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      Player player0 = new Player(4, "E}ha7[h=ff)=pB", (String) null, 3933, (-708));
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(3933, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-708), int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "[=B+HWvrX/R8QHsu2");
      Player player0 = new Player((-31992), "`RM+,V", (-31992));
      player0.setDead(0L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Locale locale0 = Locale.CHINESE;
      Object object0 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Locale locale1 = Locale.CHINESE;
      Object object1 = new Object();
      System.setCurrentTimeMillis((-31992));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      Player player1 = new Player(260, "*E<L\"~EF", 0);
      party0.prev.add(player1);
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.remove((Party) null);
      party0.prev.boss = null;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1222.908F);
      player0.setDead(15000L);
      player0.pack();
      player0.toString();
      player0.setDead(15000L);
      player0.isDead();
      Player player2 = new Player();
      player0.setJoinOK(player2, false);
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.124771615329544
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      Party party0 = new Party();
      party0.boss = (Party) player0;
      party0.boss.next = (Party) player0;
      player0.setX(0.0F);
      party0.boss = (Party) player0;
      party0.prev = (Party) player0;
      party0.boss.boss = party0.prev;
      party0.prev.id = (int) (short)4919;
      party0.id = (int) (short)4919;
      party0.prev.add(player0);
      party0.prev.remove(party0.boss);
      party0.prev = (Party) player0;
      party0.prev.head = party0.boss;
      party0.prev.prev = party0.prev;
      party0.prev.prev.head = party0.boss;
      party0.prev.boss = party0.prev.prev;
      player0.setY(0.0F);
      player0.add(party0);
      player0.setZ(1823.94F);
      player0.setDead(15000L);
      player0.pack();
      player0.toString();
      player0.setDead(15000L);
      player0.setY(0.0F);
      player0.reset(false);
      player0.getX();
      player0.getZ();
      float float0 = player0.getY();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis(2066L);
      Player player0 = new Player(3855, ":uJw5qO;CBxwU", ":uJw5qO;CBxwU", (-3022));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 161);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      dataInputStream0.close();
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals((-3022), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-125);
      int int0 = 5;
      Player player0 = new Player(5, "0.0.0.0", " ", (-394), (-1404));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-125);
      byteArray1[1] = (byte) (-125);
      byteArray1[2] = (byte)0;
      player0.setDead();
      try { 
        pipedOutputStream2.write(byteArray1, (int) (byte) (-125), 1956);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Object[] objectArray0 = new Object[8];
      locale0.getScript();
      Object object0 = new Object();
      objectArray0[0] = (Object) "[=B+HWvrX/R8QHsu2";
      locale0.hasExtensions();
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[1] = (Object) "[=B+HWvrX/R8QHsu2";
      objectArray0[4] = (Object) locale0;
      Locale locale1 = Locale.CHINESE;
      Object object1 = new Object();
      Player player0 = new Player();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.lookupTag(linkedList0, set0);
      Player player1 = new Player((-563), "", "state.Player$JoinInfo", (short)4919, (short)4919);
      player0.setJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      
      player1.getName();
      assertEquals(4919, player1.getStrength());
      assertFalse(player1.isDead());
      assertTrue(player1.isConnected());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals("", player1.getIP());
      assertEquals(4919, player1.getPictureId());
      assertEquals(10.0F, player1.getX(), 0.01F);
  }
}
