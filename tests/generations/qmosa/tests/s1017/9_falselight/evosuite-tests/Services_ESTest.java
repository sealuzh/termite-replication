/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 12:58:24 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://**URL Mal Form\u00E9** (:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**URL Mal Form\u00E9** (");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("**URL Mal Form\u00E9** (", 0);
      assertEquals(20, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS((String) null, 566);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0, services_HTTP_Result1.page_weight);
      assertEquals(0L, services_HTTP_Result1.time);
      assertFalse(services_HTTP_Result1.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1807L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 3111);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testSMTP("", 3111);
      System.setCurrentTimeMillis(3111);
      System.setCurrentTimeMillis(3111);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://S\\Xte*[GkLQf,RJ.:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "''}hT}n4^Qm\bD1R8 S");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("https://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "aQo7@=]OpDT'_t");
      EvoSuiteURL evoSuiteURL2 = new EvoSuiteURL("http://:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL2, "https");
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("SXte*[GkLQf,RJ.", 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1807L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 3111);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.testPOP3("", 3111);
      System.setCurrentTimeMillis(3111);
      System.setCurrentTimeMillis(3111);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("#^Kf+B", (-121));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      services_HTTP_Result0.works = false;
      services_HTTP_Result0.page_weight = 1;
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 1 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("**URL Mal Form\u00E9** (", 0);
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : **Erreur d'E/S** (org.evosuite.runtime.mock.java.lang.MockThrowable: Could not find: **URL Mal Form\u00E9** () **.\n****", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("(xh5sEl|gIL,M;", 3111);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("c/1jzTasgXHcGz", (-149));
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis((-737L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1143L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1604L);
      System.setCurrentTimeMillis((-737L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1799L);
      System.setCurrentTimeMillis((-1143L));
      System.setCurrentTimeMillis((-1L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("3#ny!9)<O\"e>o%(", 0);
      System.setCurrentTimeMillis(2310L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1604L);
      services_SIMPLE_Result0.toString();
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("+~2ux", (-4570));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      
      System.setCurrentTimeMillis((-4570));
      System.setCurrentTimeMillis(6L);
      System.setCurrentTimeMillis(1572L);
      System.setCurrentTimeMillis(1572L);
      System.setCurrentTimeMillis((-4570));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-4570));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1572L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1572L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-4570));
      System.setCurrentTimeMillis(1572L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1572L);
      System.setCurrentTimeMillis(6L);
      System.setCurrentTimeMillis((-2761L));
      System.setCurrentTimeMillis((-2761L));
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1807L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("4j4NaV;mN>*nh=", 0);
      System.setCurrentTimeMillis(36L);
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(1807L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis((-714L));
      services_SIMPLE_Result0.reset();
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-15L));
      System.setCurrentTimeMillis(1807L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis((-2754L));
      System.setCurrentTimeMillis((-1647L));
      System.setCurrentTimeMillis((-714L));
      System.setCurrentTimeMillis(2928L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("** Erreur g\u00E9n\u00E9r\u00E9e : ", (-1106));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(") **", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      Services services0 = new Services();
  }
}
