/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 15:24:23 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "()PZ$ D$";
      Object object0 = new Object();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("()PZ$ D$");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(!\"Zt T$");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "not");
      System.setCurrentTimeMillis(0L);
      SystemInUtil.addInputLine("5NYLF:NkLT41;Q_");
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.containsAll(jSPredicateForm0);
      jSPredicateForm0.setSize(44);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "not");
      JSTerm jSTerm0 = new JSTerm();
      jSPredicateForm0.add((Object) jSTerm0);
      SystemInUtil.addInputLine("^(h}Z@Bpx;ZI.");
      long long0 = (-1L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      long long1 = 1L;
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSTerm0.add((Object) "not");
      jSTerm0.add((Object) null);
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      function1.compose((Function<? super Integer, ?>) unaryOperator1);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      Function.identity();
      Function.identity();
      Function.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm1.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e$xpected ('");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      StringReader stringReader1 = new StringReader("e$xpected ('");
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer1);
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      Function<JSPredicateForm, Integer> function2 = unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      Function.identity();
      Function.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator2);
      jSTerm0.add((Object) function2);
      Function.identity();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.function.Function$$Lambda$51/1133468820 cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      jSTerm0.add((Object) null);
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      Function<JSPredicateForm, Integer> function2 = unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      Function<Object, JSTerm> function3 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function.identity();
      Function<Integer, Integer> function4 = Function.identity();
      JSPredicateForm jSPredicateForm0 = unaryOperator0.apply(jSTerm0);
      function2.apply(jSPredicateForm0);
      jSTerm0.add((Object) "not");
      Function<Object, Integer> function5 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function5.compose((Function<? super String, ?>) function1);
      function5.apply(function4);
      function5.apply(",/jh[ih876[Jxu$B_");
      function1.compose((Function<? super String, ?>) function5);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSTerm0.add((Object) "not");
      jSTerm0.add((Object) null);
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      Function<JSPredicateForm, Integer> function2 = unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      UnaryOperator<JSTerm> unaryOperator2 = UnaryOperator.identity();
      Function<Object, JSTerm> function3 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function4 = unaryOperator2.compose((Function<? super Object, ? extends JSTerm>) function3);
      Function<Object, JSTerm> function5 = unaryOperator1.andThen((Function<? super Object, ? extends JSTerm>) function4);
      unaryOperator0.compose((Function<? super String, ? extends JSPredicateForm>) function5);
      Function.identity();
      Function<Integer, Integer> function6 = Function.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      function2.apply(jSTerm1);
      jSTerm0.add((Object) "not");
      Function<Object, Integer> function7 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function7.compose((Function<? super String, ?>) function1);
      function7.apply(function6);
      function7.apply(",/jh[ih876[Jxu$B_");
      function1.compose((Function<? super String, ?>) function7);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator3);
      jSTerm0.add((Object) function2);
      Function.identity();
      Function.identity();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9297061990576545
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SystemInUtil.addInputLine("Predicateform.print(): 0 elements");
      SystemInUtil.addInputLine("W6A");
      SystemInUtil.addInputLine("(!WZ$ T$");
      SystemInUtil.addInputLine("(!WZ$ T$");
      Object object0 = new Object();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(!WZ$ T$");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSTerm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("not");
      stringReader0.mark(39);
      stringReader0.reset();
      stringReader0.ready();
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.stream();
      jSTerm0.add((Object) jSTerm1);
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm1.add((Object) unaryOperator0);
      // Undeclared exception!
      try { 
        jSTerm1.toStr();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemInUtil.addInputLine("i,o;}-J,6FTja(a");
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("H<dW^GGdAnM$7lnM");
      jSTerm0.add((Object) "not");
      SystemInUtil.addInputLine("H<dW^GGdAnM$7lnM");
      SystemInUtil.addInputLine(" ) ");
      jSTerm0.ensureCapacity((-26587893));
      SystemInUtil.addInputLine("|cu8t");
      SystemInUtil.addInputLine(" Term expected");
      StringReader stringReader0 = new StringReader("8ti");
      SystemInUtil.addInputLine("sPc20~=]r0");
      SystemInUtil.addInputLine("r<i");
      SystemInUtil.addInputLine("JZM{|");
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "not");
      SystemInUtil.addInputLine("not");
      System.setCurrentTimeMillis(2402L);
      SystemInUtil.addInputLine("not");
      SystemInUtil.addInputLine("X#hWvVm^c>9-pp");
      System.setCurrentTimeMillis(2402L);
      System.setCurrentTimeMillis((-3023L));
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1156634559514
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SystemInUtil.addInputLine("Predicateform.print(): 0 elements");
      SystemInUtil.addInputLine("!");
      SystemInUtil.addInputLine("(!WZ$ T$");
      SystemInUtil.addInputLine("(!WZ$ T$");
      Object object0 = new Object();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(!WZ$ T$");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "(kemN-`^^5eKGVEr.(";
      StringReader stringReader0 = new StringReader("(kemN-`^^5eKGVEr.(");
      stringReader0.ready();
      stringReader0.mark(2482);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("REZzvO");
      JSJshopVars.equalT = 38;
      JSJshopVars.apostrophe = (-317986229);
      JSJshopVars.whiteSpace = 38;
      JSJshopVars.astherisk = 38;
      jSTerm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("not");
      StringReader stringReader1 = new StringReader("W,()sR");
      StringReader stringReader2 = new StringReader("|CU8t");
      StringReader stringReader3 = new StringReader("{9.;t-DJ!-");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      streamTokenizer0.wordChars((-681), 54);
      JSSubstitution jSSubstitution0 = jSTerm0.matches((JSPredicateForm) jSTerm1);
      StringReader stringReader4 = new StringReader("not");
      jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      StringReader stringReader5 = new StringReader("expected '('");
      StringReader stringReader6 = null;
      try {
        stringReader6 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.apostrophe = (-317986229);
      JSJshopVars.astherisk = (-317986229);
      jSPredicateForm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("W,(')sR");
      StringReader stringReader1 = new StringReader("|CU8t");
      StringReader stringReader2 = new StringReader("p^'18AP^7h");
      stringReader2.read();
      stringReader1.markSupported();
      stringReader1.read();
      stringReader2.markSupported();
      stringReader1.ready();
      StringReader stringReader3 = new StringReader("PlanningDomain: error");
      StringReader stringReader4 = new StringReader("OirL8wVyDCbx[?e;");
      StringReader stringReader5 = new StringReader("wdvaobibn");
      StringReader stringReader6 = new StringReader("|CU8t");
      StringReader stringReader7 = new StringReader("v~n(");
      StringReader stringReader8 = new StringReader("P:gJi-C.' 8q,+NP");
      StringReader stringReader9 = new StringReader("not");
      StringReader stringReader10 = new StringReader("h-!/OwWxa<nb:<k");
      stringReader7.skip((-1L));
      StringReader stringReader11 = new StringReader("bI,%{sL,;zCE");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader11);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(");
      stringReader0.ready();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Object object0 = new Object();
      jSPredicateForm0.addElement(object0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.toStr();
      streamTokenizer0.nextToken();
      jSTerm0.print();
      jSTerm0.toStr();
      System.setCurrentTimeMillis(1631L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      jSSubstitution0.add((Object) "bJ=9f%");
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSSubstitution1.listIterator(58);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 58
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.216424338166361
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
      
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.print();
      jSTerm0.matches(jSPredicateForm0);
      jSTerm0.toStr();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyInt() , anyInt());
      jSPredicateForm0.sort(comparator0);
      Consumer<JSTerm> consumer0 = (Consumer<JSTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      System.setCurrentTimeMillis(0L);
      jSTerm0.makeVariable();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = jSPredicateForm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution2);
      assertFalse(jSSubstitution2.equals((Object)jSSubstitution1));
      assertEquals(2, jSPredicateForm1.size());
      
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      assertEquals("[Lne, [Lne0]]", jSPredicateForm2.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8423738481491543
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(1631L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      jSSubstitution0.addAll((Collection) jSPredicateForm0);
      jSSubstitution0.add((Object) "bJ=9f%");
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.ensureCapacity(32);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      jSSubstitution1.replaceAll(unaryOperator0);
      JSTerm jSTerm1 = new JSTerm();
      // Undeclared exception!
      try { 
        jSTerm1.applySubstitutionPF(jSSubstitution1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.180066384203239
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.add((Object) "nqt");
      UnaryOperator.identity();
      UnaryOperator<JSTerm> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      unaryOperator0.apply(jSTerm0);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.spliterator();
      jSTerm0.add((Object) jSTerm1);
      Function.identity();
      unaryOperator0.apply(jSTerm0);
      jSTerm0.replaceAll(unaryOperator0);
      UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("8.0");
      jSTerm0.isGround();
      StringReader stringReader1 = new StringReader("8.0");
      JSSubstitution jSSubstitution0 = jSTerm0.matches((JSPredicateForm) jSTerm0);
      assertFalse(jSSubstitution0.fail());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSTerm0.add((Object) "nv-");
      jSTerm0.add((Object) null);
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      UnaryOperator<JSTerm> unaryOperator2 = UnaryOperator.identity();
      Function<Object, JSTerm> function2 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function3 = unaryOperator2.compose((Function<? super Object, ? extends JSTerm>) function2);
      Function<Object, JSTerm> function4 = unaryOperator1.andThen((Function<? super Object, ? extends JSTerm>) function3);
      unaryOperator0.compose((Function<? super String, ? extends JSPredicateForm>) function4);
      Function.identity();
      Function<Integer, Integer> function5 = Function.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      jSTerm0.add((Object) "nv-");
      Function<Object, Integer> function6 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function6.compose((Function<? super String, ?>) function1);
      function6.apply(function5);
      function6.apply(",/jh[ih876[Jxu$B_");
      function1.compose((Function<? super String, ?>) function6);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator3);
      Function.identity();
      Function.identity();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "(kePN-`^^5eKGVEr.(";
      StringReader stringReader0 = new StringReader("(kePN-`^^5eKGVEr.(");
      int int0 = 2482;
      stringReader0.ready();
      stringReader0.mark(2482);
      stringReader0.close();
      stringReader0.close();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9418241495425246
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.print();
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(1631L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) jSTerm1);
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm1.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "nqt");
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      jSPredicateForm0.add((Object) null);
      JSJshopVars.semicolon = 1747;
      SystemInUtil.addInputLine("`");
      System.setCurrentTimeMillis(7L);
      System.setCurrentTimeMillis(3492L);
      long long1 = 1L;
      System.setCurrentTimeMillis((-735L));
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.148175301765779
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSTerm0.print();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals(9, stringBuffer0.length());
      
      System.setCurrentTimeMillis(1631L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.equals((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution0);
      jSTerm0.spliterator();
      jSTerm0.print();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      boolean boolean0 = jSTerm0.equals(jSPredicateForm0);
      assertEquals("[Lne, [Lne]]", jSPredicateForm0.toString());
      assertTrue(boolean0);
      
      JSSubstitution jSSubstitution3 = new JSSubstitution();
      jSTerm0.applySubstitutionPF(jSSubstitution3);
      jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution4 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution4);
      assertEquals(2, jSPredicateForm1.size());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.add((Object) "nqt");
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<JSTerm> unaryOperator1 = UnaryOperator.identity();
      JSTerm jSTerm1 = jSTerm0.call();
      Function.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, JSTerm> function0 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function1 = unaryOperator2.andThen((Function<? super Object, ? extends JSTerm>) function0);
      Function<Object, JSTerm> function2 = unaryOperator1.compose((Function<? super Object, ? extends JSTerm>) function1);
      unaryOperator2.andThen((Function<? super Object, ? extends JSTerm>) function2);
      Function<Object, JSTerm> function3 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function4 = unaryOperator1.compose((Function<? super Object, ? extends JSTerm>) function3);
      Function<Object, JSTerm> function5 = unaryOperator2.andThen((Function<? super Object, ? extends JSTerm>) function4);
      unaryOperator1.compose((Function<? super String, ? extends JSTerm>) function5);
      UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super JSTerm, ?>) unaryOperator0);
      JSTerm jSTerm2 = unaryOperator1.apply(jSTerm0);
      Function.identity();
      jSTerm2.add((Object) "nqt");
      jSTerm0.replaceAll(unaryOperator1);
      jSTerm0.add((Object) "no");
      boolean boolean0 = jSTerm1.equals((JSPredicateForm) jSTerm0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6910801301395968
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.firstElement();
      jSTerm0.toStr();
      jSTerm0.toStr();
      Object object0 = jSTerm0.clone();
      jSTerm0.add(object0);
      jSTerm0.toStr();
      jSTerm0.toStr();
      jSTerm0.print();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.print();
      JSTerm jSTerm1 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSTerm jSTerm2 = new JSTerm();
      jSSubstitution0.add((Object) jSTerm2);
      JSTerm jSTerm3 = new JSTerm();
      jSTerm2.spliterator();
      // Undeclared exception!
      try { 
        jSTerm3.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.144617073095654
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "nqt");
      jSPredicateForm0.print();
      jSPredicateForm0.firstElement();
      SystemInUtil.addInputLine("%7dXP80)@lV\"X*XVQs)h");
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      UnaryOperator.identity();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      jSPredicateForm0.retainAll(jSPredicateForm1);
      Function.identity();
      jSPredicateForm0.trimToSize();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Predicate<Integer> predicate0 = Predicate.isEqual((Object) "nqt");
      Predicate<Integer> predicate1 = predicate0.negate();
      Predicate<Integer> predicate2 = predicate1.or(predicate0);
      Predicate<Integer> predicate3 = predicate2.and(predicate0);
      jSSubstitution0.removeIf(predicate3);
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.containsAll(jSSubstitution0);
      jSPredicateForm2.setSize(41);
      jSPredicateForm0.print();
      jSPredicateForm1.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm3.removeAllElements();
      jSPredicateForm0.equals(jSPredicateForm0);
      // Undeclared exception!
      try { 
        jSPredicateForm2.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "nqt");
      jSPredicateForm0.add((Object) "nqt");
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSTerm0.add((Object) "not");
      jSTerm0.add((Object) null);
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      Function<JSPredicateForm, Integer> function2 = unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      UnaryOperator<JSTerm> unaryOperator2 = UnaryOperator.identity();
      SystemInUtil.addInputLine("not");
      Function<Object, JSTerm> function3 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function4 = unaryOperator2.compose((Function<? super Object, ? extends JSTerm>) function3);
      Function<Object, JSTerm> function5 = unaryOperator1.andThen((Function<? super Object, ? extends JSTerm>) function4);
      unaryOperator0.compose((Function<? super String, ? extends JSPredicateForm>) function5);
      Function.identity();
      Function<Integer, Integer> function6 = Function.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      function2.apply(jSTerm1);
      jSTerm0.add((Object) "not");
      Function<Object, Integer> function7 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function7.compose((Function<? super String, ?>) function1);
      function7.apply(function6);
      function7.apply(",/jh[ih876[Jxu$B_");
      System.setCurrentTimeMillis((-57L));
      System.setCurrentTimeMillis(39);
      System.setCurrentTimeMillis(1L);
      // Undeclared exception!
      try { 
        jSTerm1.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      String string0 = "nqt";
      jSPredicateForm0.add((Object) "nqt");
      jSPredicateForm0.add((Object) "nqt");
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      JSPredicateForm jSPredicateForm1 = unaryOperator0.apply(jSPredicateForm0);
      jSPredicateForm0.replaceAll(unaryOperator0);
      jSPredicateForm0.add((Object) jSPredicateForm1);
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends String>) function0);
      JSJshopVars.whiteSpace = (-4320);
      UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("nqt");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm1.matches(jSPredicateForm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.flagLevel = 3674;
      JSJshopVars.astherisk = 39;
      jSPredicateForm0.setSize(59);
      JSJshopVars.equalT = 39;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        jSPredicateForm0.equals(jSPredicateForm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "nWn");
      StringReader stringReader0 = new StringReader("nWn");
      StringReader stringReader1 = new StringReader("nWn");
      StringReader stringReader2 = new StringReader("WdvAOBiBn");
      stringReader0.skip(1098);
      StringReader stringReader3 = new StringReader("nWn");
      stringReader3.skip(5641L);
      stringReader3.read();
      StringReader stringReader4 = new StringReader("WdvAOBiBn");
      stringReader3.skip((-1840L));
      StringReader stringReader5 = new StringReader("nWn");
      stringReader3.close();
      StringReader stringReader6 = new StringReader("WdvAOBiBn");
      char[] charArray0 = new char[2];
      charArray0[0] = '8';
      charArray0[1] = '[';
      StringReader stringReader7 = new StringReader("WdvAOBiBn");
      stringReader7.skip(3L);
      StringReader stringReader8 = new StringReader("WdvAOBiBn");
      stringReader8.ready();
      StringReader stringReader9 = new StringReader("JSPredicateForm");
      StringReader stringReader10 = new StringReader("JSPredicateForm");
      StringReader stringReader11 = new StringReader("nWn");
      StringReader stringReader12 = new StringReader("!j/\"h<9`");
      stringReader11.skip(1443L);
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SystemInUtil.addInputLine("i,o;}-J,6FTja(a");
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("H<dW^GGdAnM$7lnM");
      jSTerm0.add((Object) "not");
      SystemInUtil.addInputLine("H<dW^GGdAnM$7lnM");
      SystemInUtil.addInputLine(" ) ");
      jSTerm0.ensureCapacity((-26587893));
      SystemInUtil.addInputLine("|cu8t");
      StringReader stringReader0 = new StringReader("8ti");
      jSTerm0.add((Object) null);
      SystemInUtil.addInputLine("sPc20~=]r0");
      SystemInUtil.addInputLine("r<i");
      SystemInUtil.addInputLine("JZM{|");
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SystemInUtil.addInputLine("i,o;}-J,6FTja(a");
      JSTerm jSTerm0 = new JSTerm();
      SystemInUtil.addInputLine("8ti");
      Object object0 = new Object();
      jSTerm0.add(object0);
      SystemInUtil.addInputLine("nt");
      jSTerm0.ensureCapacity(170);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine((String) null);
      StringReader stringReader0 = new StringReader("OzJw26siopw:-lmX1");
      SystemInUtil.addInputLine(",");
      SystemInUtil.addInputLine("q");
      SystemInUtil.addInputLine("i,o;}-J,6FTja(a");
      Object object1 = new Object();
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0910596228402674
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.add((Object) "nqt");
      SystemInUtil.addInputLine(">=");
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Function<Object, Integer> function2 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function1.compose((Function<? super JSTerm, ?>) unaryOperator0);
      Integer integer0 = new Integer(2106);
      function2.apply(jSTerm0);
      Function<JSPredicateForm, Integer> function3 = unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      Function.identity();
      Function.identity();
      unaryOperator0.apply(jSTerm0);
      function3.apply(jSTerm0);
      UnaryOperator.identity();
      Function.identity();
      jSTerm0.replaceAll(unaryOperator1);
      JSTerm jSTerm1 = new JSTerm();
      jSTerm0.add((Object) jSTerm1);
      Function.identity();
      Function.identity();
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      SystemInUtil.addInputLine((String) null);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      jSPredicateForm0.addElement("line");
      Comparator<String> comparator1 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator1);
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("(line)", stringBuffer0.toString());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer1 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<Integer> comparator1 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.add((Object) comparator1);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.util.Comparator$MockitoMock$1958670674 cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("6Wm$JF]X!ga");
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.ready();
      stringReader0.reset();
      char[] charArray0 = new char[3];
      charArray0[2] = 'E';
      charArray0[1] = 'E';
      charArray0[2] = 'E';
      stringReader0.read(charArray0);
      jSTerm0.add((Object) stringReader0);
      stringReader0.read();
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("sK");
      stringReader0.ready();
      StringReader stringReader2 = new StringReader("6Wm$JF]X!ga");
      StringReader stringReader3 = new StringReader("9cIB@cUm%:^6");
      StringReader stringReader4 = new StringReader("`");
      StringReader stringReader5 = new StringReader("not");
      StringReader stringReader6 = new StringReader("g(r:b");
      StringReader stringReader7 = new StringReader("cIB@cUa%:^6");
      StringReader stringReader8 = new StringReader(")");
      stringReader4.read();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "nqt");
      UnaryOperator.identity();
      UnaryOperator<JSTerm> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      unaryOperator0.apply(jSTerm0);
      jSTerm0.replaceAll(unaryOperator0);
      UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("8.0");
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      stringReader0.reset();
      stringReader0.ready();
      UnaryOperator<JSPredicateForm> unaryOperator1 = UnaryOperator.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator1.apply(jSTerm0);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      jSTerm0.replaceAll(unaryOperator2);
      jSTerm0.stream();
      jSTerm0.add((Object) "8.0");
      jSTerm1.replaceAll(unaryOperator1);
      Integer integer0 = new Integer((-609));
      stringReader0.read();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("&pa6Wm$JF]X!ga");
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.ready();
      stringReader0.reset();
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("sK");
      stringReader0.ready();
      StringReader stringReader2 = new StringReader("&pa6Wm$JF]X!ga");
      StringReader stringReader3 = new StringReader("9cIB@cUm%:^6");
      StringReader stringReader4 = new StringReader("`");
      stringReader1.ready();
      stringReader3.reset();
      stringReader2.skip((-928L));
      StringReader stringReader5 = new StringReader("de@G>%rPe");
      StringReader stringReader6 = new StringReader("o9CYt}`4C6u8AC|l^s");
      stringReader0.read(charArray0);
      StringReader stringReader7 = new StringReader("SE?N/");
      stringReader2.read(charArray0);
      StringReader stringReader8 = new StringReader("&pa6Wm$JF]X!ga");
      StringReader stringReader9 = new StringReader("not");
      stringReader1.read();
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "not");
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSTerm0.add((Object) "not");
      jSTerm0.add((Object) null);
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function0);
      Integer integer0 = new Integer(2106);
      function1.apply(integer0);
      Function<JSPredicateForm, Integer> function2 = unaryOperator0.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      Function.identity();
      Function.identity();
      JSTerm jSTerm1 = (JSTerm)unaryOperator0.apply(jSTerm0);
      function2.apply(jSTerm1);
      Function<Object, Integer> function3 = unaryOperator1.andThen((Function<? super Object, ? extends Integer>) function1);
      function3.apply(",/jh[ih876[Jxu$B_");
      function1.compose((Function<? super String, ?>) function3);
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator2);
      jSTerm0.add((Object) function2);
      Function.identity();
      SystemInUtil.addInputLine("x^Bi^p9m~(38![v5fR#");
      Function.identity();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3221086830269158
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.add((Object) "nqt");
      UnaryOperator<JSPredicateForm> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<JSTerm> unaryOperator1 = UnaryOperator.identity();
      jSTerm0.call();
      Function.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, JSTerm> function0 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function1 = unaryOperator2.andThen((Function<? super Object, ? extends JSTerm>) function0);
      Function<Object, JSTerm> function2 = unaryOperator1.compose((Function<? super Object, ? extends JSTerm>) function1);
      unaryOperator2.andThen((Function<? super Object, ? extends JSTerm>) function2);
      Function<Object, JSTerm> function3 = (Function<Object, JSTerm>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, JSTerm> function4 = unaryOperator1.compose((Function<? super Object, ? extends JSTerm>) function3);
      Function<Object, JSTerm> function5 = unaryOperator2.andThen((Function<? super Object, ? extends JSTerm>) function4);
      unaryOperator1.compose((Function<? super String, ? extends JSTerm>) function5);
      UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super JSTerm, ?>) unaryOperator0);
      unaryOperator1.compose((Function<? super Object, ? extends JSTerm>) function5);
      unaryOperator1.apply(jSTerm0);
      Function.identity();
      JSTerm jSTerm1 = unaryOperator1.apply(jSTerm0);
      jSTerm0.spliterator();
      jSTerm0.replaceAll(unaryOperator1);
      UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("8.0");
      jSTerm0.isGround();
      StringReader stringReader1 = new StringReader("8.0");
      JSSubstitution jSSubstitution0 = jSTerm0.matches((JSPredicateForm) jSTerm0);
      JSSubstitution jSSubstitution1 = jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      assertFalse(jSSubstitution1.fail());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Consumer<String> consumer0 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      Consumer<Integer> consumer1 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer2 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<Integer> comparator1 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("", stringBuffer0.toString());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.iterator();
      jSTerm0.add((Object) "nqt");
      Integer integer0 = new Integer(2106);
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null).when(function0).apply(any());
      Function<Object, Integer> function1 = unaryOperator0.andThen((Function<? super Object, ? extends Integer>) function0);
      Object object0 = jSTerm0.clone();
      function1.apply(object0);
      UnaryOperator<JSPredicateForm> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super JSPredicateForm, ? extends Integer>) function1);
      Function.identity();
      Function.identity();
      unaryOperator1.apply(jSTerm0);
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<JSPredicateForm, Integer> function2 = unaryOperator2.compose((Function<? super JSPredicateForm, ? extends Integer>) function1);
      function2.apply(jSTerm0);
      Integer integer1 = new Integer((-1076344202));
      jSTerm0.add((Object) integer1);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      Function<Object, Integer> function3 = unaryOperator3.andThen((Function<? super Object, ? extends Integer>) function1);
      function1.compose((Function<? super String, ?>) unaryOperator3);
      JSTerm jSTerm1 = new JSTerm();
      function3.apply(jSTerm1);
      Integer integer2 = new Integer((-1107002472));
      function1.apply(integer2);
      Function<Object, Integer> function4 = unaryOperator3.andThen((Function<? super Object, ? extends Integer>) function3);
      function4.compose((Function<? super String, ?>) function1);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.iterator();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF((JSSubstitution) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.slashSlashComments(true);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer2);
      streamTokenizer0.whitespaceChars(0, (-3));
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = 'Y';
      charArray0[2] = 'H';
      charArray0[3] = 'H';
      charArray0[4] = 'H';
      charArray0[5] = 'H';
      charArray0[6] = 'H';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[0];
      CharBuffer.wrap(charArray1);
      CharBuffer charBuffer1 = charBuffer0.append((CharSequence) "L~ne : ");
      stringReader0.read(charBuffer1);
      stringReader0.read(charBuffer1);
      stringReader0.skip(0L);
      streamTokenizer0.pushBack();
      stringReader0.skip(1165);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm0, jSSubstitution0);
      assertTrue(jSSubstitution1.fail());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      StringReader stringReader0 = new StringReader("W,()sCR");
      stringReader0.skip((-1L));
      StringReader stringReader1 = new StringReader("{9.;t-DJ!-");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      char[] charArray0 = new char[9];
      jSTerm0.makeConstant();
      charArray0[2] = 'k';
      streamTokenizer0.eolIsSignificant(false);
      charArray0[3] = '`';
      charArray0[1] = '<';
      streamTokenizer0.parseNumbers();
      charArray0[6] = 'k';
      charArray0[7] = '<';
      SystemInUtil.addInputLine((String) null);
      charArray0[0] = 'L';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader1.read(charArray0);
      charBuffer0.append('k');
      stringReader1.read(charBuffer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader1);
      streamTokenizer1.wordChars(';', ';');
      char[] charArray1 = new char[8];
      charArray1[0] = '\u001A';
      charArray1[1] = '9';
      charArray1[2] = '\u001A';
      charArray1[3] = 'J';
      charArray1[4] = '.';
      charArray1[5] = 'Z';
      charArray1[6] = 'k';
      charArray1[7] = '=';
      streamTokenizer0.ttype = 1;
      jSTerm0.matches((JSPredicateForm) jSTerm1);
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("not");
      stringReader0.mark(63);
      StringReader stringReader1 = new StringReader("|CU8t");
      StringReader stringReader2 = new StringReader("PlanningDomain: error");
      stringReader0.reset();
      char[] charArray0 = new char[3];
      charArray0[0] = 'E';
      stringReader2.reset();
      stringReader2.ready();
      stringReader0.reset();
      stringReader0.read(charArray0);
      StringReader stringReader3 = new StringReader("gcU/OgJ+uP9|3A\"");
      stringReader0.ready();
      StringReader stringReader4 = new StringReader("9cIB@cUm%:^6");
      StringReader stringReader5 = new StringReader("expected");
      StringReader stringReader6 = new StringReader("9cIB@cUm%:^6");
      StringReader stringReader7 = new StringReader("|CU8t");
      StringReader stringReader8 = new StringReader("9cIB@cUm%:^6");
      StringReader stringReader9 = new StringReader("expected");
      StringReader stringReader10 = new StringReader("WL(Ol0Un");
      StringReader stringReader11 = new StringReader("> ");
      stringReader11.skip(3);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm1);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.add((Object) "(DeP-`^^5eKGVr.(");
      SystemInUtil.addInputLine("(DeP-`^^5eKGVr.(");
      SystemInUtil.addInputLine("(DeP-`^^5eKGVr.(");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      SystemInUtil.addInputLine("wl");
      SystemInUtil.addInputLine("(DeP-`^^5eKGVr.(");
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(596L);
      System.setCurrentTimeMillis(1L);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      JSSubstitution jSSubstitution0 = jSPredicateForm0.matches(jSPredicateForm1);
      assertTrue(jSSubstitution0.fail());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "nqt");
      UnaryOperator.identity();
      UnaryOperator<JSTerm> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      JSTerm jSTerm1 = unaryOperator0.apply(jSTerm0);
      jSTerm0.replaceAll(unaryOperator0);
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      StringReader stringReader0 = new StringReader("8.0");
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      stringReader0.reset();
      stringReader0.ready();
      UnaryOperator<JSPredicateForm> unaryOperator2 = UnaryOperator.identity();
      JSTerm jSTerm2 = (JSTerm)unaryOperator2.apply(jSTerm0);
      UnaryOperator<Object> unaryOperator3 = UnaryOperator.identity();
      jSTerm0.replaceAll(unaryOperator3);
      jSTerm0.stream();
      jSTerm1.replaceAll(unaryOperator1);
      JSTerm jSTerm3 = (JSTerm)unaryOperator2.apply(jSTerm2);
      Integer integer0 = new Integer(33);
      jSTerm3.add((Object) jSTerm2);
      boolean boolean0 = jSTerm1.equals((JSPredicateForm) jSTerm3);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.whiteSpace = 39;
      JSJshopVars.astherisk = 39;
      jSPredicateForm0.add((Object) "not");
      JSJshopVars.equalT = 39;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      jSPredicateForm0.add(object2);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null, jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.0301693915539945
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      String string0 = "t";
      StringReader stringReader0 = new StringReader("t");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.markSupported();
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSSubstitution jSSubstitution0 = null;
      stringReader0.close();
      JSPredicateForm jSPredicateForm0 = jSTerm0.applySubstitutionPF((JSSubstitution) null);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSJshopVars.flagLevel = (-262427930);
      jSTerm0.clear();
      jSPredicateForm1.clonePF();
      // Undeclared exception!
      try { 
        jSPredicateForm1.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer1 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      SystemInUtil.addInputLine("wlv");
      Comparator<Integer> comparator1 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JSJshopVars.apostrophe = 41;
      System.setCurrentTimeMillis((-1L));
      SystemInUtil.addInputLine("expected");
      SystemInUtil.addInputLine("expected");
      SystemInUtil.addInputLine("expected");
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-414L));
      SystemInUtil.addInputLine("qpgs,zFabr^Y$;,=Q");
      SystemInUtil.addInputLine("nqt");
      System.setCurrentTimeMillis((-871L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-689L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-414L));
      JSTerm jSTerm0 = new JSTerm();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm0, (JSSubstitution) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm();
      jSPredicateForm1.sort((Comparator) null);
      // Undeclared exception!
      try { 
        jSPredicateForm1.matches(jSPredicateForm0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.add((Object) "(DeP-`^^5eKGV,Er.(");
      SystemInUtil.addInputLine("(DeP-`^^5eKGV,Er.(");
      SystemInUtil.addInputLine("(DeP-`^^5eKGV,Er.(");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      SystemInUtil.addInputLine("wl");
      SystemInUtil.addInputLine("(DeP-`^^5eKGV,Er.(");
      System.setCurrentTimeMillis(1L);
      jSPredicateForm0.toStr();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-838L));
      System.setCurrentTimeMillis(3774L);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.add((Object) "not");
      jSTerm1.containsAll(jSTerm0);
      UnaryOperator<JSTerm> unaryOperator0 = UnaryOperator.identity();
      jSTerm1.replaceAll(unaryOperator0);
      Stream stream0 = jSTerm0.stream();
      jSTerm1.add((Object) stream0);
      jSTerm0.replaceAll(unaryOperator0);
      jSTerm0.add((Object) unaryOperator0);
      // Undeclared exception!
      try { 
        jSTerm1.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.stream.ReferencePipeline$Head cannot be cast to umd.cs.shop.JSPredicateForm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "not");
      StringReader stringReader0 = new StringReader("&p6Wm$JF]X!ga");
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.ready();
      stringReader0.reset();
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("sK");
      stringReader0.ready();
      stringReader0.close();
      StringReader stringReader2 = new StringReader("&p6Wm$JF]X!ga");
      StringReader stringReader3 = new StringReader("9cIB@cUm%:^6");
      StringReader stringReader4 = new StringReader("`");
      StringReader stringReader5 = new StringReader("&p6Wm$JF]X!ga");
      stringReader5.ready();
      stringReader5.reset();
      stringReader2.skip((-928L));
      StringReader stringReader6 = new StringReader("de@G>%rPe");
      StringReader stringReader7 = new StringReader("o9CYt}`4C6u8AC|l^s");
      stringReader5.read(charArray0);
      StringReader stringReader8 = new StringReader("SE?N/");
      stringReader2.read(charArray0);
      StringReader stringReader9 = new StringReader("&p6Wm$JF]X!ga");
      StringReader stringReader10 = new StringReader("not");
      JSTerm jSTerm1 = new JSTerm();
      boolean boolean0 = jSTerm0.equals((JSPredicateForm) jSTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer1 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<Integer> comparator1 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jSPredicateForm0.firstElement();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Consumer<String> consumer1 = (Consumer<String>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<Integer> comparator1 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.8293230219306162
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = "(DeP-`^^5eKGVEr.(";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(DeP-`^^5eKGVEr.(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      String string0 = "(W1L(OPXiB1cn '$";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("WBrc}Y>cs");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.030495400303718
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(W1Lv(OPBiBn '$");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringReader stringReader0 = new StringReader("s:soLn]Z&\"");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChar(93);
      streamTokenizer0.whitespaceChars(0, (-158617476));
      streamTokenizer0.wordChars((-158617476), (-158617476));
      streamTokenizer0.whitespaceChars(0, 0);
      streamTokenizer0.ordinaryChar((-1));
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
