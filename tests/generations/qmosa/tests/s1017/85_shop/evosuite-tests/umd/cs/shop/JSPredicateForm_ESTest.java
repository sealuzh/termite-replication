/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 11:46:53 GMT 2020
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("not");
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 >= 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.2711893730418441
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(fL212: ");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("cajl");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.4437572842601484
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(fL2 2v ");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("cajl");
      stringReader0.reset();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      jSPredicateForm0.addElement((Object) null);
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.toStr();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SystemInUtil.addInputLine("2R{qh/_u|%5t9V");
      SystemInUtil.addInputLine("c|~ %g ");
      SystemInUtil.addInputLine("2R{qh/_u|%5t9V");
      StringReader stringReader0 = new StringReader("(LdM2:%");
      SystemInUtil.addInputLine("not");
      stringReader0.mark(1406);
      stringReader0.ready();
      SystemInUtil.addInputLine("not");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      SystemInUtil.addInputLine("c|~ %g ");
      SystemInUtil.addInputLine("Operator na&e expected");
      SystemInUtil.addInputLine(";1E9JUx\"lsq\"G] -0 m");
      SystemInUtil.addInputLine("|#<vb']fet5.;}");
      streamTokenizer0.quoteChar(1406);
      SystemInUtil.addInputLine("Operator na&e expected");
      SystemInUtil.addInputLine("c|~ %g ");
      SystemInUtil.addInputLine("?%%%");
      SystemInUtil.addInputLine("uc~ g ");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lne :");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm0.addElement((Object) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7670091910745693
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm0.toStr();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      jSPredicateForm2.equals((JSPredicateForm) jSTerm0);
      jSPredicateForm1.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      jSPredicateForm0.replaceAll(unaryOperator0);
      Consumer<Integer> consumer0 = (Consumer<Integer>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.forEach(consumer0);
      JSPredicateForm jSPredicateForm3 = new JSPredicateForm();
      jSPredicateForm3.addElement(unaryOperator0);
      jSPredicateForm3.ensureCapacity((-1724994440));
      // Undeclared exception!
      try { 
        jSTerm0.matches(jSPredicateForm3);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.function.UnaryOperator$$Lambda$44/1085906293 cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "(";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SystemInUtil.addInputLine("gyo{3(s[c='z}x?");
      StringReader stringReader0 = new StringReader("c~ G ");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("c~ G ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ordinaryChar(1417);
      streamTokenizer0.quoteChar(1417);
      streamTokenizer0.slashStarComments(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      stringReader0.skip((-1496));
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.removeAllElements();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSTerm0.matches(jSPredicateForm0, jSSubstitution1);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.addElement("L~n : ");
      SystemInUtil.addInputLine("Jt");
      StringReader stringReader0 = new StringReader("zC6lectkn,");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.makeEval(false);
      int int0 = 2907;
      streamTokenizer0.wordChars(2907, 2907);
      stringReader0.skip(2907);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSTerm0.equals(jSPredicateForm0);
      jSSubstitution0.removeAllElements();
      JSTerm jSTerm1 = null;
      try {
        jSTerm1 = new JSTerm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSTerm", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement((Object) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.416869372815516
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kOe N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      CharBuffer charBuffer1 = CharBuffer.allocate(32);
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) "kOe N");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate('\u0000');
      charBuffer2.flip();
      CharBuffer charBuffer4 = charBuffer0.asReadOnlyBuffer();
      CharBuffer charBuffer5 = CharBuffer.allocate('Z');
      charBuffer1.put("R*x6#*%f!yX,");
      CharBuffer charBuffer6 = CharBuffer.allocate('Z');
      charBuffer4.flip();
      charBuffer6.flip();
      charBuffer1.get();
      CharBuffer charBuffer7 = charBuffer5.asReadOnlyBuffer();
      CharBuffer charBuffer8 = CharBuffer.allocate('\u0000');
      charBuffer6.codePoints();
      charBuffer3.read(charBuffer6);
      charBuffer8.rewind();
      CharBuffer charBuffer9 = CharBuffer.allocate('Z');
      CharBuffer charBuffer10 = CharBuffer.allocate('Z');
      CharBuffer charBuffer11 = charBuffer9.asReadOnlyBuffer();
      charBuffer10.clear();
      charBuffer11.chars();
      charBuffer5.limit(22);
      charBuffer7.flip();
      charBuffer6.asReadOnlyBuffer();
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = jSTerm0.matches(jSPredicateForm1, jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution2 = jSPredicateForm1.matches(jSPredicateForm2, jSSubstitution1);
      assertFalse(jSSubstitution2.fail());
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("+nrJ9{4Tr3_L@");
      SystemInUtil.addInputLine("+nrJ9{4Tr3_L@");
      SystemInUtil.addInputLine("+nrJ9{4Tr3_L@");
      SystemInUtil.addInputLine("o&*PFnhFVVrf!l");
      StringReader stringReader0 = new StringReader("(\"@o)e~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.resetSyntax();
      SystemInUtil.addInputLine("Tl[3 Jb0");
      SystemInUtil.addInputLine("`)v{yg i#9uuadk");
      SystemInUtil.addInputLine("?%%k8");
      stringReader0.ready();
      streamTokenizer0.nval = (-5255.590529006866);
      streamTokenizer0.ordinaryChars((-446), (-446));
      SystemInUtil.addInputLine("GY`Ds");
      SystemInUtil.addInputLine("o&*PFnhFVVrf!l");
      streamTokenizer0.slashSlashComments(true);
      SystemInUtil.addInputLine("?%%k8");
      stringReader0.close();
      SystemInUtil.addInputLine("expe%ted '('");
      SystemInUtil.addInputLine("not");
      SystemInUtil.addInputLine("`)v{yg i#9uuadk");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement(object0);
      // Undeclared exception!
      try { 
        jSPredicateForm0.print();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.String
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5367224694372197
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kOe N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.trimToSize();
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      CharBuffer charBuffer1 = CharBuffer.allocate(32);
      charBuffer1.chars();
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) "kOe N");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate('\u0000');
      charBuffer2.flip();
      CharBuffer charBuffer4 = charBuffer0.asReadOnlyBuffer();
      CharBuffer charBuffer5 = CharBuffer.allocate('Z');
      CharBuffer charBuffer6 = charBuffer3.slice();
      charBuffer4.chars();
      charBuffer1.get();
      CharBuffer charBuffer7 = charBuffer5.asReadOnlyBuffer();
      CharBuffer charBuffer8 = CharBuffer.allocate('\u0000');
      charBuffer8.mark();
      CharBuffer.allocate('Z');
      charBuffer8.rewind();
      CharBuffer.allocate('Z');
      CharBuffer charBuffer9 = charBuffer0.append('\u0000');
      charBuffer9.clear();
      charBuffer4.chars();
      charBuffer9.rewind();
      charBuffer7.flip();
      charBuffer6.asReadOnlyBuffer();
      CharBuffer.allocate(32);
      CharBuffer.allocate(60);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("(kOekOe )", stringBuffer0.toString());
      
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.iterator();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm1));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4503379533856173
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kOe N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      CharBuffer charBuffer1 = CharBuffer.allocate(32);
      charBuffer1.chars();
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) "kOe N");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate('\u0000');
      charBuffer2.flip();
      CharBuffer charBuffer4 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.duplicate();
      CharBuffer charBuffer5 = CharBuffer.allocate('Z');
      CharBuffer charBuffer6 = charBuffer3.slice();
      charBuffer1.rewind();
      charBuffer4.chars();
      charBuffer1.get();
      CharBuffer charBuffer7 = charBuffer5.asReadOnlyBuffer();
      CharBuffer charBuffer8 = CharBuffer.allocate('\u0000');
      CharBuffer.allocate('Z');
      charBuffer8.rewind();
      CharBuffer.allocate('Z');
      CharBuffer charBuffer9 = charBuffer0.append('\u0000');
      charBuffer9.clear();
      charBuffer8.codePoints();
      charBuffer5.limit(69);
      charBuffer7.flip();
      charBuffer6.asReadOnlyBuffer();
      CharBuffer.allocate(32);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSJshopVars.equalT = 32;
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm1));
      
      boolean boolean0 = jSPredicateForm0.equals((JSPredicateForm) jSTerm0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("6'L83JPI");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) "6'L83JPI");
      jSTerm0.firstElement();
      stringReader0.read();
      jSTerm0.makeEval(false);
      JSTerm jSTerm1 = jSTerm0.cloneT();
      jSTerm1.equals((JSPredicateForm) jSTerm0);
      StringReader stringReader1 = new StringReader("(k!emf%m-`^f5ekge2.(");
      stringReader1.reset();
      StringReader stringReader2 = null;
      try {
        stringReader2 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5367224694372197
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kOe N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.trimToSize();
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      CharBuffer charBuffer1 = CharBuffer.allocate(32);
      charBuffer1.chars();
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) "kOe N");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate('\u0000');
      charBuffer2.flip();
      CharBuffer charBuffer4 = charBuffer0.asReadOnlyBuffer();
      CharBuffer charBuffer5 = CharBuffer.allocate('Z');
      charBuffer3.slice();
      charBuffer4.chars();
      charBuffer1.get();
      CharBuffer charBuffer6 = charBuffer5.asReadOnlyBuffer();
      CharBuffer charBuffer7 = CharBuffer.allocate('\u0000');
      CharBuffer charBuffer8 = CharBuffer.allocate('Z');
      charBuffer7.rewind();
      CharBuffer.allocate('Z');
      CharBuffer charBuffer9 = charBuffer0.append('\u0000');
      charBuffer9.clear();
      charBuffer8.chars();
      charBuffer6.rewind();
      charBuffer5.limit(69);
      charBuffer6.flip();
      CharBuffer.allocate(32);
      CharBuffer.allocate(32);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm1 = jSTerm0.applySubstitutionPF(jSSubstitution0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = jSTerm0.standarizerPredicateForm();
      jSPredicateForm2.print();
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm1));
      assertTrue(jSPredicateForm2.equals((Object)jSPredicateForm0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("PlanningDomain: error");
      stringReader0.skip((-1154L));
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("Operator name expected");
      StringReader stringReader2 = new StringReader("^*2l8");
      char[] charArray0 = new char[3];
      charArray0[0] = '7';
      charArray0[2] = '7';
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader2.skip(3);
      StringReader stringReader3 = new StringReader("?eSb^p7Fl|~Sv_2{kF");
      StringReader stringReader4 = new StringReader("^*2l8");
      StringReader stringReader5 = new StringReader("");
      StringReader stringReader6 = new StringReader("?eSb^p7Fl|~Sv_2{kF");
      StringReader stringReader7 = new StringReader("Operator name expected");
      stringReader0.reset();
      stringReader0.skip(0L);
      SystemInUtil.addInputLine("Operator name expected");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader3);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lin : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      streamTokenizer0.ttype = (-1496);
      streamTokenizer0.sval = "Lin : ";
      streamTokenizer0.ordinaryChar(0);
      streamTokenizer0.quoteChar((-1496));
      streamTokenizer0.slashStarComments(false);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.slashSlashComments(false);
      jSTerm0.makeEval(true);
      streamTokenizer0.pushBack();
      Integer integer0 = new Integer((-1104968791));
      jSTerm0.add((Object) integer0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Integer integer1 = new Integer(0);
      jSSubstitution0.add((Object) integer1);
      jSSubstitution0.listIterator();
      jSSubstitution0.removeAll(jSTerm0);
      jSSubstitution0.removeAllElements();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.410116318288409
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "L~ne }: ";
      StringReader stringReader0 = new StringReader("L~ne }: ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) null);
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine("2R{qh/_u|%5t9V");
      SystemInUtil.addInputLine("|#<vb']fet5.;}");
      SystemInUtil.addInputLine("vD| '4~w,(15Aofd*HY");
      SystemInUtil.addInputLine("lne:");
      SystemInUtil.addInputLine("0wob]((jp|y'");
      SystemInUtil.addInputLine("|#<vb']fet5.;}");
      SystemInUtil.addInputLine("");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6766961325918528
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("SNt");
      jSPredicateForm0.print();
      jSPredicateForm0.toStr();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.equals(jSPredicateForm0);
      jSPredicateForm0.retainAll(jSPredicateForm1);
      jSPredicateForm1.equals(jSPredicateForm1);
      jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      jSPredicateForm2.addAll((Collection) jSPredicateForm0);
      jSPredicateForm0.print();
      jSPredicateForm1.clone();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm2.toStr();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches(jSPredicateForm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lne :");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      JSPredicateForm jSPredicateForm0 = jSTerm0.clonePF();
      jSPredicateForm0.addElement((Object) null);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "L~ne }: ";
      StringReader stringReader0 = new StringReader("L~ne }: ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.commentChar(0);
      jSTerm0.clone();
      jSTerm0.equals((JSPredicateForm) null);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.ensureCapacity(4019);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "c|~ g ";
      objectArray0[1] = (Object) jSTerm0;
      objectArray0[2] = (Object) "2R{qh/_u|%5t9V";
      objectArray0[3] = (Object) jSTerm0;
      objectArray0[4] = (Object) jSTerm0;
      objectArray0[5] = (Object) "c|~ g ";
      objectArray0[6] = (Object) jSTerm0;
      objectArray0[7] = (Object) jSTerm0;
      objectArray0[8] = (Object) "2R{qh/_u|%5t9V";
      jSTerm0.toArray(objectArray0);
      SystemInUtil.addInputLine("2R{qh/_u|%5t9V");
      // Undeclared exception!
      try { 
        jSTerm0.toStr();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "L~ne : ";
      StringReader stringReader0 = new StringReader("L~ne : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) stringReader0);
      // Undeclared exception!
      try { 
        jSTerm0.standarizerPredicateForm();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1186492470699507
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c~ G ");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("c~ G ");
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.clonePF();
      JSJshopVars.flagLevel = 2111;
      jSPredicateForm1.add((Object) jSPredicateForm2);
      jSPredicateForm0.retainAll(jSPredicateForm1);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm2.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm3.applySubstitutionPF(jSSubstitution0);
      JSPredicateForm jSPredicateForm5 = jSPredicateForm0.clonePF();
      jSPredicateForm1.matches(jSPredicateForm5);
      jSPredicateForm3.standarizerPredicateForm();
      jSPredicateForm4.clonePF();
      JSPredicateForm jSPredicateForm6 = null;
      try {
        jSPredicateForm6 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SystemInUtil.addInputLine("ll:v");
      SystemInUtil.addInputLine("`)v{Yg i#9uuaDk");
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.add((Object) "`)v{Yg i#9uuaDk");
      jSTerm0.add((Object) "`)v{Yg i#9uuaDk");
      jSTerm0.makeEval(true);
      // Undeclared exception!
      try { 
        jSTerm0.clonePF();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lne :");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.trimToSize();
      jSTerm0.add((Object) "Lne :");
      stringReader0.skip(32);
      streamTokenizer0.eolIsSignificant(true);
      stringReader0.skip(0L);
      stringReader0.skip(0L);
      streamTokenizer0.lowerCaseMode(false);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort((Comparator) null);
      jSPredicateForm0.toStr();
      Object object0 = jSPredicateForm0.clone();
      assertNotSame(object0, jSPredicateForm0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.addElement("L~n : ");
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      jSPredicateForm0.sort(comparator0);
      jSPredicateForm0.toStr();
      StringBuffer stringBuffer0 = jSPredicateForm0.toStr();
      assertEquals("(L~n : )", stringBuffer0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kOe N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.trimToSize();
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      CharBuffer charBuffer1 = CharBuffer.allocate(32);
      charBuffer0.codePoints();
      charBuffer1.chars();
      CharBuffer charBuffer2 = CharBuffer.wrap((CharSequence) "kOe N");
      charBuffer0.chars();
      char[] charArray0 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate('\u0000');
      charBuffer2.flip();
      CharBuffer charBuffer4 = charBuffer0.asReadOnlyBuffer();
      CharBuffer charBuffer5 = CharBuffer.allocate('Z');
      CharBuffer charBuffer6 = charBuffer3.slice();
      charBuffer4.flip();
      charBuffer1.rewind();
      charBuffer1.get();
      charBuffer5.asReadOnlyBuffer();
      CharBuffer.allocate('\u0000');
      charBuffer3.read(charBuffer6);
      CharBuffer.allocate('Z');
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      stringReader0.skip(3020L);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.removeAllElements();
      jSTerm1.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
      System.setCurrentTimeMillis((-782L));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kOe N");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.add((Object) jSTerm0);
      jSTerm0.trimToSize();
      CharBuffer charBuffer0 = CharBuffer.allocate(32);
      charBuffer0.codePoints();
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) "kOe N");
      char[] charArray0 = new char[1];
      charBuffer1.flip();
      CharBuffer charBuffer2 = charBuffer0.asReadOnlyBuffer();
      CharBuffer charBuffer3 = CharBuffer.allocate('W');
      CharBuffer charBuffer4 = charBuffer1.slice();
      charBuffer2.chars();
      charBuffer0.get();
      CharBuffer charBuffer5 = charBuffer3.asReadOnlyBuffer();
      CharBuffer charBuffer6 = CharBuffer.allocate('\u0000');
      charBuffer6.mark();
      CharBuffer.allocate('W');
      charBuffer6.rewind();
      CharBuffer charBuffer7 = CharBuffer.allocate('W');
      CharBuffer charBuffer8 = CharBuffer.allocate('W');
      charBuffer8.clear();
      charBuffer8.read(charBuffer0);
      charBuffer7.codePoints();
      charBuffer8.rewind();
      charBuffer5.flip();
      charBuffer4.asReadOnlyBuffer();
      CharBuffer.allocate(32);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.removeAllElements();
      JSTerm jSTerm1 = new JSTerm(streamTokenizer0);
      jSTerm0.matches((JSPredicateForm) jSTerm1, jSSubstitution0);
      System.setCurrentTimeMillis((-17L));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("Operator name expected");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      jSTerm0.equals(jSPredicateForm0);
      String string0 = null;
      String string1 = "";
      StringReader stringReader1 = new StringReader("");
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("c! g ");
      StringReader stringReader3 = new StringReader("Operator name expected");
      String string2 = "y9)8R7jT5mbWg(G";
      StringReader stringReader4 = new StringReader("");
      String string3 = null;
      StringReader stringReader5 = null;
      try {
        stringReader5 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Lin : ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      int int0 = 2231;
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer1.ordinaryChar(0);
      streamTokenizer0.quoteChar((-1506));
      streamTokenizer1.slashStarComments(false);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer2);
      streamTokenizer0.slashSlashComments(false);
      jSTerm0.makeEval(true);
      stringReader0.skip((-1506));
      streamTokenizer2.pushBack();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      jSSubstitution0.listIterator();
      jSSubstitution0.removeAll(jSTerm0);
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.removeAllElements();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) null, jSSubstitution2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      JSTerm jSTerm0 = new JSTerm();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.applySubstitutionPF(jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      StringReader stringReader0 = new StringReader("");
      jSPredicateForm0.size();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      stringReader0.close();
      // Undeclared exception!
      try { 
        jSPredicateForm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9433779257532877
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SNt");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("SNt");
      jSPredicateForm0.print();
      jSPredicateForm0.print();
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      jSPredicateForm1.equals(jSPredicateForm0);
      jSPredicateForm0.retainAll(jSPredicateForm1);
      jSPredicateForm1.equals(jSPredicateForm1);
      jSPredicateForm0.standarizerPredicateForm();
      JSPredicateForm jSPredicateForm2 = jSPredicateForm0.clonePF();
      JSPredicateForm jSPredicateForm3 = jSPredicateForm0.clonePF();
      jSPredicateForm3.matches(jSPredicateForm2);
      jSPredicateForm3.addAll((Collection) jSPredicateForm0);
      assertEquals("[SNt]", jSPredicateForm0.toString());
      
      jSPredicateForm0.print();
      jSPredicateForm0.clonePF();
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm1.matches(jSPredicateForm4);
      assertNotSame(jSPredicateForm4, jSPredicateForm1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.2868359830561607
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SystemInUtil.addInputLine("2R{qh/_u|%5t9V");
      SystemInUtil.addInputLine("c|~ %g ");
      SystemInUtil.addInputLine("2R{qh/_u|%5t9V");
      SystemInUtil.addInputLine("not");
      SystemInUtil.addInputLine("not");
      SystemInUtil.addInputLine("lne");
      SystemInUtil.addInputLine("c|~ %g ");
      SystemInUtil.addInputLine("|#<vb']fet5.;}");
      SystemInUtil.addInputLine("lne");
      SystemInUtil.addInputLine("c|~ %g ");
      SystemInUtil.addInputLine("?%%%");
      StringReader stringReader0 = new StringReader(";");
      stringReader0.ready();
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("(LdM2:%");
      JSTerm jSTerm0 = new JSTerm();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader1);
      // Undeclared exception!
      try { 
        jSTerm0.JSPredicateFormInit(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      JSJshopVars.leftBrac = (-1051);
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      // Undeclared exception!
      try { 
        jSTerm0.matches((JSPredicateForm) jSTerm0, jSSubstitution0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "(k!emf%M-`^F5eKGE2.(";
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.matches((JSPredicateForm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "L~ne }: ";
      StringReader stringReader0 = new StringReader("L~ne }: ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      JSTerm jSTerm0 = new JSTerm(streamTokenizer0);
      streamTokenizer0.parseNumbers();
      jSTerm0.add((Object) "L~ne }: ");
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to umd.cs.shop.JSTerm
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SystemInUtil.addInputLine("gyo{3(s[c='z9sb}x?");
      SystemInUtil.addInputLine("c~ G ");
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm((String) null);
      jSPredicateForm0.addElement("c~ G ");
      jSPredicateForm0.print();
      SystemInUtil.addInputLine("c~ G ");
      SystemInUtil.addInputLine("|#<Vb']fET5.;}");
      SystemInUtil.addInputLine("p&PkA8VrhJ+-");
      jSPredicateForm0.print();
      SystemInUtil.addInputLine("expected '('");
      SystemInUtil.addInputLine("gyo{3(s[c='z9sb}x?");
      SystemInUtil.addInputLine("%%%");
      System.setCurrentTimeMillis(835L);
      System.setCurrentTimeMillis((-2196L));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.spliterator();
      JSTerm jSTerm1 = new JSTerm();
      jSTerm1.containsAll(jSTerm0);
      jSTerm1.clear();
      jSTerm1.spliterator();
      // Undeclared exception!
      try { 
        jSTerm0.equals((JSPredicateForm) jSTerm1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      JSJshopVars.colon = 2583;
      JSJshopVars.verticalL = 1138;
      jSPredicateForm0.print();
      assertEquals(0, jSPredicateForm0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "gyo{3(s[c='z}x?";
      objectArray0[1] = (Object) "gyo{3(s[c='z}x?";
      objectArray0[2] = (Object) "gyo{3(s[c='z}x?";
      objectArray0[3] = (Object) "gyo{3(s[c='z}x?";
      SystemInUtil.addInputLine("gyo{3(s[c='z}x?");
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) "I9vn";
      objectArray1[1] = (Object) "gyo{3(s[c='z}x?";
      objectArray1[2] = (Object) "I9vn";
      objectArray1[3] = (Object) "gyo{3(s[c='z}x?";
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.clonePF();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.4293230219306162
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "(k[em-`^F5eKGE2.(";
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(k[em-`^F5eKGE2.(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.34883209584303193
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine(":?*`>~\"k=]zfb:=y");
      SystemInUtil.addInputLine("+nrJ9{4Tr3_L@");
      SystemInUtil.addInputLine("+nrJ9{4Tr3_L@");
      SystemInUtil.addInputLine("+nrJ9{4Tr3_L@");
      SystemInUtil.addInputLine("o&*PFnhFVVrf!l");
      SystemInUtil.addInputLine(":?*`>~\"k=]zfb:=y");
      StringReader stringReader0 = new StringReader("(\"@o)e~");
      SystemInUtil.addInputLine("(\"@o)e~");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("(\"@o)e~");
      SystemInUtil.addInputLine("c~ g ");
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine((String) null);
      SystemInUtil.addInputLine("@=2");
      SystemInUtil.addInputLine("]");
      SystemInUtil.addInputLine("KQJ2;h\"um7t!^");
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      // Undeclared exception!
      try { 
        jSPredicateForm0.standarizerPredicateForm();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }
}
