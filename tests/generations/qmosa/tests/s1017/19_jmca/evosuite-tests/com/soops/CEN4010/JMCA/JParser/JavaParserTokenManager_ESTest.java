/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 15:02:39 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaParserTokenManager_ESTest extends JavaParserTokenManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.9665965897348838
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("$l9Ro;gQapB$#Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-287), (byte) (-60));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.BeginToken();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Token token0 = javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "l9Ro");
      CharBuffer charBuffer0 = CharBuffer.allocate(74);
      javaParserTokenManager0.TokenLexicalActions(token0);
      charBuffer0.order();
      StringReader stringReader1 = new StringReader("");
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token1 = javaParserTokenManager0.jjFillToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("gQapB$", token1.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9727398465972126
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)44;
      StringReader stringReader0 = new StringReader(" lU]TOs");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-479));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.957888862006046
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)5;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2094);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("$l9Ro;gQapB$#Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-287), (byte) (-60));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$l9Ro");
      CharBuffer charBuffer0 = CharBuffer.allocate(74);
      charBuffer0.order();
      StringReader stringReader1 = new StringReader("");
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6133474777557995
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$~B}_[<`*U+V>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringReader stringReader1 = new StringReader("volatile");
      StringReader stringReader2 = new StringReader("volatile");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Q';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), 74, 27);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager3.getNextToken();
      StringReader stringReader3 = new StringReader("(Kv,#X!Gj%Js>N");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader2, 2763, 1);
      JavaParserTokenManager javaParserTokenManager4 = new JavaParserTokenManager(javaCharStream3);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager3.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals("~", token0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0090891683365113
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("3R-q_v");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-665), (-2690), 123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.MoreLexicalActions();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.SkipLexicalActions(token0);
      //  // Unstable assertion: assertEquals((-2687), javaCharStream0.getBeginColumn());
      //  // Unstable assertion: assertEquals((-2685), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5569602485205405
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5'u_]j;AxS6/");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte)80;
      byteArray0[5] = (byte)19;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)17);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (byte)22, 1851, (byte)19);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("0", token0.toString());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.982938728549938
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader(":6+#3Ha;DW[@$.*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 6, 62);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("gq$W'56$!{ESf");
      StringReader stringReader2 = new StringReader("gq$W'56$!{ESf");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)88, 32);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.getBeginColumn());
      assertEquals("6", token0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6126939600852734
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)5;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0, (byte)5);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader("0000");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.prevCharIsCR = false;
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream1, 2272, 794, 1);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.9282766293074691
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bRCPD1=I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 48, 1324);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "bRCPD1=I");
      javaParserTokenManager0.getNextToken();
      char[] charArray0 = new char[5];
      charArray0[0] = 'l';
      charArray0[1] = '6';
      charArray0[2] = 'l';
      charArray0[3] = ')';
      charArray0[4] = 'M';
      javaCharStream0.nextCharBuf = charArray0;
      StringBuffer stringBuffer1 = new StringBuffer("");
      javaParserTokenManager0.image = stringBuffer1;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.950219894935823
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("%'.bp)Gmj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1644, 760);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1410), 1644);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9677565237113035
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[0] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      StringReader stringReader0 = new StringReader("++V%:");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 44, (byte)0, 29);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals("%", token0.toString());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9591350622338815
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EG>yC+VaeY");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 76);
      PipedInputStream pipedInputStream0 = new PipedInputStream(123);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("]*'3UOc<Ly]c");
      StringReader stringReader2 = new StringReader("'%p#SrgM7Da2murE!{");
      StringReader stringReader3 = new StringReader("Qg2$7&16$|");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 87, (-1746));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(124, token0.kind);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2090053431001246
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("float");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 92, 2040, 2040);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      stringReader0.read();
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = null;
      try {
        javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1, 71);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 71. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.043427581712515
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",3fMUn(b0ICqAm9");
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 4, 123);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("2BL//tjSK)C 9NGH");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2, 44, 695, 44);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(53);
      StringReader stringReader3 = new StringReader("tV3%gMsXK|zKv^");
      stringReader0.read(charBuffer0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
       //  fail("Expecting exception: Error");
       // Unstable assertion
      } catch(Error e) {
         //
         // Lexical error at line 44, column 711.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.340980728382791
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)5;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0, (byte)5);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("got{");
      StringReader stringReader1 = new StringReader("4~e+i^:TC[TSM<#P3");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 271);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 271. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.8018104134774102
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EG>yC+VaeY");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjmatchedPos = (-1);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)46;
      byteArray0[3] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)112);
      PipedInputStream pipedInputStream0 = new PipedInputStream(119);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("EG>yC+VaeY");
      StringReader stringReader2 = new StringReader("<<=");
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, (-33), (-2587));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals((-2585), javaCharStream1.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5337008874944742
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("8|KJgaL:;STQ[*(!x,");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1324, 50, 2599);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "8|KJgaL:;STQ[*(!x,");
      Token token0 = javaParserTokenManager1.getNextToken();
      char[] charArray0 = new char[8];
      charArray0[0] = 'V';
      charArray0[1] = '*';
      charArray0[2] = 'i';
      charArray0[3] = ',';
      javaCharStream0.UpdateLineColumn('M');
      charArray0[4] = '*';
      charArray0[5] = ',';
      charArray0[6] = '6';
      charArray0[7] = '?';
      javaParserTokenManager1.SkipLexicalActions(token0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 50, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6911320651612736
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader(" column ");
      StringReader stringReader2 = new StringReader("t4gs");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("H+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, (byte)123, 48);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager1.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(101, token0.kind);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9629669802215015
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCPD1=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 48, 1324);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("Qg2$7&16$|");
      StringReader stringReader2 = new StringReader("tp]MKY4");
      StringReader stringReader3 = new StringReader("finally");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2182), 80);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader2);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token_GTToken0);
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals(2, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.986406401057721
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("!EPb[Dz%J");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 14, 1907);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      StringReader stringReader2 = new StringReader("!EPb[Dz%J");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1, 1907, (byte)0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(dataInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(15, javaCharStream0.getBeginColumn());
      assertEquals(17, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4553757830364698
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      StringReader stringReader0 = new StringReader("FHLc-:pC~AfQ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-24), 59, 104);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(62, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1814162028371173
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("float");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      String string0 = "";
      StringReader stringReader2 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 92, 92, 92);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1078));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9636442922229
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCD1=");
      StringReader stringReader1 = new StringReader("oB:%I*0tZuf-.");
      StringReader stringReader2 = new StringReader("n[ETwuG)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 695, 4, 2433);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(28);
      StringReader stringReader3 = new StringReader("W~,*\"l)8*zH8>$Dq~7");
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.getBeginColumn());
      assertEquals(10, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3299825171242272
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      byteArrayInputStream0.skip((byte)0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 95, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 95, column 1.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5100371498201912
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      StringReader stringReader0 = new StringReader("goto");
      StringReader stringReader1 = new StringReader("--");
      StringReader stringReader2 = new StringReader("7N]2F!yqZ>L(<Y9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)10, 21);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(1, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(22, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9658571527752655
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("%'.bp)Gmj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1644, 1644);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjmatchedKind = 1644;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1644, column 1647.  Encountered: \"b\" (98), after : \"\\'.\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9658571527752655
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("%'.bp)Gmj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1644, 760);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjmatchedKind = 760;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1644, column 763.  Encountered: \"b\" (98), after : \"\\'.\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0179630357366722
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("rGt4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4, 6, 128);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      CharBuffer.allocate(4);
      CharBuffer charBuffer0 = CharBuffer.allocate(4);
      stringReader2.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(11, javaCharStream0.getBeginColumn());
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5021787009860597
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("TY'[");
      StringReader stringReader1 = new StringReader("Jg");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-11), 62, 1148);
      StringReader stringReader2 = new StringReader("TY'[");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-11), (-970), 1148);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream1.bufpos);
      assertEquals("Jg", token0.toString());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9439228896279008
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      StringReader stringReader0 = new StringReader(";XgSIW(=x*1Q`|");
      StringReader stringReader1 = new StringReader("t4gs");
      StringReader stringReader2 = new StringReader("t4gs");
      StringReader stringReader3 = new StringReader("/");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte) (-60), 97);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.956209058601398
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)123;
      StringReader stringReader0 = new StringReader("n3EhxXDKt|N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4205), (byte)10);
      stringReader0.mark(5394);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(10);
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(10, javaCharStream0.bufpos);
      assertEquals(20, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0614889854388747
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("FAe}=,&|?-gdLre\t'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 108, (-2859), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(100);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("FDu|}3)-r3m");
      StringReader stringReader2 = new StringReader("]");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 0, 0);
      JavaCharStream javaCharStream2 = new JavaCharStream(sequenceInputStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager2.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals("]", token0.toString());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5036907290627806
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader0 = new StringReader("4K/W(uH6y =h");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2121, 107, 2121);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(2, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals(109, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5020977592876288
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCPD1=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 48, 1324);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("Qg2$7&16$|");
      StringReader stringReader2 = new StringReader("tp]MKY4");
      StringReader stringReader3 = new StringReader("finally");
      StringReader stringReader4 = new StringReader("oW]1g;Bo=@");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-2182), 0);
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader4);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2);
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream2.bufpos);
      assertEquals(2, javaCharStream2.getEndColumn());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4781836429161395
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("_9c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 48, 1913);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)56, (-380));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1915, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5292653751490874
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCPD1=");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)114;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark(28);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)114);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 0, 2177, 128);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.950474428936772
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)56;
      byteArray0[2] = (byte)112;
      StringReader stringReader0 = new StringReader("n3EhxXDKt|N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-4205), (byte)56);
      stringReader0.mark(5394);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(56);
      stringReader0.read(charBuffer0);
      Token token0 = new Token();
      javaParserTokenManager0.getNextToken();
      assertEquals(9, javaCharStream0.bufpos);
      assertEquals(65, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3027855822311873
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)10;
      StringReader stringReader0 = new StringReader("public");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)10, (-787), (byte)10);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "public");
      javaCharStream0.bufsize = 4;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(5, javaCharStream0.bufpos);
      assertEquals("public", token0.toString());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.565698725882249
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader(";XgSIW(=x*1Q`|");
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-60);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      StringReader stringReader1 = new StringReader("t4g12");
      StringReader stringReader2 = new StringReader("t4g12");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-60), (byte) (-60));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaCharStream0.FillBuff();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(4, javaCharStream0.bufpos);
      assertEquals((-59), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0524392116832186
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)59;
      StringReader stringReader0 = new StringReader("), ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 258, (-4402), (byte)41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-4402));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9579279614060041
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCPD1=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 48, 1324);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("Qg2$7&16$|");
      token_GTToken0.image = "";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)88;
      token_GTToken0.image = "/";
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 84);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      StringReader stringReader2 = new StringReader("Qg2$7&16$|");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 43, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.defaultLexState = 0;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(8, javaCharStream1.bufpos);
      //  // Unstable assertion: assertEquals("16$", token0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.3979856512613213
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)39;
      byteArray0[5] = (byte)39;
      byteArray0[6] = (byte)39;
      byteArray0[7] = (byte)39;
      byteArray0[8] = (byte)39;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1919);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pushbackInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream((byte)39);
      pipedInputStream1.mark((byte)39);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)39, (-2548), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 39, column -2547.  Encountered: \"\\'\" (39), after : \"\\'\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.305139267399725
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      StringReader stringReader0 = new StringReader("assert");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-85), (-1541));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)30);
      try { 
        stringReader0.read(charBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5053383168413812
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)41;
      StringReader stringReader0 = new StringReader("M-1$-/*)a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-89), 912, (byte)50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.kind = (int) (byte)50;
      token0.endColumn = 14;
      token0.beginColumn = 1097;
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 50);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 50. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8041967216696322
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("new");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 43, 1324, 43);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "new");
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer1 = new StringBuffer("");
      javaParserTokenManager0.jjnewStateCnt = 2;
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream1.bufpos);
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5686093786167463
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bRCPD1=I");
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = '3';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-469), 6, 466);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.curChar = 'R';
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 95);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 95. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9485940480122668
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Kt4Q&gMz[#xSM$");
      StringReader stringReader1 = new StringReader("Kt4Q&gMz[#xSM$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 28, 113, 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Kt4Q&gMz[#xSM$");
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer1 = new StringBuffer("Kt4Q&gMz[#xSM$");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(120, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5562830467492392
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-67);
      byteArray0[1] = (byte) (-60);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-67);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)41;
      byteArray0[7] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 3);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, byteArrayInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("S(}HVb%(]4N}1Mt#I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 30, 16);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaCharStream0.UpdateLineColumn('f');
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.MoreLexicalActions();
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.594147939212246
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("q5");
      StringReader stringReader1 = new StringReader("q5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 77, 745, 2133);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      token0.beginColumn = 745;
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, 745);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 745. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5878205275866422
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      StringReader stringReader0 = new StringReader("V");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1509), (-244), 884);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (-520));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -520. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9453289378101197
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("void");
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, (-1540), 92, 2040);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      StringReader stringReader4 = new StringReader("jO#z13T_Skf+S");
      stringReader1.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(7, javaCharStream1.bufpos);
      assertEquals("B3n", token0.toString());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4796651243976209
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      StringReader stringReader0 = new StringReader("rGt4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)10, (byte)0, 6);
      stringReader0.skip((-2360L));
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager1.curChar = 'K';
      javaParserTokenManager0.jjnewStateCnt = 1;
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("", token0.toString());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.3909009823433705
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCPD1=");
      StringReader stringReader1 = new StringReader(":aXo!N-");
      StringReader stringReader2 = new StringReader("'%p#SrgM7Da2murE!{");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2411), (-5561));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager1.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line -2411, column -5559.  Encountered: \"p\" (112), after : \"\\'%\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.572665134557456
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)10;
      StringReader stringReader0 = new StringReader("Ur(5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 96, 89);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Ur(5");
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer1 = new StringBuffer("Ur(5");
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(99, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0140560159358474
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("void");
      stringReader2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, (-2840), 92);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      StringReader stringReader3 = new StringReader("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader2.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      Token.GTToken token_GTToken0 = new Token.GTToken();
      assertEquals(0, token_GTToken0.beginLine);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9691414052432155
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0jEeO;-$=E~Jx{*[UA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 108, (-2859), (byte)0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0jEeO;-$=E~Jx{*[UA");
      CharBuffer charBuffer0 = CharBuffer.allocate(108);
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      //  // Unstable assertion: assertEquals(1, javaCharStream0.bufpos);
      //  // Unstable assertion: assertEquals((-2852), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5848453231262494
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[0] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      StringReader stringReader0 = new StringReader("\"*=\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 53, (byte)0, 53);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"*=\"");
      stringReader0.mark(91);
      CharBuffer charBuffer0 = CharBuffer.allocate(91);
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.getBeginColumn());
      
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.696632538302875
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Kt4Q&gMz[#xSM$");
      StringReader stringReader1 = new StringReader("Kt4Q&gMz[#xSM$");
      char[] charArray0 = new char[7];
      charArray0[0] = 'r';
      charArray0[1] = '&';
      charArray0[2] = 'D';
      charArray0[3] = 'w';
      charArray0[4] = '3';
      charArray0[5] = 'o';
      charArray0[6] = ':';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 466, 95);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-1);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager1.ReInit(javaCharStream0, 466);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 466. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.927196357649835
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("rGt4");
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 8);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 54, 6, 8);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(9, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9827442963479316
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)10;
      StringReader stringReader0 = new StringReader("Ur(5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 89, 96, 89);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Ur(5");
      javaParserTokenManager0.image = stringBuffer0;
      javaParserTokenManager0.jjmatchedPos = 96;
      stringReader0.read();
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 89);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 89. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.9827442963479314
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("tis");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1022, 1022, 1022);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      try { 
        stringReader0.read(charBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3299825171242272
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      StringReader stringReader0 = new StringReader("`q-R3f0K2En42l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 50, 1465, (byte)50);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "`q-R3f0K2En42l");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 50, column 1465.  Encountered: \"`\" (96), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.94280651371131
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",2");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 29);
      PipedInputStream pipedInputStream0 = new PipedInputStream(107);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(",2");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (byte)32, (-1802));
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream1.getBeginColumn());
      assertEquals(2, javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.9652404617625656
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0IyX2hY$QZ?+3S0Z");
      char[] charArray0 = new char[6];
      charArray0[0] = 'o';
      charArray0[1] = 'C';
      charArray0[2] = 'w';
      charArray0[3] = 'e';
      charArray0[4] = 'w';
      charArray0[5] = 'D';
      stringReader0.read(charArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "znVo");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 95, (byte)41);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager3.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals("+", token0.toString());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.0782985030628143
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      StringReader stringReader0 = new StringReader("goto");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      Token token0 = token_GTToken0.next;
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.565623208980741
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n {Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)112;
      byteArray0[3] = (byte)112;
      byteArray0[4] = (byte)112;
      byteArray0[5] = (byte)112;
      byteArray0[6] = (byte)112;
      byteArray0[7] = (byte)112;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      javaParserTokenManager0.jjround = (int) (byte)112;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      PipedInputStream pipedInputStream0 = new PipedInputStream(123);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("Qg2$7&16$|");
      StringReader stringReader2 = new StringReader("'%p#SrgM7Da2murE!{");
      StringReader stringReader3 = new StringReader("native");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader3, 14, (-2587));
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager1.getNextToken();
      assertEquals(5, javaCharStream1.bufpos);
      assertEquals((-2582), javaCharStream1.getEndColumn());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9842257778294128
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)5;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("blic");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 21, (-247), 204);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "short");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals("blic", token0.toString());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.972948166729215
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCPD1=");
      StringReader stringReader1 = new StringReader(":aXo!N-");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2859), 35, 38);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^");
      CharBuffer charBuffer0 = CharBuffer.allocate(34);
      charBuffer0.order();
      StringReader stringReader2 = new StringReader("");
      stringReader2.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(87, token0.kind);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9435528515000753
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCD1=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 48, 1324);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("Qg2$7&16$|");
      StringReader stringReader2 = new StringReader("'%p#SrgM7Da2murE!{");
      StringReader stringReader3 = new StringReader("tp]MKY4");
      StringReader stringReader4 = new StringReader("finally");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(48, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0998959640519017
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)41;
      byteArray0[7] = (byte)120;
      byteArray0[8] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader(":6+#3Ha;DW[@$.*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 6, 62);
      stringReader0.skip(6);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.curLexState = 1394;
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(";", token0.toString());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.1591241476800294
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[21];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), (-304), 122);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.jjround = (-2502);
      javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.getBeginColumn());
      assertEquals(7, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4888063585961497
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)50);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2094, 2997, 123);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token.GTToken token_GTToken1 = new Token.GTToken();
      javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(2998, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.485373940590371
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 93);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader("\"if\"");
      StringReader stringReader1 = new StringReader("interface");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-905), (-1170));
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals(73, token0.kind);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.4280887396585067
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Qg2$7&16$|");
      StringReader stringReader1 = new StringReader("'%p#SrgM7Da2murE!{");
      StringReader stringReader2 = new StringReader("tp]MKY4");
      StringReader stringReader3 = new StringReader("finally");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 84, 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      assertEquals(6, javaCharStream0.bufpos);
      assertEquals(96, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.488804904533256
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("strictfp");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 33, (-1502), 1345);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager2.getNextToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals((-1495), javaCharStream0.getColumn());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4351245659662126
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",2");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-99);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)5;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 43);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader1 = new StringReader("private");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 3841);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.030964473220763
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StringReader stringReader0 = new StringReader("this");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1022, 1022, 1022);
      stringReader0.markSupported();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      CharBuffer charBuffer0 = CharBuffer.allocate(3);
      try { 
        stringReader0.read(charBuffer0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5684573465719043
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Kt4Q&gMz[#xSM$");
      StringReader stringReader1 = new StringReader("Kt4Q&gMz[#xSM$");
      char[] charArray0 = new char[7];
      charArray0[0] = 'r';
      charArray0[1] = '&';
      charArray0[2] = 'D';
      charArray0[3] = 'w';
      charArray0[4] = '3';
      charArray0[5] = 'o';
      charArray0[6] = ':';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 43, 95);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager1.getNextToken();
      javaParserTokenManager0.TokenLexicalActions(token0);
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(74, token0.kind);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5696341556000113
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)41;
      byteArray0[7] = (byte)120;
      byteArray0[8] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader(":6+#3Ha;DW[@$.*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 6, 62);
      stringReader0.skip(6);
      javaCharStream0.BeginToken();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals("[", token0.toString());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0814344255903632
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)123;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)10);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1771), (byte)0, (byte)0);
      javaCharStream0.backup(0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals((-1769), javaCharStream0.getBeginLine());
      assertEquals("{", token0.toString());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0524392116832186
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",2");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-99);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 36, (byte)5, 34);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ",2");
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer1 = null;
      try {
        stringBuffer1 = new StringBuffer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.3566353903644248
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 93);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 93, 14, 2615);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 93, column 15.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5125784144695458
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("TY'[");
      StringBuffer stringBuffer0 = new StringBuffer("TY'[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 5.  Encountered: <EOF> after : \"\\'[\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.3566353903644248
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 93);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 93, 14, 2615);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 93, column 15.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.5038363951558198
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 27);
      PipedInputStream pipedInputStream0 = new PipedInputStream(27);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream1);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      StringReader stringReader0 = new StringReader("V'pZ)yWhJe DUjspw");
      StringReader stringReader1 = new StringReader("Qg2$7&16$|");
      StringReader stringReader2 = new StringReader("Qg2$7&16$|");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)0, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 0, column 3.  Encountered: \"Z\" (90), after : \"\\'p\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3571909285351618
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String string0 = "'\\LP5+9Fb|@K";
      StringReader stringReader0 = new StringReader("'LP5+9Fb|@K");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)42;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)42, (-2349), 113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "'LP5+9Fb|@K");
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 42, column -2347.  Encountered: \"P\" (80), after : \"\\'L\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.0626174149886314
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StringReader stringReader0 = new StringReader("n {Q");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      stringReader0.markSupported();
      char[] charArray0 = new char[2];
      charArray0[0] = '>';
      charArray0[1] = '\'';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo((-3086));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -3086. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.936128565442576
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      StringReader stringReader0 = new StringReader(";XgSIW(=x*1Q`|");
      StringReader stringReader1 = new StringReader("int");
      StringReader stringReader2 = new StringReader("int");
      StringReader stringReader3 = new StringReader("/");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader4 = new StringReader(";XgSIW(=x*1Q`|");
      StringReader stringReader5 = new StringReader("int");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader5, 54, 87);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(89, javaCharStream0.getBeginColumn());
      assertEquals(0, token0.kind);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.529881742391983
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0jEeO;-$=E~Jx{*[UA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 108, (-2542), 270);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Kt4Q&gMz[#xSM$");
      CharBuffer.allocate(88);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, 88);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 88. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.4981761906601778
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)82;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte)124;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)50);
      byteArrayInputStream0.read();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " column ");
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1, (-1), (-3251), 11);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(74, token0.kind);
      assertEquals("R", token0.toString());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.510938224830646
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("$~B}_[<`*U+V>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1324, 50, 2599);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "$~B}_[<`*U+V>");
      javaParserTokenManager1.getNextToken();
      StringBuffer stringBuffer1 = new StringBuffer("#lh{R-3i");
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager2.getNextToken();
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals(90, token0.kind);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.3018601525891627
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)5;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2094);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, byteArrayInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 8, (byte) (-60), (-3585));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 8, column -60.  Encountered: \"\\ufffd\" (65533), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(javaParserTokenManager0.debugStream, false);
      javaParserTokenManager0.setDebugStream(mockPrintStream0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5'u_]j;AxS6/");
      StringReader stringReader1 = new StringReader("s4%Y+'c");
      StringReader stringReader2 = new StringReader("\"tansn");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)42;
      byteArray0[1] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 2094);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 1795, (-633), 0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 0, (byte)42);
      char[] charArray0 = new char[9];
      charArray0[0] = '8';
      charArray0[1] = 'N';
      charArray0[2] = '5';
      charArray0[3] = 'T';
      charArray0[4] = '-';
      charArray0[5] = '%';
      charArray0[6] = 'W';
      charArray0[7] = '&';
      charArray0[8] = 'S';
      javaCharStream1.nextCharBuf = charArray0;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^gbRCD1=");
      StringReader stringReader1 = new StringReader("oB:%I*0tZuf-.");
      StringReader stringReader2 = new StringReader("n[ETwuG)");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 695, 4, 2433);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 4);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 4. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5348527702824653
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 93);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      StringReader stringReader0 = new StringReader("interface");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 93, 93, 93);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(93, javaCharStream0.getBeginColumn());
      assertEquals(41, token0.kind);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.518004530488664
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("$~B}_[<`*U+V>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      int int0 = 0;
      javaParserTokenManager0.getNextToken();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)74;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaParserTokenManager0.jjFillToken();
      javaParserTokenManager0.ReInit(javaCharStream0);
      stringReader0.markSupported();
      String string0 = "tvt;[\\wEE";
      String string1 = "\"instanceof\"";
      String string2 = "fB-evu)9=#|^nKH3";
      try { 
        MockURI.URI("\"instanceof\"", "$", "$~B}_[<`*U+V>", "fB-evu)9=#|^nKH3", " (");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Relative path in absolute URI: \"instanceof\"://$$~B%7D_%5B%3C%60*U+V%3E?fB-evu)9=%23%7C%5EnKH3#%20(
         //
         verifyException("java.net.URI", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.9556709902667195
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("bRCPD1=I");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 43, 48, 1324);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "bRCPD1=I");
      javaParserTokenManager0.getNextToken();
      StringBuffer stringBuffer1 = new StringBuffer("");
      javaParserTokenManager0.image = stringBuffer1;
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.jjFillToken();
      assertEquals(7, javaCharStream0.bufpos);
      assertEquals(55, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.0631553492350454
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)88;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader(":6+#3Ha;DW[@$.*");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 62, 6, 62);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.getNextToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":6+#3Ha;DW[@$.*");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.mark(87);
      CharBuffer charBuffer0 = CharBuffer.allocate(45);
      stringReader0.read(charBuffer0);
      javaParserTokenManager0.getNextToken();
      javaParserTokenManager0.getNextToken();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 62, column 9.  Encountered: \"#\" (35), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.552962684387649
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte)44;
      byteArray0[4] = (byte) (-125);
      StringReader stringReader0 = new StringReader("protected");
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)50;
      byteArray1[1] = (byte)50;
      byteArray1[2] = (byte) (-125);
      byteArray1[3] = (byte)50;
      byteArray1[4] = (byte)30;
      byteArray1[5] = (byte)44;
      byteArray1[6] = (byte)30;
      byteArray1[7] = (byte) (-125);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-125), 1814);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = javaParserTokenManager0.getNextToken();
      assertEquals(8, javaCharStream0.bufpos);
      assertEquals(48, token0.kind);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      String string0 = "$~B}_[<`*U+V>";
      StringReader stringReader0 = new StringReader("$~B}_[<`*U+V>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      Token token0 = new Token();
      javaParserTokenManager0.ReInit(javaCharStream0, 0);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)36;
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)74;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.3566353903644248
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 11);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (byte)10);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 1338, 1077, 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1340, column 1.  Encountered: \"\" (0), after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("void");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader5 = new StringReader("tp]MKY4");
      StringReader stringReader6 = new StringReader("tp]MKY4");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      Token token0 = new Token();
      // Undeclared exception!
      try { 
        javaParserTokenManager0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" bT[?x");
      StringReader stringReader1 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader2 = new StringReader("void");
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("KT4A-B3n?py0");
      StringReader stringReader5 = new StringReader("tp]MKY4");
      StringReader stringReader6 = new StringReader("tp]MKY4");
      int int0 = 90;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 246, 90);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.SwitchTo(246);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 246. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.9744574254105212
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("vJE\"vfV?G0}RzA");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2705, 5, 113);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParserTokenManager javaParserTokenManager2 = new JavaParserTokenManager(javaCharStream0, 3);
      JavaParserTokenManager javaParserTokenManager3 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager3.getNextToken();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals(7, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-89);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 44);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 2598, (-760), 6);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.ReInit(javaCharStream0, (int) (byte) (-89));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -89. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("0jEeO;-$=E~Jx{*[UA");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Token.GTToken token_GTToken0 = new Token.GTToken();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0, 0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Kt4Q&gMz[#xSM$");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)42;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("Kt4Q&gMz[#xSM$");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "Kt4Q&gMz[#xSM$");
      StringBuffer stringBuffer1 = new StringBuffer("Kt4Q&gMz[#xSM$");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      // Undeclared exception!
      try { 
        javaParserTokenManager0.jjFillToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }
}
