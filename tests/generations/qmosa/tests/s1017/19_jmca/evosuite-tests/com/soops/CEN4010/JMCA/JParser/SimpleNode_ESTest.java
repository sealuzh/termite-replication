/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 15:40:20 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8001573041913385
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(")");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("\"");
      simpleNode0.dump("<z", stringWriter0);
      char[] charArray0 = new char[8];
      charArray0[0] = '/';
      charArray0[1] = ';';
      charArray0[2] = '?';
      charArray0[3] = 'v';
      charArray0[4] = 'z';
      charArray0[5] = 'h';
      charArray0[6] = 'd';
      charArray0[7] = 'g';
      // Undeclared exception!
      try { 
        stringWriter0.write(charArray0, (-1694), 7);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4536759938689032
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SystemInUtil.addInputLine("VariableDeclaratorId");
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(63);
      simpleNode1.setIdentifier("<");
      simpleNode0.toString();
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("=", stringWriter0);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      dataInputStream0.read(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(pushbackInputStream0);
      SimpleNode simpleNode2 = new SimpleNode(358);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.append('+');
      simpleNode2.dump("?g,D9H'5%7OP", stringWriter0);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n+", stringWriter0.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3148914488554517
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(99);
      SimpleNode simpleNode1 = new SimpleNode(99);
      simpleNode0.jjtAddChild(simpleNode1, 99);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetChild(99);
      simpleNode2.parent = (Node) simpleNode0;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)53;
      byteArray0[2] = (byte)56;
      byteArray0[3] = (byte)59;
      byteArray0[4] = (byte)20;
      byteArray0[5] = (byte)62;
      byteArray0[6] = (byte)87;
      byteArray0[7] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.jjtGetChild(61);
      simpleNode1.toString("82r$iX 1N'2.i=l");
      simpleNode1.toString("82r$iX 1N'2.i=lMemberValuePairs");
      simpleNode1.jjtAddChild(simpleNode0, (byte)121);
      simpleNode2.toString("82r$iX 1N'2.i=lMemberValuePairsMemberValuePairs");
      SimpleNode simpleNode3 = (SimpleNode)simpleNode2.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode3.jjtAddChild(simpleNode2.parent, (-1103330053));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1103330053
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4235803328603263
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<=");
      simpleNode0.toString("{");
      simpleNode0.setIdentifier("{");
      JavaParser javaParser0 = new JavaParser("jekg/K_0:YQg+6XQA+g)");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("jekg/K_0:YQg+6XQA+g)", 0, 0);
      stringWriter0.flush();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("<=", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump("CompilationUnit", stringWriter1);
      simpleNode0.setIdentifier("<=");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.toString();
      simpleNode0.toString();
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 4096);
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode1.toString();
      // Undeclared exception!
      simpleNode0.dump("j_C>ie", stringWriter0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0944362393004088
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("\"");
      simpleNode0.dump("<z", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<z");
      simpleNode0.setIdentifier("*=");
      simpleNode0.toString();
      simpleNode0.dump(" ", stringWriter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Hs}<$");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"");
      simpleNode0.setIdentifier("VariableDeclaratorId : \" : *=");
      simpleNode0.dump("lms%G}", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((File) null, "<z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"<z\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9920480917684886
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "=";
      simpleNode0.toString();
      simpleNode0.setIdentifier("=");
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.write("jekg/K_0:g+6XQA+g)", 0, 0);
      stringWriter0.flush();
      simpleNode0.setIdentifier(">=");
      stringWriter0.write("=");
      simpleNode0.dump("><", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(32);
      stringWriter0.close();
      SimpleNode simpleNode1 = new SimpleNode(32);
      String string1 = "Xjp\"e{MNM0(O$K{K'YV";
      File file0 = MockFile.createTempFile("jekg/K_0:g+6XQA+g)", "Xjp\"e{MNM0(O$K{K'YV");
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile(file0, "Xjp\"e{MNM0(O$K{K'YV");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"Xjp\"e{MNM0(O$K{K'YV\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2637);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.id = 2637;
      SimpleNode simpleNode1 = new SimpleNode(2637);
      simpleNode0.parent = (Node) simpleNode1;
      JavaParser javaParser0 = new JavaParser("1JG>5Xsc1<");
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2637);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2637
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.097532214532607
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      simpleNode0.setIdentifier("=");
      simpleNode0.setIdentifier(">>");
      simpleNode0.setIdentifier("Expression");
      simpleNode0.setIdentifier("ClassOrInterfaceType");
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("{qF\"anu!", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>=</identifier>\n  <identifier>*rshft</identifier>\n  <identifier>Expression</identifier>\n  <identifier>ClassOrInterfaceType</identifier>\n  <identifier>*rshft</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = simpleNode0.toString();
      assertEquals("ClassOrInterfaceType : = : >> : Expression : ClassOrInterfaceType : >>", string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2468382315802122
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      simpleNode0.setIdentifier("o");
      simpleNode0.setIdentifier("o");
      simpleNode0.setIdentifier("&&");
      simpleNode0.toString("<=");
      simpleNode0.setIdentifier("o");
      simpleNode0.setIdentifier("<=ClassOrInterfaceType : o : o : &&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("%az_zXfWR-+I", stringWriter0);
      assertEquals("<ClassOrInterfaceType>\n  <identifier>o</identifier>\n  <identifier>o</identifier>\n  <identifier>*amp</identifier>\n  <identifier>o</identifier>\n  <identifier><=ClassOrInterfaceType : o : o : &&</identifier>\n</ClassOrInterfaceType>\n", stringWriter0.toString());
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = simpleNode0.toString("<=ClassOrInterfaceType : o : o : &&");
      assertEquals("<=ClassOrInterfaceType : o : o : &&ClassOrInterfaceType : o : o : && : o : <=ClassOrInterfaceType : o : o : &&", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.233504898246879
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*=");
      simpleNode0.setIdentifier("}");
      simpleNode0.toString("}");
      simpleNode0.dump("}", stringWriter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hGa?;,Iz");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("g");
      simpleNode0.dump("}EnumBody : }", stringWriter0);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1103541282));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<IDENTIFIER>");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      String string0 = ";";
      simpleNode0.setIdentifier(";");
      simpleNode0.dump(";", stringWriter0);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      stringBuffer0.codePoints();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('=');
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      stringBuffer0.append('=');
      stringWriter0.write("u,grBq{");
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0, 0, 0);
      char[] charArray1 = new char[8];
      charArray1[0] = '=';
      charArray1[1] = '=';
      charArray1[2] = '=';
      charArray1[3] = '=';
      charArray1[4] = 'L';
      charArray1[5] = '=';
      charArray1[6] = '=';
      charArray1[7] = '=';
      stringWriter3.write(charArray1);
      stringBuffer0.insert(0, (long) 0);
      StringWriter stringWriter4 = new StringWriter(0);
      StringWriter stringWriter5 = new StringWriter(0);
      stringWriter1.flush();
      stringWriter3.write("Z.4aNMmm~^)QG=+M5c8", 0, 0);
      stringWriter2.write(0);
      StringWriter stringWriter6 = new StringWriter();
      stringWriter6.flush();
      stringWriter4.write(0);
      StringWriter stringWriter7 = new StringWriter();
      stringWriter2.close();
      simpleNode0.dump("<", stringWriter0);
      assertEquals("u,grBq{<CompilationUnit>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2814326612302802
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      String string0 = "=";
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.write("jekg/K_0:g+6XQA+g)", 0, 0);
      stringWriter0.flush();
      simpleNode0.setIdentifier("{");
      simpleNode0.dump((String) null, stringWriter0);
      int int1 = 215;
      int int2 = 0;
      CharBuffer.allocate(215);
      CharBuffer charBuffer0 = CharBuffer.allocate(215);
      CharBuffer charBuffer1 = CharBuffer.allocate(0);
      charBuffer0.put(charBuffer1);
      // Undeclared exception!
      try { 
        charBuffer1.put(charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9602969274513442
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      simpleNode0.setIdentifier("<<");
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("jekg/K_0:g+6XQA+g)", 0, 0);
      stringWriter0.flush();
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump("<=", stringWriter0);
      InputStream inputStream0 = null;
      int int0 = 10;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 10);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2283766931186737
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<=");
      simpleNode0.toString("{");
      simpleNode0.setIdentifier("{");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "{CompilationUnit : <=");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(0);
      stringWriter2.write("+jw|~a$<K");
      char[] charArray0 = new char[24];
      charArray0[0] = ':';
      charArray0[1] = 'U';
      charArray0[2] = 'U';
      charArray0[3] = 'P';
      charArray0[4] = '1';
      stringWriter0.write(charArray0);
      StringWriter stringWriter3 = new StringWriter();
      stringWriter2.flush();
      stringWriter2.append('');
      StringWriter stringWriter4 = stringWriter1.append((CharSequence) "4xUL6(%_");
      StringWriter stringWriter5 = stringWriter4.append('P');
      stringWriter5.write(charArray0);
      stringWriter5.close();
      stringWriter5.append('1');
      stringWriter0.close();
      simpleNode0.dump("F.%Po&", stringWriter3);
      assertEquals("<CompilationUnit>\n  <identifier>*le</identifier>\n</CompilationUnit>\n", stringWriter3.toString());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter3 = new StringWriter(6);
      StringWriter stringWriter4 = new StringWriter('p');
      StringWriter stringWriter5 = new StringWriter('p');
      StringWriter stringWriter6 = new StringWriter(6);
      StringWriter stringWriter7 = new StringWriter();
      stringWriter7.write("*Dt");
      stringWriter7.write("FieldDeclaration", 6, 6);
      stringWriter7.write(6);
      stringWriter6.write(65);
      stringWriter0.close();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte) (-23);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)82;
      byteArray0[6] = (byte) (-37);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringWriter1.write((-4125));
      StringWriter stringWriter8 = new StringWriter();
      stringWriter5.close();
      stringWriter0.close();
      simpleNode0.dump("*Dt", stringWriter2);
      assertEquals("<ExtendsList>\n  <identifier>*gt</identifier>\n</ExtendsList>\n", stringWriter2.toString());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      SimpleNode simpleNode0 = new SimpleNode(0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/;");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "<G");
      simpleNode0.identifiers = null;
      String string0 = "o";
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/;");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      // Undeclared exception!
      try { 
        simpleNode0.toString("o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3498781205135455
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 48;
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.dump("", stringWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("RelationalExpression : ", stringWriter0);
      int int1 = 215;
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      CharBuffer.allocate(48);
      String string0 = "Q";
      // Undeclared exception!
      try { 
        charBuffer0.put("RelationalExpression : ");
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8229691200188713
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("&");
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append('=');
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.flush();
      stringBuffer0.insert(0, (-2225L));
      StringWriter stringWriter3 = new StringWriter(1300);
      StringWriter stringWriter4 = new StringWriter(1300);
      stringWriter0.flush();
      stringWriter1.write("Z.4aNMmm~^)QG=+M5c8", 1, 0);
      stringWriter4.write((-51890869));
      StringWriter stringWriter5 = new StringWriter();
      stringWriter1.write((-3521));
      StringWriter stringWriter6 = stringWriter2.append('=');
      stringWriter6.close();
      simpleNode0.dump("2/A:;##\"#MGVr3u,a8", stringWriter1);
      assertEquals("=\uF23F<CompilationUnit>\n  <identifier>*amp</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.338448149134649
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      int int0 = 1;
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter(1);
      simpleNode0.dump("K", stringWriter0);
      simpleNode1.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(110);
      simpleNode0.jjtAddChild(simpleNode0, 110);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.jjtGetChild(110);
      simpleNode1.identifiers = null;
      simpleNode0.jjtGetChild(61);
      assertEquals(111, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.236956237434978
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SystemInUtil.addInputLine((String) null);
      JavaParser javaParser0 = new JavaParser("!EQ_8YC|");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.toString("!EQ_8YC|");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("!EQ_8YC|CompilationUnit");
      simpleNode0.toString("Literal");
      simpleNode0.toString();
      simpleNode0.toString("7l[=o(_k+%$1K0]'!Z^");
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1699));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1699
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8279744704801222
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-2030));
      simpleNode0.jjtAddChild(simpleNode1, 3191);
      JavaParser javaParser1 = new JavaParser((String) null);
      JJTJavaParserState jJTJavaParserState0 = javaParser1.jjtree;
      jJTJavaParserState0.reset();
      jJTJavaParserState0.reset();
      StringWriter stringWriter0 = new StringWriter(49);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtAddChild(simpleNode0, 3500);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(4);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "</");
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 2182);
      assertEquals(2183, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('=');
      StringWriter stringWriter3 = new StringWriter();
      stringWriter0.flush();
      stringBuffer0.insert(0, (long) 0);
      StringWriter stringWriter4 = new StringWriter(0);
      StringWriter stringWriter5 = new StringWriter(0);
      stringWriter1.flush();
      stringWriter3.write("Z.4aNMmm~^)QG=+M5c8", 0, 0);
      stringWriter2.write(0);
      StringWriter stringWriter6 = new StringWriter();
      stringWriter4.write(0);
      stringWriter6.append('=');
      stringWriter2.close();
      simpleNode0.dump("r*", stringWriter5);
      assertEquals("", stringWriter5.toString());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(60);
      Node[] nodeArray0 = new Node[5];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/;");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/;");
      char[] charArray0 = new char[8];
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "1u'C");
      SimpleNode simpleNode0 = new SimpleNode((-143528937));
      simpleNode0.id = (-143528937);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -143528937
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = (-4739);
      SimpleNode simpleNode0 = new SimpleNode((-4739));
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-4739));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-310));
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      Node node0 = simpleNode0.parent;
      nodeArray0[4] = null;
      nodeArray0[5] = (Node) simpleNode0;
      nodeArray0[6] = (Node) simpleNode0;
      nodeArray0[7] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1087843497));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1087843497
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hF5 Xcp$jp}t3|+r");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1014, 1014, 1014);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParserTokenManager0.defaultLexState = 1014;
      javaParserTokenManager0.jjmatchedKind = 1014;
      StringWriter stringWriter0 = new StringWriter();
      javaParserTokenManager0.jjnewStateCnt = 1014;
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      charArray0[2] = '6';
      charArray0[3] = '>';
      charArray0[4] = 'Z';
      charArray0[6] = '\u0089';
      stringWriter0.write(24);
      javaCharStream0.GetImage();
      stringWriter0.append((CharSequence) null);
      stringWriter0.write("hF5 Xcp$jp}t3|+r");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4273916305367944
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SXc_10d?+u&%");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1443682950));
      char[] charArray0 = new char[6];
      charArray0[0] = 'c';
      javaParser0.NameList();
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      simpleNode0.parser = javaParser0;
      charArray0[3] = 'c';
      charArray0[4] = '3';
      charArray0[5] = 's';
      CharBuffer charBuffer0 = CharBuffer.allocate('c');
      charBuffer0.duplicate();
      int int0 = stringReader0.read(charBuffer0);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-3727), (-154417720), 1060);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      JavaParser javaParser1 = new JavaParser((Reader) null);
      Node node0 = javaParser1.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-154417720));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0974033676362451
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 48;
      SimpleNode simpleNode0 = new SimpleNode(48);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("+");
      simpleNode0.toString();
      simpleNode0.dump("+", stringWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump("RelationalExpression : +", stringWriter0);
      int int1 = 215;
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      CharBuffer.allocate(48);
      String string0 = "Q";
      // Undeclared exception!
      try { 
        charBuffer0.put("RelationalExpression : +");
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "*=";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*=");
      String string1 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.setIdentifier((String) null);
      String string2 = ")`)pnm45(l_t`+(W";
      simpleNode0.toString(")`)pnm45(l_t`+(W");
      // Undeclared exception!
      try { 
        simpleNode0.dump("t", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(4);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "</");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-973));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -973
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = 'c';
      SystemInUtil.addInputLine("j%");
      charArray0[2] = 'c';
      charArray0[3] = '\u0000';
      charArray0[5] = '\u0084';
      CharBuffer charBuffer0 = CharBuffer.allocate('\u0000');
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      CharBuffer.wrap(charArray0, 10, 10);
      charBuffer0.put(charBuffer1);
      charBuffer0.duplicate();
      SimpleNode simpleNode0 = new SimpleNode(1399);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(1423);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5358307369695121
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString(",");
      simpleNode0.toString(",");
      simpleNode0.toString();
      String string0 = "s\\Y}Y^SGv";
      simpleNode0.setIdentifier("sY}Y^SGv");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "*amp");
      simpleNode0.dump("*amp", stringWriter1);
      simpleNode0.toString(" Yo<L/#C`~dgBkC");
      simpleNode0.jjtOpen();
      simpleNode0.toString();
      simpleNode0.toString();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((-1310));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/;");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "</");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/;");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "</");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      // Undeclared exception!
      try { 
        simpleNode0.toString("&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1310
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2201));
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rt)0\"y\"UEA0\"-eO3");
      simpleNode0.setIdentifier("Rt)0\"y\"UEA0\"-eO3");
      String string0 = ",NB~l<~L<|/Wj";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4)0");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("*=");
      String string1 = "";
      // Undeclared exception!
      try { 
        simpleNode0.dump("", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("khREb");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("('|Du3&,p\"?HGb/8", stringWriter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-30561911));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1938);
      simpleNode0.jjtClose();
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }
}
