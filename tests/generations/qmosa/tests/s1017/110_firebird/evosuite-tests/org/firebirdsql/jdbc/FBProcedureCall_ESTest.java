/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 15:01:55 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.493814542380922
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1049, "7E/?S)5f^6M7KP|?K");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = (FBProcedureParam)fBProcedureParam1.clone();
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureParam1.setIndex(31);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.addOutputParam(fBProcedureParam2);
      FBProcedureParam fBProcedureParam4 = (FBProcedureParam)fBProcedureParam1.clone();
      FBProcedureCall fBProcedureCall2 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.addParam(41, "5nCr/.CK4'!9Ojyt");
      assertTrue(fBProcedureCall0.equals((Object)fBProcedureCall2));
      
      fBProcedureParam1.clone();
      fBProcedureCall0.addParam(31, "MTt_1IE.T6_e&P*");
      FBProcedureParam fBProcedureParam5 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam6 = fBProcedureCall1.addParam(31, "iow-3wYY");
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      fBProcedureCall3.addOutputParam(fBProcedureParam4);
      boolean boolean0 = FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY;
      Object object0 = new Object();
      fBProcedureCall0.addParam(12, "MTt_1IE.T6_e&P*");
      fBProcedureParam6.setType(31);
      fBProcedureCall3.registerOutParam(31, 3113);
      fBProcedureCall0.getOutputParam((-1));
      fBProcedureCall0.mapOutParamIndexToPosition((-75735645), true);
      fBProcedureCall0.registerOutParam((-1), (-4907));
      assertNotSame(fBProcedureCall0, fBProcedureCall1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.320051914151843
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 1630;
      fBProcedureCall0.mapOutParamIndexToPosition(1630);
      int int1 = 59247398;
      boolean boolean0 = true;
      fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(59247398, true);
      fBProcedureCall0.addParam(59247398, "08007");
      int int2 = (-1273);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-1273));
      fBProcedureParam0.clone();
      fBProcedureParam0.setType(1910);
      // Undeclared exception!
      fBProcedureCall0.getInputParam(59247398);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.091093547580898
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(1);
      fBProcedureParam0.setType(1);
      fBProcedureParam0.setIndex(741);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setType((-3349));
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.addParam(741, "bQ/ke,y4m;jzTt^6?`");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(741);
      fBProcedureParam1.setIndex(30);
      fBProcedureParam0.setType(1158);
      fBProcedureParam0.setType(887);
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      fBProcedureCall2.getInputParam(2);
      Object object1 = new Object();
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        fBProcedureCall1.addParam(30, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.063475819876344
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, ">\"{(Z2ROS;hsFZ3]w:?");
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setIndex(0);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(2853, "`;8Yo{M>HIhV\"=|fDd");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.registerOutParam(0, (-1825));
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.getSQL(false);
      // Undeclared exception!
      fBProcedureCall0.getSQL(true);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.9553602999349744
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "Value of parameter ";
      fBProcedureCall0.addParam(5496, "Value of parameter ");
      Object object5 = new Object();
      int int0 = 2269;
      fBProcedureCall0.getInputParam(2269);
      fBProcedureCall0.clone();
      // Undeclared exception!
      fBProcedureCall0.clone();
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8045273445031005
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("QV5mub>/XIs5V MS");
      fBProcedureCall1.mapOutParamIndexToPosition(0, true);
      fBProcedureCall1.setName("QV5mub>/XIs5V MS");
      fBProcedureCall0.equals(fBProcedureCall1);
      // Undeclared exception!
      try { 
        fBProcedureCall1.addParam((-3343), "QV5mub>/XIs5V MS");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3343
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.236007784904913
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(31, "S+Lv<#y?M=n$G84h(");
      fBProcedureParam2.setValue("S+Lv<#y?M=n$G84h(");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam2.setIndex((-1381));
      assertEquals(31, fBProcedureParam2.getPosition());
      
      fBProcedureParam1.setType(489);
      fBProcedureParam1.setIndex(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureCall0.registerOutParam((-1381), 294);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.26255712332409
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2024, "V}Ql]Qi=UUR?@`OpVy");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(2024, true);
      fBProcedureCall0.mapOutParamIndexToPosition(2024, true);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      //  // Unstable assertion: assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam1 = fBProcedureCall1.getInputParam(18);
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall1.mapOutParamIndexToPosition((-1), true);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall1.getOutputParam(2024);
      //  // Unstable assertion: assertNotSame(fBProcedureCall1, fBProcedureCall0);
      //  // Unstable assertion: assertEquals(31, fBProcedureParam2.getType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8306007398058717
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(31, "S+Lv<#y?M=n$G84h(");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam1.setIndex((-1381));
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam((-1381));
      assertEquals(31, fBProcedureParam3.getPosition());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5872687490215727
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 16;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(887, "?mB!X}V");
      fBProcedureCall0.mapOutParamIndexToPosition(887);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int1 = (-1804);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      String string0 = "*l ";
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(16, "*l ");
      FBProcedureParam fBProcedureParam2 = (FBProcedureParam)fBProcedureParam1.clone();
      fBProcedureParam1.setType((-1732));
      fBProcedureParam1.clone();
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(16, "*l ");
      fBProcedureParam3.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam3);
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam((-1804), "*l ");
      fBProcedureCall0.mapOutParamIndexToPosition((-1804));
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.addParam(4145, "kf");
      try { 
        fBProcedureCall0.registerOutParam(16, 16);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0061360318451857
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "hQ/ke,54m?jzMt:6?`");
      fBProcedureCall0.getSQL(true);
      fBProcedureParam0.setValue(fBProcedureCall0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-212), (-212));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -213
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1860959423262476
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "hQ/Rke,54m?jzMt:6?`");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-212), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -213
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.044178766431251
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(31);
      fBProcedureParam0.setIndex(276);
      fBProcedureParam0.setType(31);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(276);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.addParam(31, "bQ/ke,A4m;jzTt:6?`");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(276, "bQ/ke,A4m;jzTt:6?`");
      fBProcedureParam2.setType(0);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.091242447368375
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(31, "S+Lv<#y?M=n$G84h(");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam2.setIndex((-1381));
      fBProcedureParam1.setType(489);
      fBProcedureParam1.setIndex(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureCall0.registerOutParam((-1381), 294);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertNotSame(fBProcedureParam0, fBProcedureParam2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.06075971812573
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      int int0 = 31;
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      int int1 = (-1381);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(489, "iow-3wYY");
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureParam2.setType(959);
      fBProcedureParam0.setType((-848));
      fBProcedureCall0.getInputParam((-1));
      fBProcedureParam2.setIndex(31);
      try { 
        fBProcedureParam1.setValue("iow-3wYY");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot set parameter, since it is constant.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureParam", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0332653667861926
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(18, " not set and ");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(18, " ");
      fBProcedureParam1.setIndex(1363);
      fBProcedureParam1.setIndex((-1381));
      FBProcedureParam fBProcedureParam2 = (FBProcedureParam)fBProcedureParam1.clone();
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      fBProcedureParam3.clone();
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(1363, " not set and ");
      fBProcedureCall0.addOutputParam(fBProcedureParam4);
      fBProcedureParam0.setType((-30842874));
      fBProcedureParam1.setIndex((-30842874));
      fBProcedureParam3.setType(364);
      fBProcedureParam2.setIndex(1363);
      FBProcedureParam fBProcedureParam5 = new FBProcedureParam();
      fBProcedureCall0.registerOutParam((-30842874), 2412);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      assertEquals("not set and", fBProcedureParam3.getParamValue());
      assertEquals(18, fBProcedureParam3.getPosition());
      assertEquals(18, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.2024517442670923
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(4533, "07001");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      fBProcedureCall0.registerOutParam(41, 41);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1735964860831856
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam1 = (FBProcedureParam)fBProcedureParam0.clone();
      FBProcedureParam fBProcedureParam2 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam1.setType(1);
      FBProcedureParam fBProcedureParam3 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam3.setIndex(1);
      fBProcedureCall0.getOutputParam(1);
      fBProcedureParam3.setType(742);
      fBProcedureParam3.setType(742);
      fBProcedureParam3.setType(1);
      int int0 = 731;
      fBProcedureParam3.setIndex(731);
      fBProcedureCall0.getOutputParam(731);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setType((-3349));
      fBProcedureCall0.addParam(731, "bQ/ke,A4m;jzTt:6?`");
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.getInputParam(731);
      fBProcedureParam4.setType(1);
      fBProcedureParam2.clone();
      fBProcedureParam4.clone();
      fBProcedureParam4.clone();
      fBProcedureParam4.setIndex(1);
      fBProcedureCall0.getOutputParam((-1));
      fBProcedureParam0.setType(1158);
      int int1 = 887;
      fBProcedureParam0.setType(887);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 731
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4622153762012386
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(40);
      fBProcedureParam0.setType(40);
      fBProcedureParam0.setType(40);
      fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getOutputParam((-1178));
      fBProcedureCall0.getOutputParam(40);
      fBProcedureCall0.addParam(547, "1!!h,OR");
      boolean boolean0 = false;
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.addParam(40, "A.D");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam(40);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam((-1178));
      fBProcedureCall0.getOutputParams();
      int int0 = 3;
      try { 
        fBProcedureCall0.registerOutParam(3, 935);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2507054424176496
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(18, " not set and ");
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(18, "it was not registered as output paramete!.");
      fBProcedureParam0.setIndex(18);
      fBProcedureParam0.setIndex(18);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam1.clone();
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(4, "07001");
      fBProcedureParam1.setIndex(4);
      fBProcedureParam1.setIndex(0);
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam5 = new FBProcedureParam();
      fBProcedureParam3.setIndex(4);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.getOutputParam(18);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.324182061870656
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 0;
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(0, "hQ/Rke,54m?jzMt:6?`");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.setName("lW/*ZT");
      int int1 = (-212);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getName();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-212), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -213
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1341844219654487
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex((-3542));
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "%kq");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam2.setIndex(3164);
      fBProcedureParam1.setIndex(3164);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam(3164, "%kq");
      fBProcedureCall0.registerOutParam(3164, 18);
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.getInputParam(3164);
      fBProcedureCall0.addOutputParam(fBProcedureParam4);
      assertEquals(0, fBProcedureParam4.getPosition());
      assertEquals(3164, fBProcedureParam4.getIndex());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam((-1));
      assertFalse(fBProcedureParam1.isValueSet());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9257282837199994
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex((-3542));
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam1.setIndex(3164);
      fBProcedureParam1.setIndex(3164);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam(3164, "%kq");
      fBProcedureCall0.registerOutParam(3164, 18);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.getInputParam(3164);
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      assertEquals(18, fBProcedureParam3.getType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.0100015766978823
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("Cannot set parameter, since it is constant.");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(547);
      fBProcedureCall0.mapOutParamIndexToPosition((-663));
      fBProcedureCall0.mapOutParamIndexToPosition((-663), true);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(0, "");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall1.getOutputParam(289);
      fBProcedureCall1.addInputParam(fBProcedureParam1);
      fBProcedureParam1.clone();
      fBProcedureParam1.setIndex((-663));
      fBProcedureCall0.equals(fBProcedureParam1);
      fBProcedureParam1.setIndex(0);
      fBProcedureParam0.clone();
      fBProcedureParam1.setIndex(0);
      fBProcedureCall0.equals("");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.equals(fBProcedureParam1);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.mapOutParamIndexToPosition(0);
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.setName("");
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.registerOutParam(0, (-663));
      fBProcedureCall0.addParam(18, "or");
      fBProcedureCall0.getName();
      fBProcedureCall1.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.getSQL(false);
      assertFalse(fBProcedureCall0.equals((Object)fBProcedureCall1));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      int int0 = (-417);
      String string0 = "MTt_1IE.T6_e&P*";
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam1.setIndex((-417));
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      int int1 = (-592);
      fBProcedureParam3.setIndex((-592));
      fBProcedureParam1.setType((-592));
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam((-417), "Value of parameter ");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam(fBProcedureParam4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -417
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-1), "07005");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5223286725742615
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object0 = fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "01S06");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall1.addParam(1854, "\n");
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall1.equals(object0);
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      try { 
        fBProcedureCall1.registerOutParam(1752, 18);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.505402594883787
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(489, "iow-3wYY");
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureParam0.setType((-848));
      fBProcedureParam2.setIndex(31);
      assertEquals(489, fBProcedureParam2.getPosition());
      
      fBProcedureParam1.setIndex(1535);
      Object object0 = fBProcedureCall0.clone();
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.834709252465765
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(18, " not set and ");
      fBProcedureParam0.setIndex(18);
      fBProcedureParam0.clone();
      int int0 = 547;
      FBProcedureParam fBProcedureParam1 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      String string0 = "$p";
      fBProcedureCall0.setName("$p");
      fBProcedureParam0.clone();
      fBProcedureParam0.setIndex(547);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall0.equals(fBProcedureCall1);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.mapOutParamIndexToPosition(42);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall2.getOutputParam(42);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      try { 
        fBProcedureCall2.registerOutParam(547, 18);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9448468679826323
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall1.equals(fBProcedureCall2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1572564645645604
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(489, "iow-3wYY");
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureParam0.setIndex((-1381));
      fBProcedureParam2.setIndex(31);
      fBProcedureParam0.setType((-848));
      fBProcedureParam2.setIndex(31);
      fBProcedureParam1.setIndex((-848));
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.registerOutParam(31, (-1381));
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(490, list0.size());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.973819512327992
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "Specified parameter does not exist.");
      FBProcedureParam fBProcedureParam1 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName("Cannot set parameter, since it is constant.");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getOutputParam(547);
      fBProcedureParam2.setType(0);
      fBProcedureCall0.mapOutParamIndexToPosition((-663));
      fBProcedureCall0.mapOutParamIndexToPosition((-663), true);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(0, "");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureParam3.setType((-663));
      fBProcedureParam3.clone();
      fBProcedureParam1.clone();
      fBProcedureParam2.clone();
      fBProcedureParam3.setIndex((-663));
      fBProcedureCall0.equals(fBProcedureParam3);
      fBProcedureParam3.setIndex(0);
      fBProcedureParam2.clone();
      fBProcedureParam3.setIndex(0);
      fBProcedureCall0.equals("");
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      fBProcedureCall0.equals(fBProcedureParam3);
      fBProcedureCall1.mapOutParamIndexToPosition((-663));
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall1.addInputParam(fBProcedureParam1);
      fBProcedureCall0.registerOutParam(0, 18);
      fBProcedureCall0.getSQL(false);
      // Undeclared exception!
      try { 
        fBProcedureCall1.getInputParam((-663));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -664
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2269917651898257
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex((-3542));
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(18, "%kq");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam2.setIndex(3198);
      assertEquals(18, fBProcedureParam2.getPosition());
      
      fBProcedureParam1.setIndex(3198);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.registerOutParam(3198, 18);
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.getOutputParam(3198);
      fBProcedureCall0.addOutputParam(fBProcedureParam4);
      assertEquals(3198, fBProcedureParam4.getIndex());
      assertEquals(0, fBProcedureParam4.getType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-916), "no");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -916
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2368484221758793
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1, "hQ/ke,54m?jzMt:6?`");
      fBProcedureCall0.addParam(3, "zn2\" Zy08ZUD~");
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.registerOutParam(858, (-1825));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2074951222146164
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setType(31);
      fBProcedureParam0.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(31, "S+Lv<#y?M=n$G84h(");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam2.setIndex((-1381));
      fBProcedureParam1.setType(63);
      fBProcedureParam1.setIndex(31);
      fBProcedureParam0.setIndex(31);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.registerOutParam(31, 2193);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 31
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.5879617497145735
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 16;
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(887, "?mB!X}V");
      fBProcedureCall0.mapOutParamIndexToPosition(887);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int1 = 3095;
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(887, true);
      String string0 = "*l ";
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(16, "*l ");
      fBProcedureParam1.clone();
      fBProcedureParam1.setType((-1732));
      fBProcedureParam1.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(16, "*l ");
      fBProcedureCall0.mapOutParamIndexToPosition(3095);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.addParam(4145, "kf");
      try { 
        fBProcedureCall0.registerOutParam(16, 16);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0879316566006563
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(18, " not set and ");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(18, " ");
      fBProcedureParam1.setIndex(1363);
      fBProcedureParam1.setIndex((-1381));
      fBProcedureParam1.clone();
      fBProcedureParam0.clone();
      fBProcedureParam0.clone();
      FBProcedureParam fBProcedureParam2 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureParam2.setIndex(4);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureParam0.setType((-2093064));
      fBProcedureParam1.setType((-2093064));
      fBProcedureParam2.setIndex((-417));
      fBProcedureParam0.setIndex(1363);
      fBProcedureParam2.setType((-176));
      fBProcedureParam2.setIndex(1781);
      FBProcedureParam fBProcedureParam4 = new FBProcedureParam();
      fBProcedureCall0.registerOutParam((-1381), 775);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      assertEquals(775, fBProcedureParam1.getType());
      
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(19, list0.size());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.8053415898278653
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, ">\"{(Z2ROS;hsFZ3]w:?");
      fBProcedureParam0.setIndex((-112469961));
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setValue(">\"{(Z2ROS;hsFZ3]w:?");
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setType(41);
      fBProcedureParam0.setIndex(41);
      fBProcedureParam0.setIndex(41);
      fBProcedureParam0.setIndex(41);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setType((-233));
      fBProcedureParam0.setType(1598);
      fBProcedureParam0.setIndex(41);
      fBProcedureParam0.setType(41);
      fBProcedureParam0.setType((-2115));
      fBProcedureParam0.setIndex((-112469961));
      fBProcedureParam0.setIndex(0);
      fBProcedureParam0.setType(5800);
      fBProcedureParam0.setIndex(5800);
      fBProcedureParam0.setIndex(41);
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(41, ">\"{(Z2ROS;hsFZ3]w:?");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2, "{C))");
      assertEquals(2, fBProcedureParam1.getPosition());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.923115782633464
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(0, "Specified parameter does not exist.");
      FBProcedureParam fBProcedureParam1 = (FBProcedureParam)fBProcedureParam0.clone();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName("Cannot set parameter, since it is constant.");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getOutputParam(547);
      fBProcedureParam2.setType(0);
      fBProcedureCall0.mapOutParamIndexToPosition((-663), true);
      FBProcedureParam fBProcedureParam3 = fBProcedureCall0.addParam(0, "");
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      fBProcedureCall1.addParam(0, "Specified parameter does not exist.");
      fBProcedureParam1.clone();
      fBProcedureParam2.clone();
      fBProcedureParam3.setIndex((-663));
      fBProcedureCall0.equals(fBProcedureParam3);
      fBProcedureParam3.setIndex(0);
      fBProcedureParam2.clone();
      fBProcedureParam3.setIndex(0);
      fBProcedureCall0.equals("");
      fBProcedureCall0.addOutputParam(fBProcedureParam3);
      fBProcedureCall0.equals(fBProcedureParam3);
      fBProcedureCall1.hashCode();
      fBProcedureCall0.getOutputParams();
      fBProcedureCall0.getOutputParam(0);
      fBProcedureCall1.addInputParam(fBProcedureParam1);
      fBProcedureCall0.registerOutParam(0, 18);
      fBProcedureCall0.getSQL(false);
      // Undeclared exception!
      try { 
        fBProcedureCall1.getInputParam((-663));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -664
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      Object object14 = new Object();
      Object object15 = new Object();
      assertFalse(object15.equals((Object)object9));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall0);
      assertTrue(boolean0);
      
      boolean boolean1 = FBProcedureCall.OLD_CALLABLE_STATEMENT_COMPATIBILITY;
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(63, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, "iow");
      Object object33 = new Object();
      Object object34 = new Object();
      assertFalse(object34.equals((Object)object29));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = (-2106);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam((-2106));
      fBProcedureParam0.setType((-2106));
      try { 
        fBProcedureParam0.setValue(object1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam((-29), "5Y_9");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -29
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2526099571378144
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      fBProcedureCall3.getInputParam(41);
      fBProcedureCall1.getOutputParam(41);
      FBProcedureCall fBProcedureCall4 = new FBProcedureCall();
      fBProcedureCall4.mapOutParamIndexToPosition(0);
      // Undeclared exception!
      try { 
        fBProcedureCall4.registerOutParam(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2419955688825026
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(679);
      int int0 = (-200);
      fBProcedureParam0.setType((-200));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(679, true);
      try { 
        fBProcedureCall0.registerOutParam(679, (-200));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4035549742056825
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(2);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(737);
      //  // Unstable assertion: assertEquals(1, fBProcedureParam0.getType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertFalse(fBProcedureParam0.isParam());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.410015058995706
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(2);
      assertSame(fBProcedureParam1, fBProcedureParam0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.885150328612323
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try { 
        fBProcedureCall0.registerOutParam(1, 1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition(12, true);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-1933), true);
      assertEquals((-1933), int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(0, list0.size());
  }
}
