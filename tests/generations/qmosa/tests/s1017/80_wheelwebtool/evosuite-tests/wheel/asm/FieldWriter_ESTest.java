/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 13:44:01 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.343193896232072
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-125);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter(3672);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstantValue");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-939), "ConstantValue", "ConstantValue", "ConstantValue", "ConstantValue");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "ConstantValue";
      classWriter0.visit(46, 46, "The wildcard list must not be nZll", "8 xA+<CyUAT", "The wildcard list must not be nZll", stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visit(49, 79, "", (String) null, ";BCBcH1pdgOV>", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("ConstantValue");
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(3645);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Consta6tAalue");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-939), "8Sw?`s[v", "8Sw?`s[v", "Consta6tAalue", "8Sw?`s[v");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Consta6tAalue");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Consta6tAalue");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      String[] stringArray0 = new String[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte)0;
      byteArray0[3] = (byte)25;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")t~gnfTO}c");
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      classWriter0.visit(59, 8, "RuntimeInvisibleAnnotations", "8Sw?`s[v", "Consta6tAalue", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.data = byteArray0;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(3645);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Consta6tAalue");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-939), "8Sw?`s[v", "8Sw?`s[v", "Consta6tAalue", "8Sw?`s[v");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Consta6tAalue");
      String[] stringArray0 = new String[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      byteArray0[3] = (byte)0;
      byteArray0[3] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")t~gnfTO}c");
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      classWriter0.visit(59, 8, "RuntimeInvisibleAnnotations", "8Sw?`s[v", "The wildcard list must not be null", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "gV6&ysNhBX7", "gV6&ysNhBX7", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector(2);
      Item[] itemArray0 = new Item[7];
      Item item0 = classWriter0.key2;
      itemArray0[0] = item0;
      Item item1 = classWriter0.key;
      item0.strVal3 = "gV6&ysNhBX7";
      item0.set(9);
      Item item2 = new Item(1, item0);
      itemArray0[2] = item2;
      itemArray0[3] = item0;
      item0.strVal1 = null;
      Item item3 = new Item();
      itemArray0[0] = item3;
      item3.strVal2 = "gV6&ysNhBX7";
      item3.set(9, "gV6&ysNhBX7", "ruJw*,EFJTP/vK", "Zk4&");
      item3.set(9);
      item2.intVal = 71;
      item3.strVal2 = "Zk4&";
      ByteVector byteVector2 = byteVector0.putByte(881);
      byteVector2.putByteArray((byte[]) null, 7428, (-1973));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0616109402358964
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1059));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ".class", "S:_m-kk)~ET`;s;Yg", "", "S:_m-kk)~ET`;s;Yg");
      String string0 = null;
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putUTF8("wheel.asm.AnnotationWriter");
      byteVector1.putInt((-1059));
      byteVector1.put11((-1059), (-1));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "\"V6&ysNhBX7", "\"V6&ysNhBX7", (String) null, (Object) null);
      Item[] itemArray0 = new Item[7];
      Item item0 = classWriter0.newClassItem("\"V6&ysNhBX7");
      itemArray0[3] = item0;
      Item item1 = new Item(2);
      item1.set(0.0F);
      itemArray0[6] = item0;
      Item item2 = new Item(1, item0);
      itemArray0[1] = item2;
      itemArray0[3] = itemArray0[2];
      item0.next = itemArray0[2];
      Item item3 = classWriter0.key3;
      item0.hashCode = 287;
      item1.hashCode = 287;
      item2.set(34);
      itemArray0[0] = item3;
      item3.set(0);
      itemArray0[1] = item1;
      Item item4 = classWriter0.key2;
      item1.hashCode = 287;
      item1.strVal1 = null;
      item4.index = 287;
      item1.next = null;
      item3.strVal3 = "\"V6&ysNhBX7";
      item4.next = item3;
      item4.set(287);
      itemArray0[0] = item4;
      item0.strVal1 = "\"V6&ysNhBX7";
      Item item5 = new Item();
      item5.index = 287;
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5149189896175943
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "gV6&ysNhBX7", "gV6&ysNhBX7", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector(2);
      Item[] itemArray0 = new Item[7];
      Item item0 = classWriter0.key2;
      fieldWriter0.put(byteVector0);
      itemArray0[0] = item0;
      Item item1 = classWriter0.key;
      item0.strVal3 = "gV6&ysNhBX7";
      Attribute attribute0 = new Attribute("zo$g` ]Af4\"V>FO'");
      fieldWriter0.visitAttribute(attribute0);
      item0.set(9);
      Item item2 = new Item(1, item0);
      itemArray0[2] = item2;
      itemArray0[3] = item0;
      Item item3 = new Item();
      itemArray0[0] = item3;
      item3.strVal2 = "gV6&ysNhBX7";
      item3.set(9, "gV6&ysNhBX7", "ruJw*,EFJTP/vK", "Zk4&");
      item3.set(9);
      item2.intVal = 71;
      item3.strVal2 = "Zk4&";
      item3.set(5289L);
      itemArray0[5] = item0;
      byteVector1.putLong(71);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1187571045902327
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      ByteVector byteVector0 = new ByteVector(34);
      classWriter0.visitField(323, "n8HTy?V?7p~`~", "r+z<PqZtr]G", "D8MZOeMa7-#TOH=j", "D8MZOeMa7-#TOH=j");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 323, "", "n8HTy?V?7p~`~", (String) null, (Object) null);
      fieldWriter0.getSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 1);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-559));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3827, "msed>9NXVglP&7k\"-/M", "msed>9NXVglP&7k\"-/M", "", "msed>9NXVglP&7k\"-/M");
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("msed>9NXVglP&7k\"-/M", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter((-4893));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 85, "ConstantValue", "gB|&SsyVhBE\"", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1859);
      ByteVector byteVector1 = byteVector0.put11(2, 85);
      ByteVector byteVector2 = byteVector1.putByte((-913));
      byteVector2.putLong((-692L));
      ByteVector byteVector3 = byteVector2.putInt(1859);
      byteVector1.putByteArray((byte[]) null, 86, 86);
      classWriter1.visitAnnotation("gB|&SsyVhBE\"", true);
      fieldWriter0.put(byteVector3);
      fieldWriter0.visitAnnotation("7%s06@Y71,T\b~", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3645);
      Object object0 = new Object();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Attribute attribute0 = new Attribute("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 200, "9Oj^)uyurV7@|p", "", "r?S0C>@IR", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("r?S0C>@IR", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.457140808155144
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1469);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1280), "D`v$)om0+zLUUf&a", "D`v$)om0+zLUUf&a", "D`v$)om0+zLUUf&a", "D`v$)om0+zLUUf&a");
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("Synthetic");
      ByteVector byteVector1 = byteVector0.putLong(1288L);
      ByteVector byteVector2 = byteVector1.putShort(2);
      byteVector0.put11(2344, (-2242));
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      ByteVector byteVector3 = new ByteVector();
      byteVector2.put12(1, 1);
      byteVector0.putLong(0L);
      fieldWriter0.put(byteVector2);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(34);
      ByteVector byteVector0 = new ByteVector(34);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 323, "", "n8HTy?V?7p~`~", "n8HTy?V?7p~`~", (Object) null);
      fieldWriter0.getSize();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-559));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3683533254101197
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3645);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Consta6tValue");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-939), "8Sw?`s[v", "8Sw?`s[v", "Consta6tValue", "8Sw?`s[v");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8Sw?`s[v");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(143, byteArray0.length);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Consta6tValue");
      String[] stringArray0 = new String[1];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)2;
      byteArray1[3] = (byte)0;
      byteArray1[3] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")t~gnfTO}c");
      stringArray0[0] = "RuntimeInvisibleAnnotations";
      classWriter0.visit(59, 8, "RuntimeInvisibleAnnotations", "8Sw?`s[v", "The wildcard list must not be null", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = null;
      int int0 = 3191;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 3191);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 3191, "g|GFYIE8", "g|GFYIE8", "", bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter((-4893));
      int int0 = 79;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 79, "ConstantValue", "gB|&SsyVhBE\"", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", "gB|&SsyVhBE\"", (Object) null);
      fieldWriter0.visitEnd();
      ByteVector byteVector0 = new ByteVector(238);
      byteVector0.putLong(0);
      byteVector0.putShort(131072);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)25;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("nEG");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter1, 79, "ConstantValue", "gB|&SsyVhBE\"", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(1859);
      ByteVector byteVector1 = byteVector0.put11(2, 79);
      byteVector1.putByte((-913));
      fieldWriter0.visitAnnotation("SVgna#ure", true);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      pipedInputStream0.skip((-4893));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 79);
      InputStream inputStream0 = null;
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Object object0 = new Object();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1017), "cp'I&c{:Ol;h", "char", "6wGKF58mwhjEOZUVcE", pipedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.PipedInputStream@1f3dee19
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
