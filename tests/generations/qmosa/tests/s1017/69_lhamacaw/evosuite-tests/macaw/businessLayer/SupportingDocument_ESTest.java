/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 14:37:55 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SupportingDocument_ESTest extends SupportingDocument_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.0349426211205155
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      User user0 = new User();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("-");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument0);
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument1);
      User user1 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument0.setDocumentCode((String) null);
      SupportingDocument.detectFieldChanges(user1, supportingDocument2, supportingDocument1);
      supportingDocument0.getDocumentCode();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8643344851244987
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-308));
      supportingDocument0.getDisplayName();
      supportingDocument0.getIdentifier();
      supportingDocument0.clone();
      supportingDocument0.getDisplayName();
      System.setCurrentTimeMillis((-308));
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.setDocumentCode("O2YQ?[o");
      supportingDocument1.setFileName("+p-oUh6");
      supportingDocument0.setIdentifier((-3981));
      supportingDocument0.setFilePath((String) null);
      supportingDocument0.getFilePath();
      supportingDocument0.getFileName();
      supportingDocument0.getFilePath();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6920557192099883
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      User user1 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.getTitle();
      supportingDocument3.clone();
      supportingDocument3.setDocumentCode("4qXYW?y<d}{&");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument2.clone();
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.isNewRecord();
      assertTrue(supportingDocument0.isNewRecord());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      assertFalse(supportingDocument1.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.038348897872974
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("*GX%=d)`{t");
      supportingDocument0.setDocumentCode(";*9567&>1*)*");
      User user0 = new User();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setFileName(";*9567&>1*)*");
      supportingDocument0.setDocumentCode(";*9567&>1*)*");
      User user1 = new User("*GX%=d)`{t", ";*9567&>1*)*");
      user1.setAffiliation(";*9567&>1*)*");
      supportingDocument0.setTitle(";*9567&>1*)*");
      supportingDocument0.setFilePath("P@");
      User user2 = new User();
      user2.setCity("Qc0.P/Xqi");
      ArrayList<MacawChangeEvent> arrayList0 = SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument0);
      assertTrue(arrayList0.isEmpty());
      
      supportingDocument0.setFileName("PE'bH0~{10]NQX#");
      supportingDocument0.getFileName();
      supportingDocument0.setIsNewRecord(false);
      SupportingDocument.validateFields(supportingDocument0);
      SupportingDocument.validateFields(supportingDocument0);
      supportingDocument0.setFileName((String) null);
      supportingDocument0.getFileName();
      System.setCurrentTimeMillis((-1L));
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertNotSame(supportingDocument1, supportingDocument0);
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals(";*9567&>1*)*", supportingDocument1.getTitle());
      assertEquals("P@", supportingDocument1.getFilePath());
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(";*9567&>1*)*", supportingDocument1.getDocumentCode());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.8232201896520577
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("user.addressLine2.label");
      User user0 = new User("user.addressLine2.label", "user.addressLine2.label");
      supportingDocument0.setFileName("user.addressLine2.label");
      User user1 = new User("user.addressLine2.label", "user.addressLine2.label");
      user1.setFirstName("user.addressLine2.label");
      user1.setAffiliation("user.addressLine2.label");
      user1.setAffiliation("user.addressLine2.label");
      User user2 = new User();
      user2.setAffiliation("user.addressLine2.label");
      user2.setLastName("user.addressLine2.label");
      User user3 = new User("user.addressLine2.label", "user.addressLine2.label");
      user3.setAddressLine1("user.addressLine2.label");
      User.detectFieldChanges(user3, user1, user1);
      user3.setPostCode("NON_EXISTENT_USER");
      user0.setAddressLine2("user.addressLine2.label");
      User.detectFieldChanges(user0, user3, user2);
      user3.setFirstName("Jap6 jazDgMh1JFLu|m");
      user3.setAddressLine1("1)Y'rpr^:=wu2_sU");
      User.detectFieldChanges(user0, user2, user0);
      user1.setAddressLine2("user.addressLine2.label");
      user2.setFirstName("user.addressLine2.label");
      user1.setPostCode("aP");
      user2.setCity("user.addressLine2.label");
      User.detectFieldChanges(user0, user2, user1);
      User user4 = new User("aP", "Jap6 jazDgMh1JFLu|m");
      User.detectFieldChanges(user4, user2, user1);
      user3.setPostCode("1)Y'rpr^:=wu2_sU");
      User user5 = new User();
      User.detectFieldChanges(user5, user4, user4);
      supportingDocument0.setTitle("user.status.labtl");
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      assertEquals("user.status.labtl", supportingDocument1.getTitle());
      assertEquals(0, supportingDocument1.getIdentifier());
      assertEquals("user.addressLine2.label", supportingDocument1.getDocumentCode());
      assertEquals("user.addressLine2.label", supportingDocument1.getFileName());
      
      User.detectFieldChanges(user2, user0, user3);
      User user6 = new User();
      SupportingDocument.validateFields(supportingDocument0);
      assertFalse(supportingDocument0.isNewRecord());
      assertNotSame(supportingDocument0, supportingDocument1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("^'QUi%:Kfz@lS[47:\"");
      supportingDocument0.getFilePath();
      System.setCurrentTimeMillis((-931L));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.0110987648519973
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("-");
      supportingDocument0.setDocumentCode("-");
      User user0 = new User();
      User user1 = new User("-", "-");
      user1.setAddressLine2("-");
      user1.clone();
      user1.setPhone("-");
      user1.setAddressLine1("H/");
      user1.setFirstName("-");
      user0.setAffiliation("W4tm fd0Ud9X{X");
      User user2 = new User("UNABLE_TO_CHECK_USER_EXISTS", "H/");
      user2.setAffiliation("-");
      user0.setAddressLine1("-");
      User user3 = new User();
      User user4 = new User("[cQwg}tx=%+", "-");
      User user5 = new User("W4tm fd0Ud9X{X", "-");
      User user6 = new User();
      user6.setPostCode("W4tm fd0Ud9X{X");
      User.checkValidUserIDField("-");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      SupportingDocument.detectFieldChanges(user3, supportingDocument1, supportingDocument0);
      System.setCurrentTimeMillis(878L);
      System.setCurrentTimeMillis(873L);
      System.setCurrentTimeMillis(878L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4298057434980493
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("-");
      User user0 = new User();
      User user1 = new User("-", "-");
      User user2 = (User)user1.clone();
      user1.setAddressLine2("H!cdF8d,fe`Tj");
      User user3 = new User();
      user1.setAddressLine1("H!cdF8d,fe`Tj");
      user3.setPassword("Rb");
      user2.setEmail("-");
      user1.setFirstName("-");
      user0.setAffiliation("-");
      User user4 = new User("UNABLE_TO_CHECK_USER_EXISTS", "H!cdF8d,fe`Tj");
      User.detectFieldChanges(user4, user3, user0);
      User user5 = new User("H!cdF8d,fe`Tj", "-");
      user4.setAffiliation("-");
      user3.setFirstName("H!cdF8d,fe`Tj");
      user3.setFirstName("UNABLE_TO_CHECK_USER_EXISTS");
      user2.setPostCode("-");
      user0.setLastName("3eu>brQkpRj-DB]Th#");
      user4.setFirstName("-");
      user4.setStatus((String) null);
      User user6 = new User();
      User.detectFieldChanges(user3, user2, user6);
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_EXISTS");
      user9.setAffiliation("UNABLE_TO_CHECK_USER_EXISTS");
      user9.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      User user10 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user2, supportingDocument0, supportingDocument1);
      User user11 = new User();
      assertFalse(user11.equals((Object)user7));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.544217047700305
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setEmail("L");
      User.detectFieldChanges(user0, user0, user0);
      User user1 = new User();
      user1.setAddressLine1("L");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User.detectFieldChanges(user1, user1, user1);
      User user2 = (User)user0.clone();
      String string0 = "&O7`l9G;";
      user2.setPhone("&O7`l9G;");
      user2.setPhone("L*X");
      user2.setPostCode("5M.khG7xRt");
      String string1 = "?EPxwey";
      User.detectFieldChanges(user1, user0, user1);
      supportingDocument0.setDocumentCode("?EPxwey");
      supportingDocument1.setDescription("-xgg{,eD9");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      User.detectFieldChanges(user1, user1, user1);
      user1.setPhone("L*X");
      User user3 = new User("5M.khG7xRt", "ALIAS_FILE_PATH");
      user3.setCounty("ALIAS_FILE_PATH");
      user3.setPostCode("-xgg{,eD9");
      user3.clone();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5499723608887943
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("-");
      User user0 = new User();
      User user1 = (User)user0.clone();
      user0.setAddressLine2("H!:d`8d,fe`TjZ");
      User user2 = new User("H!:d`8d,fe`TjZ", "H!:d`8d,fe`TjZ");
      user0.setAddressLine1("H!:d`8d,fe`TjZ");
      user2.setPassword("&Rb");
      user1.setEmail("-");
      user0.setFirstName("-");
      user0.setAffiliation("-");
      User user3 = new User("UNABLE_TO_CHECK_USER_EXISTS", "H!:d`8d,fe`TjZ");
      User.detectFieldChanges(user3, user2, user0);
      User user4 = new User("H!:d`8d,fe`TjZ", "-");
      user3.setAffiliation("-");
      user2.setFirstName((String) null);
      supportingDocument0.setTitle("\"bi/L]ym4N5,Rg[d^");
      user1.setPostCode("-");
      user0.setLastName("3eu>brQkpRj-DB]Th#");
      user0.setAddressLine1("H!:d`8d,fe`TjZ");
      user3.setStatus((String) null);
      User user5 = new User();
      User.detectFieldChanges(user2, user1, user5);
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_EXISTS");
      user8.setAffiliation("UNABLE_TO_CHECK_USER_EXISTS");
      user8.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      user3.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user3, supportingDocument1, supportingDocument0);
      User user9 = new User();
      assertEquals("", user9.getAddressLine1());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.684404064515707
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription((String) null);
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.clone();
      supportingDocument0.getDescription();
      User user0 = new User();
      System.setCurrentTimeMillis(2974L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = supportingDocument0.isNewRecord();
      assertFalse(boolean0);
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(723);
      supportingDocument0.getDisplayName();
      supportingDocument0.getIdentifier();
      supportingDocument0.getDisplayItemIdentifier();
      supportingDocument0.getIdentifier();
      supportingDocument0.getDisplayItemIdentifier();
      assertEquals("723", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4298057434980493
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("-");
      User user0 = new User();
      User user1 = new User("-", "-");
      User user2 = (User)user1.clone();
      user1.setAddressLine2("H!:d`8d,fe`TjZ");
      User user3 = new User("H!:d`8d,fe`TjZ", "H!:d`8d,fe`TjZ");
      user1.setAddressLine1("H!:d`8d,fe`TjZ");
      user2.setEmail("-");
      user1.setFirstName("-");
      user0.setAffiliation("-");
      User user4 = new User("UNABLE_TO_CHECK_USER_EXISTS", "H!:d`8d,fe`TjZ");
      User user5 = new User("H!:d`8d,fe`TjZ", "-");
      user4.setAffiliation("-");
      user3.setFirstName((String) null);
      user2.setPostCode("-");
      user0.setLastName("[cQwg}tx=%+");
      user0.setAddressLine1("H!:d`8d,fe`TjZ");
      user4.setStatus((String) null);
      User user6 = new User();
      User.detectFieldChanges(user3, user2, user6);
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_EXISTS");
      user9.setAffiliation("UNABLE_TO_CHECK_USER_EXISTS");
      user9.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user4, supportingDocument1, supportingDocument0);
      User user10 = new User("-", "UNABLE_TO_CHECK_USER_EXISTS");
      assertEquals("", user10.getAddressLine1());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5499723608887943
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("-");
      User user0 = new User();
      User user1 = new User("-", "-");
      User user2 = (User)user1.clone();
      user1.setAddressLine2("-");
      User user3 = new User("-", "-");
      user1.setAddressLine1("-");
      user2.setEmail("-");
      user1.setFirstName("-");
      user0.setAffiliation("-");
      User user4 = new User("UNABLE_TO_CHECK_USER_EXISTS", "-");
      User user5 = new User("-", "-");
      user4.setUserID("UNABLE_TO_CHECK_USER_EXISTS");
      user4.setAffiliation("-");
      user0.setLastName("[cQwg}tx=%+");
      user0.setAddressLine1("-");
      User user6 = new User();
      User.detectFieldChanges(user3, user2, user6);
      User user7 = new User();
      User user8 = new User();
      User user9 = new User("-", "-");
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_EXISTS");
      user9.setAffiliation("UNABLE_TO_CHECK_USER_EXISTS");
      user9.setPostCode("UNABLE_TO_CHECK_USER_EXISTS");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("P6h~KDQAGUAunTBE");
      SupportingDocument.detectFieldChanges(user4, supportingDocument1, supportingDocument0);
      System.setCurrentTimeMillis(1495L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1495L);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6835862697242048
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      supportingDocument0.setFileName("UNABLE_TO_GET_DERIVED_VARIABLE");
      User user1 = new User();
      user1.setFirstName("UNABLE_TO_GET_DERIVED_VARIABLE");
      user1.setAffiliation("I!U0p%{oT<}}@<S");
      user1.setAffiliation("UNABLE_TO_CREATE_TABLES");
      user1.setPostCode("UNABLE_TO_GET_DERIVED_VARIABLE");
      User user2 = new User();
      user2.setAffiliation("");
      user2.setLastName("UNABLE_TO_CHECK_USEK_EXITS");
      User user3 = new User("UNABLE_TO_CHECK_USEK_EXITS", "UNABLE_TO_CREATE_TABLES");
      user3.setAddressLine1("UNABLE_TO_CREATE_TABLES");
      user3.setPostCode("I!U0p%{oT<}}@<S");
      User.detectFieldChanges(user0, user3, user2);
      user3.setAddressLine1("m)Y'rp^:T=wu32_Gs+U");
      user1.setAddressLine2("UNABLE_TO_CHECK_USEK_EXITS");
      User user4 = new User("UNABLE_TO_GET_DERIVED_VARIABLE", "m)Y'rp^:TF=wu32_G+U");
      user4.setFirstName("9_AE$1TfK3k$;");
      user4.setCity("UNABLE_TO_CHECK_USEK_EXITS");
      User.detectFieldChanges(user4, user2, user1);
      user3.setStatus("zbFjt84fy33!05");
      User user5 = new User();
      User.detectFieldChanges(user5, user4, user1);
      user3.setPostCode("m)Y'rp^:T=wu32_Gs+U");
      supportingDocument0.clone();
      User.detectFieldChanges(user2, user0, user3);
      User user6 = new User("zbFjt84fy33!05", "UNABLE_TO_GET_DERIVED_VARIABLE");
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.684698616776485
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("user.addressLine2.label");
      User user0 = new User("user.addressLine2.label", "user.addressLine2.label");
      User user1 = new User("user.addressLine2.label", "user.addressLine2.label");
      user1.setFirstName("user.addressLine2.label");
      user1.setAffiliation("user.addressLine2.label");
      user1.setAffiliation("user.addressLine2.label");
      User user2 = new User();
      user2.setAffiliation("user.addressLine2.label");
      user2.setLastName("user.addressLine2.label");
      User user3 = new User("user.addressLine2.label", "user.addressLine2.label");
      user3.setAddressLine1("user.addressLine2.label");
      User.detectFieldChanges(user3, user1, user1);
      user3.setPostCode("NON_EXISTENT_USER");
      user0.setAddressLine2("user.addressLine2.label");
      User.detectFieldChanges(user0, user3, user2);
      user3.setFirstName("Jap6 jazDgMh1JFLu|m");
      user3.setAddressLine1("1)Y'rpr^:=wu2_sU");
      User.detectFieldChanges(user0, user2, user0);
      user1.setAddressLine2("user.addressLine2.label");
      user2.setFirstName("user.addressLine2.label");
      user1.setPostCode("aP");
      user2.setCity("user.addressLine2.label");
      User.detectFieldChanges(user0, user2, user1);
      User user4 = new User("user.addressLine2.label", "Jap6 azDgMh1JFLu|m");
      User.detectFieldChanges(user4, user2, user1);
      user3.setPostCode("1)Y'rpr^:=wu2_sU");
      User user5 = new User();
      User.detectFieldChanges(user5, user4, user4);
      supportingDocument0.setTitle("user.tatus.lbtl");
      supportingDocument0.clone();
      User.detectFieldChanges(user2, user0, user3);
      User user6 = new User();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getTitle();
      assertEquals(0, supportingDocument0.getIdentifier());
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.8905273685901034
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode(";1aE8*g~");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDocumentCode();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle(")DXJ=>eG3T=+");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setDescription(")DXJ=>eG3T=+");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument0.clone();
      User user0 = new User("-ggh{eD9", ";1aE8*g~");
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument4.setDocumentCode("-ggh{eD9");
      supportingDocument0.getDescription();
      SupportingDocument supportingDocument7 = (SupportingDocument)supportingDocument4.clone();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument4);
      supportingDocument3.clone();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument7.clone();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument12.clone();
      supportingDocument0.clone();
      try { 
        SupportingDocument.validateFields(supportingDocument12);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis(71L);
      System.setCurrentTimeMillis(71L);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      int int0 = supportingDocument0.getIdentifier();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6835862697242048
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("user.addressLine2.label");
      User user0 = new User();
      User user1 = new User("user.addressLine2.label", "user.addressLine2.label");
      user1.setFirstName("user.addressLine2.label");
      user1.setAffiliation("user.addressLine2.label");
      user1.setAffiliation("user.lastName.saveChanges");
      user1.setPostCode("user.addressLine2.label");
      User user2 = new User("user.addressLine2.label", "user.lastName.saveChanges");
      user2.setAffiliation("q}YTRn_!im4:_");
      user2.setLastName("user.addressLine2.label");
      User user3 = new User("user.addressLine2.label", "user.lastName.saveChanges");
      user3.setAddressLine1("user.lastName.saveChanges");
      user3.setPostCode("NON_EXISTENT_USER");
      user0.setAddressLine2("UNABL~_TO_UPDATE_CATEGORY");
      User.detectFieldChanges(user0, user3, user2);
      user3.setAddressLine1("1)Y'rpr^:T=wu2_Gs+U");
      User.detectFieldChanges(user0, user2, user0);
      user1.setAddressLine2("user.addressLine2.label");
      User user4 = new User();
      user2.setFirstName("user.addressLine2.label");
      user1.setPostCode("aP");
      user4.setCity("user.addressLine2.label");
      User.detectFieldChanges(user4, user2, user1);
      User user5 = new User();
      User.detectFieldChanges(user5, user4, user1);
      user3.setPostCode("1)Y'rpr^:T=wu2_Gs+U");
      supportingDocument0.clone();
      User.detectFieldChanges(user2, user0, user3);
      User user6 = new User();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getFilePath();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDescription();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals("0", supportingDocument0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      User user0 = new User("Mr=", "supportingDocument.fileName.saveChanges");
      // Undeclared exception!
      try { 
        SupportingDocument.detectFieldChanges(user0, (SupportingDocument) null, (SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDocumentCode();
      assertFalse(supportingDocument0.isNewRecord());
      assertEquals(0, supportingDocument0.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2970661402967805
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("-xgg{,eD9");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.getTitle();
      System.setCurrentTimeMillis((-737L));
      User.detectFieldChanges(user0, user0, user0);
      String string0 = "UNABLE_TO_INITI7LISE_CONNECT,ON";
      user0.setCity("-xgp{,eD9");
      user0.setCity("UNABLE_TO_INITI7LISE_CONNECT,ON");
      User user1 = new User("UNABLE_TO_INITI7LISE_CONNECT,ON", "-xgp{,eD9");
      user1.setPassword("-xgg{,eD9");
      User.detectFieldChanges(user1, user0, user1);
      System.setCurrentTimeMillis((-737L));
      try { 
        User.checkValidUserIDField("-xgp{,eD9");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The field \"User ID\" value \"-xgp{,eD9\" may present a security risk.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }
}
