/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 12:40:59 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.695076812366601
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setTerm("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("cy#");
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setLabel("macaw.businessLayer.VariableSummary");
      ontologyTerm0.setOntologyName("ontologyTerm.nameSpace.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm2.setOntologyName("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.clone();
      User user0 = new User();
      user0.setIdentifier(19);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("macaw.businessLayer.VariableSummary", derivedVariable0.getLabel());
      
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0242431453764644
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setIdentifier(1452);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      rawVariable0.form = "variable.category.label";
      rawVariable0.setFilePath("variable.category.label");
      rawVariable0.setCategory((String) null);
      user0.setUserID("variable.category.label");
      rawVariable0.setYear((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getYear();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.6778788712937844
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("Cd+tZ6<", (String) null);
      user0.setPassword((String) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCoded(true);
      user0.setStatus("5yB1'H.C:n'<");
      User user1 = new User("!]|E96nPUUU&5Cc", (String) null);
      user0.setPostCode("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      user0.setPassword("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      user0.setUserID((String) null);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user2 = new User("Cd+tZ6<", "general.fieldValue.blank");
      User user3 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNotNull(macawChangeEvent1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      
      System.setCurrentTimeMillis(1802L);
      rawVariable0.getAlternativeVariable();
      User user4 = new User();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getCategory());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setIdentifier((-6729));
      Object object0 = new Object();
      int int0 = rawVariable0.getIdentifier();
      assertEquals("-6729", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-6729), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.224469935073537
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      user0.setCity((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.form = null;
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      user1.setFirstName((String) null);
      User user2 = new User("H?;NQIp$n.Y7", "G$N^NkK:]");
      user2.setUserID("4=:'Q6SN;ZNL)");
      rawVariable1.setAlternativeVariable(rawVariable0);
      User user3 = new User("Uht{a", "variable.form.label");
      User user4 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user4, derivedVariable1, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "V[";
      rawVariable0.columnStart = "V[";
      rawVariable0.questionNumber = "V[";
      rawVariable0.form = "V[";
      rawVariable0.getQuestionNumber();
      rawVariable0.getCodeBookNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      Comparator<ValueLabel> comparator0 = (Comparator<ValueLabel>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5914980348569427
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.713899726822817
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setUserID("Cd+tZ6<");
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user1 = new User("eUM@5F!", "BRQFVJ");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable0);
      assertEquals("-1211", rawVariable0.getDisplayItemIdentifier());
      
      System.setCurrentTimeMillis(1L);
      rawVariable1.getAlternativeVariable();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.6657940454100815
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      user0.setCity((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.form = null;
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      user1.setPhone((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.85899356609326
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "UNABLE_TO_GET_CHANGES_FOR_VALUE_LABEL";
      rawVariable0.setLabel("variable.isCoded.label");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setFilePath("variable.isCoded.label");
      rawVariable0.clone();
      derivedVariable0.getColumnStart();
      derivedVariable0.getAlias();
      rawVariable0.isNewRecord();
      System.setCurrentTimeMillis((-1L));
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals("variable.isCoded.label", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.352641895713288
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("ib#qr+rRl|qJ1X", "ib#qr+rRl|qJ1X");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      user0.setStatus("$,:&$M?BC");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      user0.setAddressLine1("AC5");
      RawVariable rawVariable2 = new RawVariable();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable1.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.6619516001640307
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.columnEnd = "y)Cu@3cTGokXU";
      rawVariable0.codeBookNumber = "y)Cu@3cTGokXU";
      rawVariable0.setQuestionNumber("`H50Uvk9Om]r");
      derivedVariable0.columnEnd = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9715503473033111
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setUserID("Uht{a");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setIdentifier(3803);
      User user3 = new User("user.postCode.saveChanges", "eU5F!");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      assertEquals("3803", rawVariable0.getDisplayItemIdentifier());
      
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.7553056181367714
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      rawVariable0.createVariableSummary();
      derivedVariable0.addSourceVariable(rawVariable0);
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaningStatus("H?;NQIp$n.Y7");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      rawVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCodeBookNumber("variable.category.label");
      derivedVariable0.setQuestionNumber("variable.category.label");
      derivedVariable0.isNewRecord();
      derivedVariable0.isNewRecord();
      derivedVariable0.getName();
      rawVariable0.clone();
      derivedVariable0.getCleaningDescription();
      rawVariable0.getCodeBookNumber();
      derivedVariable0.clone();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      derivedVariable0.getYear();
      derivedVariable1.getName();
      derivedVariable1.clone();
      assertEquals("H?;NQIp$n.Y7", derivedVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.829259303336775
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("ib#qr+rRl|qJ1X", "ib#qr+rRl|qJ1X");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User("ib#qr+rRl|qJ1X", "ib#qr+rRl|qJ1X");
      user0.setPassword("ib#qr+rRl|qJ1X");
      RawVariable rawVariable1 = new RawVariable();
      user1.setAddressLine1("ontologyTerm.term.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setCoded(false);
      user1.setUserID("N,E|2dupv}O,0");
      User user2 = new User("variable.notes.label", "ib#qr+rRl|qJ1X");
      user2.setPostCode("ontologyTerm.term.saveChanges");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      User user3 = new User();
      Variable.detectFieldChanges(user3, rawVariable0, rawVariable1);
      User user4 = new User();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.setColumnEnd((String) null);
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable3, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable4 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable4.getCleaningStatus());
      assertEquals("Unknown", rawVariable4.getCategory());
      assertEquals(0, rawVariable4.getIdentifier());
      assertFalse(rawVariable4.isCleaned());
      assertFalse(rawVariable4.isNewRecord());
      assertEquals("Unknown", rawVariable4.getAvailability());
      
      Variable.validateFields(derivedVariable0);
      rawVariable2.isNewRecord();
      derivedVariable0.hasSameDisplayName(rawVariable3);
      String string0 = rawVariable1.getColumnEnd();
      assertNull(string0);
      assertFalse(rawVariable1.isCoded());
      
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.9691723220339443
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      ontologyTerm1.setDescription((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setIdentifier(2211);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = null;
      rawVariable1.hasSameDisplayName(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.clone();
      derivedVariable0.createVariableSummary();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.getYear();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.718131298214702
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User.detectFieldChanges(user0, user0, user0);
      user0.setCounty("variable.cleaningStatus.label");
      derivedVariable0.setColumnEnd("variable.cleaningStatus.label");
      derivedVariable0.setFilePath("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.parallelStream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.form = "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS";
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlias("variable.cleaningStatus.label");
      derivedVariable0.setCleaningDescription("ontologyTerm.term.saveChanges");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getValueLabels();
      derivedVariable0.getIdentifier();
      derivedVariable0.getNotes();
      derivedVariable0.getYear();
      derivedVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.clone();
      derivedVariable0.getCleaningStatus();
      assertEquals("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS", derivedVariable0.getFilePath());
      
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.7704435930159894
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCoded(true);
      user0.setPostCode(".<2SL)^Rwgo#vU^\"");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setColumnEnd(".<2SL)^Rwgo#vU^\"");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable2);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.clone();
      Variable.validateFields(rawVariable2);
      rawVariable1.isNewRecord();
      rawVariable2.getColumnEnd();
      assertEquals(".<2SL)^Rwgo#vU^\"", rawVariable2.getColumnEnd());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      user0.setUserID("h>!!_~`><t$r%-pI6H$");
      User user1 = new User("variable.isCoded.label", "variable.isCoded.label");
      user1.setFirstName("variable.isCoded.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = ";.|FqNa40Z";
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.898434381904356
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.927751717328591
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      rawVariable1.columnEnd = "^6#2sY\"VQEvQA;H_Y";
      RawVariable rawVariable2 = new RawVariable();
      User user2 = new User("ZEC+MLmeS:ZN/*)U", "2M!>Z<q+");
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      rawVariable1.createVariableSummary();
      assertEquals("^6#2sY\"VQEvQA;H_Y", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = null;
      derivedVariable0.setIdentifier(1394);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.form = "iO>g[9>@+-xIv5'";
      derivedVariable0.getForm();
      derivedVariable0.getCleaningStatus();
      assertEquals("1394", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.894422140643586
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("H?;NQIp?$n.Y7", "general.fieldValue.unknown");
      User user1 = new User();
      user1.setPassword("H?;NQIp?$n.Y7");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCoded(true);
      user1.setPostCode("H?;NQIp?$n.Y7");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      assertTrue(rawVariable0.isCoded());
      
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      derivedVariable1.getColumnEnd();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9999102055829467
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("B!Nfp", "@C~sbTh7:B");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setUserID("B!Nfp");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user3 = new User("kszH", "kszH");
      User user4 = new User("@C~sbTh7:B", "user.postCode.saveChanges");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable0, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      System.setCurrentTimeMillis(617L);
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setTerm("z',f8)E_ 7hG\"H");
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.getDisplayName();
      rawVariable0.setName("Cd+tZ6<");
      ontologyTerm0.setIdentifier(781);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnStart("ontologyTerm.term.saveChanges");
      rawVariable0.getIdentifier();
      rawVariable0.setForm("ontologyTerm.term.saveChanges");
      rawVariable0.setCodeBookNumber("");
      rawVariable0.setForm("");
      rawVariable0.getDisplayName();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("");
      assertEquals("", supportingDocument0.getDocumentCode());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.691641587685945
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("ib#qr+rRl|qJ1X", "ib#qr+rRl|qJ1X");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      user0.setStatus("$,:&$M?BC");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      user0.setAddressLine1("AC5");
      RawVariable rawVariable1 = new RawVariable();
      User.detectFieldChanges(user0, user0, user0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1539071331363826
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("&ZEFyWYGBmtZ}E");
      user0.setStatus("&ZEFyWYGBmtZ}E");
      user0.setPostCode("&ZEFyWYGBmtZ}E");
      user0.setPassword("\u0005nS|aM8Xz5qmrd|0'");
      user0.setFirstName("\u0005nS|aM8Xz5qmrd|0'");
      User user1 = new User("&ZEFyWYGBmtZ}E", (String) null);
      User user2 = new User((String) null, "+1OYfV`'-M#");
      user2.setAffiliation((String) null);
      user2.setUserID("[#xt^AB>y");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user3 = new User("variable.label.label", "%EB/_[:`");
      User user4 = new User();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable1);
      System.setCurrentTimeMillis(1L);
      rawVariable0.getAlternativeVariable();
      User user5 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user3, rawVariable1, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("hH.qyzqA!b~ouo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(698);
      derivedVariable0.createVariableSummary();
      supportingDocument0.setFileName("general.fieldValue.blank");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      supportingDocument1.clone();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable[] derivedVariableArray0 = new DerivedVariable[8];
      derivedVariableArray0[0] = derivedVariable0;
      derivedVariableArray0[1] = derivedVariable0;
      derivedVariableArray0[2] = derivedVariable0;
      derivedVariableArray0[3] = derivedVariable0;
      derivedVariableArray0[4] = derivedVariable0;
      derivedVariableArray0[5] = derivedVariable0;
      derivedVariableArray0[6] = derivedVariable0;
      derivedVariableArray0[7] = derivedVariable0;
      arrayList0.toArray(derivedVariableArray0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.ensureCapacity((-2021833216));
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      supportingDocument0.setDescription("UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS");
      assertEquals("", supportingDocument0.getTitle());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("hH.qyzqA!b~ouo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(698);
      derivedVariable0.createVariableSummary();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable[] derivedVariableArray0 = new DerivedVariable[0];
      arrayList0.toArray(derivedVariableArray0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.ensureCapacity(698);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      supportingDocument0.setDescription("hH.qyzqA!b~ouo");
      assertEquals("", supportingDocument0.getFilePath());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      User user0 = new User();
      user0.setFirstName("_0uwCo.aZ");
      user0.setLastName("UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS");
      user0.setAffiliation("4st/");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9130492873822047
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      User user0 = new User("Unknown", "Unknown");
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      user1.setEmail("UNABLE_TO_GET_CATEGORY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setUserID("H?;NQIp?$n.Y7");
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user2 = new User("", "jB");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      System.setCurrentTimeMillis(0L);
      rawVariable1.getAlternativeVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      User user3 = new User("H?;NQIp?$n.Y7", "jB");
      Variable.detectFieldChanges(user3, rawVariable1, rawVariable0);
      assertEquals("-1211", rawVariable0.getDisplayItemIdentifier());
      assertEquals((-1211), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.831268540942669
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setCodeBookNumber("ontologyTerm.nameSpace.label");
      derivedVariable0.getColumnEnd();
      derivedVariable0.setName("v/");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("v/");
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable.validateFields(rawVariable0);
      derivedVariable0.setCleaningStatus("v/");
      derivedVariable0.setCleaningDescription("u>");
      rawVariable0.getQuestionNumber();
      derivedVariable0.getAlias();
      derivedVariable0.getSourceVariables();
      rawVariable0.getCodeBookNumber();
      assertEquals("v/", rawVariable0.getName());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8405163692499658
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("H?;NQIp?$n.Y7");
      rawVariable0.form = null;
      rawVariable0.columnStart = null;
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.2504002580027462
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("");
      ontologyTerm0.setDescription("");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setIdentifier(1497);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.clear();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("`NABLE_TO_UPDATE_ILUE_LBEFS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("cy#");
      ontologyTerm1.setDescription("cy#");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("ontologyTerm.nameSpace.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setOntologyName("uqGLrO;x,J.CthO*I");
      ontologyTerm4.setDescription("`NABLE_TO_UPDATE_ILUE_LBEFS");
      ontologyTerm4.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.521452740110338
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getFilePath();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9458417644450043
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      ontologyTerm1.setDescription("e$71b'MU>h\"");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setIdentifier(2211);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clear();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setAlias((String) null);
      derivedVariable0.setCodeBookNumber("e$71b'MU>h\"");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getYear();
      User user0 = new User("MISSING_DISPLAY_LIST_EDITOR", "");
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.84504984782571
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1735);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getIdentifier();
      rawVariable0.setForm("ontologyTerm.term.saveChanges");
      rawVariable0.setCodeBookNumber("of<=n!xKU_jX7Kxz");
      rawVariable0.setForm("H?;NQIp?$n.Y7");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCategory("$(T.XHj7_(F>J9Q");
      derivedVariable0.getValueLabels();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("variable.cleaningStatus.label");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      arrayList0.add(ontologyTerm0);
      derivedVariable1.getValueLabels();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList1);
      User user1 = new User("5ul2z=t*!DpbT", "H?;NQIp?$n.Y7");
      user1.setCounty("general.error.blankField");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      derivedVariable1.getSupportingDocuments();
      rawVariable0.createVariableSummary();
      assertEquals("$(T.XHj7_(F>J9Q", rawVariable0.getCategory());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.921952854385604
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("ib#qr+rRl|qJ1X", "ib#qr+rRl|qJ1X");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.form = null;
      rawVariable0.columnStart = null;
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      user1.setIdentifier((-1211));
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.962873682060984
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("general.fieldValue.blank", "general.fieldValue.blank");
      user0.setCity("general.fieldValue.blank");
      user0.setPhone("YKg,'");
      RawVariable rawVariable0 = new RawVariable();
      user0.setUserID("!,@f\"");
      rawVariable0.questionNumber = "YKg,'";
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User();
      User user3 = new User();
      user3.setPhone("general.fieldValue.blank");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      user2.setFirstName("general.fieldValue.blank");
      User user4 = new User("Uht{a", (String) null);
      User user5 = new User("Uht{a", (String) null);
      user5.setAffiliation("YKg,'");
      user5.setUserID("YKg,'");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.setAlternativeVariable(rawVariable3);
      User user6 = new User("Uht{a", (String) null);
      User user7 = new User();
      RawVariable rawVariable4 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      System.setCurrentTimeMillis((-2885L));
      rawVariable2.getAlternativeVariable();
      User user8 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable5 = new RawVariable();
      RawVariable rawVariable6 = new RawVariable();
      Variable.detectFieldChanges(user8, rawVariable0, rawVariable6);
      assertEquals("YKg,'", rawVariable0.getQuestionNumber());
      assertEquals(0, rawVariable6.getIdentifier());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      User user0 = new User();
      user0.setFirstName("LIST_CHOICE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.ensureCapacity(241);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.8268786166232185
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setTerm("-LHA");
      ontologyTerm0.setDescription("variable.saveChanges.valueChanged");
      ontologyTerm0.setTerm("z',f8)E_ 7hG\"H");
      ontologyTerm0.setIdentifier(781);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getIdentifier();
      rawVariable0.setForm("ontologyTerm.term.saveChanges");
      rawVariable0.setForm("");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCategory("variable.isCoded.label");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setForm("z',f8)E_ 7hG\"H");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.addOntologyTerms(arrayList0);
      derivedVariable1.getAvailability();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("z',f8)E_ 7hG\"H", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.7798168625856765
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("", "");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList1);
      user0.setAddressLine1((String) null);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertTrue(arrayList2.isEmpty());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setDescription("SUPPORTING_DOCUMENT");
      derivedVariable0.addOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList3);
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCleaned());
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      derivedVariable1.getSourceVariables();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.7542521875471193
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      User user0 = new User();
      user0.setFirstName("LIST_CHOICE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("LIST_CHOICE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = (RawVariable)rawVariable2.clone();
      assertFalse(rawVariable3.isNewRecord());
      assertEquals("Unknown", rawVariable3.getCategory());
      assertEquals("Unknown", rawVariable3.getAvailability());
      assertFalse(rawVariable3.isCleaned());
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
      assertEquals(0, rawVariable3.getIdentifier());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.863451426183029
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "";
      derivedVariable0.setName("hH.qyzqA!b~ouo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(698);
      derivedVariable0.createVariableSummary();
      supportingDocument0.setFileName("general.fieldValue.blank");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(781);
      Variable.validateFields(rawVariable0);
      rawVariable0.getAlias();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      rawVariable0.getDisplayItemIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "variable.cleaningStatus.label";
      stringArray0[1] = "NLB&{n`0$\"o:y";
      stringArray0[2] = "kiPx0/ag.80";
      stringArray0[3] = ".DMY9%&%!.PGSj+K";
      stringArray0[4] = ",S+~CD]d<Ke1U\u0002";
      stringArray0[5] = "";
      stringArray0[6] = "NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION";
      stringArray0[7] = "DUPLICATE_VARIABLE_ASSOCIATION";
      arrayList0.toArray(stringArray0);
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "NO_ONTOLOGY_TERM_FILTER";
      String string0 = derivedVariable0.getCodeBookNumber();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.1409888934679913
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      rawVariable0.setIdentifier((-1888));
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.form = null;
      rawVariable0.setCleaned(true);
      Variable.validateFields(rawVariable0);
      assertEquals("-1888", rawVariable0.getDisplayItemIdentifier());
      
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      User user2 = new User("vqqX_C5/g~.WI2.i821", "wg<|zs;LjA^,?D");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "ontologyTerm.term.saveChanges";
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaned(false);
      derivedVariable1.getOntologyTerms();
      System.setCurrentTimeMillis(0L);
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.8865686479539185
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("Xc`*D`a5h8ojp]Obw", "`szE");
      user0.setPassword("Xc`*D`a5h8ojp]Obw");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCoded(false);
      derivedVariable0.setName("`szE");
      user0.setStatus("UNABLE_TO_GET_SOURCE_VARIABLES");
      User user2 = new User("Xc`*D`a5h8ojp]Obw", "Mf.Me%8Z&0~S6");
      user2.setCity("Cd+tZ6<");
      user2.setPostCode("UNABLE_TO_GET_STUDY_YEARS");
      DerivedVariable.detectFieldChanges(user2, derivedVariable0, derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals("`szE", derivedVariable0.getName());
      
      User user3 = new User();
      user3.setLastName("NlPQw}");
      RawVariable rawVariable1 = new RawVariable();
      User user4 = new User("variable.notes.label", "Xc`*D`a5h8ojp]Obw");
      Variable.detectChangesInAlternativeVariable(user4, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(1L);
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "DELETE";
      String string0 = rawVariable0.getCodeBookNumber();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.748927992058363
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "variable.availability.label";
      derivedVariable0.questionNumber = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      supportingDocument0.setFileName("general.fieldValue.blank");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.availability.label", derivedVariable0.getNotes());
      
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = null;
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5272886853327274
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      User user0 = new User();
      user0.setFirstName("LIST_CHOICE");
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.9239917261705064
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.isNewRecord();
      derivedVariable0.setIdentifier((-1558));
      derivedVariable0.questionNumber = "-";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.clone();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setQuestionNumber("SHBKs[<Iq$Y");
      derivedVariable0.setCleaningDescription("user.phone.label");
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setIdentifier(716);
      derivedVariable0.getColumnStart();
      derivedVariable0.createVariableSummary();
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable1);
      rawVariable0.clone();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      assertEquals("SHBKs[<Iq$Y", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.712225902107877
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      derivedVariable0.setIdentifier(420);
      derivedVariable0.setForm("h>!!_~`><t$r%-pI6H$");
      derivedVariable0.setCleaned(false);
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.getCodeBookNumber();
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("N<c+d0['zsa?:CvDQ");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      rawVariable1.form = "N<c+d0['zsa?:CvDQ";
      rawVariable0.hasSameDisplayName(rawVariable1);
      derivedVariable0.getDisplayName();
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.124165123080856
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      ontologyTerm1.setDescription((String) null);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setIdentifier(2211);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = null;
      User user0 = new User(stringArray0[0], stringArray0[0]);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      derivedVariable0.getAlternativeVariable();
      rawVariable0.createVariableSummary();
      assertEquals((-1211), rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.8801161355537426
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.getYear();
      derivedVariable0.setQuestionNumber(";.|FqNa40Z");
      derivedVariable0.getLabel();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("Unknown", "");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      user0.setAddressLine1(" ");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.form = "";
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable1);
      rawVariable0.clone();
      derivedVariable1.codeBookNumber = " ";
      derivedVariable0.createVariableSummary();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getYear();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("`NABLE_TO_UPDATE_ILUE_LBEFS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("cy#");
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("ontologyTerm.nameSpace.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setOntologyName("uqGLrO;x,J.CthO*I");
      ontologyTerm4.setDescription("`NABLE_TO_UPDATE_ILUE_LBEFS");
      ontologyTerm4.setNewRecord(false);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      assertFalse(ontologyTerm7.equals((Object)ontologyTerm5));
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.5306503658653234
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      arrayList0.add((ValueLabel) null);
      rawVariable0.setValueLabels(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User();
      user0.setFirstName("_0uwCo.aZ");
      user0.setLastName("UNABLE_TO_CHECK_ONTOLOGY_TERM_EXISTS");
      user0.setAffiliation("4st/");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setNotes("supportingDocument.documentCode.label");
      derivedVariable0.isCoded();
      derivedVariable0.getNotes();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.documentCode.label");
      ontologyTerm0.setNameSpace("!");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("supportingDocument.documentCode.label", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.890115044577689
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      rawVariable0.addValueLabel(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel1);
      rawVariable0.setCodeBookNumber(">~JM**Bl2");
      rawVariable0.setForm(">~JM**Bl2");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      rawVariable0.setCategory("h>!!_~`><t$r%-pI6H$");
      derivedVariable1.getValueLabels();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setForm("p23]ArxfxZv6");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeOntologyTerms(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable3.getSourceVariables();
      arrayList2.add((Variable) rawVariable1);
      derivedVariable1.addSourceVariables(arrayList2);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.hasSameDisplayName(rawVariable2);
      assertEquals(">~JM**Bl2", derivedVariable1.getForm());
      
      derivedVariable0.getIdentifier();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = (RawVariable)rawVariable2.clone();
      assertEquals("Unknown", rawVariable4.getAvailability());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.456991467565147
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setUserID("Uht{a");
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable1);
      User user2 = new User("Uht{a", "JmY");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.912796191457052
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("user.userID.label");
      User user0 = new User((String) null, (String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setUserID((String) null);
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user2 = new User("Uht{a", (String) null);
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, derivedVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      assertEquals("user.userID.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.7981767912954902
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "";
      derivedVariable0.setName("hH.qyzqA!b~ouo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      supportingDocument0.setFileName("general.fieldValue.blank");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.setForm("");
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.setIdentifier(0);
      rawVariable0.isNewRecord();
      RawVariable.validateFields(rawVariable0);
      rawVariable0.setAvailability("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.setYear("");
      derivedVariable0.getName();
      rawVariable0.setColumnEnd("valueLabel.value.saveChanges");
      assertEquals("valueLabel.value.saveChanges", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("general.fieldValue.blank");
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.747647826160577
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      derivedVariable0.setAlias((String) null);
      derivedVariable0.form = "B";
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCategory();
      derivedVariable0.setAlias("kb'=bbc:&.mkz");
      derivedVariable0.setColumnEnd("kb'=bbc:&.mkz");
      derivedVariable0.getAlternativeVariable();
      assertEquals("kb'=bbc:&.mkz", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("hH.qyzqA!b~ouo");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(698);
      derivedVariable0.createVariableSummary();
      supportingDocument0.setFileName("general.fieldValue.blank");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      SupportingDocument supportingDocument2 = (SupportingDocument)supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.ensureCapacity(698);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      supportingDocument0.setDescription("hH.qyzqA!b~ouo");
      assertNotSame(supportingDocument0, supportingDocument1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      User user0 = new User();
      user0.setFirstName("LIST_CHOICE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable1.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.addSourceVariable(rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCoded());
      assertTrue(boolean1 == boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.912698316432657
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      rawVariable0.columnStart = null;
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      rawVariable0.getAlias();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.isCleaned();
      rawVariable0.getColumnStart();
      assertEquals("-1211", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("");
      rawVariable0.getCleaningDescription();
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isCoded());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.8560488871884697
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      rawVariable0.setValueLabels(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel1);
      derivedVariable0.removeValueLabel(valueLabel1);
      rawVariable0.addValueLabel(valueLabel1);
      derivedVariable0.setNotes("n%PW(qv4s7[H");
      assertEquals("n%PW(qv4s7[H", derivedVariable0.getNotes());
      
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.283829765951666
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setUserID("Uht{a");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user3 = new User("user.postCode.saveChanges", "eUM@5F!");
      derivedVariable0.setCleaningDescription("Uht{a");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      derivedVariable0.getColumnStart();
      assertEquals("Uht{a", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.7787755691845217
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setLabel("Unknown");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.getLabel();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setValue("Unknown");
      valueLabel0.getDisplayName();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIdentifier((-413));
      derivedVariable0.getName();
      derivedVariable0.getColumnStart();
      derivedVariable0.setCodeBookNumber("Unknown-");
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      assertEquals("Unknown", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.841511963837789
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("ib#qr+rRl|qJ1X", "ib#qr+rRl|qJ1X");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.form = null;
      rawVariable0.columnStart = null;
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      RawVariable rawVariable2 = new RawVariable();
      User user2 = new User("e$71b'MU>h\"", "UNABLE_TO_GET_STUDY_YEARS");
      rawVariable1.setNotes("Unknown");
      User user3 = new User("user.phone.saveChanges", "variable.isCoded.label");
      RawVariable.detectFieldChanges(user3, rawVariable1, rawVariable2);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.75794916022711
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("&ZEFyWYGBmtZ}E");
      user0.setStatus("&ZEFyWYGBmtZ}E");
      user0.setPostCode("&ZEFyWYGBmtZ}E");
      user0.setPassword("\u0005nS|aM8Xz5qmrd|0'");
      user0.setFirstName("Unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User.checkValidUserIDField("Unknown");
      derivedVariable0.form = "Unknown";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.questionNumber = "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getForm());
      assertEquals("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      User user0 = new User();
      user0.setAffiliation("&ZEFyWYGBmtZ}E");
      user0.setStatus("&ZEFyWYGBmtZ}E");
      user0.setPostCode("&ZEFyWYGBmtZ}E");
      user0.setPassword("\u0005nS|aM8Xz5qmrd|0'");
      user0.setFirstName("Unknown");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User.checkValidUserIDField("Unknown");
      derivedVariable0.setColumnEnd("UNABLE_TO_GET_DERIVED_VARIABLE");
      derivedVariable0.questionNumber = "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(arrayList0);
      rawVariable0.setSupportingDocuments(arrayList1);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("cy#");
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setOntologyName("UNABLE_TO_GET_STUDY_YEARS");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.setOntologyName("cy#");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setDescription("8,(FRbF`Y");
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm(ontologyTerm9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setTerm("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("cy#");
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isNewRecord());
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("ontologyTerm.nameSpace.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm2.setOntologyName("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      derivedVariable0.setIsNewRecord(true);
      ontologyTerm2.setOntologyName("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      ontologyTerm1.setDescription("lcsg.O`J4MKs(R`5");
      ontologyTerm4.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      assertTrue(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory("kszH");
      user1.setAffiliation("kszH");
      user1.setUserID("Uht{a");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      assertEquals("kszH", derivedVariable0.getCategory());
      
      User user3 = new User("user.postCode.saveChanges", "eUM@5F!");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(0L);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertEquals("kszH", variable0.getCategory());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      user0.setStatus("kszH");
      user0.setPassword("supportingDocument.documentCode.saveChanges");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      User user2 = new User("eU5F!", "(v#M3h1'^ _n9mp");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.893958791556384
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("`N2BLE_TO_UPDATE_ILUE_LBEFS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("cy#");
      ontologyTerm1.setNewRecord(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setOntologyName("ontologyTerm.nameSpace.label");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      User user0 = new User("`N2BLE_TO_UPDATE_ILUE_LBEFS", "");
      user0.setUserID("cy#");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setFilePath("x)A?O5u");
      User user1 = new User("cy#", "x)A?O5u");
      User user2 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis((-2885L));
      rawVariable0.getAlternativeVariable();
      assertEquals("x)A?O5u", rawVariable0.getFilePath());
      
      User user3 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user1, derivedVariable2, derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.1499732228295376
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      user1.setUserID("Uht{a");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setYear("@C~sbTh7:B");
      derivedVariable0.codeBookNumber = "7-oQY[";
      User user3 = new User("user.postCode.saveChanges", "g)c<y_w*iJmYk.oy]");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("@C~sbTh7:B", rawVariable0.getYear());
      
      System.setCurrentTimeMillis((-3306L));
      DerivedVariable derivedVariable1 = new DerivedVariable();
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.010499207635222
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("iU#qr+rRl|qJ1X", "iU#qr+rRl|qJ1X");
      user0.setCounty((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.columnStart = "";
      rawVariable0.setCleaned(true);
      rawVariable0.setIdentifier((-1211));
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User();
      rawVariable0.setColumnStart("@C~sbTh7:B");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable2);
      System.setCurrentTimeMillis((-618L));
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.6809796293259174
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("eVf:h~!\"(l");
      rawVariable0.clone();
      Variable.validateFields(rawVariable0);
      assertEquals("eVf:h~!\"(l", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(2581);
      derivedVariable0.getDisplayItemIdentifier();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals(2581, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.694527985027682
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("variable.isCleaned.saveChanges.changedToNotClean", "");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("variable.isCleaned.saveChanges.changedToNotClean");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setIdentifier(1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<DerivedVariable> arrayList2 = new ArrayList<DerivedVariable>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList2.add(derivedVariable1);
      arrayList1.addAll((Collection<? extends Variable>) arrayList2);
      arrayList1.add((Variable) rawVariable0);
      arrayList1.spliterator();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(false);
      rawVariable1.columnEnd = "'bG7";
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable2);
      rawVariable1.setLabel("");
      derivedVariable2.getLabel();
      derivedVariable0.setNotes("2Y&-?@,");
      rawVariable0.getSupportingDocuments();
      derivedVariable0.getName();
      derivedVariable2.getSourceVariables();
      derivedVariable0.setCleaningStatus("macaw.businessLayer.Variable");
      assertEquals("2Y&-?@,", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.21798344858705
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setUserID(";.|FqNa40Z");
      rawVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      User user1 = new User("UNABLE_TO_GET_STUDY_YEARS", "h>!!_~`><t$r%-pI6H$");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      System.setCurrentTimeMillis((-2606L));
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.getColumnStart();
      String string0 = derivedVariable0.getColumnStart();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "e$71b'MU>h\"";
      System.setCurrentTimeMillis(2884L);
      String string0 = rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "Unknown";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getAlias());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getLabel());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getYear());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getColumnEnd());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getQuestionNumber());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getName());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "+U\"V";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("+U\"V", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getForm());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals("", rawVariable1.getCodeBookNumber());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.810280688514731
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setTerm("z',f8)E_ 7hG\"H");
      ontologyTerm0.setNameSpace(".");
      ontologyTerm0.setIdentifier(781);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.getIdentifier();
      rawVariable0.setForm("ontologyTerm.term.saveChanges");
      rawVariable0.setCodeBookNumber(".");
      rawVariable0.setForm("");
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCategory("h>!!_~`><t$r%-pI6H$");
      derivedVariable0.cloneAttributes(rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.8774101347898178
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = null;
      rawVariable0.setIdentifier((-1211));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("Unknown");
      ontologyTerm0.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setDescription("Zgvjk:H{L!Z$?$Jl27");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setIdentifier((-1211));
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.clear();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals((-1211), rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getAvailability());
      
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      derivedVariable0.getSourceVariables();
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "h>!!_~`><t$r%-pI6H$";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("", rawVariable1.getQuestionNumber());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertEquals("h>!!_~`><t$r%-pI6H$", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getYear());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5803725724750626
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setAvailability("variable.saveChanges.valueChanged");
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("variable.saveChanges.valueChanged", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      ArrayList<String> arrayList1 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.6862668983950018
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("user.postCode.saveChanges");
      arrayList0.add(ontologyTerm1);
      arrayList0.trimToSize();
      derivedVariable0.addOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator1 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      rawVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.setAvailability("");
      derivedVariable0.getNotes();
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("kszH", "kszH");
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user1.setFirstName("H?;NQIp$*.Y7");
      user1.setUserID("Ut{a");
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user3 = new User("user.postCode.saveChanges", "eUM@5F!");
      rawVariable0.setName("user.postCode.saveChanges");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getAlternativeVariable();
      assertEquals("user.postCode.saveChanges", rawVariable0.getName());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.991177353085955
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm1);
      ontologyTerm3.setNameSpace("I,V-\ndPU#");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setDescription("macaw.businessLayer.Variable");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.notes = "o9@vC:";
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("o9@vC:", rawVariable0.getNotes());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("CsmhRzDeYf';'pe");
      Variable.validateFields(derivedVariable0);
      assertEquals("CsmhRzDeYf';'pe", derivedVariable0.getName());
      assertEquals("CsmhRzDeYf';'pe", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setLabel("}");
      valueLabel1.clone();
      arrayList0.add(valueLabel1);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.add((ValueLabel) null);
      arrayList0.addAll((Collection<? extends ValueLabel>) arrayList1);
      arrayList0.remove(0);
      arrayList0.trimToSize();
      rawVariable0.setValueLabels(arrayList0);
      assertFalse(rawVariable0.isCoded());
      
      rawVariable0.setCoded(true);
      assertTrue(rawVariable0.isCoded());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("<Dlvg>");
      Variable.validateFields(rawVariable0);
      assertEquals("<Dlvg>", rawVariable0.getLabel());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }
}
