/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 13:51:25 GMT 2019
 */

package org.quickserver.net.server;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.Proxy;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.quickserver.net.server.ClientExtendedEventHandler;
import org.quickserver.net.server.ClientObjectHandler;
import org.quickserver.net.server.TheClient;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TheClient_ESTest extends TheClient_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.975102728219374
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      TheClient theClient0 = new TheClient();
      Proxy proxy0 = Proxy.NO_PROXY;
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockSocket0.getReceiveBufferSize();
      mockSocket0.close();
      mockSocket0.getLocalSocketAddress();
      theClient0.setSocket(mockSocket0);
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.toString();
      theClient0.getClientBinaryHandler();
      theClient0.getSocket();
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient0.getClientWriteHandler();
      theClient0.getAuthenticator();
      theClient0.getSocket();
      theClient0.getServer();
      theClient0.getSocket();
      theClient0.getSocket();
      theClient0.getAuthenticator();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientWriteHandler();
      theClient0.getSocket();
      String string0 = theClient0.toString();
      assertEquals("{TheClient Socket[unconnected], Event: (ClientEvent-Run Blocking)}", string0);
      
      theClient0.getAuthenticator();
      org.quickserver.net.qsadmin.Authenticator authenticator0 = new org.quickserver.net.qsadmin.Authenticator();
      theClient0.setClientAuthenticationHandler(authenticator0);
      System.setCurrentTimeMillis(60L);
      System.setCurrentTimeMillis(0L);
      theClient0.getClientExtendedEventHandler();
      assertFalse(theClient0.getTrusted());
      assertTrue(theClient0.getCommunicationLogging());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TheClient theClient0 = new TheClient();
      assertFalse(theClient0.getTrusted());
      
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "qNr>n>_#");
      theClient0.setTrusted(true);
      boolean boolean0 = theClient0.getTrusted();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.setMaxConnectionMsg("hSd#'<y%s");
      theClient0.setCommunicationLogging(false);
      theClient0.getCommunicationLogging();
      System.setCurrentTimeMillis(60L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TheClient theClient0 = new TheClient();
      theClient0.getTimeoutMsg();
      theClient0.getClientObjectHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.getClientExtendedEventHandler();
      theClient0.setClientObjectHandler((ClientObjectHandler) null);
      theClient0.setTimeout(34);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      MockSocket mockSocket0 = new MockSocket();
      theClient0.getClientExtendedEventHandler();
      theClient0.getClientObjectHandler();
      Integer integer0 = new Integer(34);
      theClient0.getTimeout();
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.setClientExtendedEventHandler((ClientExtendedEventHandler) null);
      theClient0.toString();
      theClient0.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientObjectHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientBinaryHandler();
      theClient0.getClientExtendedEventHandler();
      assertEquals(34, theClient0.getTimeout());
  }
}
