/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 16:41:43 GMT 2019
 */

package Newzgrabber;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Newzgrabber.Base64Decoder;
import Newzgrabber.BufferedCustomInputStream;
import Newzgrabber.Newzgrabber;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.util.Locale;
import java.util.Stack;
import javax.swing.JLayeredPane;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Base64Decoder_ESTest extends Base64Decoder_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)10;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)42;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Newzgrabber.main((String[]) null);
      System.setCurrentTimeMillis(150L);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      System.setCurrentTimeMillis((byte)42);
      base64Decoder0.setLineCount((byte)48);
      Newzgrabber.IsBatch = true;
      System.setCurrentTimeMillis((byte)48);
      System.setCurrentTimeMillis((byte)10);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)42);
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      try { 
        Integer.decode("Rw!Wu6`U,\"y1 s9");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Rw!Wu6`U,\"y1 s9\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.608621558216484
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)10;
      byteArray0[1] = (byte)61;
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)61;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\u0000\u00F5.0");
      Object object0 = new Object();
      MockPrintStream mockPrintStream1 = new MockPrintStream("\u0000\u00F5.0");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("\u0000\u00F5.0");
      Object object1 = new Object();
      MockPrintStream mockPrintStream3 = new MockPrintStream("\u0000\u00F5.0");
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream2);
      Newzgrabber.main((String[]) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder1.decodeStream();
      System.setCurrentTimeMillis((byte)61);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)48;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)48;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)42;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, true);
      MockPrintStream mockPrintStream0 = new MockPrintStream("L2eCF5m>[1S");
      Object object0 = new Object();
      MockPrintStream mockPrintStream1 = new MockPrintStream("\u0000\u00F5.0");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "L2eCF5m>[1S";
      stringArray0[1] = "L2eCF5m>[1S";
      stringArray0[2] = "\u0000\u00F5.0";
      Newzgrabber.main(stringArray0);
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)10;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte) (-11);
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis(6L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0\u00F5\u0000\u00F5@\u00F5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\u00CA\u00CA<\u00CA");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.ABORT = true;
      System.setCurrentTimeMillis((byte) (-11));
      System.setCurrentTimeMillis((byte)48);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1L);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)10);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.7932765402874764
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      System.setCurrentTimeMillis((byte)46);
      System.setCurrentTimeMillis((-1418L));
      base64Decoder0.decodeStream();
      Stack<Integer> stack0 = new Stack<Integer>();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7154074116275893
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, byteArrayOutputStream0);
      base64Decoder0.setBegin(true);
      byteArrayInputStream0.close();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis((byte)10);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(stack0, 8);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7250829733914482
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Newzgrabber.main((String[]) null);
      System.setCurrentTimeMillis(210L);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(bufferedInputStream0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      System.setCurrentTimeMillis((byte)48);
      base64Decoder0.setLineCount((byte) (-60));
      System.setCurrentTimeMillis((byte) (-60));
      System.setCurrentTimeMillis(579L);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(2803L);
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      String string0 = "Rw!Wu6`U,\"y1 s9";
      try { 
        Integer.decode("Rw!Wu6`U,\"y1 s9");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"Rw!Wu6`U,\"y1 s9\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[5] = (byte)75;
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte)75;
      byteArray0[8] = (byte)10;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\u0000!");
      Object[] objectArray0 = new Object[8];
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      objectArray0[0] = object1;
      objectArray0[1] = object2;
      Object object5 = new Object();
      objectArray0[2] = object5;
      objectArray0[3] = object2;
      objectArray0[4] = (Object) (byte)10;
      objectArray0[5] = (Object) (byte)75;
      mockPrintStream0.format("Adding", objectArray0);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, mockPrintStream0);
      mockPrintStream0.write(byteArray0);
      Newzgrabber.main((String[]) null);
      base64Decoder0.decodeStream();
      assertEquals(4L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-11);
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte) (-11);
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Newzgrabber.main((String[]) null);
      System.setCurrentTimeMillis(150L);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      System.setCurrentTimeMillis((byte) (-11));
      System.setCurrentTimeMillis((byte)48);
      base64Decoder0.ProgressSet = true;
      long long0 = 3L;
      System.setCurrentTimeMillis(3L);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1L);
      Stack<Integer> stack0 = new Stack<Integer>();
      DefaultTableModel defaultTableModel0 = null;
      try {
        defaultTableModel0 = new DefaultTableModel(stack0, (byte) (-11));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -11
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6130941026868555
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[1] = (byte)48;
      byteArray0[3] = (byte)48;
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)61;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.setBegin(false);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder1.setStatusObject(base64Decoder0);
      base64Decoder1.setStatusRow((-2958));
      Newzgrabber.main((String[]) null);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(2337L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6130941026868555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[1] = (byte)48;
      byteArray0[3] = (byte)48;
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)61;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, (byte)10);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.setBegin(false);
      byteArrayInputStream0.close();
      Base64Decoder base64Decoder1 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      base64Decoder0.decodeStream();
      base64Decoder1.setStatusObject(base64Decoder0);
      base64Decoder1.setStatusRow((-2958));
      Newzgrabber.main((String[]) null);
      base64Decoder1.decodeStream();
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(2337L);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(1L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6858900691152602
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)10;
      byteArray0[3] = (byte)10;
      byteArray0[5] = (byte)10;
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte) (-54);
      byteArray0[8] = (byte)10;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\u0000!");
      Object[] objectArray0 = new Object[8];
      char[] charArray0 = new char[2];
      charArray0[0] = 'P';
      charArray0[1] = 'x';
      mockPrintStream0.print(charArray0);
      objectArray0[0] = object1;
      objectArray0[1] = object2;
      Object object5 = new Object();
      objectArray0[2] = object5;
      objectArray0[3] = object2;
      objectArray0[4] = (Object) (byte)10;
      byteArray0[3] = (byte)10;
      mockPrintStream0.format("Adding", objectArray0);
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) "\u0000!");
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, printStream0);
      printStream0.write(byteArray0);
      Newzgrabber.main((String[]) null);
      base64Decoder0.decodeStream();
      base64Decoder0.decodeStream();
      assertEquals(5L, base64Decoder0.getLineCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)10;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte) (-11);
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Newzgrabber.main((String[]) null);
      System.setCurrentTimeMillis(150L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0\u00F5\u0000\u00F5@\u00F5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\u00CA\u00CA<\u00CA");
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      System.setCurrentTimeMillis((byte) (-11));
      base64Decoder0.setLineCount((byte)48);
      System.setCurrentTimeMillis((byte)48);
      System.setCurrentTimeMillis((byte) (-11));
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)48;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte)10;
      byteArray0[4] = (byte) (-11);
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte)60;
      byteArray0[7] = (byte) (-11);
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Newzgrabber.main((String[]) null);
      System.setCurrentTimeMillis(150L);
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, false);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      System.setCurrentTimeMillis((byte) (-11));
      System.setCurrentTimeMillis((byte)48);
      Newzgrabber.verbose = true;
      base64Decoder0.ProgressSet = true;
      System.setCurrentTimeMillis(3L);
      base64Decoder0.decodeStream();
      System.setCurrentTimeMillis(1L);
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = new Integer((byte)10);
      System.setCurrentTimeMillis(2727L);
      stack0.add(integer0);
      Integer integer1 = stack0.pop();
      assertFalse(stack0.contains(integer1));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(".");
      mockFileOutputStream0.write(500);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      PrintStream printStream0 = mockPrintStream0.append('a');
      Base64Decoder base64Decoder0 = new Base64Decoder((BufferedCustomInputStream) null, printStream0);
      // Undeclared exception!
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Newzgrabber.Base64Decoder", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis(6L);
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)10;
      byteArray0[1] = (byte)61;
      byteArray0[5] = (byte)61;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)61;
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedCustomInputStream bufferedCustomInputStream0 = new BufferedCustomInputStream(byteArrayInputStream0, true);
      Base64Decoder base64Decoder0 = new Base64Decoder(bufferedCustomInputStream0, pipedOutputStream0);
      System.setCurrentTimeMillis((byte)61);
      try { 
        base64Decoder0.decodeStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }
}
