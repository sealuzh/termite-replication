/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 18:01:09 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.AWTKeyStroke;
import java.awt.CardLayout;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ActionListener;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentListener;
import java.awt.event.ContainerListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.Dimension2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.renderable.ParameterBlock;
import java.io.BufferedInputStream;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.text.AttributedCharacterIterator;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JSpinner;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.TransferHandler;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import javax.swing.plaf.basic.BasicTextPaneUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalInternalFrameUI;
import javax.swing.plaf.metal.MetalLabelUI;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.plaf.multi.MultiTextUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.TextAction;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.14527948854757
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      int[] intArray0 = new int[1];
      AdjustmentListener adjustmentListener0 = mock(AdjustmentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(adjustmentListener0, adjustmentListener0);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.add((KeyListener) null, keyListener1);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel2.removeElements(0, (int) (byte)3, true);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      MultiTextUI multiTextUI0 = new MultiTextUI();
      JComponent jComponent0 = null;
      // Undeclared exception!
      try { 
        multiTextUI0.getPreferredSize((JComponent) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.63887068547068
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[4];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Vector) null, (Vector) null);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      defaultTableModelArray0[1] = defaultTableModel1;
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(defaultTableModelArray0, 173);
      defaultTableModelArray0[2] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel(defaultTableModelArray0, 173);
      defaultTableModelArray0[3] = defaultTableModel3;
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultTableModelArray0);
      visualListModel0.addListDataListener(jComboBox0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.setData(visualPageListItemArray0);
      visualListModel2.removeElements((int) (byte)3, (int) (byte)3, false);
      int int0 = (-1706);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-1706));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5162763147019094
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte) (-98);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      vector0.removeAll(priorityQueue0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      parameterBlock1.getSources();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[7];
      intArray0[3] = (int) (byte)3;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = (int) (byte) (-98);
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) (byte)3;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(3, (int) (byte)3, true);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(5, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5754958472190381
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.stream();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      byte byte0 = (byte)3;
      int[] intArray0 = new int[1];
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel1.removeElements(0, (int) (byte)3, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.63414458380061
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte) (-95);
      stack0.trimToSize();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[9];
      intArray0[3] = (int) (byte)3;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[6] = 10;
      intArray0[7] = (int) (byte)3;
      intArray0[8] = (int) (byte)3;
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = (int) (byte)3;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7261630270940382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int[] intArray0 = new int[9];
      intArray0[3] = (int) (byte)16;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = (int) (byte)16;
      intArray0[4] = (int) (byte)16;
      intArray0[5] = 10;
      intArray0[6] = 10;
      intArray0[7] = (int) (byte)16;
      intArray0[8] = (int) (byte)16;
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) (byte)16;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 17
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster6, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster7, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster8);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1324);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1324
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.871710334271645
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = (int) (byte)3;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = (int) (byte)3;
      intArray0[8] = (int) (byte)3;
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) (byte)3;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray1, true);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(1);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.93504084661911
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.forEach(consumer0);
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte) (-12);
      AdjustmentListener adjustmentListener0 = mock(AdjustmentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(adjustmentListener0, adjustmentListener0);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      KeyListener keyListener1 = AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      AWTEventMulticaster.remove(keyListener1, keyListener1);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -11
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(visualPageListItemArray0);
      AdjustmentListener adjustmentListener0 = mock(AdjustmentListener.class, new ViolatedAssumptionAnswer());
      AdjustmentListener adjustmentListener1 = AWTEventMulticaster.add(adjustmentListener0, adjustmentListener0);
      AWTEventMulticaster.remove(adjustmentListener1, adjustmentListener1);
      AWTEventMulticaster.add((AdjustmentListener) null, (AdjustmentListener) null);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 2854;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2853
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7983309769596816
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ActionListener) aWTEventMulticaster1, (ActionListener) aWTEventMulticaster1);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster5, (AdjustmentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ActionListener) aWTEventMulticaster4, (ActionListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster6, (HierarchyListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster7, (HierarchyBoundsListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster5, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster7, (KeyListener) aWTEventMulticaster7);
      int[] intArray0 = new int[15];
      intArray0[0] = (int) (byte)3;
      intArray0[1] = (int) (byte)3;
      intArray0[2] = (int) (byte)3;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = (int) (byte)3;
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.2765348389356492
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster2, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster6);
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte)3;
      intArray0[1] = (int) (byte)3;
      intArray0[2] = (int) (byte)3;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = (int) (byte)3;
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      byte byte0 = (byte) (-90);
      byte byte1 = (byte) (-114);
      byte byte2 = (byte)64;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.data = null;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(visualPageListItemArray0);
      jComboBox0.getHeight();
      int[] intArray0 = new int[13];
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndex(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.506229622995291
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(visualPageListItemArray0);
      visualListModel0.getSize();
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndex(3);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, containerListener1);
      visualListModel0.setData(visualPageListItemArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte)28;
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      byte byte0 = (byte)3;
      byte[] byteArray1 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte) (-28);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -28
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.560115852756261
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster6, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster9, (InputMethodListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster12, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster13);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.62000913646583
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte) (-98);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getSources();
      vector0.removeAll(priorityQueue0);
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      parameterBlock1.getSources();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[7];
      intArray0[3] = (int) (byte)3;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = (int) (byte) (-98);
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) (byte)3;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.removeElements(intArray1, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.496817858289409
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(visualPageListItemArray0);
      jComboBox0.getHeight();
      int[] intArray0 = new int[13];
      visualListModel0.moveDownIndex(0);
      intArray0[0] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      Vector<Object> vector0 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)64);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      Object object0 = new Object();
      vector0.add(object0);
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getSources();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>(vector1);
      defaultComboBoxModel0.getIndexOf((Object) null);
      defaultComboBoxModel0.setSelectedItem(bufferedInputStream0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(13, intArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualListModel0.setData(visualPageListItemArray0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster1);
      int[] intArray0 = new int[5];
      intArray0[0] = 961;
      intArray0[1] = (-941);
      intArray0[2] = 1181;
      intArray0[3] = 242;
      intArray0[4] = (-293);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 961
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(706, 706, true);
      visualListModel0.addAllElements(706, (Collection<VisualPageListItem>) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.getValidElements();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.data = null;
      visualListModel0.getElements();
      int int0 = 92;
      boolean boolean0 = false;
      VisualPageListItem visualPageListItem0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.addElement((VisualPageListItem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(706, (Collection<VisualPageListItem>) arrayDeque0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.getValidElements();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.data = null;
      visualListModel0.getElements();
      VisualPageListItem visualPageListItem0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(92, 92, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2844000392838724
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster6, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster9, (InputMethodListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster7, (InputMethodListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster12, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster13);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster9, (InputMethodListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster3, (MouseListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster10);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster5, (HierarchyListener) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 1;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.291589668660726
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster6, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster6, (MouseListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster7, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster8);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.291589668660726
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster2, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster7, (AdjustmentListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster6);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster9);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.291589668660726
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster2, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster7, (AdjustmentListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster6);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster0, (MouseListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster6, (KeyListener) aWTEventMulticaster9);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7364243293651502
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2147483638;
      intArray0[2] = 778;
      intArray0[3] = 2147483638;
      intArray0[4] = 357;
      intArray0[5] = 2147483638;
      intArray0[3] = 931;
      intArray0[7] = 357;
      visualListModel0.moveDownIndexes(intArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster2, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster5, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster2);
      int[] intArray1 = new int[2];
      intArray1[0] = 1;
      intArray1[1] = 1;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveUpIndex(1);
      visualListModel0.moveUpIndexes(intArray1);
      assertEquals(2, intArray1.length);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      int[] intArray0 = new int[8];
      intArray0[0] = 2147483638;
      intArray0[1] = 2147483638;
      intArray0[2] = 778;
      intArray0[3] = 931;
      intArray0[4] = 357;
      intArray0[5] = 2147483638;
      intArray0[3] = 931;
      Action[] actionArray0 = new Action[3];
      DefaultEditorKit.CopyAction defaultEditorKit_CopyAction0 = new DefaultEditorKit.CopyAction();
      actionArray0[0] = (Action) defaultEditorKit_CopyAction0;
      StyledEditorKit.FontFamilyAction styledEditorKit_FontFamilyAction0 = new StyledEditorKit.FontFamilyAction("", "");
      actionArray0[1] = (Action) styledEditorKit_FontFamilyAction0;
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      actionArray0[2] = (Action) styledEditorKit_BoldAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      styledEditorKit_ItalicAction0.getKeys();
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction0.removePropertyChangeListener(metalLabelUI0);
      styledEditorKit_ItalicAction0.setEnabled(true);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      JComboBox<AWTKeyStroke> jComboBox0 = new JComboBox<AWTKeyStroke>();
      Rectangle rectangle0 = jComboBox0.getVisibleRect();
      defaultCaret0.setRect((Rectangle2D) rectangle0);
      defaultCaret0.getChangeListeners();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      visualListModel0.removeElementAt(0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2094830803315193
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[16];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((TextListener) aWTEventMulticaster2, (TextListener) null);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ActionListener) aWTEventMulticaster6, (ActionListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster7, (AdjustmentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster8, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster5, (KeyListener) aWTEventMulticaster9);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte)28;
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      byte byte0 = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int int0 = 1;
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)3;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      int int0 = 3667;
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = null;
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(3667, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = 1;
      intArray0[6] = 1;
      intArray0[7] = (int) (byte)3;
      intArray0[8] = (int) (byte)3;
      visualListModel0.rotateClockwiseElements(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O/SX");
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (int) (byte)3;
      Stack<Object> stack1 = new Stack<Object>();
      stack1.toArray((Object[]) visualPageListItemArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster2, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      Integer integer0 = new Integer((-1622));
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      visualListModel0.getElements();
      Stack<Object> stack1 = new Stack<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(stack1);
      assertFalse(jComboBox0.isFocusTraversalPolicyProvider());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster3, (HierarchyBoundsListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) aWTEventMulticaster4);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      styledEditorKit_ItalicAction0.getPropertyChangeListeners();
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      defaultEditorKit_CutAction0.getKeys();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      jComboBox0.setIgnoreRepaint(true);
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getNonContinuousLayoutDivider();
      basicSplitPaneUI0.getNonContinuousLayoutDivider();
      jComboBox0.paintImmediately(393, 1, (-537), 393);
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      basicSplitPaneUI0.getBaselineResizeBehavior(jComboBox0);
      JTextPane jTextPane0 = new JTextPane();
      visualListModel0.setData(visualPageListItemArray0);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9844935290697798
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(keyListener0, keyListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster3, (ContainerListener) null);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      visualListModel0.clearData();
      visualListModel0.getValidElements();
      Object object0 = visualListModel0.getElementAt(102);
      assertNull(object0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      Integer integer0 = new Integer((-4390));
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "\" was loaded by [", parameterBlock0, (RenderingHints) null, false);
      // Undeclared exception!
      try { 
        visualListModel1.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" was loaded by [\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any(org.pdfsam.guiclient.dto.VisualPageListItem.class) , any(org.pdfsam.guiclient.dto.VisualPageListItem.class));
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.sort(comparator0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      ArrayList<VisualPageListItem> arrayList1 = null;
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 9;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">z-6Mb");
      int int1 = (-3682);
      String string0 = "Z\\sIaz#`V_=r";
      boolean boolean0 = true;
      visualListModel0.removeElements((-3682), 9, true);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-3682), "ZsIaz#`V_=r", "GB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      CollectionOp collectionOp0 = new CollectionOp("", parameterBlock0, renderingHints0);
      defaultComboBoxModel0.getIndexOf(collectionOp0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JInternalFrame jInternalFrame0 = new JInternalFrame("JXnW.qd9", false, false);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      MetalInternalFrameUI metalInternalFrameUI1 = new MetalInternalFrameUI((JInternalFrame) null);
      metalInternalFrameUI1.getNorthPane();
      metalInternalFrameUI1.getEastPane();
      metalInternalFrameUI1.getNorthPane();
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      Dimension dimension0 = new Dimension();
      metalSplitPaneUI0.getBaselineResizeBehavior(jInternalFrame0);
      CardLayout cardLayout0 = new CardLayout(0, 0);
      Dimension dimension1 = new Dimension();
      Dimension dimension2 = cardLayout0.minimumLayoutSize(jInternalFrame0);
      dimension1.height = 0;
      dimension0.setSize(69, 0);
      dimension2.setSize((double) 0, (double) 0);
      dimension1.setSize(15, (-350));
      dimension2.setSize((Dimension2D) dimension0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      dimension1.height = 15;
      dimension2.setSize((Dimension2D) dimension0);
      jInternalFrame0.firePropertyChange("B8 EOE", 'e', 'e');
      dimension0.setSize((Dimension2D) dimension2);
      dimension0.setSize((double) (-350), (double) 69);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>(15);
      vector0.add((VisualPageListItem) null);
      vector0.trimToSize();
      visualListModel0.setData(vector0);
      System.setCurrentTimeMillis(69);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("f", true, true);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      MetalInternalFrameUI metalInternalFrameUI1 = new MetalInternalFrameUI(jInternalFrame0);
      MetalInternalFrameUI metalInternalFrameUI2 = new MetalInternalFrameUI(jInternalFrame0);
      metalInternalFrameUI2.setWestPane(jInternalFrame0);
      BasicInternalFrameUI basicInternalFrameUI0 = new BasicInternalFrameUI(jInternalFrame0);
      basicInternalFrameUI0.getSouthPane();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      basicSplitPaneUI0.getMinimumSize((JComponent) null);
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      basicSplitPaneUI0.getBaselineResizeBehavior(jInternalFrame0);
      JTextPane jTextPane0 = new JTextPane();
      visualListModel0.setData(visualPageListItemArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      assertEquals(0, parameterBlock0.getNumParameters());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(1104, (Collection<VisualPageListItem>) arrayDeque0);
      visualListModel0.removeElements(1208, 1208, true);
      visualListModel0.addElement((VisualPageListItem) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)28;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JSpinner jSpinner0 = new JSpinner();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext1.new NamedStyle();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext2.new NamedStyle("", styleContext_NamedStyle1);
      Vector<Object> vector0 = new Vector<Object>();
      styleContext_NamedStyle2.getAttributeNames();
      StyleContext styleContext3 = new StyleContext();
      styleContext_NamedStyle0.getResolveParent();
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext3.new NamedStyle();
      styleContext_NamedStyle3.getAttribute("");
      styleContext_NamedStyle3.removeAttributes((AttributeSet) styleContext_NamedStyle0);
      styleContext_NamedStyle2.isEqual(styleContext_NamedStyle3);
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle5 = styleContext0.new NamedStyle(styleContext_NamedStyle4);
      StyleContext.NamedStyle styleContext_NamedStyle6 = styleContext0.new NamedStyle("", styleContext_NamedStyle5);
      styleContext_NamedStyle4.setResolveParent(styleContext_NamedStyle6);
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext3.new SmallAttributeSet(styleContext_NamedStyle2);
      styleContext_SmallAttributeSet0.clone();
      styleContext_NamedStyle0.getResolveParent();
      StyleContext styleContext4 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle7 = styleContext4.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle8 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle9 = styleContext2.new NamedStyle(styleContext_NamedStyle4);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.getChangeListeners();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-1839), (Collection<VisualPageListItem>) treeSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4407696753202024
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.removeElements(51, (-328), true);
      int[] intArray0 = new int[9];
      intArray0[0] = 51;
      intArray0[1] = 51;
      intArray0[2] = (-328);
      intArray0[3] = 51;
      visualListModel0.addElementAt((VisualPageListItem) null, (-1481));
      intArray0[4] = (-328);
      intArray0[5] = 51;
      intArray0[6] = 51;
      intArray0[7] = 51;
      intArray0[8] = (-328);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>(2657);
      vector0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
      visualListModel0.moveDownIndex(51);
      visualListModel0.subList((-328), 51, false);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      Action[] actionArray0 = new Action[8];
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      actionArray0[0] = (Action) defaultEditorKit_InsertContentAction0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(actionArray0);
      pipedInputStream0.markSupported();
      defaultEditorKit_InsertContentAction0.getPropertyChangeListeners();
      jComboBox0.getAction();
      actionArray0[1] = null;
      Stack<FilterInputStream> stack0 = new Stack<FilterInputStream>();
      JComboBox<FilterInputStream> jComboBox1 = new JComboBox<FilterInputStream>(stack0);
      ActionMap actionMap0 = jComboBox1.getActionMap();
      ActionMap actionMap1 = actionMap0.getParent();
      actionMap1.get(pipedInputStream0);
      actionArray0[2] = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      actionArray0[3] = (Action) defaultEditorKit_InsertTabAction0;
      defaultEditorKit_InsertTabAction0.putValue("", pipedOutputStream0);
      Action action0 = TransferHandler.getPasteAction();
      actionArray0[7] = action0;
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      actionArray0[5] = (Action) styledEditorKit_ItalicAction0;
      Action action1 = TransferHandler.getCopyAction();
      actionArray0[6] = action1;
      pipedOutputStream0.flush();
      Action action2 = TransferHandler.getCopyAction();
      actionArray0[7] = action2;
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        TextAction.augmentList(actionArray0, actionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      Action[] actionArray0 = new Action[9];
      actionArray0[0] = (Action) defaultEditorKit_CutAction0;
      styledEditorKit_ItalicAction0.getKeys();
      actionArray0[1] = (Action) defaultEditorKit_CutAction0;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_CutAction0.getKeys();
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[4] = (Action) styledEditorKit_ItalicAction0;
      Action[] actionArray1 = new Action[6];
      actionArray1[0] = (Action) defaultEditorKit_CutAction0;
      styledEditorKit_ItalicAction0.setEnabled(false);
      actionArray1[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[2] = (Action) defaultEditorKit_CutAction0;
      actionArray1[3] = (Action) styledEditorKit_ItalicAction0;
      actionArray1[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[5] = (Action) styledEditorKit_ItalicAction0;
      TextAction.augmentList(actionArray1, actionArray1);
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction1 = new StyledEditorKit.ItalicAction();
      styledEditorKit_ItalicAction1.getKeys();
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      defaultEditorKit_DefaultKeyTypedAction0.removePropertyChangeListener(metalLabelUI0);
      styledEditorKit_ItalicAction1.setEnabled(false);
      defaultCaret0.getChangeListeners();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(125, (Collection<VisualPageListItem>) treeSet0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      visualListModel0.moveDownIndex(0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock1.getSources();
      ParameterBlock parameterBlock2 = new ParameterBlock();
      Vector<Object> vector1 = parameterBlock1.getSources();
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0, vector1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      RenderingHints renderingHints0 = new RenderingHints((RenderingHints.Key) null, (Object) null);
      Integer integer0 = new Integer(3800);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      // Undeclared exception!
      try { 
        renderingHints0.put(integer0, sunHints_Key1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KT]#");
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JTree jTree0 = new JTree();
      basicTreeUI0.stopEditing(jTree0);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KT]#");
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0, true);
      JTree jTree1 = new JTree(defaultTreeModel0);
      basicTreeUI0.getClosestPathForLocation(jTree1, 2320, (-1));
      basicTreeUI0.getPathBounds(jTree1, (TreePath) null);
      // Undeclared exception!
      try { 
        jComboBox0.repaint((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.JComponent", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("f", false, false);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      MetalInternalFrameUI metalInternalFrameUI1 = new MetalInternalFrameUI(jInternalFrame0);
      metalInternalFrameUI1.setWestPane(jInternalFrame0);
      metalInternalFrameUI1.getSouthPane();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      Dimension dimension0 = new Dimension();
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      basicSplitPaneUI0.getBaselineResizeBehavior(jInternalFrame0);
      CardLayout cardLayout0 = new CardLayout(0, 0);
      Dimension dimension1 = cardLayout0.preferredLayoutSize(jInternalFrame0);
      Dimension dimension2 = cardLayout0.minimumLayoutSize(jInternalFrame0);
      dimension1.height = 0;
      dimension0.setSize(45, 45);
      jInternalFrame0.firePropertyChange("B8 EOE", 'e', 'e');
      dimension2.setSize((double) 45, (double) 45);
      dimension1.setSize(45, (-2373));
      dimension2.height = (int) 'e';
      Dimension dimension3 = new Dimension(dimension2);
      dimension0.setSize((Dimension2D) dimension3);
      dimension2.width = (-249);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(2955);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)28;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JSpinner jSpinner0 = new JSpinner();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext0.new NamedStyle((String) null, styleContext_NamedStyle1);
      styleContext_NamedStyle0.getAttributeNames();
      StyleContext styleContext2 = new StyleContext();
      styleContext_NamedStyle3.getResolveParent();
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.READING;
      styleContext_NamedStyle4.getAttribute(attributedCharacterIterator_Attribute0);
      styleContext_NamedStyle1.removeAttributes((AttributeSet) styleContext_NamedStyle2);
      styleContext_NamedStyle2.isEqual(styleContext_NamedStyle4);
      StyleContext styleContext3 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle5 = styleContext3.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle6 = styleContext3.new NamedStyle(styleContext_NamedStyle1);
      Class<CollectionOp> class0 = CollectionOp.class;
      styleContext_NamedStyle4.getListeners(class0);
      StyleContext.NamedStyle styleContext_NamedStyle7 = styleContext0.new NamedStyle((String) null, styleContext_NamedStyle1);
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext1.new SmallAttributeSet(styleContext_NamedStyle4);
      styleContext_NamedStyle5.toString();
      styleContext_SmallAttributeSet0.clone();
      styleContext_NamedStyle2.getResolveParent();
      StyleContext styleContext4 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle8 = styleContext4.new NamedStyle(styleContext_NamedStyle6);
      StyleContext.NamedStyle styleContext_NamedStyle9 = styleContext1.new NamedStyle();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(7, (-1500), true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KT]#");
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JTree jTree0 = new JTree((TreeNode) null);
      basicTreeUI0.stopEditing(jTree0);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KT]#");
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0, true);
      JTree jTree1 = new JTree(defaultTreeModel0);
      TreePath treePath0 = basicTreeUI0.getClosestPathForLocation(jTree1, 2320, (-1));
      assertNull(treePath0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      int int0 = 1363;
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-15), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-15)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JInternalFrame jInternalFrame0 = new JInternalFrame("JXnW.qd9", false, false);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      MetalInternalFrameUI metalInternalFrameUI1 = new MetalInternalFrameUI((JInternalFrame) null);
      metalInternalFrameUI1.getNorthPane();
      metalInternalFrameUI1.getEastPane();
      metalInternalFrameUI1.getNorthPane();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      styledEditorKit_ItalicAction0.getPropertyChangeListeners();
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      defaultEditorKit_CutAction0.getKeys();
      Action[] actionArray0 = new Action[1];
      actionArray0[0] = (Action) styledEditorKit_ItalicAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      int int0 = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      int int1 = 4;
      // Undeclared exception!
      try { 
        visualListModel0.subList(4, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(4) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, false);
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector1);
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0, vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      String string0 = "Z31V&1alUO1";
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "Z31V&1alUO1");
      byte[] byteArray0 = new byte[4];
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.827218885343294
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[0] = Integer.MIN_VALUE;
      visualListModel0.subList(Integer.MIN_VALUE, Integer.MIN_VALUE);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.log4j.Priority");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(573, (-329), false);
      int[] intArray1 = new int[1];
      intArray1[0] = 197;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {Integer.MIN_VALUE}, intArray0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.isPopupVisible();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jComboBox0.getInheritsPopupMenu();
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      jComboBox0.getComponentListeners();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1951, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1951) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      Action[] actionArray0 = new Action[9];
      actionArray0[5] = (Action) defaultEditorKit_CutAction0;
      styledEditorKit_ItalicAction0.getKeys();
      actionArray0[1] = (Action) defaultEditorKit_CutAction0;
      actionArray0[8] = (Action) styledEditorKit_ItalicAction0;
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[4] = (Action) styledEditorKit_ItalicAction0;
      defaultEditorKit_DefaultKeyTypedAction0.setEnabled(false);
      Action[] actionArray1 = new Action[6];
      defaultEditorKit_DefaultKeyTypedAction0.getKeys();
      actionArray1[0] = (Action) defaultEditorKit_CutAction0;
      actionArray1[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[2] = (Action) defaultEditorKit_CutAction0;
      actionArray1[3] = (Action) styledEditorKit_ItalicAction0;
      actionArray1[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[5] = (Action) styledEditorKit_ItalicAction0;
      TextAction.augmentList(actionArray1, actionArray1);
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction1 = new StyledEditorKit.ItalicAction();
      styledEditorKit_ItalicAction1.isEnabled();
      styledEditorKit_ItalicAction1.getKeys();
      MetalLabelUI metalLabelUI0 = new MetalLabelUI();
      styledEditorKit_ItalicAction1.setEnabled(false);
      visualListModel0.updateElementAt(1150, (VisualPageListItem) null);
      Object object0 = new Object();
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<Dialog.ModalExclusionType> linkedHashSet0 = new LinkedHashSet<Dialog.ModalExclusionType>();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      linkedHashSet0.add(dialog_ModalExclusionType0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, Dialog.ModalExclusionType> hashMap0 = new HashMap<RenderingHints.Key, Dialog.ModalExclusionType>();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3616), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3616
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((-1696));
      ParameterBlock parameterBlock0 = new ParameterBlock();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock1.getSources();
      ParameterBlock parameterBlock2 = new ParameterBlock();
      Vector<Object> vector1 = parameterBlock1.getSources();
      ParameterBlock parameterBlock3 = new ParameterBlock(vector1, vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, integer0);
      Integer integer1 = new Integer(1024);
      CollectionOp collectionOp0 = new CollectionOp("org.pdfsam.guiclient.commons.models.VisualListModel", (ParameterBlock) null, renderingHints0);
      Object object0 = new Object();
      Object object1 = new Object();
      // Undeclared exception!
      try { 
        renderingHints0.put(vector1, object1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Vector cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      byte[] byteArray0 = new byte[0];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, dialog_ModalExclusionType0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, Dialog.ModalExclusionType> hashMap0 = new HashMap<RenderingHints.Key, Dialog.ModalExclusionType>();
      HashMap<RenderingHints.Key, Dialog.ModalExclusionType> hashMap1 = new HashMap<RenderingHints.Key, Dialog.ModalExclusionType>();
      RenderingHints renderingHints1 = new RenderingHints(hashMap1);
      RenderingHints renderingHints2 = new RenderingHints(hashMap0);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(3, 2466, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      Integer integer0 = new Integer((-4390));
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[1] = 0;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-63);
      byteArray0[2] = (byte)5;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-63);
      byteArray0[4] = (byte)94;
      byteArray0[5] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      intArray0[4] = 0;
      intArray0[5] = 0;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)94;
      byteArray1[2] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      intArray0[6] = (int) (byte)95;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z`c<]b");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int[] intArray1 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(2734);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.5155194101437086
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte) (-58);
      byteArray0[4] = (byte) (-98);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = new int[7];
      intArray0[3] = (int) (byte)3;
      intArray0[1] = 10;
      intArray0[2] = 10;
      visualListModel0.elementsChanged();
      intArray0[3] = (int) (byte)3;
      intArray0[4] = (int) (byte)3;
      intArray0[5] = (int) (byte) (-98);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertNotSame(intArray0, intArray1);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      visualListModel0.appendAllElements(priorityQueue0);
      LinkedHashSet<Dialog.ModalExclusionType> linkedHashSet0 = new LinkedHashSet<Dialog.ModalExclusionType>();
      Dialog.ModalExclusionType dialog_ModalExclusionType0 = Dialog.ModalExclusionType.APPLICATION_EXCLUDE;
      linkedHashSet0.add(dialog_ModalExclusionType0);
      Dialog.ModalExclusionType dialog_ModalExclusionType1 = Dialog.ModalExclusionType.TOOLKIT_EXCLUDE;
      linkedHashSet0.add(dialog_ModalExclusionType1);
      priorityQueue0.removeAll(linkedHashSet0);
      visualListModel0.prependAllElements(priorityQueue0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, Dialog.ModalExclusionType> hashMap0 = new HashMap<RenderingHints.Key, Dialog.ModalExclusionType>();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      assertFalse(parameterBlock1.equals((Object)parameterBlock0));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3842713196839629
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      jComboBox0.getPopupMenuListeners();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jComboBox0.removeMouseListener(defaultCaret0);
      Dimension dimension0 = jComboBox0.getPreferredSize();
      int[] intArray0 = new int[9];
      jComboBox0.getInheritsPopupMenu();
      Class<CollectionOp> class0 = CollectionOp.class;
      defaultComboBoxModel0.getListeners(class0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayDeque0);
      intArray0[2] = 0;
      dimension0.width = 0;
      jComboBox0.setAction((Action) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clone();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>(stack0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      JInternalFrame jInternalFrame0 = new JInternalFrame("");
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      jInternalFrame0.getMaximumSize();
      MetalInternalFrameUI metalInternalFrameUI1 = new MetalInternalFrameUI(jInternalFrame0);
      metalInternalFrameUI1.getSouthPane();
      BasicTextPaneUI basicTextPaneUI0 = new BasicTextPaneUI();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument();
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.setFocusTraversalKeysEnabled(false);
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      jSpinner_NumberEditor0.getTextField();
      styleContext0.addChangeListener(jSpinner_NumberEditor0);
      Style style0 = defaultStyledDocument1.getLogicalStyle((-2120));
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle("", style0);
      Enumeration<Integer> enumeration0 = (Enumeration<Integer>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      styleContext_NamedStyle0.removeAttributes(enumeration0);
      ((StyleContext.NamedStyle) style0).getAttributeNames();
      styleContext_NamedStyle0.removeAttributes((AttributeSet) style0);
      ((StyleContext.NamedStyle) style0).isEqual(styleContext_NamedStyle0);
      ((StyleContext.NamedStyle) style0).copyAttributes();
      styleContext_NamedStyle0.getName();
      styleContext_NamedStyle0.setName("");
      styleContext0.addAttributes(style0, styleContext_NamedStyle0);
      JTextPane jTextPane0 = new JTextPane();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2120);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-2120), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-2094), 2688, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, true);
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1);
      ParameterBlock parameterBlock3 = new ParameterBlock(vector0, vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      String string0 = "] is not a subTlass of org.apach#.log4jLevel";
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, "] is not a subTlass of org.apach#.log4jLevel");
      byte[] byteArray0 = new byte[2];
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = null;
      try {
        pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector0, vector0);
      parameterBlock0.getSources();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      Vector<Object> vector1 = parameterBlock1.getSources();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector0, vector1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, parameterBlock0);
      Integer integer0 = new Integer(0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Map<RenderingHints.Key, Object> map0 = null;
      RenderingHints renderingHints1 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Object object0 = new Object();
      Hashtable<RenderingHints.Key, DefaultTableModel> hashtable0 = new Hashtable<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints2 = new RenderingHints(hashtable0);
      CollectionOp collectionOp0 = new CollectionOp("*}z+60!zB:2!zZ5L/", parameterBlock0, renderingHints2);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 393);
      RenderingHints renderingHints3 = new RenderingHints(sunHints_Key0, pushbackInputStream0);
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      // Undeclared exception!
      try { 
        renderingHints0.put(sunHints_Key3, (Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null incompatible with Global rendering quality key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JInternalFrame jInternalFrame0 = new JInternalFrame("f", false, false);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      MetalInternalFrameUI metalInternalFrameUI1 = new MetalInternalFrameUI(jInternalFrame0);
      metalInternalFrameUI1.setWestPane(jInternalFrame0);
      metalInternalFrameUI1.getSouthPane();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      vector0.trimToSize();
      Stack<Object> stack0 = new Stack<Object>();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-24));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      ParameterBlock parameterBlock1 = null;
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, sequenceInputStream0);
      Integer integer0 = new Integer(3800);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElementAt(5);
      // Undeclared exception!
      try { 
        renderingHints0.put(sequenceInputStream0, (Object) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.SequenceInputStream cannot be cast to java.awt.RenderingHints$Key
         //
         verifyException("java.awt.RenderingHints", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultComboBoxModel<Object> defaultComboBoxModel0 = new DefaultComboBoxModel<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(defaultComboBoxModel0);
      Dimension dimension0 = new Dimension();
      jComboBox0.getInheritsPopupMenu();
      dimension0.width = dimension0.width;
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, false, false);
      MetalInternalFrameUI metalInternalFrameUI0 = new MetalInternalFrameUI(jInternalFrame0);
      metalInternalFrameUI0.getSouthPane();
      BasicSplitPaneUI basicSplitPaneUI0 = new BasicSplitPaneUI();
      Dimension dimension1 = basicSplitPaneUI0.getMinimumSize(jInternalFrame0);
      GapContent gapContent0 = new GapContent(0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane(defaultStyledDocument0);
      dimension1.setSize(dimension0);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      visualListModel0.removeElements(0, 0, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(7, (-1500), false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KT]#");
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      JTree jTree0 = new JTree((TreeNode) null);
      basicTreeUI0.stopEditing(jTree0);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KT]#");
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(defaultMutableTreeNode0);
      JTree jTree1 = new JTree(defaultTreeModel0);
      TreePath treePath0 = basicTreeUI0.getClosestPathForLocation(jTree1, 2320, (-1));
      assertNull(treePath0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)28;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JSpinner jSpinner0 = new JSpinner();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("", styleContext_NamedStyle0);
      Vector<Object> vector0 = new Vector<Object>();
      styleContext_NamedStyle1.getAttributeNames();
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext0.new NamedStyle();
      styleContext_NamedStyle1.removeAttributes((AttributeSet) styleContext_NamedStyle0);
      styleContext_NamedStyle2.isEqual(styleContext_NamedStyle0);
      styleContext_NamedStyle3.setName("");
      JTextPane jTextPane0 = new JTextPane();
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle();
      styleContext_NamedStyle2.setName("");
      StyleContext.NamedStyle styleContext_NamedStyle5 = styleContext0.new NamedStyle(styleContext_NamedStyle2);
      AttributeSet attributeSet0 = styleContext0.removeAttributes((AttributeSet) styleContext_NamedStyle0, (AttributeSet) styleContext_NamedStyle3);
      styleContext_NamedStyle4.getAttributeCount();
      StyleContext.NamedStyle styleContext_NamedStyle6 = styleContext0.new NamedStyle("A \"", styleContext_NamedStyle4);
      styleContext0.addAttributes(attributeSet0, styleContext_NamedStyle6);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-44);
      byteArray0[2] = (byte)28;
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JSpinner jSpinner0 = new JSpinner();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("", styleContext_NamedStyle0);
      Vector<Object> vector0 = new Vector<Object>();
      styleContext_NamedStyle1.getAttributeNames();
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext0.new NamedStyle();
      styleContext_NamedStyle1.removeAttributes((AttributeSet) styleContext_NamedStyle0);
      styleContext_NamedStyle2.isEqual(styleContext_NamedStyle0);
      JTextPane jTextPane0 = new JTextPane();
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle();
      styleContext_NamedStyle2.setName("");
      StyleContext.NamedStyle styleContext_NamedStyle5 = styleContext0.new NamedStyle(styleContext_NamedStyle2);
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = (StyleContext.SmallAttributeSet)styleContext0.removeAttributes((AttributeSet) styleContext_NamedStyle0, (AttributeSet) styleContext_NamedStyle3);
      StyleContext.NamedStyle styleContext_NamedStyle6 = styleContext0.new NamedStyle("A \"", styleContext_NamedStyle4);
      styleContext_SmallAttributeSet0.clone();
      styleContext_NamedStyle3.getResolveParent();
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet1 = (StyleContext.SmallAttributeSet)styleContext0.addAttributes(styleContext_SmallAttributeSet0, styleContext_NamedStyle6);
      StyleContext styleContext1 = new StyleContext();
      styleContext1.addAttributes(styleContext_SmallAttributeSet1, styleContext_SmallAttributeSet1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      System.setCurrentTimeMillis(1073741824L);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Dimension dimension0 = new Dimension();
      CardLayout cardLayout0 = new CardLayout((-419), (byte)0);
      Dimension dimension1 = new Dimension(dimension0);
      Dimension dimension2 = new Dimension();
      dimension0.setSize(0, 0);
      dimension1.setSize(0, 0);
      dimension1.setSize((Dimension2D) dimension0);
      dimension2.setSize(0, (-419));
      dimension0.setSize((Dimension2D) dimension1);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      dimension1.setSize((double) 0, 0.0);
      dimension1.setSize((-2886), (-287));
      Dimension dimension3 = new Dimension((-2886), (-287));
      dimension2.setSize((-895), 0);
      Dimension dimension4 = new Dimension((-3746), 8);
      dimension4.height = (-1);
      dimension2.setSize(1.0, (double) (-287));
      dimension0.width = (-1);
      Dimension dimension5 = new Dimension(dimension4);
      dimension1.setSize((Dimension2D) dimension2);
      Dimension dimension6 = new Dimension((-1), (-1));
      dimension0.setSize((Dimension2D) dimension1);
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }
}
