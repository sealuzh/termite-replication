/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 17:44:43 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.gui.StartFrame;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLFeatureNotSupportedException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLInvalidAuthorizationSpecException;
import java.sql.SQLNonTransientConnectionException;
import java.sql.SQLNonTransientException;
import java.sql.SQLSyntaxErrorException;
import java.sql.SQLTimeoutException;
import java.sql.SQLWarning;
import java.util.function.Consumer;
import messages.Message;
import messages.global.GlobalChatMsg;
import messages.global.SessionListMsg;
import messages.round.TileHitPlayerMsg;
import messages.session.PlayerLeftMsg;
import messages.session.SessionParticipationMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      SessionListMsg sessionListMsg0 = new SessionListMsg();
      MockSocket mockSocket1 = new MockSocket();
      BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver1 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      PlayerLeftMsg playerLeftMsg0 = new PlayerLeftMsg();
      boolean boolean0 = false;
      int int0 = 522;
      String string0 = "%fT;.1@`_h";
      SessionParticipationMsg sessionParticipationMsg0 = new SessionParticipationMsg(boolean0, int0, string0);
      clientMsgReceiver0.processMsg(sessionParticipationMsg0);
      assertEquals(0, clientMsgReceiver0.countStackFrames());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      SessionListMsg sessionListMsg0 = new SessionListMsg();
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(sessionListMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("STD:VTK", "[4)XUD");
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException(sQLNonTransientException0);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("_ub`+N72I`FA_)1", "V'4M^@3$Co", (-3150), sQLInvalidAuthorizationSpecException0);
      SQLWarning sQLWarning0 = new SQLWarning("V'4M^@3$Co", sQLInvalidAuthorizationSpecException0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException();
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((int[]) null, sQLWarning0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLInvalidAuthorizationSpecException0.forEach(consumer0);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("V'4M^@3$Co", "x", sQLWarning0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException(sQLInvalidAuthorizationSpecException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("", "_ub`+N72I`FA_)1", sQLIntegrityConstraintViolationException0);
      sQLInvalidAuthorizationSpecException1.spliterator();
      BatchUpdateException batchUpdateException1 = new BatchUpdateException("", "STD:VTK", (int[]) null);
      sQLSyntaxErrorException0.setNextException(sQLInvalidAuthorizationSpecException1);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException("KEf7|{5\"GvV~Ir ^", batchUpdateException1);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException("_ub`+N72I`FA_)1", sQLSyntaxErrorException0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("[4)XUD", "V'4M^@3$Co");
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.GlobalChatMsg", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = (-1285);
      TileHitPlayerMsg tileHitPlayerMsg0 = new TileHitPlayerMsg(int0);
      clientMsgReceiver0.processMsg(tileHitPlayerMsg0);
      assertFalse(clientMsgReceiver0.isInterrupted());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(360000L);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MockSocket mockSocket0 = new MockSocket();
      classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.clearAssertionStatus();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-800L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(360000L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-865L));
      System.setCurrentTimeMillis((-1382L));
      System.setCurrentTimeMillis(1452L);
      System.setCurrentTimeMillis(1L);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg((Message) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "PS#Oj+rx+", "PS#Oj+rx+", (-3150));
      stackTraceElementArray0[5] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "SD:VK", "PS#Oj+rx+", (-1734));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("z", "S9:k{}N*NjdJF`7|l", "ttempted to reet thy LoggeFactory without possessing theguard.", 929);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("ttempted to reet thy LoggeFactory without possessing theguard.", "", "$c4/5H3)i9<6}!K~6Uv", 929);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("PS#Oj+rx+", "!e}QUPh", "?)V)S+8YS_h", (-1069));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("t8i*", "S9:k{}N*NjdJF`7|l", "", (-3150));
      StackTraceElement stackTraceElement6 = new StackTraceElement("Pr", "X[ShO", "=t+r", (-1069));
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTimeoutException0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("STD:VTK", "[4)XUD");
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException(sQLNonTransientException0);
      sQLInvalidAuthorizationSpecException0.getLocalizedMessage();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("_ub`+N72I`FA_)1", "V'4M^@3$Co", (-3150), sQLInvalidAuthorizationSpecException0);
      SQLWarning sQLWarning0 = new SQLWarning("V'4M^@3$Co", sQLInvalidAuthorizationSpecException0);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((int[]) null, sQLWarning0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLInvalidAuthorizationSpecException0.forEach(consumer0);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("V'4M^@3$Co", "x", sQLWarning0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException(sQLInvalidAuthorizationSpecException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("", "_ub`+N72I`FA_)1", sQLIntegrityConstraintViolationException0);
      SQLNonTransientConnectionException sQLNonTransientConnectionException0 = new SQLNonTransientConnectionException("[4)XUD");
      sQLIntegrityConstraintViolationException0.getLocalizedMessage();
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException2 = new SQLInvalidAuthorizationSpecException("", "", 2080);
      sQLInvalidAuthorizationSpecException2.addSuppressed(sQLNonTransientException0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLInvalidAuthorizationSpecException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BomberClient bomberClient0 = BomberClient.getInstance();
      Socket socket0 = bomberClient0.server;
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver(socket0, bomberClient0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      long long0 = 528L;
      System.setCurrentTimeMillis(528L);
      MockSocket mockSocket0 = new MockSocket();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      long long1 = 1L;
      System.setCurrentTimeMillis(1L);
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      StartFrame startFrame0 = StartFrame.startFrame;
      StartFrame.startFrame = null;
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      long long0 = 360000L;
      System.setCurrentTimeMillis(360000L);
      MockSocket mockSocket0 = new MockSocket();
      ClassLoader.getSystemClassLoader();
      long long1 = 1L;
      System.setCurrentTimeMillis(1L);
      MockSocket mockSocket1 = new MockSocket();
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      SQLNonTransientException sQLNonTransientException0 = new SQLNonTransientException("STD:VTK", "[4)XUD");
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException0 = new SQLInvalidAuthorizationSpecException(sQLNonTransientException0);
      sQLInvalidAuthorizationSpecException0.getLocalizedMessage();
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("_ub`+N72I`FA_)1", "V'4M^@3$Co", (-3150), sQLInvalidAuthorizationSpecException0);
      SQLWarning sQLWarning0 = new SQLWarning("V'4M^@3$Co", sQLInvalidAuthorizationSpecException0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("[4)XUD", "", "", (-3150));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("[4)XUD", "STD:VTK", "", (-1734));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "Ss9:k{N*Njd/F`7|`", "<HTML>", 929);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("<HTML>", "H^i~By+@iE{U4", "$c4/5&3)i9<6}!6Uv", 929);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("{;mb?]qW9o7M%", "!e}QUPh", "", (-1069));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("t8i*", "Ss9:k{N*Njd/F`7|`", "[4)XUD", (-3150));
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("client.network.ClientMsgReceiver", "", "<HTML>", (-3150));
      stackTraceElementArray0[6] = stackTraceElement6;
      sQLNonTransientException0.setStackTrace(stackTraceElementArray0);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException((int[]) null, sQLWarning0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLInvalidAuthorizationSpecException0.forEach(consumer0);
      SQLSyntaxErrorException sQLSyntaxErrorException0 = new SQLSyntaxErrorException("V'4M^@3$Co", "x", sQLWarning0);
      SQLInvalidAuthorizationSpecException sQLInvalidAuthorizationSpecException1 = new SQLInvalidAuthorizationSpecException(sQLInvalidAuthorizationSpecException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException0 = new SQLFeatureNotSupportedException("", "_ub`+N72I`FA_)1", sQLIntegrityConstraintViolationException0);
      sQLInvalidAuthorizationSpecException1.spliterator();
      sQLSyntaxErrorException0.setNextException(sQLInvalidAuthorizationSpecException1);
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException1 = new SQLIntegrityConstraintViolationException("KEf7|{5\"GvV~Ir ^", batchUpdateException0);
      SQLFeatureNotSupportedException sQLFeatureNotSupportedException1 = new SQLFeatureNotSupportedException("_ub`+N72I`FA_)1", sQLSyntaxErrorException0);
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }
}
