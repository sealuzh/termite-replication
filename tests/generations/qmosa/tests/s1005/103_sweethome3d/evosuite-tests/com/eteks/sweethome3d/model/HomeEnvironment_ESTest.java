/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 17:45:34 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoWidth(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      homeEnvironment0.clone();
      assertEquals(0, homeEnvironment0.getPhotoWidth());
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.417326646407087
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3229);
      homeEnvironment0.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setObserverCameraElevationAdjusted(false);
      homeEnvironment2.setGroundTexture((HomeTexture) null);
      homeEnvironment2.getPhotoAspectRatio();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      Random.setNextRandom(3229);
      homeEnvironment1.getGroundTexture();
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.clone();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.getPhotoHeight();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray1 = HomeEnvironment.DrawingMode.values();
      assertFalse(homeEnvironment_DrawingModeArray1.equals((Object)homeEnvironment_DrawingModeArray0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.024884788669466
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      homeEnvironment0.setPhotoHeight(46);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(0, (HomeTexture) null, 1681, 1681, 46);
      homeEnvironment1.getVideoAspectRatio();
      homeEnvironment1.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment1.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setVideoWidth((-470));
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.getSkyTexture();
      assertEquals(46, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.174317417693044
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setWallsAlpha((-1573.5F));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight((-2235.7954F));
      System.setCurrentTimeMillis(0L);
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property.values();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((-377));
      homeEnvironment1.getVideoCameraPath();
      Random.setNextRandom(0);
      homeEnvironment1.getGroundTexture();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals((-2235.7954F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-335L), 1.0F, 1.0F, 2.0F, 2705.7563F, 2026.4552F, (-1504L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>(linkedList0);
      homeEnvironment0.setPhotoAspectRatio((AspectRatio) null);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoWidth((-7));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoWidth((-1689));
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.487977817998108
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      homeEnvironment0.setPhotoHeight(109);
      homeEnvironment0.setSkyColor(67);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight((-581.6F));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(67);
      homeEnvironment0.setCeillingLightColor(67);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(13);
      homeEnvironment1.setLightColor(1746);
      homeEnvironment1.setSubpartSizeUnderLight(2195.1794F);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setSkyColor(656);
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSkyColor(67);
      homeEnvironment0.setVideoWidth(109);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment1.getVideoAspectRatio();
      assertEquals(2195.1794F, homeEnvironment1.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2569), (HomeTexture) null, 0, 20, (-39.0F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      homeEnvironment0.setPhotoWidth(13684944);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_WIDTH;
      homeEnvironment1.setObserverCameraElevationAdjusted(true);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Camera camera0 = new Camera((-101.1301F), (-2485.0F), 5010.599F, (-1573.5F), 33.0F, (-39.0F));
      linkedList0.offerFirst(camera0);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setVideoFrameRate((-1674));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment2.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment2.setSkyColor((-1674));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment2.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment2.getSkyTexture();
      homeEnvironment2.getDrawingMode();
      homeEnvironment1.getSkyColor();
      System.setCurrentTimeMillis((-1674));
      homeEnvironment2.clone();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3229);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("r#<", propertyChangeListener1);
      Object object0 = new Object();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer integer0 = new Integer(2978);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "6hYTTN;lF6HCmC^<P", integer0, "6hYTTN;lF6HCmC^<P");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("r#<", propertyChangeListener0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-3454.7498F), (-444.71F), (-444.71F), 3229, (-1603.9359F), (-810.0F), 0, camera_Lens0);
      homeEnvironment0.setVideoWidth((-1080));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.clone();
      assertEquals(3229, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ENLM*((6B", resourceURLContent0, (-627.0F), 13684944);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13684944, homeTexture0, 13684944, homeTexture0, 13684944, 13684944);
      homeEnvironment0.setPhotoHeight((-1252));
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getPhotoHeight();
      HomeEnvironment.Property.values();
      HomeEnvironment.Property.values();
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertEquals((-1252), homeEnvironment0.getPhotoHeight());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(33);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight(240);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.3234094224875887
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-4393));
      homeEnvironment1.setPhotoQuality(19);
      homeEnvironment1.setPhotoQuality((-3075));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(60);
      homeEnvironment1.setPhotoHeight((-4393));
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment1.getSkyTexture();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment2.setPhotoAspectRatio(aspectRatio0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment();
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment3.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment1.getPhotoQuality();
      assertEquals(60, homeEnvironment0.getVideoFrameRate());
      assertEquals((-3075), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-4393));
      homeEnvironment1.setPhotoQuality(19);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListenerProxy0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("PHOTO_WIDTH", propertyChangeListenerProxy1);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.tools.ResourceURLContent", propertyChangeListenerProxy3);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("v:>x4tAq[ F6>L", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("4wR+v4ejOIxT:", propertyChangeListenerProxy5);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment1.clone();
      homeEnvironment1.getDrawingMode();
      assertEquals((-4393), homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(19);
      homeEnvironment0.setPhotoHeight(19);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setVideoFrameRate(19);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.clone();
      homeEnvironment1.clone();
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals(19, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, uRLContent0, (-3134.326F), 1655.6F, "$EAH?WYWOvO<");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(320, homeTexture0, 0, homeTexture0, 320, (-3134.326F));
      homeEnvironment0.getSkyTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertEquals((-3134.326F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(320, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3229);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SUBPART_SIZE_UNDER_LIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("rP<", propertyChangeListener0);
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("rP<", "rP<", uRLContent0, (-444.71F), (-1597.8403F), "rP<");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(3229, homeTexture0, 0, 3229, 1898.79F);
      FileSystemHandling.shouldAllThrowIOExceptions();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment((-754), homeTexture0, 3229, homeTexture0, (-754), 1.0F);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "rP<", homeEnvironment2, propertyChangeListenerProxy0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate(30);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment2.removePropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy0);
      homeEnvironment1.setVideoFrameRate(3);
      homeEnvironment2.getGroundColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("px1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.px1
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3229);
      homeEnvironment0.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("rP<", propertyChangeListener0);
      homeEnvironment0.setSkyColor((-1392));
      URLContent uRLContent0 = new URLContent((URL) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("rP<", propertyChangeListenerProxy0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("rP<", propertyChangeListenerProxy1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      CatalogTexture catalogTexture0 = new CatalogTexture("rP<", "rP<", uRLContent0, 1.0F, (-1.0F), "Gvo*gUd?f");
      CatalogTexture catalogTexture1 = new CatalogTexture("rP<", uRLContent0, (-1392), (-581.6F));
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-3305), homeTexture0, 33, 0, (-3305));
      homeEnvironment1.setVideoFrameRate(25);
      homeEnvironment0.getGroundColor();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("rP<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.rP<
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8836095585126564
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-4393));
      homeEnvironment1.setPhotoQuality(19);
      homeEnvironment0.setPhotoHeight(46);
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setVideoFrameRate(0);
      HomeEnvironment homeEnvironment3 = new HomeEnvironment(46, (HomeTexture) null, (-3093), (HomeTexture) null, 2136, (-4393));
      homeEnvironment0.clone();
      homeEnvironment2.clone();
      assertEquals(0, homeEnvironment2.getVideoFrameRate());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("1.5.0_16", uRLContent0, (-1.0F), (-1.0F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2838), homeTexture0, (-2838), (-2838), (-2838));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals((-2838), homeEnvironment0.getLightColor());
      assertEquals((-2838), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-2838), homeEnvironment0.getSkyColor());
      assertNotNull(homeTexture1);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2838.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 42.254F, 42.254F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("Xec>.#", "Xec>.#", resourceURLContent0, (-49.33F), 156.5762F, "OUTLINE", false);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(14, homeTexture1, 1, 14, (-1422.0826F));
      HomeTexture homeTexture2 = homeEnvironment0.getGroundTexture();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-1422.0826F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(14, homeEnvironment0.getGroundColor());
      assertEquals(14, homeEnvironment0.getLightColor());
      assertNotNull(homeTexture2);
      assertEquals(1, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "7RvXfc`?-OerW+DC", temporaryURLContent0, 906.0F, 906.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1301, homeTexture0, 1301, 19, 156.5762F);
      homeEnvironment0.setPhotoQuality(19);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(19);
      homeEnvironment0.setPhotoHeight(300);
      homeEnvironment0.getSkyTexture();
      URL uRL1 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL1);
      CatalogTexture catalogTexture1 = new CatalogTexture("", ".Handler", temporaryURLContent0, 160.0F, 4061.83F, "");
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(1301, (HomeTexture) null, 19, homeTexture1, (-3002), (-1));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(19, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(5);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      homeEnvironment0.setVideoQuality(278);
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      LinkedList<Object> linkedList3 = new LinkedList<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setPhotoHeight(46);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoFrameRate((-2992));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("ToVt@G<X894#g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.ToVt@G<X894#g
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.318927629770502
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = (-4393);
      homeEnvironment1.setSkyColor((-4393));
      homeEnvironment1.setPhotoQuality(19);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(19);
      homeEnvironment1.setVideoQuality((-2062));
      homeEnvironment0.setPhotoHeight(46);
      homeEnvironment1.getSkyTexture();
      homeEnvironment1.getVideoQuality();
      homeEnvironment1.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getPhotoAspectRatio();
      int int1 = (-7);
      homeEnvironment1.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        AspectRatio.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.AspectRatio.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.153990857548753
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(O[QEy^n");
      System.setCurrentTimeMillis(0L);
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), (HomeTexture) null, (-1), (-2143797612), (-928.265F));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor((-1));
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.spliterator();
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.getVideoAspectRatio();
      HomeEnvironment.Property.values();
      homeEnvironment0.getSkyTexture();
      Random.setNextRandom((-5065));
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.setPhotoHeight((-5065));
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getVideoWidth();
      Random.setNextRandom(0);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4149986825384553
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(67);
      homeEnvironment0.setPhotoHeight(117);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight((-581.6F));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(67);
      homeEnvironment0.setCeillingLightColor(67);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(13);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_FRAME_RATE;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("liYf?", (PropertyChangeListener) null);
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(16, (HomeTexture) null, (-2078), (HomeTexture) null, (-2078), (-1.0F));
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment2.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setVideoWidth((-2474));
      Random.setNextRandom(832);
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals((-581.6F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(67.0F, float0, 0.01F);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.4241710186205303
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-61));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(46, (HomeTexture) null, (-7), (-288), 46);
      homeEnvironment1.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom((-288));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "7{RvXfc`?-OerW+JDC", temporaryURLContent0, 906.0F, 906.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 906.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.setLightColor(2);
      homeEnvironment0.setSubpartSizeUnderLight(2);
      homeEnvironment1.setVideoWidth(0);
      int int0 = homeEnvironment1.getVideoWidth();
      assertEquals(2.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(1.7777778F, 1.7777778F, (-335L), (-1232.2F), 2705.7563F, (-879.03284F), (-1504L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList0.retainAll(linkedList2);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      homeEnvironment0.setVideoQuality(2314);
      linkedList3.add((Camera) null);
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>(linkedList3);
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera((-1.0F), (-1504L), (-335L), 2705.7563F, 3898.3276F, 1878.0F, (-335L), camera_Lens1);
      homeEnvironment0.clone();
      Camera camera2 = new Camera(1.7777778F, (-335L), 0.0F, 3817.0F, 1.7777778F, (-530L), (-530L), camera_Lens0);
      assertFalse(camera2.equals((Object)camera0));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-335L), 2026.4552F, 2705.7563F, (-335L), 2026.4552F, (-335L));
      homeEnvironment0.setPhotoQuality((-1013));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera_Lens0, "p'", camera_Lens0, homeEnvironment0);
      homeEnvironment0.setVideoFrameRate((-2141093111));
      homeEnvironment0.setPhotoHeight((-270));
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(2705.7563F, 606.03F, 2705.7563F, (-2813.89F), 2026.4552F, (-2866.0F), 0L, camera_Lens1);
      homeEnvironment0.clone();
      Random.setNextRandom((-1363));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, "7{RvXfc`?-OerW+JDC", temporaryURLContent0, 906.0F, 906.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-589), homeTexture0, 1271, homeTexture1, 1271, (-3454.7498F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getVideoWidth();
      homeEnvironment0.setLightColor(1271);
      // Undeclared exception!
      try { 
        catalogTexture0.compareTo((CatalogTexture) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.CatalogTexture", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("yo\"GWkRp|$X[!U", propertyChangeListenerProxy0);
      propertyChangeListenerProxy5.propertyChange((PropertyChangeEvent) null);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy4, "d", "", object0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy4.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("d", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-1004));
      homeEnvironment0.clone();
      assertEquals((-1004), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0080594378013763
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-830));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      AspectRatio aspectRatio1 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio1);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth((-830));
      homeEnvironment0.setCeillingLightColor(67);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setWallsAlpha(5618.0F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoWidth();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      linkedList2.forEach(consumer0);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(906.0F);
      homeEnvironment0.setCeillingLightColor(0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Unsupported aspect ratio ", propertyChangeListener0);
      Camera camera0 = new Camera((-1.0F), 0, (-1.0F), 2948.447F, (-3725.1494F), (-906.1F));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(list0, "VIDEO_FRAME_RATE", "c,#]tNS<a$", camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_FRAME_RATE", propertyChangeListenerProxy0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("rP<", propertyChangeListenerProxy1);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera1 = new Camera(3720.7F, (-1603.9359F), (-4015.5164F), (-444.71F), 1878.0F, 1878.0F, 692L, camera_Lens0);
      homeEnvironment0.clone();
      assertEquals(906.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.414789648521252
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(906.0F);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(13684944);
      homeEnvironment0.setSkyColor(1);
      homeEnvironment1.setLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment1.setSkyColor(2144641369);
      homeEnvironment1.setVideoWidth(33);
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment1.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(67);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      homeEnvironment0.clone();
      assertEquals(67, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      homeEnvironment0.setAllLevelsVisible(true);
      Camera camera0 = new Camera((-335L), 1.0F, 1.0F, 2.0F, 2705.7563F, 2026.4552F, (-1504L), camera_Lens0);
      camera0.setZ(1.0F);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      linkedList1.add(camera0);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>(linkedList0);
      Camera camera1 = new Camera((-118.30024F), (-335L), (-1816.0F), 906.0F, 2.0F, (-29.0F), 0L, camera_Lens1);
      homeEnvironment0.clone();
      Camera.Lens camera_Lens2 = Camera.Lens.NORMAL;
      Camera camera2 = new Camera((-39.0F), (-118.30024F), 2705.7563F, (-1816.0F), 2.0F, 1.3333334F, (-1504L), camera_Lens2);
      homeEnvironment0.clone();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-4393));
      homeEnvironment1.setVideoQuality((-4393));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Y", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Y", propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment1.clone();
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-1128));
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(2705.7563F, 2026.4552F, 2705.7563F, 2705.7563F, 2026.4552F, 2705.7563F, (-335L), camera_Lens1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera_Lens0, "p'", camera_Lens0, homeEnvironment0);
      homeEnvironment0.setSubpartSizeUnderLight(2705.7563F);
      homeEnvironment0.setSkyColor(3644);
      Camera camera1 = new Camera(2026.4552F, (-532.77F), (-1.0F), (-56.83F), (-1.0F), 2705.7563F, 0L, camera_Lens0);
      homeEnvironment0.clone();
      assertEquals((-1128), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "Unsupported aspect ratio ", object0, "$VALUES");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListenerProxy0);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("<N) O&P]h,a", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("?", propertyChangeListenerProxy6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(320);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.tools.temporarySubFolder", "com.eteks.sweethome3d.tools.temporarySubFolder", (Content) null, 90.0F, (-369), "com.eteks.sweethome3d.tools.temporarySubFolder");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-369), homeTexture0, (-369), homeTexture0, 1384, (-369));
      homeEnvironment0.getSkyTexture();
      assertEquals((-369), homeEnvironment0.getGroundColor());
      assertEquals((-369.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-369), homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(1384, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (String) null, resourceURLContent0, 0, 1052.0F, (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 7, homeTexture0, 7, (-1.0F));
      homeEnvironment0.getSkyTexture();
      assertEquals((-1.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(7, homeEnvironment0.getLightColor());
      assertEquals(7, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setGroundColor(67);
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-4393));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-76);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(1994091958);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(2705.7563F, 2026.4552F, 2705.7563F, 2705.7563F, 2026.4552F, 2705.7563F, (-335L), camera_Lens1);
      homeEnvironment0.setPhotoWidth((-2134033853));
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera_Lens0, "p'", camera_Lens0, homeEnvironment0);
      Camera.Lens camera_Lens2 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(2705.7563F, 606.03F, 2705.7563F, (-1.0F), 2026.4552F, (-2866.0F), 0L, camera_Lens2);
      homeEnvironment0.clone();
      assertEquals(1495568896, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2400387099547725
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoHeight((-120));
      homeEnvironment0.setPhotoWidth((-809));
      homeEnvironment0.setGroundColor((-201));
      homeEnvironment0.setLightColor((-201));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.setSkyColor((-120));
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setLightColor(13684944);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-4393));
      homeEnvironment1.setPhotoQuality(19);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("|YT-d", resourceURLContent0, 1047.3799F, 13.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(6, (HomeTexture) null, 35, (HomeTexture) null, (byte) (-34), 3248.3958F);
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.getPhotoQuality();
      homeEnvironment1.getSkyColor();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.3766667194854216
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setVideoFrameRate((-3024));
      homeEnvironment0.setVideoCameraPath(list0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha((-3024));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getVideoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(160);
      homeEnvironment0.setSkyColor(2425);
      homeEnvironment1.setSubpartSizeUnderLight(160);
      homeEnvironment0.getVideoQuality();
      URLContent uRLContent0 = new URLContent((URL) null);
      homeEnvironment1.setSubpartSizeUnderLight(1.3333334F);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment1.setVideoWidth(7);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("x|k<[^mvq7<wW", "<vPpx-:`lMd", object0, propertyChangeListenerProxy3);
      propertyChangeListenerProxy3.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListenerProxy0);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("N) O&P]h,a", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("?", propertyChangeListenerProxy6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-918.7264F));
      homeEnvironment0.clone();
      assertEquals((-918.7264F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("?qkf,wbVSLT\"qy", "?qkf,wbVSLT\"qy", temporaryURLContent0, 1.0F, 1.0F, "?qkf,wbVSLT\"qy");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 0);
      homeEnvironment0.setSkyColor(2425);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      String string0 = "";
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("4#ATW}Pf9F%EL_O", (PropertyChangeListener) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(uRL0, "", (Object) null, "?qkf,wbVSLT\"qy");
      // Undeclared exception!
      try { 
        propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(2705.7563F, 2026.4552F, 2705.7563F, 2705.7563F, 2026.4552F, 2705.7563F, (-335L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-82);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(15);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      System.setCurrentTimeMillis((-1350L));
      Random.setNextRandom((-2536));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.414222433546777
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("GROUND_COLOR", "", (Content) null, 0.0F, 0.0F, "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("GROUND_COLOR", (Content) null, 994.23114F, 994.23114F);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      homeEnvironment0.setSkyTexture(homeTexture1);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getDrawingMode();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("jar", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight((-3227));
      homeEnvironment0.getLightColor();
      homeEnvironment0.setSkyColor((-3227));
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-3227), homeEnvironment0.getPhotoHeight());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("Wt<N*?", (String) null, (Content) null, 4946.06F, 0, "0*]p ga~BZ", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 3475, 0);
      homeEnvironment0.setPhotoQuality((-4407));
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate(632);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(12, homeTexture0, 12, homeTexture0, (-4407), 0);
      homeEnvironment1.setPhotoHeight(300);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      AspectRatio aspectRatio0 = homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.getSkyTexture();
      HomeEnvironment.DrawingMode.values();
      homeEnvironment1.getGroundTexture();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment1.getPhotoAspectRatio());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      CatalogTexture catalogTexture0 = new CatalogTexture((String) null, (Content) null, 0L, 864.1632F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2821, homeTexture0, 1864, 1864, 899.0F);
      homeEnvironment0.getGroundTexture();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("CEILING_LIGHT_COLOR", "", resourceURLContent0, (-1108), 219.1F, "J4", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "J4", resourceURLContent0, (-2754.6628F), (-1108), "", false);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1108), homeTexture0, (-1108), homeTexture0, (-2703), 2.0F);
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1108), homeEnvironment0.getGroundColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(2.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1108), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-2703), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 982;
      homeEnvironment0.setPhotoQuality(982);
      homeEnvironment0.setPhotoHeight(1213);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-70);
      byteArray0[2] = (byte) (-67);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-60);
      byteArray0[6] = (byte)10;
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoAspectRatio();
      // Undeclared exception!
      try { 
        AspectRatio.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.AspectRatio.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.2211875359535505
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(906.0F);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality(0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(1);
      homeEnvironment1.setLightColor(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2314, (HomeTexture) null, 2314, 2314, 2314);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte) (-82);
      byteArray0[3] = (byte) (-120);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte)24;
      byteArray0[7] = (byte)64;
      byteArray0[8] = (byte)53;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_CAMERA_PATH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", propertyChangeListenerProxy0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(13);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate((-1040));
      homeEnvironment0.setVideoFrameRate(2314);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("M$;>Q>n[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.M$;>Q>n[
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.286318134992075
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setCeillingLightColor(724);
      homeEnvironment1.setSkyColor(724);
      homeEnvironment0.setPhotoQuality(8);
      homeEnvironment1.setCeillingLightColor(724);
      homeEnvironment1.setVideoFrameRate(19);
      homeEnvironment0.setPhotoHeight(5);
      homeEnvironment1.setPhotoHeight(13);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_16_9;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoWidth(25);
      assertEquals(AspectRatio.RATIO_16_9, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("('ZQvH=CIk1Zy*f#", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy3);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy5);
      propertyChangeListenerProxy9.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy9);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.5F, 1072.2F, (-1019.7633F), 1072.2F, 160.0F, 160.0F, 1135L, camera_Lens0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2145949051), (HomeTexture) null, (-2678), (HomeTexture) null, 1136, 297.92133F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-2145949051), homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals((-2678), homeEnvironment1.getSkyColor());
      assertEquals(297.92133F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(1136, homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.94218229742502
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", (Content) null, 0, 759.07196F, "", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "[T0sunQ?:\"'VH3:V$h", (Content) null, 0, 0, "", true);
      catalogTexture0.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, (-459), 759.07196F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(46);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.ALL_LEVELS_VISIBLE;
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment1.removePropertyChangeListener(homeEnvironment_Property0, (PropertyChangeListener) null);
      homeEnvironment1.getVideoHeight();
      homeEnvironment1.setAllLevelsVisible(false);
      homeEnvironment0.setGroundColor(1879);
      homeEnvironment0.getLightColor();
      homeEnvironment1.setVideoCameraPath((List<Camera>) null);
      assertEquals(1879, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(2705.7563F, 2026.4552F, 2705.7563F, 2705.7563F, 2026.4552F, 2705.7563F, (-335L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.offerLast(camera0);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>(linkedList0);
      homeEnvironment0.setVideoCameraPath(linkedList1);
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getSkyTexture();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray1 = HomeEnvironment.DrawingMode.values();
      assertFalse(homeEnvironment_DrawingModeArray1.equals((Object)homeEnvironment_DrawingModeArray0));
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor(13427964);
      homeEnvironment0.setSkyColor((-1));
      homeEnvironment0.setVideoWidth(7);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getDrawingMode();
      homeEnvironment0.getVideoAspectRatio();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("FJrtz*[y~\"'O", propertyChangeListenerProxy1);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy3, "=okW)_9P'qs}S", propertyChangeListenerProxy1, object0);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("t5M3sPNis(biMFk[", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("O2L~~|3_d,$n5", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(13, (HomeTexture) null, 1, 0, (-2094.175F));
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      assertEquals(13684944, homeEnvironment2.getCeillingLightColor());
      assertEquals((-2094.175F), homeEnvironment2.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment2.getPhotoHeight());
      assertEquals(13, homeEnvironment2.getGroundColor());
      assertNotSame(homeEnvironment2, homeEnvironment1);
      assertEquals(25, homeEnvironment2.getVideoFrameRate());
      assertTrue(homeEnvironment2.isObserverCameraElevationAdjusted());
      assertEquals(1, homeEnvironment2.getSkyColor());
      assertEquals(400, homeEnvironment2.getPhotoWidth());
      assertEquals(240, homeEnvironment2.getVideoHeight());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("7{RvXfc`?-OerW+JDC", temporaryURLContent0, 0, (-1.0F), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", "OUTLINE", temporaryURLContent0, 156.5762F, 163.89679F, (String) null, true);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture("s$bT+CU;LV: Sq:", temporaryURLContent0, (-49.33F), 0, true);
      catalogTexture2.compareTo(catalogTexture0);
      catalogTexture1.setCategory((TexturesCategory) null);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(15, homeTexture1, 0, homeTexture0, 0, 3646.0F);
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("s$bT+CU;LV: Sq:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.s$bT+CU;LV: Sq:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 42.254F, 42.254F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("com.eteks.sweethome3d.model.HomeEnvironment", "", resourceURLContent0, 6705.626F, 156.5762F, "", false);
      catalogTexture0.getCategory();
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", resourceURLContent0, (-474.1F), 2095.3489F, "DRAWING_MODE");
      catalogTexture1.compareTo(catalogTexture2);
      catalogTexture1.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 1611, homeTexture0, 0, 3882.12F);
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode.values();
      System.setCurrentTimeMillis(3970L);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("ME$L}=Qd", (String) null, temporaryURLContent0, 906.0F, 0.0F, "7{RvXfc`?-OerW+JDC");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("K;1d<x*Z`y", temporaryURLContent0, 0, 906.0F, true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, homeTexture1, 400, homeTexture0, 6, 906.0F);
      homeEnvironment0.clone();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setLightColor(400);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "Xuclz*bP`QY`PP", temporaryURLContent0, 0.0F, 0.0F, "ME$L}=Qd");
      catalogTexture2.setCategory((TexturesCategory) null);
      // Undeclared exception!
      try { 
        catalogTexture2.compareTo(catalogTexture0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.RuleBasedCollator", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("('ZQvH=CIk1Zy*f#", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("@;cC>3m6QZ\"5", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy3);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Uvq!x6Tni", propertyChangeListenerProxy0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("t}+]JT.T#Jvt2;kRp", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3229);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.setGroundColor(0);
      homeEnvironment0.getVideoQuality();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getGroundColor();
      System.setCurrentTimeMillis(3229);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("?qkf,wbVSLT\"qy", "?qkf,wbVSLT\"qy", temporaryURLContent0, 1.0F, 1.0F, "?qkf,wbVSLT\"qy");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 0);
      homeEnvironment0.setGroundColor(14);
      assertEquals(14, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoHeight(8);
      homeEnvironment0.getGroundTexture();
      assertEquals(8, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 42.254F, 42.254F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, "6X_12X", resourceURLContent0, 2.0F, (-728.0F), "Xec>.#", false);
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture("Xec>.#", resourceURLContent0, 1022.4F, 156.5762F, true);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, 1261, (-1), 1261);
      homeEnvironment0.clone();
      Random.setNextRandom((-148));
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.0257505895352663
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setPhotoWidth(13);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.getSkyColor();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment1.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode1);
      homeEnvironment0.setVideoFrameRate(6);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("PHOTO_ASPECT_RATIO");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.PHOTO_ASPECT_RATIO
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.1004790618760354
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setVideoFrameRate((-448));
      homeEnvironment0.setPhotoHeight((-448));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setVideoWidth(463);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoWidth(70);
      assertEquals(AspectRatio.RATIO_3_2, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.1572993769863045
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setPhotoHeight((-120));
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setGroundColor((-201));
      homeEnvironment0.setLightColor((-201));
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSkyColor((-120));
      homeEnvironment0.setPhotoWidth(13684944);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.getCeillingLightColor();
      homeEnvironment0.setLightColor(13684944);
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals((-120), homeEnvironment0.getPhotoHeight());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(67, (HomeTexture) null, 67, 67, 67);
      homeEnvironment0.setCeillingLightColor(67);
      homeEnvironment0.setPhotoHeight(109);
      homeEnvironment0.setSubpartSizeUnderLight((-581.6F));
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha((-581.6F));
      homeEnvironment0.setCeillingLightColor((-814));
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoQuality((-814));
      homeEnvironment0.getLightColor();
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSkyColor(67);
      homeEnvironment1.setLightColor(12);
      homeEnvironment0.setSubpartSizeUnderLight((-581.6F));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment1.setSkyColor(400);
      homeEnvironment1.setVideoWidth((-3073));
      homeEnvironment0.getCeillingLightColor();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-2305), int0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.098389197717206
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setWallsAlpha(0.0F);
      homeEnvironment1.setGroundColor(3);
      homeEnvironment1.getSubpartSizeUnderLight();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy(">S", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, ">S", object0, homeEnvironment_Property0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setPhotoWidth((-193));
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf(">S");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.>S
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(3229);
      homeEnvironment0.getVideoQuality();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("rP<", propertyChangeListener1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("rP<", propertyChangeListener0);
      Integer integer0 = new Integer(2579);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "", propertyChangeListenerProxy0, integer0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "", object0, homeEnvironment0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      homeEnvironment0.setPhotoWidth(3229);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-34);
      byteArray0[1] = (byte) (-34);
      byteArray0[2] = (byte) (-34);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera((-1.0F), 2705.7563F, (-879.03284F), 2.0F, 3918.4812F, 2.0F, (-336L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      LinkedList<Object> linkedList3 = new LinkedList<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList3.forEach(consumer0);
      linkedList0.retainAll(linkedList3);
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      LinkedList<Camera> linkedList5 = new LinkedList<Camera>(linkedList4);
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      homeEnvironment0.getPhotoAspectRatio();
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio VIEW_3D_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("('ZQvH=CIk1Zy*f#", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy3);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy5);
      PropertyChangeListenerProxy propertyChangeListenerProxy9 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy5);
      propertyChangeListenerProxy9.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy10 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy9);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-3876));
      homeEnvironment0.clone();
      assertEquals((-3876), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("", resourceURLContent0, 42.254F, 42.254F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture1 = new CatalogTexture((String) null, "6X_12X", resourceURLContent0, 2.0F, (-728.0F), "Xec>.#", false);
      catalogTexture1.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      CatalogTexture catalogTexture2 = new CatalogTexture("Xec>.#", resourceURLContent0, 1022.4F, 156.5762F, true);
      catalogTexture0.compareTo(catalogTexture2);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      System.setCurrentTimeMillis(0L);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1), homeTexture0, 1762, homeTexture0, (-2146523575), 1.7777778F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(1762, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-1), homeEnvironment1.getGroundColor());
      assertEquals((-2146523575), homeEnvironment1.getLightColor());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1.7777778F, homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("('ZQvH=CIk1Zy*f#", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Integer integer0 = new Integer(400);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy2, "", integer0, "");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy3);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      propertyChangeListenerProxy2.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("t}+]JT.T#Jvt2;kRp", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.4382328403367364
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setVideoFrameRate((-3024));
      homeEnvironment0.setVideoCameraPath(list0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setWallsAlpha(180.43338F);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setSkyColor(11053224);
      homeEnvironment0.getVideoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(160);
      homeEnvironment0.setSkyColor((-3024));
      homeEnvironment1.setSubpartSizeUnderLight(160);
      homeEnvironment0.getVideoQuality();
      homeEnvironment1.setPhotoQuality(0);
      homeEnvironment1.getSubpartSizeUnderLight();
      homeEnvironment1.setWallsAlpha((-984.0617F));
      homeEnvironment0.getDrawingMode();
      assertEquals(180.43338F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(1.3333334F);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera0 = new Camera(1.7777778F, 3833.04F, 3833.04F, 941.0F, 177.4789F, (-1504L), (-336L), camera_Lens0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Object> linkedList2 = new LinkedList<Object>();
      linkedList0.retainAll(linkedList2);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      linkedList3.add(camera0);
      LinkedList<Camera> linkedList4 = new LinkedList<Camera>(linkedList3);
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(0.0F, 3898.3276F, (-3122.17F), 0.0F, 1878.0F, (-1490.2F), (-1504L), camera_Lens1);
      Camera.Lens camera_Lens2 = Camera.Lens.PINHOLE;
      Camera camera2 = new Camera((-1504L), 1.7777778F, (-1.0F), (-853.0F), 1013.3328F, 2705.7563F, (-530L), camera_Lens2);
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (String) null, temporaryURLContent0, 906.0F, 0L, "mB^K{t/D[)");
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("m3<kxv\"xy+HD", (PropertyChangeListener) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("mB^K{t/D[)", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0L);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.0983891977172062
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(256);
      homeEnvironment0.setSkyColor(256);
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate(3512);
      homeEnvironment0.setSubpartSizeUnderLight((-1398.3805F));
      homeEnvironment0.getVideoQuality();
      URLContent uRLContent0 = new URLContent((URL) null);
      homeEnvironment0.setPhotoWidth(450);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", uRLContent0, (-1398.3805F), 256, "S,!VD/sb}&_\"Xy", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setWallsAlpha((-1398.3805F));
      assertEquals(256, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-1.0F));
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(2705.7563F, 2026.4552F, 2705.7563F, 2705.7563F, 2026.4552F, 2705.7563F, (-335L), camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.SPHERICAL;
      Camera camera1 = new Camera(2705.7563F, 606.03F, 2705.7563F, (-1.0F), 2026.4552F, (-2866.0F), 0L, camera_Lens1);
      assertEquals(Camera.Lens.SPHERICAL, camera1.getLens());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("<vPpx-:`lMd", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("('ZQvH=CIk1Zy*f#", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy3 = new PropertyChangeListenerProxy("@;cC>3m6QZ\"5", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy4 = new PropertyChangeListenerProxy("{P|Rce", propertyChangeListenerProxy3);
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy4.propertyChange((PropertyChangeEvent) null);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy5 = new PropertyChangeListenerProxy("Uvq!x6Tni", propertyChangeListenerProxy0);
      propertyChangeListenerProxy3.propertyChange((PropertyChangeEvent) null);
      PropertyChangeListenerProxy propertyChangeListenerProxy6 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy2);
      PropertyChangeListenerProxy propertyChangeListenerProxy7 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy8 = new PropertyChangeListenerProxy("t}+]JT.T#Jvt2;kRp", propertyChangeListenerProxy3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      URL uRL0 = MockURL.getFtpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("<vPpx-:`lMd", "@;cC>3m6QZ\"5", uRLContent0, 194.52061F, 194.52061F, "");
      homeEnvironment0.setPhotoQuality((-494));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("Xec>.#", "Xec>.#", uRLContent0, 1.0F, 1584, "Xec>.#");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1584, homeTexture0, (-1177), 53, 2095.3489F);
      homeEnvironment0.setGroundTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyTexture(homeTexture0);
      homeEnvironment0.clone();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("_s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property._s
         //
         verifyException("java.lang.Enum", e);
      }
  }
}
