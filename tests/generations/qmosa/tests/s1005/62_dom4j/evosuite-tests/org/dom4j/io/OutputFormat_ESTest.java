/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 18:43:21 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-xhtml>%X^MSgU}";
      stringArray0[1] = "-newlines";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "-omitEncoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[13];
      stringArray0[0] = "-suppressDeclaration";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8150016776904785
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator("w;\"");
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-trimText";
      stringArray0[2] = ">C%'!ErX.F";
      stringArray0[3] = "-expandEmpty-expandEmptyVpS UJd";
      stringArray0[4] = "w;\"";
      stringArray0[5] = "-expandEmptyVpS U:r";
      stringArray0[6] = "-newlines";
      stringArray0[7] = "-expan~Empty";
      stringArray0[8] = "-trimText";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.getLineSeparator();
      assertEquals("w;\"", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.732340976816887
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      outputFormat0.setIndent("-expan~Empty");
      String[] stringArray0 = new String[9];
      stringArray0[0] = ">%X^SgU}";
      stringArray0[1] = "-xhtml>%X^MSgU}";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-expan~Empty";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "-expan~Empty";
      stringArray0[7] = ">%X^SgU}";
      stringArray0[8] = ">%X^SgU}";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("-expan~Empty", outputFormat0.getIndent());
      
      outputFormat0.setIndent(false);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      OutputFormat outputFormat1 = new OutputFormat();
      OutputFormat outputFormat2 = new OutputFormat("B1f8:gCU<RN\"NnaYfZd", false, stringArray0[5]);
      outputFormat1.getLineSeparator();
      String[] stringArray1 = new String[7];
      stringArray1[0] = "B1f8:gCU<RN\"NnaYfZd";
      stringArray1[2] = "B1f8:gCU<RN\"NnaYfZd";
      stringArray1[3] = "-encoding";
      stringArray1[4] = "-xhtml>%X^MSgU}";
      stringArray1[5] = "-xhtml>%X^MSgU}";
      stringArray1[6] = ">%X^SgU}";
      outputFormat1.parseOptions(stringArray1, 0);
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isTrimText());
      
      outputFormat2.getEncoding();
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isXHTML());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isNewlines());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isPadText());
      assertTrue(outputFormat3.isTrimText());
      
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat4.isPadText());
      assertEquals("  ", outputFormat4.getIndent());
      assertEquals("UTF-8", outputFormat4.getEncoding());
      assertTrue(outputFormat4.isNewlines());
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
      assertTrue(outputFormat4.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8156946783834793
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-expandEmgtyVpSrUJd");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmgtyVpSrUJd";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-padText");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-padText");
      OutputFormat outputFormat1 = new OutputFormat("00vPn;J^dkS", true);
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-padText";
      stringArray1[1] = "-padText";
      stringArray1[2] = "-padText";
      stringArray1[3] = "00vPn;J^dkS";
      stringArray0[5] = "-iUdent";
      stringArray1[5] = "-padText";
      stringArray1[6] = "-padText";
      stringArray1[7] = "00vPn;J^dkS";
      stringArray1[8] = "-expandEmgtyVpSrUJd";
      outputFormat1.parseOptions(stringArray1, 0);
      outputFormat0.setLineSeparator("-padText");
      outputFormat1.setLineSeparator("-expandEmgtyVpSrUJd");
      outputFormat1.setLineSeparator("-iUdent");
      outputFormat1.setLineSeparator("m\"-EJ/>!cv(t{2-D8II");
      outputFormat1.getLineSeparator();
      assertEquals("m\"-EJ/>!cv(t{2-D8II", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.061704534698107
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator");
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[18];
      stringArray0[1] = "-lineSeparator";
      outputFormat0.setLineSeparator("-hml>4K^MSgU}");
      outputFormat0.setLineSeparator(stringArray0[0]);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7634117542118015
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-xhtml>%X^MSgU}";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-expan~Empty";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("-iUdent");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      assertEquals("-iUdent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5350813079469847
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("wfC");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-expandEmptyVpS UJd");
      outputFormat0.setLineSeparator("-indentSize");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-indentSize";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-xhtml";
      stringArray0[5] = "-omitEncoding";
      stringArray0[6] = "-iUdent";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-indentSize\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      assertEquals("UTF-8", outputFormat0.getEncoding());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      outputFormat0.setEncoding("");
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      assertEquals("", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7039853522988835
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setLineSeparator("wv");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("wv");
      outputFormat0.setLineSeparator("wv");
      outputFormat0.setLineSeparator("-indent");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-indent";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-expandEmptyVpS UJd";
      stringArray0[3] = "wv";
      stringArray0[4] = "wv";
      stringArray0[5] = null;
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      assertEquals("-indent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("-expandEmptyVpS UJd");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expandEmptyVpS UJd";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0987996145617602
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getNewLineAfterNTags();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = null;
      stringArray0[2] = "";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(false);
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3740076486025066
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator("w;\"");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("w;\"");
      outputFormat0.setLineSeparator("-iUdent");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "w;\"";
      stringArray0[1] = "-iUdent";
      stringArray0[2] = null;
      stringArray0[3] = "-xhtml-expan~Empty";
      outputFormat0.setAttributeQuoteCharacter('\"');
      stringArray0[4] = "-iUdent";
      stringArray0[5] = "w;\"";
      stringArray0[6] = "w;\"";
      stringArray0[7] = "w;\"";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = new OutputFormat(stringArray0[2]);
      outputFormat0.setIndent("RHtv{HC N>\"sr/sWP");
      assertEquals("-iUdent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "AOd_wj";
      stringArray0[1] = "AOd_wj";
      stringArray0[2] = "AOd_wj";
      stringArray0[3] = "AOd_wj";
      stringArray0[4] = "AOd_wj";
      stringArray0[5] = "A";
      stringArray0[6] = "-xhtmlUTF-8";
      OutputFormat outputFormat1 = new OutputFormat("g<K+%n^ZpsM", true, "A");
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0894379124341005
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setNewLineAfterNTags((-547461640));
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-encoding";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-expan~Empty";
      stringArray0[4] = null;
      stringArray0[5] = null;
      stringArray0[6] = "-expan~Empty";
      stringArray0[7] = ">%X^SgU}";
      stringArray0[8] = ">%X^SgU}";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getLineSeparator();
      assertEquals((-547461640), outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6511351440615436
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator("w;\"");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("w;\"");
      outputFormat0.setLineSeparator("w;\"");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.getNewLineAfterNTags();
      boolean boolean0 = false;
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      // Undeclared exception!
      try { 
        outputFormat2.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6273392066027328
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-linSeparator";
      stringArray0[1] = "-linSeparator";
      outputFormat0.setLineSeparator("S~H,+c/r[-]J@B");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('$');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ($)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "AOd_wj";
      stringArray0[2] = "AOd_wj";
      stringArray0[3] = "AOd_wj";
      stringArray0[4] = "AOd_wj";
      stringArray0[5] = stringArray0[1];
      stringArray0[6] = "-xhtHlUTF-8";
      stringArray0[7] = "AOd_wj";
      stringArray0[8] = "AOd_wj";
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("\n");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[0];
      outputFormat0.setXHTML(true);
      String[] stringArray1 = new String[0];
      outputFormat0.parseOptions(stringArray1, 4);
      outputFormat0.setIndent("\n");
      outputFormat0.isPadText();
      outputFormat0.setIndent("-trimText");
      assertEquals("-trimText", outputFormat0.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator("wfC");
      outputFormat0.setLineSeparator("wfC");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setLineSeparator("wfC");
      outputFormat0.setLineSeparator("wfC");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-iUdent";
      stringArray0[0] = "-iUdent";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setEncoding((String) null);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getLineSeparator();
      assertEquals("wfC", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.76134136083706
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-encoding";
      stringArray0[4] = "-xhtml>%X^MSgU}";
      stringArray0[2] = "-xhtml>%X^MSgU}";
      stringArray0[3] = "-expan~Empty";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("-iUdent");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.getLineSeparator();
      assertEquals("-iUdent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2774737549423403
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setLineSeparator("-iUdent");
      outputFormat0.setNewLineAfterNTags(1677);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator((String) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-iUdent";
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.getLineSeparator();
      assertEquals(1677, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.003224567265651
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent("r! kS?PTquD");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.getEncoding();
      assertFalse(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat1.setIndentSize(1812);
      outputFormat1.setIndentSize(1812);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setOmitEncoding(false);
      outputFormat1.getIndent();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("\n");
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[0];
      outputFormat0.setXHTML(true);
      outputFormat0.setIndent("\n");
      boolean boolean0 = outputFormat0.isPadText();
      assertTrue(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(false);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtml>%X^MSgU}";
      stringArray0[1] = "-xhtml>%X^MSgU}";
      OutputFormat outputFormat0 = new OutputFormat("%");
      outputFormat0.getAttributeQuoteCharacter();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
      assertEquals("%", outputFormat0.getIndent());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.24319204066033
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator((String) null);
      outputFormat1.setEncoding(",p77tY");
      outputFormat0.setTrimText(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewlines(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setIndentSize((-1862));
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.isExpandEmptyElements();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1862));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1862
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      assertEquals("  ", outputFormat0.getIndent());
      
      outputFormat0.setIndent("");
      outputFormat0.setIndent("E lh:|Ya|q0z<`g@e");
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize((-1));
      String[] stringArray0 = new String[3];
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getEncoding();
      String string0 = outputFormat0.getEncoding();
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(583);
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.setPadText(true);
      outputFormat0.setIndent("E lh:|Ya|q0z<`g@e");
      outputFormat0.setIndent("E lh:|Ya|q0z<`g@e");
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("I,;");
      outputFormat0.isNewlines();
      outputFormat0.setEncoding("I,;");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "I,;";
      stringArray0[1] = "I,;";
      stringArray0[2] = "I,;";
      stringArray0[3] = "I,;";
      stringArray0[4] = "Invalid attribute quote character (";
      stringArray0[5] = "I,;";
      stringArray0[6] = "I,;";
      stringArray0[7] = "I,;";
      stringArray0[8] = "I,;";
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(false);
      outputFormat0.isTrimText();
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray1 = new String[2];
      stringArray1[0] = "I,;";
      int int0 = (-8);
      outputFormat0.setSuppressDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-8));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -8
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.292630904002118
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize((-2560));
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags((-2560));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setPadText(false);
      outputFormat0.setIndentSize(1733);
      outputFormat0.isTrimText();
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.getLineSeparator();
      outputFormat0.isPadText();
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat2.setOmitEncoding(true);
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[5];
      stringArray0[1] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "\n";
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtml-xhtml>%X^MSgU}";
      stringArray0[1] = "u'";
      outputFormat0.setNewlines(true);
      stringArray0[2] = "r";
      stringArray0[3] = "-entdinz";
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.9299041669155916
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndentSize((-137));
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent("7Zwe:o");
      outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("7Zwe:o", outputFormat0.getIndent());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertFalse(outputFormat1.isOmitEncoding());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setXHTML(true);
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(false);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "ytBF^m|-X'uzr@";
      stringArray0[0] = "e43l]i";
      stringArray0[2] = "ytBF^m|-X'uzr@";
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("D]FC!XrQae,6,Zcq8G", false, "");
      outputFormat0.setExpandEmptyElements(false);
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isPadText());
      assertEquals("D]FC!XrQae,6,Zcq8G", outputFormat0.getIndent());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("(`}b$lHZ}UkQpnD!(E", false, "-newlines");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtlH%%^MgU}";
      stringArray0[1] = "cpvU<sg}>]jT^";
      stringArray0[2] = "OM)!F,M/M";
      stringArray0[3] = "-xhtlH%%^MgU}";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1285486053));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1285486053
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.6530719764631248
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setLineSeparator("-expandEmpty");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.getLineSeparator();
      outputFormat0.getIndent();
      outputFormat1.isNewlines();
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setIndent("");
      assertEquals("-expandEmpty", outputFormat1.getLineSeparator());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      outputFormat0.setNewlines(true);
      outputFormat0.isNewlines();
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1113489258));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "ytBFm|-Xu\r6";
      stringArray0[0] = "e43l]i";
      stringArray0[2] = "0e f^'bmqRosI";
      outputFormat0.parseOptions(stringArray0, 0);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "-xhtmlUTF-8";
      stringArray0[2] = "";
      outputFormat0.parseOptions(stringArray0, 3825);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray1 = new String[3];
      stringArray1[0] = "";
      stringArray1[1] = "-xhtml>%X^MSgU}";
      stringArray1[2] = "-xhtmlUTF-8";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent((String) null);
      outputFormat0.setNewLineAfterNTags((-1794256718));
      outputFormat0.setLineSeparator("\n");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      stringArray0[4] = "\n";
      stringArray0[5] = "\n";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1794256718));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1794256718
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "7] jY$\"";
      stringArray0[2] = "";
      stringArray0[3] = "-Z$iCESudmf";
      stringArray0[4] = "hXJA?CV\"ccPwBPF";
      stringArray0[5] = "-expandEmpty-entoding";
      stringArray0[6] = "g(vcJKFnsG~*O=A";
      stringArray0[7] = "58`'.eP}rtIB#M";
      stringArray0[8] = "-xhtml-entoding";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1931));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1931
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("AOd_wj", outputFormat0.getIndent());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[9];
      stringArray0[1] = "AOd_wj";
      stringArray0[2] = "AOd_wj";
      stringArray0[1] = "AOd_wj";
      stringArray0[4] = "AOd_wj";
      stringArray0[5] = "A";
      stringArray0[6] = "AOd_wj";
      OutputFormat outputFormat1 = new OutputFormat("g<K+%n^ZpsM", true, "A");
      outputFormat1.setOmitEncoding(false);
      assertEquals("A", outputFormat1.getEncoding());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isPadText());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("g<K+%n^ZpsM", outputFormat1.getIndent());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertFalse(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isSuppressDeclaration());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.9315813157625517
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat2.setLineSeparator((String) null);
      outputFormat2.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent("?T:47<Ub`fq");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "?T:47<Ub`fq";
      stringArray0[1] = "?T:47<Ub`fq";
      stringArray0[2] = "6Yw%i";
      stringArray0[3] = "?T:47<Ub`fq";
      stringArray0[4] = "?T:47<Ub`fq";
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4549));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4549
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.3099359008836196
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("=`MVZi");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "=`MVZi";
      outputFormat0.setIndent("");
      outputFormat0.setEncoding("org.dom4j.io.OutputFormat");
      outputFormat0.setLineSeparator("[/-qqO=v");
      OutputFormat outputFormat1 = new OutputFormat("", false);
      outputFormat1.setPadText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat1.isPadText();
      outputFormat1.setOmitEncoding(false);
      outputFormat1.isOmitEncoding();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent(".B.@Q51M4c|N\")");
      OutputFormat.createPrettyPrint();
      int int0 = outputFormat0.parseOptions(stringArray0, 39);
      assertEquals("org.dom4j.io.OutputFormat", outputFormat0.getEncoding());
      assertEquals(39, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, "oRUoT!&kCHUT Aw");
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('n');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (n)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.4048159937786893
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("E lh:|Ya|q0z<`g@e");
      outputFormat0.setIndent("E lh:|Ya|q0z<`g@e");
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.9299041669155916
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setLineSeparator((String) null);
      outputFormat0.setIndent(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat1.setIndent("?T:47<Ub`fq");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "?T:47<Ub`fq";
      stringArray0[1] = "?T:47<Ub`fq";
      stringArray0[2] = "6Yw%i";
      stringArray0[3] = "?T:47<Ub`fq";
      outputFormat0.setSuppressDeclaration(true);
      stringArray0[4] = "?T:47<Ub`fq";
      stringArray0[5] = null;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-4549));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4549
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.886399031304604
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("AOd_wj");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "AOd_wj";
      outputFormat0.setIndent("");
      outputFormat0.setEncoding("org.dom4j.io.OutputFormat");
      outputFormat0.setLineSeparator("[/-qqO=v");
      OutputFormat outputFormat1 = new OutputFormat("", true);
      outputFormat1.setPadText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat1.isPadText();
      outputFormat1.setOmitEncoding(true);
      outputFormat1.isOmitEncoding();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setIndent(".B.@Q51M4c|N\")");
      assertEquals(".B.@Q51M4c|N\")", outputFormat1.getIndent());
  }
}
