/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 16:35:36 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0709763739725617
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(760, threadPoolExecutor_AbortPolicy0);
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, (long) 760, timeUnit0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) scheduledFuture0);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object2);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Callable<String> callable1 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable1).call();
      scheduledThreadPoolExecutor0.schedule(callable1, (long) 258, timeUnit0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      Predicate<Object> predicate4 = Predicate.isEqual((Object) null);
      predicate2.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate2);
      Predicate<Object> predicate6 = predicate1.and(predicate0);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) scheduledThreadPoolExecutor0);
      predicate6.and(predicate1);
      Predicate<Object> predicate8 = predicate4.and(predicate7);
      predicate7.or(predicate2);
      fBCachedFetcher0.setFetchSize((-2191));
      predicate2.negate();
      predicate5.negate();
      Predicate<Object> predicate9 = predicate8.or(predicate6);
      predicate9.negate();
      fBCachedFetcher0.first();
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals((-2191), int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.hasArgument(100);
      databaseParameterBufferImp0.removeExtensionParams();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      GDSException gDSException0 = new GDSException(335544726, 16381);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.addWarning(gDSException0);
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp2 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp4 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp5.deepCopy();
      isc_db_handle_impl0.setProtocol((-1242));
      databaseParameterBufferImp3.deepCopy();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp5, isc_db_handle_impl0, (GDSHelper.GDSHelperErrorListener) null);
      GDSException gDSException1 = new GDSException("");
      isc_db_handle_impl0.addWarning(gDSException0);
      GDSException gDSException2 = new GDSException(95, (-1165));
      gDSException1.getNext();
      isc_db_handle_impl0.addWarning(gDSException1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((-1));
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.3822194921698756
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp5.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp9 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp10 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp11 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp12 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp13 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp14 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp15 = (org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp)databaseParameterBufferImp14.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp16 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp17 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp18 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp19 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp13.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp20 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp21 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBuffer0.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp22 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp23 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp24 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp15.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp25 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp26 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isEmpty());
      
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.455588227124269
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute(55);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)17;
      byteArray2[1] = (byte)44;
      byteArray2[2] = (byte) (-60);
      byteArray2[3] = (byte) (-81);
      byteArray2[4] = (byte) (-1);
      byteArray2[5] = (byte)2;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte) (-1);
      byteArray4[2] = (byte)17;
      byteArray4[3] = (byte)17;
      byteArray4[4] = (byte)17;
      byteArray4[5] = (byte)44;
      byteArray4[6] = (byte) (-60);
      byteArray4[7] = (byte) (-60);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-60);
      byteArray5[1] = (byte)2;
      byteArray5[2] = (byte)2;
      byteArray5[3] = (byte) (-60);
      byteArray5[4] = (byte) (-1);
      byteArray5[5] = (byte) (-20);
      byteArray5[6] = (byte)2;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte) (-81);
      byteArray6[1] = (byte)44;
      byteArray6[2] = (byte) (-20);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[8];
      byteArray7[0] = (byte) (-60);
      byteArray7[1] = (byte)48;
      byteArray7[2] = (byte) (-114);
      byteArray7[3] = (byte) (-1);
      byteArray7[4] = (byte)44;
      byteArray7[5] = (byte)17;
      byteArray7[6] = (byte)44;
      byteArray7[7] = (byte)17;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[9];
      byteArray8[0] = (byte) (-81);
      byteArray8[1] = (byte)44;
      byteArray8[2] = (byte)44;
      byteArray8[3] = (byte)48;
      byteArray8[4] = (byte)57;
      byteArray8[5] = (byte)17;
      byteArray8[6] = (byte) (-60);
      byteArray8[7] = (byte) (-114);
      byteArray8[8] = (byte) (-1);
      byteArray0[7] = byteArray8;
      linkedList0.offerFirst(byteArray0);
      fBCachedFetcher1.relative((-1668));
      fBCachedFetcher0.last();
      fBCachedFetcher0.previous();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_db_handle_impl isc_db_handle_impl0 = (isc_db_handle_impl)javaGDSImpl0.createIscDbHandle();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = (DatabaseParameterBufferImp)javaGDSImpl0.createDatabaseParameterBuffer();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl1, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      GDSException gDSException0 = new GDSException((-1668));
      gDSException0.getSuppressed();
      isc_db_handle_impl0.addWarning(gDSException0);
      isc_db_handle_impl0.getTransactions();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) fBCachedFetcher2);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.negate();
      // Undeclared exception!
      try { 
        fBCachedFetcher2.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.665881510156654
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute(143);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      linkedList0.add((byte[][]) null);
      FBManagedConnectionFactory fBManagedConnectionFactory0 = new FBManagedConnectionFactory();
      FBManagedConnectionFactory fBManagedConnectionFactory1 = fBManagedConnectionFactory0.canonicalize();
      assertSame(fBManagedConnectionFactory0, fBManagedConnectionFactory1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = fBResultSet0.row;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      delayQueue0.poll(3103L, timeUnit0);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      predicate4.and(predicate3);
      predicate1.negate();
      Predicate.isEqual((Object) null);
      predicate1.negate();
      predicate0.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.476832555600588
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      linkedList0.add((byte[][]) null);
      NativeGDSImpl nativeGDSImpl0 = null;
      try {
        nativeGDSImpl0 = new NativeGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7384015828774935
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher1.isAfterLast();
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.last();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.045411849198942
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.relative(141);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.previous();
      fBCachedFetcher1.relative((-1054));
      fBCachedFetcher1.setFetchSize(141);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher1.isAfterLast();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher1.getFetchSize();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4955170051907487
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createIscDbHandle();
      databaseParameterBufferImp0.removeArgument(55);
      GDSException gDSException0 = new GDSException(55, 55);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.addWarning(gDSException0);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList2, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[9][7];
      byteArray0[0] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[5] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[6] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[7] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[8] = gDSHelper0.BLOB_LENGTH_REQUEST;
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.827309805772835
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute((-3440));
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.absolute((-1331));
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.isBeforeFirst();
      boolean boolean0 = fBCachedFetcher0.relative(868);
      assertFalse(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.981479289209093
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher1.isAfterLast();
      fBCachedFetcher1.updateRow((byte[][]) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)100;
      fBCachedFetcher1.absolute(2004);
      fBCachedFetcher0.isLast();
      fBCachedFetcher1.getFetchSize();
      fBCachedFetcher0.isFirst();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      fBCachedFetcher1.isBeforeFirst();
      boolean boolean0 = fBCachedFetcher1.isBeforeFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp5.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp9 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp10 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp11 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp12 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp13 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp14 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp15 = (org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp)databaseParameterBufferImp14.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp16 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp17 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp18 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp19 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp13.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp20 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp21 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp22 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp23 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBuffer0.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp24 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp25 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp26 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp15.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp27 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp28 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Integer integer0 = new Integer(518);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate2.or(predicate1);
      Predicate<Object> predicate8 = predicate1.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate10 = predicate9.or(predicate1);
      Predicate<Object> predicate11 = predicate9.and(predicate0);
      Predicate<Object> predicate12 = predicate9.negate();
      Predicate<Object> predicate13 = predicate6.negate();
      Predicate<Object> predicate14 = predicate13.and(predicate7);
      Predicate<Object> predicate15 = predicate12.or(predicate14);
      predicate10.negate();
      predicate7.negate();
      Predicate<Object> predicate16 = predicate10.or(predicate8);
      Predicate<Object> predicate17 = predicate3.and(predicate16);
      Predicate<Object> predicate18 = predicate14.negate();
      Predicate<Object> predicate19 = predicate9.negate();
      Predicate.isEqual((Object) integer0);
      predicate17.test(predicate18);
      Predicate<Object> predicate20 = predicate11.and(predicate4);
      Predicate<Object> predicate21 = predicate20.and(predicate2);
      predicate21.or(predicate5);
      Predicate<Object> predicate22 = predicate21.and(predicate3);
      Predicate<Object> predicate23 = predicate19.negate();
      predicate15.or(predicate8);
      predicate22.negate();
      predicate10.negate();
      predicate23.negate();
      System.setCurrentTimeMillis(3335L);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3169392047597572
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[13][4];
      byteArray0[1] = byteArray0[0];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-16);
      byteArray1[1] = (byte) (-59);
      byteArray1[2] = (byte) (-16);
      byteArray1[3] = (byte) (-16);
      byteArray1[4] = (byte) (-16);
      byteArray1[5] = (byte) (-117);
      byteArray0[2] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-117);
      byteArray2[1] = (byte) (-59);
      byteArray2[2] = (byte) (-16);
      byteArray2[3] = (byte) (-59);
      byteArray2[4] = (byte) (-117);
      byteArray2[5] = (byte) (-16);
      byteArray2[6] = (byte) (-59);
      byteArray2[7] = (byte) (-59);
      byteArray2[8] = (byte) (-117);
      byteArray0[3] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte) (-16);
      byteArray3[1] = (byte) (-16);
      byteArray3[2] = (byte) (-16);
      byteArray3[3] = (byte) (-16);
      byteArray3[4] = (byte) (-16);
      byteArray3[5] = (byte) (-117);
      byteArray0[4] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-16);
      byteArray0[5] = byteArray4;
      linkedList0.add(byteArray0);
      byte[][] byteArray5 = new byte[2][1];
      byteArray5[0] = byteArray1;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-59);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1468025731695666
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][1];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)56;
      byteArray1[1] = (byte) (-27);
      byteArray1[2] = (byte)19;
      byteArray1[3] = (byte) (-2);
      byteArray1[4] = (byte) (-47);
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte) (-52);
      byteArray1[7] = (byte) (-48);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)19;
      byteArray2[1] = (byte) (-47);
      byteArray2[2] = (byte) (-52);
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte) (-50);
      byteArray2[5] = (byte) (-47);
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte) (-52);
      byteArray2[8] = (byte) (-27);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-47);
      byteArray3[1] = (byte) (-50);
      byteArray3[2] = (byte) (-27);
      byteArray3[3] = (byte) (-48);
      byteArray3[4] = (byte)19;
      byteArray3[5] = (byte) (-27);
      byteArray3[6] = (byte) (-2);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-47);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte) (-50);
      byteArray5[1] = (byte) (-52);
      byteArray5[2] = (byte)2;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte) (-27);
      byteArray6[1] = (byte)0;
      byteArray6[2] = (byte) (-52);
      byteArray6[3] = (byte)19;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte)2;
      byteArray7[1] = (byte) (-27);
      byteArray7[2] = (byte)2;
      byteArray7[3] = (byte) (-27);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isEmpty();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7612118325115627
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(335544577);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "PURE_JAVA");
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      linkedList0.add((byte[][]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 261);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      databaseParameterBufferImp6.removeExtensionParams();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp4);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      predicate2.and(predicate0);
      Predicate.isEqual((Object) javaGDSImpl1);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Object object0 = new Object();
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "PURE_JAVA");
      predicate6.negate();
      predicate5.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.hasArgument((-132));
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp4 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp6.deepCopy();
      databaseParameterBufferImp5.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp9 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp6.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp10 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp11 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp5.removeExtensionParams();
      databaseParameterBufferImp6.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp12 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp11.removeExtensionParams();
      databaseParameterBufferImp6.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp13 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp5.deepCopy();
      linkedList0.add((byte[][]) null);
      databaseParameterBuffer0.deepCopy();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(0, fBResultSet0.getRow());
      assertTrue(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.310641851649204
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "uHk`/\"G");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      databaseParameterBufferImp0.removeExtensionParams();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      fBResultSet0.isBeforeFirst();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl3 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl4 = new JavaGDSImpl();
      GDSException gDSException0 = new GDSException(951, 16381);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl0.addWarning(gDSException0);
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp2 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      GDSException gDSException1 = new GDSException("PURE_JAVA");
      isc_db_handle_impl0.addWarning(gDSException0);
      databaseParameterBufferImp2.deepCopy();
      javaGDSImpl1.createIscDbHandle();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertTrue(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.174003403734852
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.previous();
      byte[][] byteArray1 = new byte[9][6];
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-120);
      byteArray2[1] = (byte) (-15);
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-120);
      byteArray3[1] = (byte) (-97);
      byteArray3[2] = (byte) (-120);
      byteArray3[3] = (byte) (-120);
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte) (-15);
      byteArray3[6] = (byte) (-15);
      byteArray1[1] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-97);
      byteArray4[1] = (byte) (-15);
      byteArray4[2] = (byte) (-120);
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-120);
      byteArray5[1] = (byte) (-15);
      byteArray5[2] = (byte) (-120);
      byteArray5[3] = (byte) (-97);
      byteArray5[4] = (byte)1;
      byteArray5[5] = (byte) (-15);
      byteArray5[6] = (byte) (-120);
      byteArray1[3] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte) (-15);
      byteArray6[1] = (byte) (-15);
      byteArray6[2] = (byte) (-15);
      byteArray6[3] = (byte)1;
      byteArray6[4] = (byte) (-15);
      byteArray6[5] = (byte) (-120);
      byteArray6[6] = (byte)1;
      byteArray6[7] = (byte) (-97);
      byteArray5[5] = (byte)1;
      byteArray1[4] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte) (-15);
      byteArray1[5] = byteArray7;
      byte[] byteArray8 = new byte[21];
      byteArray8[0] = (byte) (-120);
      byteArray8[1] = (byte) (-97);
      byteArray8[2] = (byte) (-15);
      byteArray8[3] = (byte) (-97);
      byteArray8[4] = (byte)1;
      byteArray8[5] = (byte) (-120);
      byteArray8[6] = (byte) (-15);
      byteArray8[7] = (byte) (-97);
      byteArray1[6] = byteArray8;
      byte[] byteArray9 = new byte[0];
      byteArray1[7] = byteArray9;
      byte[] byteArray10 = new byte[8];
      byteArray10[0] = (byte)1;
      byteArray10[1] = (byte) (-15);
      byteArray10[2] = (byte) (-120);
      byteArray10[3] = (byte)1;
      byteArray10[4] = (byte) (-120);
      byteArray10[5] = (byte) (-15);
      byteArray10[6] = (byte) (-120);
      byteArray10[7] = (byte) (-97);
      byteArray1[8] = byteArray10;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.174003403734852
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.previous();
      byte[][] byteArray1 = new byte[9][6];
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-120);
      byteArray2[1] = (byte) (-15);
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-120);
      byteArray3[1] = (byte) (-97);
      byteArray3[2] = (byte) (-120);
      byteArray3[3] = (byte) (-120);
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte) (-15);
      byteArray3[6] = (byte) (-15);
      byteArray1[1] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-97);
      byteArray4[1] = (byte) (-15);
      byteArray4[2] = (byte) (-120);
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-120);
      byteArray5[1] = (byte) (-15);
      byteArray5[2] = (byte) (-120);
      byteArray5[3] = (byte) (-97);
      byteArray5[4] = (byte)1;
      byteArray5[5] = (byte) (-15);
      byteArray5[6] = (byte) (-120);
      byteArray1[3] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte) (-15);
      byteArray6[1] = (byte) (-15);
      byteArray6[2] = (byte) (-15);
      byteArray6[3] = (byte)1;
      byteArray6[4] = (byte) (-15);
      byteArray6[5] = (byte) (-120);
      byteArray6[6] = (byte)1;
      byteArray6[7] = (byte) (-97);
      byteArray6[8] = (byte)1;
      byteArray1[4] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte) (-15);
      byteArray1[5] = byteArray7;
      byte[] byteArray8 = new byte[8];
      byteArray8[0] = (byte) (-120);
      byteArray8[1] = (byte) (-97);
      byteArray8[2] = (byte) (-15);
      byteArray8[3] = (byte) (-97);
      byteArray8[4] = (byte)1;
      byteArray8[5] = (byte) (-120);
      byteArray8[6] = (byte) (-15);
      byteArray8[7] = (byte) (-97);
      byteArray1[6] = byteArray8;
      byte[] byteArray9 = new byte[0];
      byteArray1[7] = byteArray9;
      byte[] byteArray10 = new byte[8];
      byteArray10[0] = (byte)1;
      byteArray10[1] = (byte) (-15);
      byteArray10[2] = (byte) (-120);
      byteArray10[3] = (byte)1;
      byteArray10[4] = (byte) (-120);
      byteArray10[5] = (byte) (-15);
      byteArray10[6] = (byte) (-120);
      byteArray10[7] = (byte) (-97);
      byteArray1[8] = byteArray10;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.close();
      System.setCurrentTimeMillis(247L);
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      assertEquals(400, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.67956024529521
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "i9");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher1.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      linkedList0.add((byte[][]) null);
      System.setCurrentTimeMillis(255L);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isFirst());
      
      int int0 = fBCachedFetcher1.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer((-456));
      Object object0 = new Object();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~");
      Integer.getInteger("@v@Ss#bS8\"Jrg", (-1347));
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 1530, 1530, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.211639442236119
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte)86;
      byteArray1[2] = (byte)6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4751554067536277
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      linkedList0.add((byte[][]) null);
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp5.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp6.removeExtensionParams();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp7.removeExtensionParams();
      databaseParameterBufferImp7.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp9 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp10 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp11 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBuffer0.deepCopy();
      databaseParameterBufferImp7.deepCopy();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      byte[][] byteArray0 = new byte[6][2];
      fBCachedFetcher0.insertRow(byteArray0);
      assertEquals(1, fBCachedFetcher0.getRowNum());
      
      fBCachedFetcher0.previous();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.361061809768637
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = (org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp)databaseParameterBufferImp5.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp9 = (org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp)databaseParameterBufferImp5.removeExtensionParams();
      databaseParameterBufferImp5.removeExtensionParams();
      databaseParameterBufferImp8.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp10 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp11 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp12 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp13 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp14 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp9.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp15 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp12.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp16 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp14.removeExtensionParams();
      databaseParameterBufferImp5.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp17 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp18 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp19 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp9.deepCopy();
      databaseParameterBufferImp8.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp20 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp20.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp21 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp22 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte)86;
      byteArray1[2] = (byte)6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-909));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][5];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte) (-24);
      byteArray2[1] = (byte)114;
      byteArray2[2] = (byte) (-100);
      byteArray2[3] = (byte) (-6);
      byteArray2[4] = (byte)33;
      byteArray2[5] = (byte) (-2);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-6);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-24);
      byteArray4[1] = (byte) (-100);
      byteArray4[2] = (byte) (-24);
      byteArray4[3] = (byte) (-76);
      byteArray4[4] = (byte) (-100);
      byteArray4[5] = (byte)33;
      byteArray4[6] = (byte) (-24);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)114;
      byteArray5[1] = (byte) (-100);
      byteArray5[2] = (byte) (-76);
      byteArray5[3] = (byte)33;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte) (-24);
      byteArray6[1] = (byte) (-76);
      byteArray6[2] = (byte) (-100);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte)114;
      byteArray7[1] = (byte) (-100);
      byteArray7[2] = (byte)33;
      byteArray7[3] = (byte) (-24);
      byteArray7[4] = (byte) (-100);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[5];
      byteArray8[0] = (byte) (-24);
      byteArray8[1] = (byte) (-24);
      byteArray8[2] = (byte) (-76);
      byteArray8[3] = (byte) (-6);
      byteArray8[4] = (byte) (-2);
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1484);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][8];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-1);
      byteArray1[1] = (byte)66;
      byteArray1[2] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-1);
      byteArray2[1] = (byte)66;
      byteArray2[2] = (byte) (-1);
      byteArray2[3] = (byte) (-1);
      byteArray2[4] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)66;
      byteArray3[1] = (byte)66;
      byteArray3[2] = (byte) (-1);
      byteArray3[3] = (byte)66;
      byteArray3[4] = (byte)66;
      byteArray3[5] = (byte)0;
      byteArray3[6] = (byte) (-1);
      byteArray3[7] = (byte)66;
      byteArray0[2] = byteArray3;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1484);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.781343272386638
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.previous();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher1.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher1.deleteRow();
      boolean boolean0 = fBCachedFetcher1.isAfterLast();
      assertFalse(fBCachedFetcher1.isEmpty());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3399002341122683
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[2][1];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-18);
      byteArray1[1] = (byte)86;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)59;
      byteArray1[4] = (byte)125;
      byteArray1[5] = (byte) (-6);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      boolean boolean1 = fBCachedFetcher0.isLast();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.afterLast();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp5 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp6 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp7 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp8 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp8.removeExtensionParams();
      databaseParameterBufferImp8.removeExtensionParams();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp9 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp10 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp11 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp12 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp13 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp14 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp10.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp15 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp16 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp17 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp18 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp19 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp20 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp21 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp15.deepCopy();
      databaseParameterBufferImp6.deepCopy();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp22 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp23 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      databaseParameterBufferImp20.removeExtensionParams();
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-98);
      byteArray1[1] = (byte) (-111);
      byteArray1[2] = (byte)91;
      byteArray1[3] = (byte)26;
      byteArray1[4] = (byte) (-2);
      byteArray1[5] = (byte)123;
      byteArray1[6] = (byte) (-119);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-98);
      byteArray2[1] = (byte) (-98);
      byteArray2[2] = (byte)111;
      byteArray2[3] = (byte) (-111);
      byteArray2[4] = (byte)91;
      byteArray2[5] = (byte) (-98);
      byteArray2[6] = (byte) (-111);
      byteArray2[7] = (byte)123;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte) (-98);
      byteArray3[1] = (byte) (-98);
      byteArray3[2] = (byte)91;
      byteArray3[3] = (byte) (-98);
      byteArray3[4] = (byte)123;
      byteArray3[5] = (byte) (-2);
      byteArray3[6] = (byte) (-119);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-119);
      byteArray4[1] = (byte)123;
      byteArray4[2] = (byte) (-106);
      byteArray4[3] = (byte) (-98);
      byteArray0[3] = byteArray4;
      byteArray0[4] = byteArray2;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-119);
      byteArray5[1] = (byte)56;
      byteArray5[2] = (byte) (-111);
      byteArray5[3] = (byte)91;
      byteArray5[4] = (byte)73;
      byteArray5[5] = (byte)123;
      byteArray5[6] = (byte)111;
      byteArray0[5] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)111;
      byteArray6[1] = (byte) (-2);
      byteArray6[2] = (byte) (-106);
      byteArray6[3] = (byte) (-106);
      byteArray6[4] = (byte)34;
      byteArray6[5] = (byte) (-111);
      byteArray0[6] = byteArray6;
      byte[] byteArray7 = new byte[0];
      byteArray0[7] = byteArray7;
      linkedList0.add(byteArray0);
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp24 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp25 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer((-456));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate2.or(predicate1);
      Predicate<Object> predicate8 = predicate3.and(predicate4);
      Predicate<Object> predicate9 = predicate3.and(predicate4);
      Predicate<Object> predicate10 = predicate1.and(predicate9);
      predicate7.or(predicate6);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("9/n-6");
      predicate9.test(jMXPrincipal0);
      Predicate<Object> predicate11 = predicate10.or(predicate1);
      Predicate<Object> predicate12 = predicate10.and(predicate0);
      Predicate<Object> predicate13 = predicate10.negate();
      Predicate<Object> predicate14 = predicate5.or(predicate7);
      Object object0 = new Object();
      Predicate.isEqual((Object) predicate2);
      Predicate<Object> predicate15 = predicate13.and(predicate7);
      predicate15.and(predicate8);
      Predicate<Object> predicate16 = predicate12.negate();
      predicate7.or(predicate14);
      predicate16.negate();
      predicate11.negate();
      Predicate<Object> predicate17 = predicate4.or(predicate13);
      predicate3.and(predicate8);
      predicate17.negate();
      predicate6.negate();
      Predicate.isEqual((Object) predicate13);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][1];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)6;
      byteArray1[1] = (byte)86;
      byteArray1[2] = (byte)6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      System.setCurrentTimeMillis((byte)6);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      Integer integer0 = new Integer((-456));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate4.negate();
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate2.or(predicate1);
      Predicate<Object> predicate8 = predicate1.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate10 = predicate9.or(predicate1);
      Predicate<Object> predicate11 = predicate9.and(predicate0);
      Predicate<Object> predicate12 = predicate9.negate();
      Predicate<Object> predicate13 = predicate6.negate();
      Predicate<Object> predicate14 = predicate13.and(predicate7);
      Predicate<Object> predicate15 = predicate12.or(predicate14);
      predicate10.negate();
      Predicate<Object> predicate16 = predicate4.or(predicate13);
      Predicate<Object> predicate17 = predicate10.or(predicate8);
      Predicate<Object> predicate18 = predicate3.and(predicate17);
      Predicate<Object> predicate19 = predicate14.negate();
      Predicate<Object> predicate20 = predicate9.negate();
      Predicate.isEqual((Object) integer0);
      predicate18.test(predicate19);
      Predicate<Object> predicate21 = predicate11.and(predicate4);
      Predicate<Object> predicate22 = predicate21.and(predicate2);
      predicate22.or(predicate5);
      Predicate<Object> predicate23 = predicate22.and(predicate16);
      predicate20.negate();
      predicate15.or(predicate8);
      predicate23.negate();
      predicate16.negate();
      predicate11.negate();
      byte[][] byteArray0 = new byte[5][0];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)37;
      byteArray1[1] = (byte) (-36);
      byteArray1[2] = (byte)23;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)23;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)23;
      byteArray3[1] = (byte)37;
      byteArray3[2] = (byte)23;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)23;
      byteArray4[1] = (byte)23;
      byteArray4[2] = (byte) (-36);
      byteArray4[3] = (byte)37;
      byteArray4[4] = (byte)37;
      byteArray4[5] = (byte)23;
      byteArray4[6] = (byte)100;
      byteArray4[7] = (byte)23;
      byteArray4[8] = (byte)23;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)23;
      byteArray5[1] = (byte)23;
      byteArray5[2] = (byte)37;
      byteArray5[3] = (byte)37;
      byteArray0[4] = byteArray5;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[6][9];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)117;
      byteArray1[1] = (byte) (-57);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-57);
      byteArray2[1] = (byte)117;
      byteArray2[2] = (byte) (-57);
      byteArray2[3] = (byte)117;
      byteArray2[4] = (byte)117;
      byteArray2[5] = (byte)117;
      byteArray2[6] = (byte) (-57);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)117;
      byteArray3[1] = (byte) (-57);
      byteArray3[2] = (byte) (-57);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[9];
      byteArray4[0] = (byte)117;
      byteArray4[1] = (byte) (-57);
      byteArray4[2] = (byte) (-57);
      byteArray4[3] = (byte) (-57);
      byteArray4[4] = (byte) (-57);
      byteArray4[5] = (byte) (-57);
      byteArray4[6] = (byte) (-57);
      byteArray4[7] = (byte) (-57);
      byteArray4[8] = (byte)117;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-57);
      byteArray5[1] = (byte) (-57);
      byteArray5[2] = (byte) (-57);
      byteArray5[3] = (byte) (-57);
      byteArray5[4] = (byte)117;
      byteArray5[5] = (byte) (-112);
      byteArray5[6] = (byte) (-57);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
