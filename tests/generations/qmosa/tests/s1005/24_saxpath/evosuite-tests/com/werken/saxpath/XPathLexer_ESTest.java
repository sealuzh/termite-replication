/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 16:50:57 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0994854691119613
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("`NY!BwRn~^V");
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token3 = xPathLexer2.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.setXPath("`NY!BwRn~^V");
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer1.comma();
      assertEquals("!", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(")s\"mi0X=3");
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token8 = xPathLexer8.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("`N", token10.getTokenText());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9461097732634867
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_pCU");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("S{4pO}%x.");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("_pCU", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals("S", token2.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("_pCU");
      XPathLexer xPathLexer4 = new XPathLexer("_pCU");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("S{4pO}%x.");
      xPathLexer5.nextToken();
      Token token4 = xPathLexer3.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("_", token4.getTokenText());
      
      xPathLexer2.colon();
      Token token5 = xPathLexer4.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("_p", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("k{U>P");
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("4", token6.getTokenText());
      
      Token token7 = xPathLexer5.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer5.star();
      xPathLexer2.relationalOperator();
      xPathLexer1.star();
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer3.nextToken();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer5.star();
      assertEquals("p", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.615884517949014
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_pCU");
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("S{4pO}%x.");
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      xPathLexer0.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("CAPy3}c");
      xPathLexer3.consume((-3796));
      // Undeclared exception!
      try { 
        xPathLexer3.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.9848455418420672
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_pCU");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("_", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("p", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("C", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("p&Y5?8:UL!y!;=6ED|");
      xPathLexer0.dots();
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("p", token4.getTokenText());
      
      xPathLexer1.and();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("_pCU");
      xPathLexer0.literal();
      XPathLexer xPathLexer3 = new XPathLexer("p&Y5?8:UL!y!;=6ED|");
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.doubleColon();
      assertEquals("&Y", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer4.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("[", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token10 = xPathLexer4.at();
      assertEquals(" ", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.083917924645168
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.setXPath("}b&DGi#_lHF()");
      xPathLexer0.setXPath("<^bwXe7_fl");
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer1.currentPosition();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("<^bwXe7_fl");
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.endPosition();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.minus();
      xPathLexer2.star();
      xPathLexer2.dots();
      xPathLexer1.endPosition();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7846304258396186
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("Oe9v|R@M[");
      XPathLexer xPathLexer3 = new XPathLexer("T");
      xPathLexer3.rightParen();
      xPathLexer1.slashes();
      xPathLexer2.nextToken();
      xPathLexer0.equals();
      xPathLexer1.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token0 = xPathLexer4.colon();
      xPathLexer5.star();
      xPathLexer0.relationalOperator();
      xPathLexer4.star();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      Token token1 = xPathLexer1.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.6227380154105067
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.comma();
      assertEquals("w", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) (co)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.div();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      xPathLexer0.leftParen();
      int int0 = xPathLexer0.endPosition();
      assertEquals(29, int0);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("hI5,ZS04@YR");
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.leftParen();
      assertEquals("x", token9.getTokenText());
      
      Token token10 = xPathLexer0.colon();
      assertEquals("p", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("hI5,ZS04@YR");
      Token token11 = xPathLexer2.rightParen();
      assertEquals("h", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("a", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.485421621332866
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}`br/FVHetk,\"n!M");
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1216));
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6841693298436191
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("8/V))ET");
      xPathLexer1.equals();
      xPathLexer1.slashes();
      xPathLexer0.consume();
      xPathLexer1.nextToken();
      xPathLexer1.doubleColon();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-5615));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5664793800785168
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F9Gx(ADp[+Z");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("`NY!BwRn~^V");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("F9Gx", token0.getTokenText());
      
      Token token1 = xPathLexer2.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("#TXLS[fg7y7^Q+FS%5.");
      xPathLexer1.comma();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("!R,Z~aNwg-&cu=?#");
      Token token3 = xPathLexer7.comma();
      assertEquals("!", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("!R,Z~aNwg-&cu=?#");
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer5.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.3402987034821376
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("T9VC[");
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.consume(116);
      xPathLexer0.mod();
      xPathLexer0.consume((-193));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.191465583575188
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^&j9+Q-?E(JjC2^()t");
      xPathLexer0.star();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("&j9+Q-?E(JjC2^()t", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (20) (&)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("-", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("E", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("(", token9.getTokenText());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(")", token10.getTokenText());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.equals();
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer0.plus();
      assertEquals(5, token15.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.914953797832394
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^&j9+Q-?E(JjC2^()t");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer1.nextToken();
      xPathLexer0.slashes();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("r%1]u;TAgr~WqRdh");
      xPathLexer1.literal();
      xPathLexer2.comma();
      xPathLexer2.literal();
      xPathLexer3.equals();
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      xPathLexer5.star();
      Token token1 = xPathLexer5.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.119948153994305
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qp;Q=g&?U0{325vE*");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.setXPath("y#d+;Q");
      xPathLexer0.setXPath(") (");
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("Y!$x]KBPbyS+]");
      xPathLexer1.and();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.endPosition();
      xPathLexer0.notEquals();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer1.dots();
      xPathLexer1.endPosition();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0997022738000126
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer1.getPreviousToken();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer2.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.comma();
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("wIW`b:^EMF*4");
      Token token8 = xPathLexer4.dots();
      assertEquals("w", token8.getTokenText());
      
      xPathLexer1.comma();
      xPathLexer4.operatorName();
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer1.dollar();
      XPathLexer xPathLexer5 = new XPathLexer("Kg3PqoiIJDy");
      xPathLexer4.or();
      Token token10 = xPathLexer5.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("K", token10.getTokenText());
      
      Token token11 = xPathLexer5.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("g3PqoiIJDy", token11.getTokenText());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer4.star();
      assertEquals(20, token13.getTokenType());
      assertEquals("I", token13.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4772095276171395
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token0 = xPathLexer0.comma();
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("8p5", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("5)}");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer2.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("5", token2.getTokenText());
      
      Token token3 = xPathLexer3.comma();
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer2.at();
      assertEquals("", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9658199050007612
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      token2.toString();
      token2.toString();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token2.toString();
      assertEquals("[ (3) (i)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(21, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      xPathLexer1.nextToken();
      Token token4 = xPathLexer1.comma();
      assertEquals("7", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer3.colon();
      assertEquals("J", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      xPathLexer2.identifier();
      XPathLexer xPathLexer4 = new XPathLexer("x2[&1Zg");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.nextToken();
      xPathLexer4.endPosition();
      XPathLexer xPathLexer6 = new XPathLexer(" (` IGn$hq@k>(_@");
      Token token6 = xPathLexer6.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals(" (", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer7.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4781733759097668
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("b", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("6v'*^ojd");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("6v'*^ojd");
      Token token2 = xPathLexer3.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("6", token3.getTokenText());
      
      Token token4 = xPathLexer3.not();
      assertEquals("v", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer3.rightParen();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("*", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token6 = xPathLexer3.colon();
      assertEquals("^", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals("v", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.985780417806143
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qp;Q=g&?U0{325vE*");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.setXPath("y#d+;Q");
      xPathLexer0.setXPath(") (");
      xPathLexer0.or();
      String string0 = token0.toString();
      assertEquals("[ (20) (p)", string0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y#d+;Q");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("Q\"k9Jn\"D");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("Q\"k9Jn\"D");
      xPathLexer3.nextToken();
      xPathLexer3.endPosition();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("\"k", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertNotNull(token6);
      
      Token token7 = xPathLexer4.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("co", token7.getTokenText());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8525845568425745
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      xPathLexer1.and();
      xPathLexer1.at();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer1.comma();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer1.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer1.currentPosition();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer0.and();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.nextToken();
      xPathLexer0.endPosition();
      xPathLexer1.notEquals();
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      assertFalse(xPathLexer3.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6377968966693761
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      Token token0 = xPathLexer1.slashes();
      assertEquals("t", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Z$b*\"t");
      Token token3 = xPathLexer2.comma();
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("$", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer2.rightParen();
      assertEquals("", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer5.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.star();
      assertEquals("K", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.9223817678329649
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("w", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("e", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals("r", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("ken.saxpath.XPathLexer", token10.getTokenText());
      
      Token token11 = xPathLexer2.pipe();
      assertEquals(17, token11.getTokenType());
      
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      xPathLexer2.identifier();
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7047417539275451
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      xPathLexer1.and();
      Token token1 = xPathLexer1.at();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      token0.toString();
      xPathLexer1.rightBracket();
      token1.toString();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.rightParen();
      token0.toString();
      token1.toString();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.not();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.consume((-733));
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.literal();
      xPathLexer2.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.314449524841292
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("@,Gk\"goK\"?nx*f=p5gI");
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("K/", token2.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.259596932715819
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (3) (i)", string0);
      
      Token token3 = xPathLexer0.at();
      assertEquals("0", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(":", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.comma();
      Token token10 = xPathLexer1.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer3.dots();
      xPathLexer3.operatorName();
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
      
      xPathLexer1.dollar();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.or();
      Token token12 = xPathLexer2.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer1.nextToken();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer1.dollar();
      assertEquals(26, token14.getTokenType());
      assertEquals("|", token14.getTokenText());
      
      Token token15 = xPathLexer0.star();
      assertEquals(20, token15.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.165119644030565
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.consume(111);
      xPathLexer0.comma();
      xPathLexer0.doubleColon();
      int int0 = (-683);
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-683));
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.703167654991518
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("P.=%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer(";eP>91OP`QiT");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("P.=%");
      xPathLexer1.dollar();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("D1W{NF.}0`M2h2MhoZ");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.star();
      Token token0 = xPathLexer4.pipe();
      xPathLexer4.not();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.at();
      xPathLexer0.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.leftBracket();
      Token token1 = xPathLexer0.dollar();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8005450359226298
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      assertEquals("b", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      xPathLexer1.and();
      xPathLexer1.at();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("F9Gx(ADp[+Z");
      XPathLexer xPathLexer3 = new XPathLexer("auR_>h>");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("9", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Gk_@]`");
      xPathLexer4.identifierOrOperatorName();
      Token token4 = xPathLexer4.nextToken();
      assertEquals("@", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer4.endPosition();
      Token token5 = xPathLexer4.notEquals();
      assertEquals("]`", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("Gx", token6.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7456641316393136
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("h;Dj-|k:");
      xPathLexer1.nextToken();
      xPathLexer0.comma();
      xPathLexer0.mod();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(";Dj-|k:", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("h;Dj-|k:");
      Token token5 = xPathLexer3.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer3.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("h;Dj-|k:");
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0221586711105717
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      assertEquals("b", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      xPathLexer1.and();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("<", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("Y\\", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("uHW", token4.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("F9Gx(ADp[+Z");
      XPathLexer xPathLexer3 = new XPathLexer("auR_>h>");
      xPathLexer2.nextToken();
      Token token5 = xPathLexer1.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer(".B&Gx1yWIk6YGi-O]");
      xPathLexer1.setPreviousToken(token5);
      assertEquals(4, token5.getTokenType());
      assertEquals("9", token5.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer2.comma();
      assertEquals("(", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("Gx(ADp[+Z", token7.getTokenText());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.getPreviousToken();
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer7.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer6.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("A", token11.getTokenText());
      
      xPathLexer0.or();
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals(">", token12.getTokenText());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals("Dp[+Z", token13.getTokenText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6724198208451722
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.colon();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.comma();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("K", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("2", token6.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1944047132392543
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.dots();
      assertEquals("s", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(")s\"mi0X=3");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer1.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      String string0 = token0.toString();
      assertEquals("[ (11) ())", string0);
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token4 = xPathLexer2.comma();
      assertEquals("J", token4.getTokenText());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer0.star();
      assertEquals("m", token6.getTokenText());
      
      xPathLexer2.identifier();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("i", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("5)}");
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.div();
      xPathLexer4.at();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      xPathLexer1.identifier();
      Token token11 = xPathLexer5.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals("=", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer4.at();
      assertEquals("", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer4.identifier();
      assertEquals("", token14.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6989038520193755
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer1.star();
      xPathLexer1.not();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      xPathLexer1.at();
      xPathLexer2.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      assertFalse(xPathLexer3.equals((Object)xPathLexer2));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8326478249466696
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.colon();
      assertEquals("s", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Npp<7");
      Token token1 = xPathLexer1.star();
      assertEquals("N", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer1.setXPath(") (");
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("iw^");
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.getPreviousToken();
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      xPathLexer2.currentPosition();
      Token token4 = xPathLexer5.equals();
      assertEquals(")", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("RKR[m-<&OD( j,ZY");
      Token token5 = xPathLexer6.nextToken();
      assertEquals("RKR", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("j?mfHi ]zlT:q");
      xPathLexer0.or();
      Token token6 = xPathLexer7.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("j", token6.getTokenText());
      
      Token token7 = xPathLexer4.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer2.leftParen();
      assertEquals("i", token8.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5972665045068384
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("nXFw`$^v=d");
      Token token0 = xPathLexer1.slashes();
      assertEquals("n", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Fw", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer("nXFw`$^v=d");
      XPathLexer xPathLexer5 = new XPathLexer("nXFw`$^v=d");
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer7.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer7.plus();
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.043617289125473
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8K2pU|~ZfW#3]E(Ca");
      Token token0 = xPathLexer0.slashes();
      assertEquals("8", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("~", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("Z", token5.getTokenText());
      
      xPathLexer1.whitespace();
      xPathLexer2.and();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer4.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.470598177287389
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Z%f(a[<WP;=N@-y.]");
      xPathLexer0.or();
      Token token0 = xPathLexer0.not();
      assertEquals("Z", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("%f", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      token2.toString();
      token2.toString();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (20) (()", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("a", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.dollar();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("<W", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("P", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(";=N@-y.]", token6.getTokenText());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('P', char0);
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals(";", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("=", token8.getTokenText());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("N", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.08691359223837
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      Token token0 = xPathLexer0.dots();
      assertEquals("b", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.slashes();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(">", token1.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      String string0 = token2.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer1.or();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (15) ()");
      xPathLexer1.dots();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer2.star();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.minus();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      xPathLexer1.comma();
      Token token10 = xPathLexer2.comma();
      assertEquals(" ", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      xPathLexer4.nextToken();
      Token token11 = xPathLexer3.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer2.star();
      assertEquals("(", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7902999362580978
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      assertEquals("N", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("4", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("En0Zu}N4'egaI");
      xPathLexer2.slashes();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("C<");
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.9191154694020653
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (si)", string0);
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("0", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.comma();
      assertEquals("X", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("[ (22) (si)");
      Token token6 = xPathLexer4.nextToken();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer4.and();
      Token token7 = xPathLexer4.star();
      assertEquals(" ", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7788566277906561
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      Token token1 = xPathLexer0.dots();
      assertEquals("<", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("Y", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("\\u", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("HW", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer3.comma();
      Token token7 = xPathLexer1.comma();
      assertEquals("F", token7.getTokenText());
      
      xPathLexer2.literal();
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer3.star();
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.111912283330579
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      xPathLexer1.and();
      Token token0 = xPathLexer1.at();
      assertEquals("F", token0.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      xPathLexer1.slashes();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("Y", token2.getTokenText());
      
      xPathLexer1.identifier();
      xPathLexer1.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("\\", token3.getTokenText());
      
      xPathLexer1.not();
      xPathLexer1.doubleColon();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("+", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("b+R6VYsPuX6'l");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("Z", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      xPathLexer1.identifier();
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("b+R6VYsPuX6'l");
      xPathLexer4.not();
      Token token8 = xPathLexer4.comma();
      assertEquals("+", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals("b+", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer4.identifier();
      assertEquals("R6VYsPuX6", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer(".L");
      Token token11 = xPathLexer5.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals(".", token11.getTokenText());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("u", token12.getTokenText());
      
      xPathLexer0.at();
      Token token13 = xPathLexer3.identifier();
      assertEquals(15, token13.getTokenType());
      
      xPathLexer0.notEquals();
      Token token14 = xPathLexer3.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.65587984693648
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer1.not();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer1.leftBracket();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.4106154411459084
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      Token token0 = xPathLexer1.colon();
      assertEquals("t", token0.getTokenText());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("9", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(")", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("@,Gk\"goK\"?nx*f=p5gI");
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.8408338107554474
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      xPathLexer1.comma();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1030755955475344
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.setXPath("y#d+;Q");
      Token token1 = xPathLexer0.slashes();
      assertEquals("y", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y#d+;Q");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals("#", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("se9");
      xPathLexer0.setPreviousToken((Token) null);
      Token token6 = xPathLexer4.comma();
      assertEquals("s", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("y#d+;Q");
      xPathLexer5.mod();
      Token token7 = xPathLexer4.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("e", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("d", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("d+;Q", token9.getTokenText());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.997711698737342
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qp;Q=g&?U0{325vE*");
      xPathLexer0.consume();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.star();
      assertEquals(";", token0.getTokenText());
      
      xPathLexer0.setXPath("y#d+;Q");
      xPathLexer0.setXPath(") (");
      xPathLexer0.or();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(7, int0);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Y!$x]KBPbyS+]");
      xPathLexer1.and();
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("!", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("y#d+;Q");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer3.literal();
      assertNull(token8);
      
      xPathLexer0.relationalOperator();
      xPathLexer3.leftParen();
      Token token9 = xPathLexer2.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("y", token9.getTokenText());
      
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("kM8j!Mk^WP\"");
      Token token10 = xPathLexer3.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.1153151456335295
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qp;Q=g&?U0{325vE*");
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.setXPath("y#d+;Q");
      xPathLexer0.setXPath(") (");
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      int int0 = xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("Y!$x]KBPbyS+]");
      xPathLexer1.and();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.operatorName();
      xPathLexer1.endPosition();
      xPathLexer0.notEquals();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer1.doubleColon();
      xPathLexer0.leftParen();
      int int1 = xPathLexer1.endPosition();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.7806390471328166
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(2, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("`NY!BwRn~^V");
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer2.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.setXPath("`NY!BwRn~^V");
      Token token8 = xPathLexer1.comma();
      assertEquals("`", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightParen();
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer(")s\"mi0X=3");
      Token token11 = xPathLexer1.nextToken();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer6.star();
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.0283576553246285
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qp;Q=g&?U0{325vE*");
      xPathLexer0.setXPath("1,VYG,J},KpbSslMq");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("1", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(",", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("qp;Q=g&?U0{325vE*");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("1,VYG,J},KpbSslMq");
      XPathLexer xPathLexer4 = new XPathLexer("1,VYG,J},KpbSslMq");
      Token token4 = xPathLexer4.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("1,", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals("V", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer3.nextToken();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer1.comma();
      assertEquals(";", token8.getTokenText());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals("Q", token10.getTokenText());
      
      Token token11 = xPathLexer2.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.7729782702827093
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.getPreviousToken();
      xPathLexer0.minus();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      xPathLexer2.pipe();
      xPathLexer2.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.colon();
      xPathLexer2.identifier();
      xPathLexer1.leftBracket();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0626844283206784
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setXPath("y#d+;Q");
      Token token3 = xPathLexer0.slashes();
      assertEquals("y", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y#d+;Q");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("#d", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("y", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer1.or();
      Token token10 = xPathLexer1.not();
      assertEquals("c", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8736720385508747
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("_pCU");
      xPathLexer0.identifier();
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.slashes();
      xPathLexer4.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer4.slashes();
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.comma();
      xPathLexer1.operatorName();
      xPathLexer1.literal();
      xPathLexer4.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0762904898922163
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.slashes();
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer2.comma();
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer2.at();
      assertEquals("o", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer1.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.comma();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer6.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer3.dots();
      Token token8 = xPathLexer2.rightBracket();
      assertEquals("m", token8.getTokenText());
      assertEquals(4, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer7.identifier();
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.or();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer3.identifier();
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer4.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer8.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer6.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8313133400451393
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("P.=%");
      xPathLexer1.slashes();
      Token token0 = xPathLexer1.nextToken();
      assertEquals(".", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer1.at();
      assertEquals("=", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("P.=%");
      Token token4 = xPathLexer1.slashes();
      assertEquals("%", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer2.colon();
      assertEquals("P", token6.getTokenText());
      
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals(".=", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("MVwBgjajL[b96");
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer3.star();
      XPathLexer xPathLexer4 = new XPathLexer("/!=L>xuY?+hO(");
      xPathLexer4.relationalOperator();
      Token token9 = xPathLexer4.star();
      assertEquals("/", token9.getTokenText());
      
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer1.nextToken();
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer4.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.809704640212334
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer1.slashes();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      xPathLexer0.plus();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.literal();
      xPathLexer3.comma();
      xPathLexer4.literal();
      xPathLexer1.equals();
      xPathLexer4.colon();
      xPathLexer3.doubleColon();
      xPathLexer0.star();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.784392250510587
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+7I8hT.");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("+7I8hT.");
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("+7I8hT.");
      xPathLexer2.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.whitespace();
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer2.star();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.832947519314442
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.minus();
      Token token1 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("_pCU");
      token1.toString();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("S{4pO}%x.");
      String string1 = token1.toString();
      assertEquals("[ (17) (<)", string1);
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("_pCU", token3.getTokenText());
      
      xPathLexer2.comma();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      xPathLexer3.setPreviousToken(token0);
      assertEquals("b", token0.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("CAPy3}c");
      xPathLexer4.relationalOperator();
      xPathLexer4.rightParen();
      xPathLexer1.comma();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer4.rightParen();
      assertEquals("A", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer7.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer7.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("CAPy3}c");
      xPathLexer8.nextToken();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("{", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("[ (17) (<)");
      Token token10 = xPathLexer9.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5095606657910334
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.setXPath(")si0X=3");
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(")si0X=3");
      xPathLexer1.and();
      xPathLexer0.consume((-1445));
      xPathLexer1.identifier();
      xPathLexer1.setXPath(")si0X=3");
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.358499497319836
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("T");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("?QPuu6&]w-");
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer5.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("e", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer0.plus();
      assertEquals("r", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.7254481003754725
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = "`I0YO1`X[,(";
      XPathLexer xPathLexer0 = new XPathLexer("`I0YO1`X[,(");
      xPathLexer0.currentPosition();
      xPathLexer0.currentPosition();
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      xPathLexer0.consume(0);
      xPathLexer0.consume((-3597));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7021060880771792
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qp;Q=g&?U0{325vE*");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      Token token3 = xPathLexer0.notEquals();
      String string0 = token2.toString();
      assertEquals("[ (17) (Q)", string0);
      
      String string1 = token3.toString();
      assertEquals("[ (22) (=)", string1);
      
      XPathLexer xPathLexer2 = new XPathLexer("`x|@lw`&PfZ-:%=bn");
      xPathLexer1.slashes();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer2.star();
      assertEquals("`", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("z71BNdaJO77X]f)Y+");
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("x", token7.getTokenText());
      
      xPathLexer3.comma();
      Token token8 = xPathLexer5.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer4.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("7", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.leftBracket();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer7.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8861725900240058
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_pCU");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("S{4pO}%x.");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("_pCU", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals("S", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("CAPy3}c");
      XPathLexer xPathLexer4 = new XPathLexer("CAPy3}c");
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer4.slashes();
      assertEquals("C", token4.getTokenText());
      
      xPathLexer2.not();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.identifier();
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token6 = xPathLexer5.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer5.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("Byz3Ja`QMZ$p^");
      xPathLexer9.identifierOrOperatorName();
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("CA", token9.getTokenText());
      
      Token token10 = xPathLexer7.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer10.slashes();
      assertEquals(11, token11.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.7584260331986419
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (si)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(")si0X=3");
      Token token2 = xPathLexer0.slashes();
      assertEquals("0", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G&|0; i");
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer2.comma();
      XPathLexer xPathLexer4 = new XPathLexer("G&|0; i");
      Token token6 = xPathLexer4.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer2.comma();
      assertEquals("0", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9679375454612569
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")5^Im");
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("Q*gJ[!92aoiGM");
      Token token1 = xPathLexer0.slashes();
      String string0 = token1.toString();
      assertEquals("[ (11) (5)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("2'{d{sR}=f9");
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.comma();
      assertEquals("*", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("hz_");
      Token token5 = xPathLexer4.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer7 = new XPathLexer("^1]ISX%C-p ");
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer5.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer4.operatorName();
      xPathLexer1.or();
      xPathLexer7.or();
      Token token8 = xPathLexer7.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("^", token8.getTokenText());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.8817579343394026
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      Token token0 = xPathLexer1.slashes();
      assertEquals("t", token0.getTokenText());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("K/M`XHw\" ZE/b", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer1.not();
      assertEquals("K", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.rightParen();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("@,Gk\"goK\"?nx*f=p5gI");
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals("/M", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.0346875212641002
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("_pCU");
      xPathLexer1.number();
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (17) (b)", string1);
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      String string2 = token1.toString();
      assertEquals("[ (15) (_pCU)", string2);
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.dollar();
      assertEquals("Y", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("J", token7.getTokenText());
      
      Token token8 = xPathLexer2.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer1.consume();
      Token token9 = xPathLexer0.leftParen();
      assertEquals("W", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(",,f!+E+&j}y");
      xPathLexer3.currentPosition();
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer5 = new XPathLexer("bC;r:");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer6.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.pipe();
      Token token12 = xPathLexer0.equals();
      assertEquals(21, token12.getTokenType());
      
      char char0 = xPathLexer2.LA(7);
      assertEquals('2', char0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.709133388268555
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("F9Gx(ADp[+Z");
      Token token2 = xPathLexer2.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("\\", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer3.comma();
      Token token5 = xPathLexer1.comma();
      assertEquals("F", token5.getTokenText());
      
      Token token6 = xPathLexer2.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5738344266057809
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("Y\\", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("uHW", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.rightBracket();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("F", token4.getTokenText());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("F9Gx(ADp[+Z");
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals("9", token8.getTokenText());
      assertEquals(4, token8.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.6214907119162536
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";+7I8hT.");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.notEquals();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer(";+7I8hT.");
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer2.relationalOperator();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7746237492033217
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer0.minus();
      xPathLexer1.slashes();
      xPathLexer1.plus();
      xPathLexer1.colon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer2.relationalOperator();
      xPathLexer2.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer3.literal();
      xPathLexer3.slashes();
      xPathLexer1.colon();
      xPathLexer0.doubleColon();
      xPathLexer3.star();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6041938381395484
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";+7I8hT.");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.notEquals();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer(";+7I8hT.");
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer2.relationalOperator();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.2780851503313724
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.and();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      Token token0 = xPathLexer1.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("%", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals(">", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("nZY\"/2SYJ0}_<U");
      xPathLexer1.and();
      Token token6 = xPathLexer2.leftBracket();
      assertEquals("n", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.824156534262395
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.at();
      xPathLexer2.or();
      xPathLexer1.nextToken();
      xPathLexer1.notEquals();
      xPathLexer2.not();
      String string1 = "";
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.dots();
      xPathLexer2.not();
      xPathLexer0.star();
      xPathLexer2.pipe();
      xPathLexer3.relationalOperator();
      xPathLexer2.slashes();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8781842540610167
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.slashes();
      assertEquals("c", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("JXzfeUgIGcC<A~n");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token1.getTokenText());
      
      xPathLexer2.comma();
      Token token2 = xPathLexer3.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer3.rightParen();
      assertEquals("X", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token4 = xPathLexer7.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer5.comma();
      assertEquals("c", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer3.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer4.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7848249765838424
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      String string0 = ")s\"mi0X=3";
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.slashes();
      xPathLexer0.equals();
      xPathLexer0.dots();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer(")s\"mi0X=3");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.140284026584478
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.setXPath("y#d+;Q");
      Token token1 = xPathLexer0.slashes();
      assertEquals("y", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y#d+;Q");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer1.equals();
      assertEquals("#", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.star();
      assertEquals(20, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("se9");
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.div();
      Token token6 = xPathLexer5.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals("d", token7.getTokenText());
      
      Token token8 = xPathLexer6.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer5.identifier();
      Token token9 = xPathLexer6.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer6.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer4.identifier();
      assertEquals("se9", token12.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8422174590030127
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals("s", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("\"", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("mi0X=3", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer(")s\"mi0X=3");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer6.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.nextToken();
      xPathLexer7.operatorName();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("E-=EjA9(M&6<f$R./");
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token7 = xPathLexer10.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.8457598438966787
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G2=sD;sS'");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("G2=sD;sS'");
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer2.operatorName();
      xPathLexer0.literal();
      xPathLexer1.comma();
      xPathLexer2.literal();
      xPathLexer0.equals();
      XPathLexer xPathLexer4 = new XPathLexer("BkN$AQ> 3'/[");
      xPathLexer4.colon();
      xPathLexer4.doubleColon();
      xPathLexer0.star();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.9643151413733773
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("o", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.at();
      assertEquals("m", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(".w", token3.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token4 = xPathLexer2.slashes();
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer1.setXPath(") (");
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      Token token9 = xPathLexer1.whitespace();
      assertEquals((-2), token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5733460696832822
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("b", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("F9Gx(ADp[+Z");
      Token token1 = xPathLexer0.dots();
      assertEquals("<", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("\\uHW", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer3.comma();
      xPathLexer1.comma();
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("9", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer3.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7764056817530363
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer(")s\"mi0X=3");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.745210561305265
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.setXPath("y#d+;Q");
      Token token2 = xPathLexer0.slashes();
      assertEquals("y", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y#d+;Q");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("#d+;Q", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("#", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals("d", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      xPathLexer1.rightParen();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("@,Gk\"goK\"?nx*f=p5gI");
      Token token8 = xPathLexer1.colon();
      assertEquals(";", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.rightParen();
      assertEquals("@", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.3147234867214532
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EnH0Zu}N4'egaI");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("E", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("}", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.6119537965563469
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("T");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(30, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      xPathLexer1.colon();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer4.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer4.star();
      xPathLexer0.star();
      Token token8 = xPathLexer4.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(21, token9.getTokenType());
      assertEquals("=", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.9115513279648417
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = "9=7E|C:";
      XPathLexer xPathLexer0 = new XPathLexer("9=7E|C:");
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.minus();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.consume((-2774));
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.990838962646092
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.consume((-637));
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.3760317487665181
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_A#<R_i");
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      xPathLexer0.div();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.setXPath(".[");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-846));
      xPathLexer0.currentPosition();
      xPathLexer0.getPreviousToken();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.9161424140994021
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("s", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("i", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")si0X=3");
      Token token3 = xPathLexer1.at();
      assertEquals(")", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(")si0X=3");
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("s", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("TAwW>F~");
      Token token6 = xPathLexer3.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("T", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
      
      Token token8 = xPathLexer4.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("L[~i=");
      Token token10 = xPathLexer3.nextToken();
      assertEquals("AwW", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer4.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.091331523207888
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("i", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("0", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("T");
      XPathLexer xPathLexer3 = new XPathLexer("Q");
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.equals();
      assertEquals("X", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      xPathLexer1.colon();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(")si0X=3");
      Token token8 = xPathLexer3.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("Q", token8.getTokenText());
      
      xPathLexer2.star();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer(")si0X=3");
      Token token9 = xPathLexer5.star();
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer4.nextToken();
      assertEquals(2, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
      
      Token token12 = xPathLexer5.dollar();
      assertEquals("s", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9432541224371445
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[;0xDTi~M1?{hw");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.slashes();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      xPathLexer1.setXPath(") (");
      xPathLexer0.div();
      xPathLexer0.plus();
      xPathLexer2.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.or();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals("(", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.9061785681437995
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "+7I8hT.";
      XPathLexer xPathLexer0 = new XPathLexer("+7I8hT.");
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.notEquals();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer("+7I8hT.");
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer2.relationalOperator();
      xPathLexer2.slashes();
      String string1 = null;
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.7330849608024113
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.comma();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer1.at();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.3634236252185175
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer2.dollar();
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("b", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(">", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("%", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("o", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("nZY\"/2SYJ0}_<U");
      xPathLexer0.at();
      xPathLexer2.and();
      Token token7 = xPathLexer3.leftBracket();
      assertEquals("n", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals("%", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.0338012527467755
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      token1.toString();
      token1.toString();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token1.toString();
      assertEquals("[ (-2) ()", string0);
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(":", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (-2) ()");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(3, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      xPathLexer3.equals();
      xPathLexer0.colon();
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals(" (", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token9 = xPathLexer2.colon();
      assertEquals("-", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (-2) ()");
      Token token10 = xPathLexer5.star();
      assertEquals("[", token10.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer3.relationalOperator();
      xPathLexer0.star();
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer2.equals();
      assertEquals(21, token14.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7469787899706861
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      int int0 = 1472;
      xPathLexer1.rightBracket();
      xPathLexer1.consume((-2408));
      xPathLexer1.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.9376585371555015
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8K2pU|~ZfW#3]E(Ca");
      Token token0 = xPathLexer0.slashes();
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("ZfW#3]E(Ca", token5.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer0.or();
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.star();
      assertEquals(20, token7.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.9833380141084993
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+7I8hT.");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("8", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("h", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("+7I8hT.");
      Token token5 = xPathLexer0.dots();
      assertEquals("T.", token5.getTokenText());
      assertEquals(14, token5.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Hs-gQ7k'{9");
      Token token9 = xPathLexer3.minus();
      assertEquals("H", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer3.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("s", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("qj'O`)v7-A_D");
      Token token11 = xPathLexer4.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer0.literal();
      assertNull(token12);
      
      Token token13 = xPathLexer4.comma();
      assertEquals("q", token13.getTokenText());
      assertEquals(32, token13.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token14 = xPathLexer5.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token15 = xPathLexer6.colon();
      assertEquals(18, token15.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.073091030181406
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dots();
      assertEquals("s", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("T");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      xPathLexer1.colon();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token6 = xPathLexer4.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer4.star();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer0.star();
      assertEquals("=", token7.getTokenText());
      
      Token token8 = xPathLexer4.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(30, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.9501006591995198
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i?}issj");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("J8p5:7<K2|iU5iL=U");
      xPathLexer1.nextToken();
      xPathLexer0.comma();
      xPathLexer1.number();
      xPathLexer1.identifier();
      xPathLexer1.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer1.hasMoreChars();
      xPathLexer1.currentPosition();
      xPathLexer1.leftBracket();
      xPathLexer1.equals();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.or();
      assertNull(token1);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.712415850179887
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (22) ()s)", string0);
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.dollar();
      assertEquals("i", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) ()s)");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      xPathLexer1.currentPosition();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals(" (", token4.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("3", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.5152623381053933
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer(string0);
      xPathLexer2.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8663819345558645
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer1.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer1.colon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer2.relationalOperator();
      xPathLexer2.slashes();
      xPathLexer0.not();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer1.literal();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer3.nextToken();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.getPreviousToken();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer3.LA((-1976));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.5434261243026044
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer1.slashes();
      assertEquals("c", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      xPathLexer1.rightParen();
      Token token4 = xPathLexer0.comma();
      assertEquals("i", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.8896534533100746
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i?}issj");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      String string0 = token0.toString();
      assertEquals("[ (22) (?})", string0);
      
      xPathLexer0.mod();
      xPathLexer0.and();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("issj", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (?})");
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(3, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setPreviousToken((Token) null);
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7399541779683172
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      xPathLexer0.minus();
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("_pCU");
      String string1 = token0.toString();
      assertEquals("[ (17) (<)", string1);
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("Y", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("-NN{ab Tj5");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(6, token2.getTokenType());
      assertEquals("-", token2.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.at();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("\\uHW", token3.getTokenText());
      
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("JR`;f ir4BG-");
      XPathLexer xPathLexer4 = new XPathLexer(string0);
      Token token4 = xPathLexer1.slashes();
      assertEquals("_", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (17) (<)");
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("J", token5.getTokenText());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("p", token7.getTokenText());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("C", token8.getTokenText());
      
      Token token9 = xPathLexer4.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.0606264757737707
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("i?}issj");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.notEquals();
      token2.toString();
      token2.toString();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (22) (?})", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.isIdentifierStartChar('+');
      Token token3 = xPathLexer0.colon();
      assertEquals("i", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("s", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("s", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer1.literal();
      xPathLexer0.leftParen();
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.1030547400527824
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.dots();
      assertEquals(")", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer2.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer1.or();
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer2.div();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer3.currentPosition();
      xPathLexer3.equals();
      xPathLexer0.consume();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer(")si0X=3");
      xPathLexer4.currentPosition();
      xPathLexer3.operatorName();
      xPathLexer3.currentPosition();
      XPathLexer xPathLexer5 = new XPathLexer("[qNv7B");
      XPathLexer xPathLexer6 = new XPathLexer(")si0X=3");
      Token token12 = xPathLexer6.nextToken();
      assertEquals(")", token12.getTokenText());
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer3.pipe();
      assertEquals(17, token13.getTokenType());
      
      xPathLexer2.equals();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('M');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.975573726812657
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer1.minus();
      xPathLexer0.plus();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer2.dots();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token0 = xPathLexer4.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.6858380877272485
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("+7I8hT.");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.notEquals();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer("+7I8hT.");
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer2.relationalOperator();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.7858464959512084
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("i", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      xPathLexer0.star();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("=3", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.isIdentifierChar('!');
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(")si0X=3");
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals(")s", token8.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.star();
      xPathLexer2.or();
      Token token9 = xPathLexer3.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer2.star();
      assertEquals("i", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.320834441184115
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.literal();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      xPathLexer0.isIdentifierChar('F');
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.7963796779003238
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer1.notEquals();
      xPathLexer2.slashes();
      xPathLexer1.getXPath();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume(1328);
      XPathLexer xPathLexer4 = new XPathLexer("[ (22) (si)");
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer4.leftParen();
      xPathLexer0.rightParen();
      xPathLexer4.comma();
      xPathLexer5.or();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.9083139700636933
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer0.and();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer4.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer3.getXPath();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.mod();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("A.mc<\"");
      Token token5 = xPathLexer6.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer6.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer6.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer6.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer5.not();
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("%", token9.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6621716279972716
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("wIW`b:^EMF*4");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals("w", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.at();
      Token token3 = xPathLexer1.equals();
      assertEquals("I", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.at();
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("b", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("wIW`b:^EMF*4");
      Token token6 = xPathLexer3.not();
      assertEquals("w", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.rightParen();
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("KpoyH\"do o!SB=&'");
      Token token8 = xPathLexer4.at();
      assertEquals("K", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.9988872551329027
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.identifier();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("y#d+;Q");
      xPathLexer0.comma();
      xPathLexer1.literal();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.not();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer2.star();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.0406486778401374
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")s\"mi0X=3");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      String string0 = "";
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.dots();
      xPathLexer1.not();
      xPathLexer0.star();
      xPathLexer1.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.literal();
      xPathLexer3.minus();
      xPathLexer1.plus();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.2586814692765564
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.endPosition();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.015215377703193
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8K2pU|~ZfW#3]E(Ca");
      Token token0 = xPathLexer0.slashes();
      assertEquals("8", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.minus();
      assertEquals("|", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("fW#3]E(Ca", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.comma();
      assertEquals("#", token8.getTokenText());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals("3]", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.colon();
      assertEquals(18, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("8K2pU|~ZfW#3]E(Ca");
      xPathLexer4.star();
      XPathLexer xPathLexer5 = new XPathLexer("Sd=9WcUkqiA5y:#$");
      Token token13 = xPathLexer3.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer3.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.1854977599682317
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.or();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      String string0 = token2.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer1.or();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer("[ (15) ()");
      xPathLexer1.dots();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      int int0 = xPathLexer2.endPosition();
      assertEquals(9, int0);
      
      Token token6 = xPathLexer2.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.not();
      assertEquals(" ", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer1.star();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("&0 F:Hj[C+$[");
      Token token9 = xPathLexer3.plus();
      assertEquals("&", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("b>%");
      Token token10 = xPathLexer1.literal();
      assertNull(token10);
      
      xPathLexer4.relationalOperator();
      Token token11 = xPathLexer2.leftParen();
      assertEquals("(", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.colon();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer("'hEKrY");
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.8822568063382734
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("En0Zu}N4'egaI");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer1.minus();
      xPathLexer0.plus();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer2.dots();
      xPathLexer2.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-1926));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.7641921012060258
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      Token token0 = xPathLexer1.leftBracket();
      assertEquals("b", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.relationalOperator();
      Token token1 = xPathLexer1.comma();
      assertEquals(">", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer2.consume();
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      xPathLexer1.not();
      xPathLexer1.and();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("b", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer2.dollar();
      assertEquals("o", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer1.leftParen();
      Token token5 = xPathLexer2.at();
      assertEquals("m", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.or();
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals(">", token7.getTokenText());
      
      Token token8 = xPathLexer0.not();
      assertEquals("%", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals(".w", token10.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer2.colon();
      assertEquals("e", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer3.plus();
      assertEquals(5, token14.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.684197420778053
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(")", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("i", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer(")si0X=3");
      xPathLexer0.currentPosition();
      Token token6 = xPathLexer2.equals();
      assertEquals(")", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("D;2BsAS1ES;O");
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[3)WzDUs9*b@k=$.");
      xPathLexer2.or();
      Token token8 = xPathLexer4.rightParen();
      assertEquals("[", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer4.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("D", token10.getTokenText());
      
      Token token11 = xPathLexer0.colon();
      assertEquals("X", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.034563706628883
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.number();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.literal();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.024714299816667
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("b>%");
      XPathLexer xPathLexer1 = new XPathLexer("b>%");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("b>%");
      xPathLexer2.identifier();
      Token token0 = xPathLexer1.doubleColon();
      assertEquals("b>", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals("%", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.at();
      assertEquals("b", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(">", token3.getTokenText());
      assertEquals(9, token3.getTokenType());
      
      xPathLexer3.and();
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("{kqmIkp1*.631U%wE");
      Token token4 = xPathLexer4.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer3.star();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer6.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer1.getXPath();
      xPathLexer6.mod();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer("{kqmIkp1*.631U%wE");
      xPathLexer8.literal();
      Token token8 = xPathLexer7.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer8.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer3.number();
      assertEquals(30, token10.getTokenType());
      
      xPathLexer7.not();
      Token token11 = xPathLexer5.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.073387669872175
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dots();
      assertEquals("s", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("T");
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.slashes();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("X=3", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("X", token5.getTokenText());
      
      xPathLexer1.colon();
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer3.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer3.star();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer0.star();
      assertEquals("=", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals("3", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=3.5033338350370613
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L(Sb#: s{bm}a^?gF{");
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.identifier();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.and();
      xPathLexer0.literal();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.274915249726761
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1229));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.8057815703922733
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("i", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("T");
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("X", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("T");
      Token token7 = xPathLexer2.minus();
      assertEquals("T", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("PR!l");
      xPathLexer4.relationalOperator();
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer5 = new XPathLexer("f![");
      Token token10 = xPathLexer5.comma();
      assertEquals("f", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer1.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer6.leftParen();
      assertEquals(1, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("3", token13.getTokenText());
      
      Token token14 = xPathLexer3.number();
      assertEquals(30, token14.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.2591158676348297
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.number();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.mod();
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.9506190219907764
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer1.dots();
      xPathLexer1.rightBracket();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.1107762080955115
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("F9Gx(ADp[+Z");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("F", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.star();
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.minus();
      assertEquals("c", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer3.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer2.dollar();
      assertEquals("o", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer3.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.0150788205343306
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.setXPath("u{oZij=");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("u", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("{", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("Z", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("j", token5.getTokenText());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("u{oZij=");
      Token token7 = xPathLexer1.dots();
      assertEquals("u", token7.getTokenText());
      
      Token token8 = xPathLexer1.not();
      assertEquals("{", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer0.plus();
      assertEquals(5, token13.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token14 = xPathLexer1.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer1.comma();
      assertEquals(32, token15.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token16 = xPathLexer0.leftParen();
      assertEquals(1, token16.getTokenType());
      
      Token token17 = xPathLexer1.leftBracket();
      assertEquals(3, token17.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.6707080023593517
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer3.identifierOrOperatorName();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer4.nextToken();
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer4.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer7 = new XPathLexer("Sd=9WcUkqiA5y:#$");
      Token token10 = xPathLexer5.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer5.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.8100341821965775
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.leftBracket();
      token0.toString();
      token2.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token1.toString();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) ()");
      xPathLexer1.comma();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      assertEquals(")si0X=3", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.7026945551294794
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      XPathLexer xPathLexer1 = new XPathLexer("tT9o|K/M`XHw\" ZE/b");
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer2.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.star();
      Token token3 = xPathLexer1.pipe();
      assertEquals("9", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("zf$Y 51vj;");
      Token token5 = xPathLexer3.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("~b}[pv7");
      Token token7 = xPathLexer3.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.comma();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer5.or();
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer6.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.6944744518958226
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("wIW`b:^EMF*4");
      xPathLexer1.slashes();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.plus();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer2.notEquals();
      xPathLexer3.equals();
      xPathLexer3.colon();
      xPathLexer1.doubleColon();
      xPathLexer5.star();
      Token token0 = xPathLexer5.div();
      assertNull(token0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.7783762174193938
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      String string0 = "b<Y\\uHW";
      XPathLexer xPathLexer0 = new XPathLexer(string0);
      Token token0 = xPathLexer0.pipe();
      assertEquals("b", token0.getTokenText());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("\\", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("H", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("W", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer2.operatorName();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer1.whitespace();
      assertEquals((-2), token13.getTokenType());
      
      Token token14 = xPathLexer0.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer2.nextToken();
      assertEquals((-1), token15.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.3651149177290964
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("7[Rsm5sL##vS|7");
      xPathLexer1.slashes();
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token1 = xPathLexer2.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer2.slashes();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("?IE'67w$xGTNr'");
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer5.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("s", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.leftParen();
      Token token7 = xPathLexer5.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer3.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("I", token8.getTokenText());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=3.1101360715330455
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.373307677318121
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("nt(6KhW!<eZcJ+U");
      Token token0 = xPathLexer0.slashes();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token2 = xPathLexer2.leftParen();
      assertEquals("[", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals("n", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("(", token6.getTokenText());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals("t(", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=3.3439928239458117
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")si0X=3");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("wIW`b:^EMF*4");
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("0", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("wIW`b:^EMF*4");
      Token token2 = xPathLexer1.slashes();
      assertEquals("w", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer3.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("YbK`s/[xsk");
      Token token5 = xPathLexer2.notEquals();
      assertEquals("wI", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("X", token6.getTokenText());
      
      Token token7 = xPathLexer1.colon();
      assertEquals("I", token7.getTokenText());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("=3", token8.getTokenText());
      
      Token token9 = xPathLexer2.star();
      assertEquals("W", token9.getTokenText());
      
      xPathLexer4.div();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
  }
}
