/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 17:17:16 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URISyntaxException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4804779276453799
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-569));
      classWriter0.index = (-569);
      classWriter0.version = 2;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-569), "kh&Z])%;4bE)-([N[#C", "kh&Z])%;4bE)-([N[#C", "kh&Z])%;4bE)-([N[#C", "kh&Z])%;4bE)-([N[#C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kh&Z])%;4bE)-([N[#C");
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1590);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.getSize();
      fieldWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("U~quXRLXC#Kx^Kpj.7", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ulmOOKo");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte) (-8);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kh&Z])%;4bE)|D[N[#C");
      ClassWriter classWriter0 = new ClassWriter((byte) (-8));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.index = (int) (byte) (-8);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-8), "kh&Z])%;4bE)|D[N[#C", "kh&Z])%;4bE)|D[N[#C", "kh&Z])%;4bE)|D[N[#C", "kh&Z])%;4bE)|D[N[#C");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fieldWriter0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("", "kh&Z])%;4bE)|D[N[#C");
      MockFile mockFile1 = new MockFile((File) null, "ulmOOKo");
      mockFile0.toPath();
      mockFile1.renameTo(mockFile0);
      mockFile1.setReadable(false, false);
      mockFile1.getCanonicalPath();
      try { 
        MockURI.URI("kh&Z])%;4bE)|D[N[#C", "", "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 4: kh&Z])%;4bE)|D[N[#C://#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ulmOOKo");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte) (-8);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kh&Z])%;4bE)|D[N[#C");
      ClassWriter classWriter0 = new ClassWriter((byte) (-8));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-8), "kh&Z])%;4bE)|D[N[#C", "kh&Z])%;4bE)|D[N[#C", "kh&Z])%;4bE)|D[N[#C", "kh&Z])%;4bE)|D[N[#C");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "kh&Z])%;4bE)|D[N[#C";
      stringArray0[3] = "";
      stringArray0[4] = "XA.8]8[Y";
      stringArray0[5] = "XA.8]8[Y";
      classWriter0.visit((byte) (-8), 3, "", "XA.8]8[Y", "", stringArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fieldWriter0.getSize();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("", "kh&Z])%;4bE)|D[N[#C");
      MockFile mockFile1 = new MockFile((File) null, "ulmOOKo");
      mockFile0.toPath();
      mockFile1.renameTo(mockFile0);
      mockFile1.setReadable(false, false);
      mockFile1.getCanonicalPath();
      try { 
        MockURI.URI("kh&Z])%;4bE)|D[N[#C", "", "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 4: kh&Z])%;4bE)|D[N[#C://#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-569));
      classWriter0.version = 372;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-569), "kh&Z])%;4bE)|([N[#C", "kh&Z])%;4bE)|([N[#C", "kh&Z])%;4bE)|([N[#C", "kh&Z])%;4bE)|([N[#C");
      ByteVector byteVector0 = new ByteVector(372);
      byteVector0.putLong(0L);
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((InputStream) null, pipedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1827);
      classWriter0.index = 131072;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1827, "dFvT4M1(v)^$7*x", "The list of names must not be null", "uD", "fe");
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putUTF8("fe");
      // Undeclared exception!
      fieldWriter0.put(byteVector1);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0225955941538991
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-569));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-569), "", " {-#PKq?`vgVm(\"", " {-#PKq?`vgVm(\"", "kh&Z])%;4bE)|([N[#C");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(57);
      Attribute attribute0 = new Attribute("tWj>mB");
      fieldWriter0.visitAttribute(attribute0);
      byteVector0.putUTF8("%mXYQp}NY)BSLE5!");
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      String string0 = null;
      String string1 = "Sw";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Sw", "Sw", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byte[] byteArray0 = new byte[4];
      byteVector0.length = (-1512);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-16);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2525306450725109
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "<XM<C{gX]C61/", "JFw", (String) null, "JFw");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      char[] charArray0 = new char[2];
      charArray0[0] = 't';
      charArray0[1] = 't';
      Label[] labelArray0 = new Label[2];
      Label label0 = new Label();
      Label label1 = label0.next;
      Label label2 = new Label();
      labelArray0[1] = label2;
      attribute0.next = null;
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1956);
      int int0 = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "RQiY", "RQiY", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5156678257434923
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter((-569));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-569), "", "", "", "");
      String string0 = "o";
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "o", "org.apache.commons.io.filefilter.NameFileFilter", "", (Object) null);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("aE>fM 6xp", false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fieldWriter0.visitAnnotation("^ht]koj", true);
      ByteVector byteVector0 = new ByteVector(36);
      ByteVector byteVector1 = byteVector0.put11(2, (-569));
      ByteVector byteVector2 = byteVector1.put12(1, 30);
      byteVector2.putLong(30);
      fieldWriter1.put(byteVector2);
      fieldWriter1.getSize();
      fieldWriter0.put(byteVector2);
      Attribute attribute0 = new Attribute("The strings must not be null");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)121;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 1, "Sw", "Sw", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(33554432);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte) (-16);
      fieldWriter1.put(byteVector1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("/", "Sw");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ulmOOKo");
      FileSystemHandling.createFolder(evoSuiteFile1);
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("ulmOOKo");
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.appendLineToFile(evoSuiteFile3, "");
      FileSystemHandling.createFolder(evoSuiteFile3);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile2);
      MockFile mockFile1 = new MockFile("[5d|-#b0;dei@", "Sw");
      boolean boolean1 = FileSystemHandling.appendLineToFile(evoSuiteFile4, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 33554432, " {-#PKq?`vgVm(\"", "", " {-#PKq?`vgVm(\"", " {-#PKq?`vgVm(\"");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "k");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("", "");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "k");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("ulmOOKo");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.createFolder(evoSuiteFile1);
      MockFile mockFile1 = new MockFile("", "k");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, " {-#PKq?`vgVm(\"");
      ByteVector byteVector1 = null;
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3866675451105437
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Object object0 = new Object();
      Object object1 = new Object();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1645), "Er2", "Deprecated", "Deprecated", "Er2");
      fieldWriter0.visitAnnotation("b^#,?#Oc/^cX", true);
      fieldWriter0.visitAnnotation("Er2", false);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33554432);
      String string0 = null;
      Object object0 = new Object();
      String string1 = "Sw";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Sw", "Sw", (String) null, (Object) null);
      classWriter0.newConstItem("Sw");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte(33554432);
      byteVector0.putShort(2);
      ByteVector byteVector1 = classWriter0.pool;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      fieldWriter0.getSize();
      String string2 = "m /h0p9";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string3 = "_o~^48e,mQ:t-^_v]`V";
      MockFile mockFile0 = new MockFile("m /h0p9");
      MockFile mockFile1 = new MockFile(mockFile0, "Sw");
      String string4 = "p4b=iy!CErd}S1|$bu";
      try { 
        MockFile.createTempFile("p4b=iy!CErd}S1|$bu", "p4b=iy!CErd}S1|$bu", (File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1076));
      String string0 = "I#WK1[";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1076), "I#WK1[", "", "I#WK1[", "");
      int int0 = (-976);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1218));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "_yP!-\t9", "_yP!-\t9", (String) null, "y>E");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = new ByteVector();
      fieldWriter0.getSize();
      Enumeration<InputStream> enumeration0 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "_FP!-\\bu9";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("ulmOOKo");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      int int0 = (-1182);
      ClassWriter classWriter0 = new ClassWriter((-1182));
      String string1 = "";
      String string2 = null;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "_FP!-\bu9", "_FP!-\bu9", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putUTF8("_FP!-\bu9");
      // Undeclared exception!
      try { 
        classWriter0.visitField((-1182), "", (String) null, "_FP!-\bu9", "M7X0=tUZl}T7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(130);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, ".s.IFJDCS", ".s.IFJDCS", "", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = null;
      int int0 = 2106;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 2106);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-18), "Deprecated", "", "`pTQ", bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = ".s.IFJDCS";
      int int0 = 0;
      ClassWriter classWriter0 = new ClassWriter(0);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "", "nlFr", "mk_/^MQC9/]D^W", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@25a9d06f
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
