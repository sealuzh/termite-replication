/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 18:43:17 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0426322117102855
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      Object object0 = new Object();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      orderState0.m_maxCommission = 0.0;
      EWrapperMsgGenerator.tickSnapshotEnd(0);
      EWrapperMsgGenerator.tickString(0, 0, (String) null);
      order0.m_trailStopPrice = (double) 0;
      orderState0.m_commission = 0.0;
      order0.m_algoStrategy = "FA: ";
      OrderState orderState1 = new OrderState();
      orderState1.m_maintMargin = "";
      orderState0.m_initMargin = null;
      order0.m_stockRefPrice = 0.0;
      order0.m_ocaGroup = "";
      order0.m_goodTillDate = null;
      orderState1.m_maintMargin = "";
      orderState1.m_maintMargin = null;
      orderState1.m_maxCommission = (double) 0;
      String string0 = EWrapperMsgGenerator.tickGeneric(1, 1, 0);
      orderState1.m_commissionCurrency = null;
      EWrapperMsgGenerator.tickSize(1, 91, Integer.MAX_VALUE);
      orderState1.m_initMargin = "tradingClass = ";
      OrderState orderState2 = new OrderState((String) null, (String) null, " futureExpiry = ", "id=0 =============== end ===============", 0, 0.0, 'y', (String) null, (String) null);
      order0.m_ocaGroup = "Kzj!ZI";
      orderState2.m_maxCommission = orderState2.m_maxCommission;
      Contract contract0 = new Contract(1, "7kopvQZ5mvAq$", "~QJK`ZIb->", (String) null, 570, "c>E9mb+_i*W", "  It does not support realtime bar data query cancellation.", "askEFP", (String) null, (String) null, (Vector) null, "U4", false, (String) null, "z");
      String string1 = EWrapperMsgGenerator.openOrder(570, contract0, order0, orderState1);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1785118019005787
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(91, "FA:", "FA:", "FA:", 91, "al]goPat=", "al]goPat=", (String) null, (String) null, "al]goPat=", vector0, "al]goPat=", true, "tradingClass = ", "FA:");
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      orderState0.m_maxCommission = 0.0;
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd(0);
      assertEquals("id=0 =============== end ===============", string0);
      
      String string1 = EWrapperMsgGenerator.tickString(0, 0, (String) null);
      assertEquals("id=0  bidSize=null", string1);
      
      order0.m_trailStopPrice = (double) 0;
      orderState0.m_commission = 0.0;
      order0.m_algoStrategy = "FA:";
      OrderState orderState1 = new OrderState((String) null, "", "tradingClass = ", (String) null, 112.828744531847, 91, 91, (String) null, "id=0  bidSize=null");
      orderState1.m_maintMargin = "";
      orderState0.m_initMargin = null;
      String string2 = EWrapperMsgGenerator.tickGeneric(1, Integer.MAX_VALUE, 91.0);
      assertEquals("id=1  unknown=91.0", string2);
      
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      String string3 = EWrapperMsgGenerator.tickSize((-3311), Integer.MAX_VALUE, 1840);
      assertEquals("id=-3311  unknown=1840", string3);
      
      OrderState orderState2 = new OrderState((String) null, "SCANNER PARAMETERS:", (String) null, "SCANNER PARAMETERS:", (-5955.516862142), 0.0, (-1.0), "id=-923  modelOptComp: vol = 13.0 delta = N/A: modelPrice = N/A: pvDividend = N/A", "u[\"I]4eopM");
      EWrapperMsgGenerator.openOrder(2, contract0, order0, orderState1);
      String string4 = EWrapperMsgGenerator.tickOptionComputation(2145658952, 0, Integer.MAX_VALUE, 1.7976931348623157E308, 1, 1840);
      assertEquals("id=2145658952  bidSize: vol = 2.147483647E9 delta = N/A", string4);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(4, 13, 884.194889245, (-1.0), 0.0, 1.7976931348623157E308);
      assertEquals("id=4  modelOptComp: vol = 884.194889245 delta = -1.0: modelPrice = 0.0: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      locale0.toLanguageTag();
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList1.sort(comparator0);
      Vector<Locale> vector2 = new Vector<Locale>();
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector2);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector2);
      Locale locale1 = Locale.CHINESE;
      locale1.getDisplayCountry();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4, locale_FilteringMode2);
      EWrapperMsgGenerator.tickOptionComputation(13, 13, 2617.56477295, (-1615.477701), 1.7976931348623157E308, (-1117.2425934922826));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-2736));
      vector0.add(integer0);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer1 = new Integer((-2736));
      vector0.add(integer1);
      vector0.addAll((Collection<? extends Integer>) vector1);
      vector0.add(integer0);
      vector0.add(integer0);
      Integer integer2 = new Integer((-4204));
      vector0.add(integer2);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      Integer integer3 = new Integer((-3528));
      vector0.add(integer3);
      Integer integer4 = new Integer((-929));
      vector0.add(integer4);
      EWrapperMsgGenerator.tickOptionComputation((-929), 13, 13, (-2416.671), (-4204), (-4204));
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      System.setCurrentTimeMillis(171L);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2);
      linkedList0.add((Locale.LanguageRange) null);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list3, locale_FilteringMode1);
      Vector<Locale.LanguageRange> vector2 = new Vector<Locale.LanguageRange>();
      vector2.clear();
      Locale.filter((List<Locale.LanguageRange>) vector2, (Collection<Locale>) list0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.ITALY;
      locale0.getUnicodeLocaleKeys();
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "At2XJEzo8bYog!6+h", "At2XJEzo8bYog!6+h", 0, "At2XJEzo8bYog!6+h", (String) null, 0, "At2XJEzo8bYog!6+h", "4D", "At2XJEzo8bYog!6+h", "\"5%,dWvpCC", "p6t<>\r`S", "\"5%,dWvpCC", "symbol = ", "$=/m-pgnr ?a)");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(0, 0, contractDetails0, "  It does not support current time requests.", "shortable", (String) null, "symbol = ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 4, 698.2796028019, 13.0, (-1789.726), 1830.41522625218, (-1.0), " goodTillDate=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "F3<=|Q(\"0a8[r*:#l|", "xBqYM%y^UBI=$55", 1.7976931348623157E308, "V%>I@ z7!nd+Z", ".", 0, ".", "shortable", ".", "iw;g7>Sl8}&u/:2Hv", "X$6!J", "BAG", "kJF1z-gr", " noAutoExecute");
      contractDetails0.m_category = "X$6!J";
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails((-2353), contractDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.68644405381145
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      EWrapperMsgGenerator.execDetailsEnd(97);
      String string0 = EWrapperMsgGenerator.SCANNER_PARAMETERS;
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract(1322, "reqId = 97 =============== end ===============", "FA:", "reqId = 97 =============== end ===============", 97, " algoParams={", " algoParams={", (String) null, "I:", " algoParams={", vector0, "BOND", false, "tradingClass = ", "FA:");
      Order order0 = new Order();
      order0.m_shortSaleSlot = 97;
      contract0.m_comboLegsDescrip = "";
      vector0.add((Object) "SCANNER PARAMETERS:");
      OrderState orderState0 = new OrderState();
      orderState0.m_maxCommission = 0.0;
      EWrapperMsgGenerator.tickSnapshotEnd(0);
      EWrapperMsgGenerator.tickString(0, 0, (String) null);
      order0.m_auxPrice = 0.0;
      orderState0.m_commission = (-1329.63298052951);
      OrderState orderState1 = new OrderState((String) null, "", "tradingClass = ", (String) null, 112.828744531847, 97, 1322, (String) null, "id=0  bidSize=null");
      orderState0.m_initMargin = "0gN";
      orderState1.m_maintMargin = "19M8z}#D$#BVb?:_ER";
      orderState1.m_maxCommission = (double) 0;
      EWrapperMsgGenerator.openOrder(0, contract0, order0, orderState1);
      EWrapperMsgGenerator.tickGeneric(1, 1, 0);
      EWrapperMsgGenerator.tickSize(1, 1322, (-467));
      EWrapperMsgGenerator.scannerDataEnd(211);
      EWrapperMsgGenerator.openOrderEnd();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Execution execution0 = new Execution();
      execution0.m_clientId = 1612;
      Execution execution1 = new Execution();
      EWrapperMsgGenerator.tickSnapshotEnd(0);
      execution1.m_permId = 1612;
      EWrapperMsgGenerator.tickPrice(0, 0, 1612, 0);
      EWrapperMsgGenerator.scannerDataEnd(1612);
      System.setCurrentTimeMillis(1612);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-2736));
      vector0.add(integer0);
      Integer integer1 = new Integer((-3528));
      vector0.add(integer1);
      Integer integer2 = new Integer((-933));
      vector0.add(integer2);
      Integer integer3 = new Integer((-2736));
      vector0.add(integer0);
      Integer integer4 = new Integer((-3528));
      vector0.add((Integer) null);
      Integer integer5 = new Integer(1);
      vector0.add(integer0);
      EWrapperMsgGenerator.tickOptionComputation((-1827), 13, (-933), 118.0, (-1640.4211695552), 118.0);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.UK;
      locale0.clone();
      vector0.add(locale0);
      Locale locale1 = Locale.CHINESE;
      locale1.getDisplayCountry();
      locale1.stripExtensions();
      vector0.add(locale1);
      vector0.add(locale1);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 1.7976931348623157E308, (-933), 733.0, 44);
      assertEquals("id=13  modelOptComp: vol = N/A delta = N/A: modelPrice = 733.0: pvDividend = 44.0", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      EWrapperMsgGenerator.tickOptionComputation((-933), 13, 13, 13, 1.7976931348623157E308, 1.7976931348623157E308);
      Vector<Locale> vector1 = new Vector<Locale>();
      Locale locale0 = Locale.ITALY;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Object object0 = new Object();
      Locale locale1 = Locale.ITALY;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) locale1);
      Predicate<Object> predicate1 = predicate0.negate();
      Vector<Locale> vector2 = new Vector<Locale>();
      vector2.ensureCapacity(13);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Object object1 = new Object();
      Predicate<Object> predicate3 = Predicate.isEqual(object1);
      predicate3.and(predicate1);
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      predicate2.and(predicate1);
      vector2.removeIf(predicate4);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange((String) null, 2427.95151224834);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Order order0 = new Order();
      order0.m_account = "'KkMUVrL(>pv%v$!(-";
      order0.m_tif = "_^#|u@<X";
      OrderState orderState0 = new OrderState("", "_^#|u@<X", "7;6g,h<$$)br!.CB+3F", "id=98 date = BOND open=4692.64 high=-1740.42524609347 low=-2550.8051 close=3825.83561 volume=-62 count=98 WAP=0.0 hasGaps=false", (-91.0129), 0.0, (-2490.5535156417236), "_^#|u@<X", "");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder(98, (Contract) null, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<Locale> list5 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4, locale_FilteringMode2);
      vector0.add(locale3);
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list5);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list5);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-733), (-733), (-733), 1.0, 99, 0);
      assertEquals("id=-733  unknown: vol = N/A delta = 1.0", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(4, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice(4, 1, 4, 1);
      assertEquals("id=4  bidPrice=4.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list3);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(294, 99, 0, (-733), 0, 0);
      assertEquals("id=294  unknown: vol = 0.0 delta = N/A", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_delta = 38.0;
      underComp0.m_conId = 63;
      String string0 = EWrapperMsgGenerator.historicalData(63, "<Y Cs#V##Y", 38.0, 124.85, (-2587.58), 1.7976931348623157E308, 1009, 63, 1545.5757, false);
      assertEquals("id=63 date = <Y Cs#V##Y open=38.0 high=124.85 low=-2587.58 close=1.7976931348623157E308 volume=1009 count=63 WAP=1545.5757 hasGaps=false", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2328L));
      String string0 = EWrapperMsgGenerator.historicalData(10, (String) null, 1L, 69.4522, 160.4951319335997, 160.4951319335997, 1232, 1232, 1232, false);
      assertEquals("id=10 date = null open=1.0 high=69.4522 low=160.4951319335997 close=160.4951319335997 volume=1232 count=1232 WAP=1232.0 hasGaps=false", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2328L));
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(176, (-4110), "updateMktDepth: ", 10, 1942, 10, (-2146164654));
      assertEquals("updateMktDepth: 176 -4110 updateMktDepth:  10 1942 10.0 -2146164654", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, (String) null, 0.0, (String) null, "p&+Rst", (-3135), (String) null, "acctNumber = ", "85_e,_TP'-R&wj$Y", " scaleInitLevelSize=", "OptionCallOpenInterest", "acctNumber = ", (String) null, "updateMktDepth: -1 13 -1666 -1666 -1666.0 13");
      String string0 = EWrapperMsgGenerator.bondContractDetails((-3135), contractDetails0);
      assertEquals("reqId = -3135 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = p&+Rst\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Contract contract0 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract0, (String) null, "6oTo{sAumr~'q3U:);3", 1850, "y~vsI23F1~o/lG`", "reqId = -1428 =============== end ===============", 23, "[SVm~N", ".G", "com.ib.client.EClientSocket", "&7fZu#^s\"P~", (String) null, "y~vsI23F1~o/lG`", (String) null, "O");
      String string0 = EWrapperMsgGenerator.scannerData(1850, 1850, contractDetails0, " referencePriceType=", "a%'&XN<", "6oTo{sAumr~'q3U:);3", "rt~<vS!C@h2'|7%\"J1");
      assertEquals("id = 1850 rank=1850 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=6oTo{sAumr~'q3U:);3 distance= referencePriceType= benchmark=a%'&XN< projection=6oTo{sAumr~'q3U:);3 legsStr=rt~<vS!C@h2'|7%\"J1", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Execution execution0 = new Execution();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Contract contract0 = new Contract(13, (String) null, (String) null, "bidExch", 0, " quantity=", " quantity=", "auctionPrice", "Lub/hG$ Z>ND", (String) null, vector0, (String) null, true, (String) null, "lowEFP");
      ContractDetails contractDetails0 = new ContractDetails(contract0, "FA:", "Lub/hG$ Z>ND", 0, "oH-_p3d/uZkzYl!SEl9", "e>[", (-1684), ",5{CY", "AvgVolume", "o@@d6&{/*//#ky", "o/=}l", " continuousUpdate=", (String) null, (String) null, (String) null);
      String string0 = EWrapperMsgGenerator.scannerData((-532), 1500, contractDetails0, (String) null, (String) null, " auxPrice=", "AvgVolume");
      assertEquals("id = -532 rank=1500 symbol=null secType=null expiry=bidExch strike=0.0 right= quantity= exchange=auctionPrice currency=Lub/hG$ Z>ND localSymbol=null marketName=FA: tradingClass=Lub/hG$ Z>ND distance=null benchmark=null projection= auxPrice= legsStr=AvgVolume", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickPrice((-3970), 88, 88, (-3970));
      assertEquals("id=-3970  unknown=88.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = EWrapperMsgGenerator.tickPrice(4, 13, 0.0, 4);
      assertEquals("id=4  modelOptComp=0.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode2);
      vector0.add(locale3);
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list4);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      String string0 = EWrapperMsgGenerator.fundamentalData(294, "Japan");
      assertEquals("id  = 294 len = 5\nJapan", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      EWrapperMsgGenerator.tickOptionComputation(13, 13, (-573.3549622481526), 2.146763434E9, 2.146763434E9, 0.0);
      Vector<Locale> vector1 = new Vector<Locale>();
      Locale locale1 = Locale.CHINA;
      vector1.add(locale0);
      Locale locale2 = Locale.ITALY;
      locale1.getDisplayCountry();
      vector0.add(locale0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) vector1, locale_FilteringMode0);
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode1);
      Locale.lookupTag(linkedList0, (Collection<String>) null);
      Predicate<Object> predicate1 = predicate0.negate();
      vector0.ensureCapacity(13);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate.isEqual((Object) locale0);
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      predicate3.or(predicate0);
      Predicate<Object> predicate4 = predicate1.and(predicate2);
      vector1.removeIf(predicate4);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("\n", (-702.10204));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=-702.10204
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Vector<Locale.LanguageRange> vector2 = new Vector<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2);
      Locale locale1 = Locale.UK;
      Vector<Locale> vector3 = new Vector<Locale>();
      vector3.add(locale0);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      locale2.stripExtensions();
      Locale locale3 = Locale.GERMAN;
      vector0.add(locale3);
      vector0.add(locale1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector2, (Collection<Locale>) list1, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector3);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-1134), (-1322), 677.89507783837, 1.7976931348623157E308, (-2310.65008892392), 677.89507783837);
      assertEquals("id=-1134  unknown: vol = 677.89507783837 delta = N/A", string0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode2);
      vector0.add(locale3);
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2, locale_FilteringMode3);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list4);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(294, 99, 1.7976931348623157E308, 0, 1.7976931348623157E308, 0);
      assertEquals("id=294  unknown: vol = N/A delta = 0.0", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Locale locale1 = Locale.FRENCH;
      vector0.add(locale1);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      vector0.add(locale3);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(294, 104, 1.7976931348623157E308, (-733), 1.7976931348623157E308, 0);
      assertEquals("id=294  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode2);
      vector0.add(locale3);
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2, locale_FilteringMode3);
      List<Locale> list4 = new Vector<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(816, 816, 734.183593189, 0, 0.0, 734.183593189);
      assertEquals("id=816  unknown: vol = 734.183593189 delta = 0.0", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-2736));
      vector0.add(integer0);
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer1 = new Integer((-2736));
      vector0.add(integer1);
      vector0.addAll((Collection<? extends Integer>) vector1);
      vector0.add(integer0);
      vector0.add(integer0);
      Integer integer2 = new Integer((-4204));
      vector0.add(integer2);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      UnaryOperator.identity();
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer3 = new Integer((-834));
      Integer integer4 = new Integer((-2736));
      Integer integer5 = new Integer(1447);
      vector1.add(integer5);
      Integer integer6 = new Integer((-834));
      vector2.add(integer3);
      EWrapperMsgGenerator.tickOptionComputation((-929), 3251, (-2181.3786565691), 1447, (-2638.352), 1.0);
      System.setCurrentTimeMillis(321L);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_conId = (-2145991303);
      String string0 = EWrapperMsgGenerator.currentTime((-2145991303));
      assertEquals("current time = -2145991303 (Dec 31, 1901 3:18:17 AM)", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-933));
      vector0.add(integer0);
      vector0.iterator();
      EWrapperMsgGenerator.tickOptionComputation((-933), 13, 13, (-2416.671), 1.7976931348623157E308, 1.7976931348623157E308);
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(4, 13, "com.ib.client.TickType", "sMs'+j\"%MUr[yHt");
      assertEquals("MsgId=4 :: MsgType=13 :: Origin=sMs'+j\"%MUr[yHt :: Message=com.ib.client.TickType", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale locale2 = Locale.CHINESE;
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode2);
      vector0.add(locale3);
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list2, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list4);
      String string0 = EWrapperMsgGenerator.updateMktDepth((-666), (-2248), 2077216727, (-636), (-636), 1);
      assertEquals("updateMktDepth: -666 -2248 2077216727 -636 -636.0 1", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP((-1893), 1, 1, "tH:eId/!.Hi{GN.k<", (-1.0), (-1893), "$F@.oVP.:apN1NAJB>", 2183.610908144011, (-1.0));
      assertEquals("id=-1893  bidPrice: basisPoints = 1.0/tH:eId/!.Hi{GN.k< impliedFuture = -1.0 holdDays = -1893 futureExpiry = $F@.oVP.:apN1NAJB> dividendImpact = 2183.610908144011 dividends to expiry = -1.0", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Execution execution0 = new Execution();
      execution0.m_execId = " equityWithLoan=";
      execution0.m_time = "|Ph";
      String string0 = EWrapperMsgGenerator.managedAccounts((String) null);
      assertEquals("Connected : The list of managed accounts are : [null]", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-2736));
      vector0.add(integer0);
      Integer integer1 = new Integer((-3528));
      vector0.add(integer1);
      vector0.add(integer1);
      Integer integer2 = new Integer((-933));
      vector0.add(integer2);
      vector0.iterator();
      String string0 = EWrapperMsgGenerator.nextValidId(1322);
      assertEquals("Next Valid Order ID: 1322", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Execution execution0 = new Execution();
      execution0.m_liquidation = (-701);
      String string0 = EWrapperMsgGenerator.tickEFP(0, 0, 0, (String) null, (-1733.3271172700554), (-4037), (String) null, (-701), 1765.164785479757);
      assertEquals("id=0  bidSize: basisPoints = 0.0/null impliedFuture = -1733.3271172700554 holdDays = -4037 futureExpiry = null dividendImpact = -701.0 dividends to expiry = 1765.164785479757", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_price = (-2587.58);
      String string0 = EWrapperMsgGenerator.tickString(0, (-34707026), "bF");
      assertEquals("id=0  unknown=bF", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      ContractDetails contractDetails0 = new ContractDetails((Contract) null, "com.ib.client.TickType", (String) null, 0.0, "o%0m7&_V&#", (String) null, (-4248), "7Ao5(Hp-M]n", "m3", "m3", (String) null, "OptionCallOpenInterest", "  It does not support options exercise from the API.", "*5_eP_TP'-R&wqPj$3", "id=-923  modelOptComp: vol = 13.0 delta = N/A: modelPrice = N/A: pvDividend = N/A");
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails(4, contractDetails0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      vector0.add(locale0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      locale0.getScript();
      locale0.getUnicodeLocaleKeys();
      Contract contract0 = new Contract();
      Execution execution0 = new Execution(0, 0, (String) null, "t", "s/*-p{6]No!ib{", (String) null, (String) null, 1105, 1105, 1105, 129, 129, (-1217.0));
      String string0 = EWrapperMsgGenerator.execDetails(1105, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 1105\norderId = 0\nclientId = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = null\ntime = t\nacctNumber = s/*-p{6]No!ib{\nexecutionExchange = null\nside = null\nshares = 1105\nprice = 1105.0\npermId = 1105\nliquidation = 129\ncumQty = 129\navgPrice = -1217.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Execution execution0 = new Execution();
      execution0.m_cumQty = (-701);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails((-701), (Contract) null, execution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Vector<Locale> vector0 = new Vector<Locale>();
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0);
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      locale0.getUnicodeLocaleKeys();
      Contract contract0 = new Contract();
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Contract contract0 = new Contract();
      TagValue tagValue0 = new TagValue("SY-,tHq@dm", (String) null);
      tagValue0.m_tag = null;
      vector0.add(tagValue0);
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, (-1308), 0, (-4965.29646407312), 1.0, 2125344641, (-2707.26869872), (String) null);
      assertNotNull(string0);
      assertEquals("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n-1308 0.0 -4965.29646407312 1.0 2.125344641E9 -2707.26869872 null", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.contractDetails((-500), contractDetails0);
      assertEquals("reqId = -500 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = 0.0\nprice magnifier = 0\norderTypes = null\nvalidExchanges = null\nunderConId = 0\nlongName = null\ncontractMonth = null\nindustry = null\ncategory = null\nsubcategory = null\ntimeZoneId = null\ntradingHours = null\nliquidHours = null\n ---- Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.trimToSize();
      Integer integer0 = new Integer((-2736));
      vector0.add(integer0);
      Integer integer1 = new Integer((-933));
      vector0.add(integer1);
      Integer integer2 = new Integer((-933));
      vector0.add(integer2);
      vector0.iterator();
      String string0 = EWrapperMsgGenerator.realtimeBar((-2020), (-3794L), 3998, (-2159.0), (-1231.40715), 1487.75914114913, (-933), 1143, 1870);
      assertEquals("id=-2020 time = -3794 open=3998.0 high=-2159.0 low=-1231.40715 close=1487.75914114913 volume=-933 count=1870 WAP=1143.0", string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OrderState orderState0 = new OrderState("<'AsSt?6y", "<'AsSt?6y", "<'AsSt?6y", "<'AsSt?6y", 2271.818668593083, 2271.818668593083, (-701), "nvt-9oLbRH/heLjV%z", "<'AsSt?6y");
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract0 = new Contract((-701), "[uu%w", (String) null, "je8q?kE$m1-lAy:i", 0.0, "<'AsSt?6y", "acctNumber = ", "nvt-9oLbRH/heLjV%z", " high=", "-?@WTvXFj9y7+@tm'v", vector0, "EM=66%|| sdNNQ!I", false, "_", "askEFP");
      Order order0 = new Order();
      OrderState orderState1 = new OrderState();
      String string0 = EWrapperMsgGenerator.receiveFA(2140179281, "bidPrice");
      assertEquals("FA: null bidPrice", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      Vector<List<String>> vector0 = new Vector<List<String>>();
      Contract contract0 = new Contract((-1), "qvk^:c#_hC`", "qvk^:c#_hC`", "';S~", (-2790), "z[QA YHf;", "oB<.'j2f2:#$TZ", "\"^na%.HR`'7.l:15hl+", "qvk^:c#_hC`", " avgFillPrice=", vector0, "qvk^:c#_hC`", true, " nbboPriceCap=", "z[QA YHf;");
      UnderComp underComp0 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation((-2790), (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      String string0 = EWrapperMsgGenerator.deltaNeutralValidation((-34707031), underComp0);
      assertEquals("id = -34707031 underComp.conId =0 underComp.delta =0.0 underComp.price =0.0", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.JAPAN;
      vector0.add(locale0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1, locale_FilteringMode0);
      Locale locale1 = Locale.UK;
      vector0.add(locale1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Locale locale2 = Locale.CHINESE;
      locale0.getDisplayCountry();
      Locale locale3 = locale0.stripExtensions();
      vector0.add(locale0);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list3, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) vector0, locale_FilteringMode1);
      vector0.add(locale1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) vector1);
      vector0.add(locale3);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list1, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list3);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-2427), (-733), 1.7976931348623157E308, 294, 91, (-2427));
      assertEquals("id=-2427  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateAccountValue((String) null, "|Ph", " tradingClass=", "  It does not support notHeld parameter.");
      assertEquals("updateAccountValue: null |Ph  tradingClass=   It does not support notHeld parameter.", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Execution execution0 = new Execution();
      String string0 = EWrapperMsgGenerator.orderStatus(0, (String) null, 1149, 1, 0, 1416, (-1536), (-1.0), (-2646), "(Z,12y8G/cRqC");
      assertEquals("order status: orderId=0 clientId=-2646 permId=1416 status=null filled=1149 remaining=1 avgFillPrice=0.0 lastFillPrice=-1.0 parent Id=-1536 whyHeld=(Z,12y8G/cRqC", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.scannerParameters("]C W*FHR;EAP");
      assertEquals("SCANNER PARAMETERS:\n]C W*FHR;EAP", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Order order0 = new Order();
      OrderState orderState0 = new OrderState();
      order0.m_eTradeOnly = true;
      Order order1 = new Order();
      Order order2 = new Order();
      String string0 = EWrapperMsgGenerator.contractDetailsEnd(0);
      assertEquals("reqId = 0 =============== end ===============", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("k2#v`g +5DdM");
      assertEquals("accountDownloadEnd: k2#v`g +5DdM", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      String string0 = EWrapperMsgGenerator.updateAccountTime(">uR|{saIihFXt");
      assertEquals("updateAccountTime: >uR|{saIihFXt", string0);
  }
}
