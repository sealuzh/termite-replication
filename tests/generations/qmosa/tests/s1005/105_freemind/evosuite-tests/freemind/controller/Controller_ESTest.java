/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 18:11:03 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindApplet;
import freemind.main.FreeMindMain;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.schememode.SchemeMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.ContainerEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.util.Collection;
import java.util.LinkedList;
import javax.swing.JColorChooser;
import javax.swing.JEditorPane;
import javax.swing.JPasswordField;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.JTextComponent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JTextComponent.getKeymap("X.D'3o9:E{xmUN'I");
      Controller.Closer controller_Closer0 = new Controller.Closer();
      // Undeclared exception!
      try { 
        controller_Closer0.windowClosing((WindowEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$Closer", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Color color0 = Color.CYAN;
      JEditorPane jEditorPane0 = new JEditorPane("U!8", "4");
      JEditorPane jEditorPane1 = new JEditorPane();
      int int0 = 456;
      jEditorPane0.paintImmediately(456, 456, (-2229), 0);
      KeyEvent keyEvent0 = new KeyEvent(jEditorPane0, 456, 4853L, 0, (-1377), '\u0016');
      keyEvent0.setSource(defaultStyledDocument0);
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BrowseMode browseMode0 = new BrowseMode();
      SchemeMode schemeMode0 = new SchemeMode();
      schemeMode0.getController();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BrowseMode browseMode0 = new BrowseMode();
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("[3{", (VetoableChangeListener) null);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("", (VetoableChangeListener) null);
      VetoableChangeListenerProxy vetoableChangeListenerProxy2 = new VetoableChangeListenerProxy("[3{", (VetoableChangeListener) null);
      VetoableChangeListenerProxy vetoableChangeListenerProxy3 = new VetoableChangeListenerProxy("DOMNodeRemovedFromDocument", (VetoableChangeListener) null);
      VetoableChangeListenerProxy vetoableChangeListenerProxy4 = new VetoableChangeListenerProxy("", vetoableChangeListenerProxy3);
      JTextField jTextField0 = new JTextField();
      JPasswordField jPasswordField0 = new JPasswordField();
      jPasswordField0.isEditable();
      JTextArea jTextArea0 = new JTextArea();
      JTextField jTextField1 = new JTextField("Hzp=Q^u", 3437);
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<JTabbedPane> linkedList0 = new LinkedList<JTabbedPane>();
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Controller.removePropertyChangeListener((FreemindPropertyListener) null);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JPasswordField jPasswordField0 = new JPasswordField();
      ContainerEvent containerEvent0 = new ContainerEvent(jPasswordField0, 168, jPasswordField0);
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertTrue(jColorChooser0.getFocusTraversalKeysEnabled());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Color color0 = Color.CYAN;
      JEditorPane jEditorPane0 = new JEditorPane();
      JEditorPane jEditorPane1 = new JEditorPane();
      JTextComponent.removeKeymap("All");
      JTextComponent.KeyBinding[] jTextComponent_KeyBindingArray0 = new JTextComponent.KeyBinding[8];
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(456, 456, true);
      JTextComponent.KeyBinding jTextComponent_KeyBinding0 = new JTextComponent.KeyBinding(keyStroke0, "");
      jTextComponent_KeyBindingArray0[0] = jTextComponent_KeyBinding0;
      JTextComponent.KeyBinding jTextComponent_KeyBinding1 = new JTextComponent.KeyBinding(jTextComponent_KeyBinding0.key, "");
      jTextComponent_KeyBindingArray0[1] = jTextComponent_KeyBinding1;
      JTextComponent.KeyBinding jTextComponent_KeyBinding2 = new JTextComponent.KeyBinding(jTextComponent_KeyBinding1.key, "/..");
      jTextComponent_KeyBindingArray0[2] = jTextComponent_KeyBinding0;
      JTextComponent.KeyBinding jTextComponent_KeyBinding3 = new JTextComponent.KeyBinding(jTextComponent_KeyBinding0.key, "");
      jTextComponent_KeyBindingArray0[3] = jTextComponent_KeyBinding3;
      KeyStroke keyStroke1 = KeyStroke.getKeyStroke(456, (int) 'h', true);
      JTextComponent.KeyBinding jTextComponent_KeyBinding4 = new JTextComponent.KeyBinding(keyStroke1, "All");
      jTextComponent_KeyBinding0.actionName = "/..";
      jTextComponent_KeyBindingArray0[4] = jTextComponent_KeyBinding4;
      JTextComponent.KeyBinding jTextComponent_KeyBinding5 = new JTextComponent.KeyBinding(jTextComponent_KeyBinding3.key, "");
      Controller.Closer controller_Closer0 = new Controller.Closer();
      try { 
        Controller.showCommonJColorChooserDialog(jEditorPane0, "", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Collection collection0 = Controller.getPropertyChangeListeners();
      assertNotNull(collection0);
  }
}
