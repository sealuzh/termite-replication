/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 17:58:56 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("com.lts.application.errors.repository.deleteEntry");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3674724429174536
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      linkedList0.add((Locale.LanguageRange) null);
      locale0.getDisplayVariant(locale1);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = "1#\"pY\"6Oh9<]";
      ApplicationException applicationException0 = new ApplicationException("1#\"pY\"6Oh9<]", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      ApplicationException applicationException1 = new ApplicationException((Throwable) applicationException0, (String) null, (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      applicationException1.getStackTrace();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("1#\"pY\"6Oh9<]", applicationException1);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "_YXc", messageFormatter_LoadBundleError0, "1#\"pY\"6Oh9<]");
      messageFormatter0.myLastException = (Throwable) applicationException2;
      ClassLoader.getSystemClassLoader();
      locale1.getScript();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1);
      Locale locale2 = Locale.FRENCH;
      locale1.getDisplayScript(locale2);
      Locale locale3 = Locale.GERMAN;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list1, locale_FilteringMode1);
      messageFormatter0.getLastException();
      try { 
        messageFormatter0.initializeResourceBundle(list2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      stringReader0.skip(1L);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        messageFormatter0.formatMessage("", messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4428352147175594
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.loadCriticalBundles();
      String string0 = "oNz9T,!";
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oNz9T,!");
      StringReader stringReader0 = new StringReader("oNz9T,!");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.getMessage("oNz9T,!", (Object) "Aj{E'AggTQ", (Object) classLoader0);
      List list0 = messageFormatter0.listResources("oNz9T,!", classLoader0);
      String string1 = "Could not find any resource bundle give names: ";
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) classLoader0;
      objectArray0[2] = (Object) list0;
      objectArray0[3] = (Object) "Could not find any resource bundle give names: ";
      objectArray0[4] = (Object) messageFormatter0;
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("Could not find any resource bundle give names: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      messageFormatter0.formatMessage("resources.messages.standard", messageFormatter0.DEFAULT_BUNDLE_PATH);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("resources.messages.standard", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH, (ResourceBundle) propertyResourceBundle0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.setPackageAssertionStatus("critical.question.saveData", true);
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.CHINESE;
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      classLoader2.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listToString((List<String>) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      int int0 = 1562;
      try { 
        pipedOutputStream2.write(1562);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3502705392332346
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "critical.question.saveData", "user.dir", 3);
      StackTraceElement stackTraceElement1 = new StackTraceElement("k3]I*", "", "e&rZQrM*6", 2586);
      MockThrowable.getDefaultStackTrace();
      StackTraceElement stackTraceElement2 = new StackTraceElement("u$9OLU{+BO", "n|af", "e&rZQrM*6", 2586);
      StackTraceElement stackTraceElement3 = new StackTraceElement("E*g;v0V485", "app.files.lastDirectory", "9;~hyB[SVm~NJlqC", 1909);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "user.dir");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("cWs]0PZq", (Throwable) null);
      linkedList0.addFirst(messageFormatter_LoadBundleError0);
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException0.getKey());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      locale0.getUnicodeLocaleKeys();
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.JAPANESE;
      Locale locale3 = Locale.ITALY;
      locale0.getUnicodeLocaleKeys();
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      linkedList0.add(locale3);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.offerLast(locale0);
      locale2.getUnicodeLocaleKeys();
      Locale locale4 = Locale.JAPANESE;
      locale3.getDisplayScript(locale4);
      locale3.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      Locale.lookup(linkedList1, linkedList0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList3.sort((Comparator<? super Locale.LanguageRange>) null);
      linkedList3.add((Locale.LanguageRange) null);
      Locale locale5 = Locale.PRC;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) messageFormatter0;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) messageFormatter0;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("editNode", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollLast();
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.ITALY;
      Locale.getISOLanguages();
      locale0.hasExtensions();
      Locale locale1 = Locale.FRENCH;
      locale1.getDisplayLanguage(locale0);
      locale1.getDisplayScript(locale0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale locale1 = Locale.PRC;
      locale0.getDisplayCountry(locale1);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader.getSystemClassLoader();
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.JAPANESE;
      Locale locale4 = Locale.ITALY;
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode1);
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader.getSystemClassLoader();
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.JAPANESE;
      Locale locale3 = Locale.ITALY;
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      locale2.getUnicodeLocaleKeys();
      Locale locale4 = Locale.JAPANESE;
      locale3.getDisplayScript(locale4);
      locale3.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode2);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList3.sort((Comparator<? super Locale.LanguageRange>) null);
      linkedList3.add((Locale.LanguageRange) null);
      Locale locale5 = Locale.PRC;
      MockThrowable mockThrowable0 = new MockThrowable(", ");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, ";Z=/");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("`S]^:8`Km!1+VZR&zOT");
      String string0 = messageFormatter0.listToString(list1);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) messageFormatter0;
      StringReader stringReader0 = new StringReader("\"#}@Rx[nj");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("; and resource path: ", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-39));
      linkedList0.addFirst(integer0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ZW=");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      messageFormatter0.temp();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("F", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale locale0 = Locale.ITALY;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.pollFirst();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.FRENCH;
      linkedList0.add((Locale.LanguageRange) null);
      Locale locale3 = new Locale("3F\"a(t");
      locale3.getDisplayScript(locale2);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list0, locale_FilteringMode1);
      Locale locale4 = Locale.ROOT;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, list1, locale1, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[21];
      charArray0[2] = 'd';
      charArray0[0] = '\u0000';
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.write((-283));
      StringWriter stringWriter3 = new StringWriter('\u0000');
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter('d');
      StringWriter stringWriter6 = new StringWriter();
      stringWriter2.flush();
      StringWriter stringWriter7 = new StringWriter();
      stringWriter3.flush();
      stringWriter7.flush();
      stringWriter7.write("$[E\")Bz3nNYtyXV");
      stringWriter1.flush();
      stringWriter5.flush();
      stringWriter2.write((int) 'd');
      stringWriter1.write(charArray0);
      StringWriter stringWriter8 = new StringWriter();
      StringWriter stringWriter9 = new StringWriter(1114);
      StringWriter stringWriter10 = new StringWriter();
      stringWriter3.flush();
      StringWriter stringWriter11 = new StringWriter(1114);
      stringWriter2.flush();
      stringWriter5.flush();
      StringWriter stringWriter12 = new StringWriter();
      StringWriter stringWriter13 = new StringWriter();
      stringWriter13.write("$[E\")Bz3nNYtyXV");
      stringWriter9.write(245);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) ", is inconsistent with parent, ";
      objectArray0[2] = (Object) ", is inconsistent with parent, ";
      objectArray0[3] = (Object) ", is inconsistent with parent, ";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ", is inconsistent with parent, ");
      objectArray0[4] = (Object) ", is inconsistent with parent, ";
      objectArray0[5] = (Object) ", is inconsistent with parent, ";
      objectArray0[6] = (Object) ", is inconsistent with parent, ";
      Object object1 = new Object();
      objectArray0[7] = object1;
      Object object2 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("<undefined>", (Object) "<undefined>", (Object) null, object2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-2407));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("4", "4", "user.dir", 3);
      StackTraceElement stackTraceElement1 = new StackTraceElement("user.dir", "user.dir", "user.dir", 8192);
      StackTraceElement stackTraceElement2 = new StackTraceElement("bSea%&JSqp\u0006w!0%", "<separator>", "bSea%&JSqp\u0006w!0%", 3);
      StackTraceElement stackTraceElement3 = new StackTraceElement("4", "en(", "0&&Z]b*9sat>/4jKP", 8192);
      StackTraceElement stackTraceElement4 = new StackTraceElement("The application encountered ascritical error and must nox terminate.", "The application encountered ascritical error and must nox terminate.", "bSea%&JSqp\u0006w!0%", 3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("F", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      charArray0[0] = '`';
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter('`');
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter('`');
      StringWriter stringWriter6 = new StringWriter();
      stringWriter2.flush();
      stringWriter1.write("o1_*alc3HoAuL");
      stringWriter1.flush();
      stringWriter5.flush();
      stringWriter3.write(charArray0);
      StringWriter stringWriter7 = new StringWriter('c');
      StringWriter stringWriter8 = new StringWriter('\u0000');
      stringWriter7.flush();
      StringWriter stringWriter9 = new StringWriter('`');
      stringWriter5.flush();
      StringWriter stringWriter10 = new StringWriter();
      StringWriter stringWriter11 = new StringWriter('`');
      stringWriter11.write((-2493));
      stringWriter11.close();
      stringWriter9.write(19);
      stringWriter0.write(3916);
      stringWriter3.flush();
      stringWriter0.write((int) '`');
      stringWriter9.flush();
      stringWriter2.flush();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      charArray0[0] = '`';
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter('`');
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter('`');
      StringWriter stringWriter6 = new StringWriter();
      stringWriter2.flush();
      stringWriter1.write("o1_*alc3HoAuL");
      stringWriter1.flush();
      stringWriter5.flush();
      stringWriter3.write(charArray0);
      StringWriter stringWriter7 = new StringWriter('c');
      StringWriter stringWriter8 = new StringWriter('\u0000');
      stringWriter7.flush();
      StringWriter stringWriter9 = new StringWriter('`');
      stringWriter5.flush();
      stringWriter5.flush();
      StringWriter stringWriter10 = new StringWriter();
      StringWriter stringWriter11 = new StringWriter('`');
      stringWriter11.write((-2476));
      stringWriter11.close();
      stringWriter9.write(19);
      stringWriter0.write(3916);
      stringWriter3.flush();
      stringWriter0.write((-2476));
      stringWriter9.flush();
      stringWriter2.flush();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage(", [", (Object) linkedList1, (Object) stringWriter4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.wrap((CharSequence) "hS]|0G]|@qMz~j^ML*TB");
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      StringWriter stringWriter2 = new StringWriter();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringWriter stringWriter3 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "hS]|0G]|@qMz~j^ML*TB");
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      PrintWriter printWriter0 = mockPrintWriter0.append('U');
      charBuffer1.chars();
      stringWriter0.append((CharSequence) charBuffer1);
      MockFile mockFile0 = new MockFile("hS]|0G]|@qMz~j^ML*TB");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter1, false);
      printWriter0.println((-88));
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("hS]|0G]|@qMz~j^ML*TB");
      mockPrintWriter1.append('U');
      printWriter0.checkError();
      mockThrowable0.printStackTrace(printWriter0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      linkedList0.addFirst((Integer) null);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("Tf__+$WMQ", "Tf__+$WMQ", "Tf__+$WMQ", 18);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "Tf__+$WMQ");
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringWriter stringWriter1 = new StringWriter();
      CharBuffer.wrap((CharSequence) "Tf__+$WMQ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      mockPrintWriter1.println();
      mockPrintWriter1.close();
      CharBuffer.wrap((CharSequence) "s8<6g%:}y~<;sGAF");
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) "s8<6g%:}y~<;sGAF");
      charBuffer1.chars();
      stringWriter1.append((CharSequence) "Tf__+$WMQ");
      char[] charArray0 = new char[2];
      charArray0[0] = 'U';
      charArray0[1] = 'a';
      mockPrintWriter1.println(charArray0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(stringWriter0, true);
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) charBuffer0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(stringWriter2);
      MockThrowable mockThrowable0 = new MockThrowable("/");
      mockThrowable0.printStackTrace((PrintWriter) mockPrintWriter0);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("user.dir", "user.dir", "user.dir", 8192);
      StackTraceElement stackTraceElement1 = new StackTraceElement("bSea%&JSqp\u0006w!0%", "", "bSea%&JSqp\u0006w!0%", (-18));
      StackTraceElement stackTraceElement2 = new StackTraceElement("s", "en(", "0&&Z]b*9sat>/4jKP", 8192);
      StackTraceElement stackTraceElement3 = new StackTraceElement("The appliYation encountered ascritical error and must nox terminate.", "The appliYation encountered ascritical error and must nox terminate.", "bSea%&JSqp\u0006w!0%", (-18));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      List<String> list1 = ResourceBundle.Control.FORMAT_CLASS;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale1 = Locale.ITALY;
      Locale locale2 = Locale.JAPANESE;
      Locale locale3 = Locale.ITALY;
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode1);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale3);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.offerLast(locale0);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode3);
      locale2.getUnicodeLocaleKeys();
      Locale locale4 = Locale.JAPANESE;
      locale3.getDisplayScript(locale4);
      locale3.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode4);
      Locale.lookup(linkedList2, linkedList1);
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList2.sort((Comparator<? super Locale.LanguageRange>) null);
      linkedList0.add((Locale.LanguageRange) null);
      Locale locale5 = Locale.PRC;
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList3, list2, (Locale) null, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale1 = Locale.ENGLISH;
      Locale locale2 = Locale.JAPANESE;
      Locale locale3 = Locale.ITALY;
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode1);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale3);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      linkedList1.offerLast(locale0);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode3);
      locale2.getUnicodeLocaleKeys();
      Locale locale4 = Locale.JAPANESE;
      locale3.getDisplayScript(locale4);
      locale3.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode4);
      Locale.lookup(linkedList2, linkedList1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList4.sort((Comparator<? super Locale.LanguageRange>) null);
      linkedList4.add((Locale.LanguageRange) null);
      Locale locale5 = Locale.PRC;
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList3, list1, (Locale) null, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      stringWriter0.flush();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[3];
      charArray0[0] = '`';
      charArray0[0] = '`';
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter('`');
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter('`');
      StringWriter stringWriter6 = new StringWriter();
      stringWriter2.flush();
      stringWriter1.write("o1_*alc3HoAuL");
      stringWriter1.flush();
      stringWriter5.flush();
      stringWriter3.write(charArray0);
      StringWriter stringWriter7 = new StringWriter('c');
      StringWriter stringWriter8 = new StringWriter('\u0000');
      stringWriter7.flush();
      StringWriter stringWriter9 = new StringWriter('`');
      stringWriter5.flush();
      stringWriter5.flush();
      StringWriter stringWriter10 = new StringWriter();
      StringWriter stringWriter11 = new StringWriter('`');
      stringWriter11.write((int) '`');
      stringWriter11.close();
      stringWriter9.write(19);
      stringWriter0.write(3916);
      stringWriter3.flush();
      stringWriter0.write((int) '`');
      stringWriter9.flush();
      stringWriter2.flush();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      LinkedList<Integer> linkedList1 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer(1);
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("|@oSY", mockThrowable0);
      linkedList2.removeLastOccurrence(messageFormatter_LoadBundleError0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) set0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      Locale locale1 = Locale.ENGLISH;
      Locale locale2 = Locale.US;
      Locale locale3 = Locale.CANADA;
      Locale locale4 = locale3.stripExtensions();
      Locale locale5 = Locale.GERMANY;
      locale5.getDisplayScript(locale4);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      locale3.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList7, (Collection<String>) list0, locale_FilteringMode0);
      Locale locale6 = new Locale("");
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      Locale locale7 = Locale.CANADA;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      locale7.getDisplayLanguage(locale4);
      linkedList5.add((Locale.LanguageRange) null);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("@B2 9~k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("|@!~k`l");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "|@!~k`l");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) ", is inconsistent with parent, ";
      objectArray0[2] = (Object) ", is inconsistent with parent, ";
      objectArray0[3] = (Object) ", is inconsistent with parent, ";
      objectArray0[4] = (Object) ", is inconsistent with parent, ";
      objectArray0[5] = (Object) ", is inconsistent with parent, ";
      objectArray0[6] = (Object) ", is inconsistent with parent, ";
      Object object1 = new Object();
      objectArray0[7] = object1;
      try { 
        messageFormatter0.getMessage(", is inconsistent with parent, ", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte) (-27);
      byteArray0[4] = (byte) (-100);
      byteArray0[5] = (byte) (-120);
      byteArray0[6] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("rCQV)9nZf175@#R");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus("critical.question.saveData", true);
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.CHINESE;
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      classLoader2.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 9;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale locale1 = Locale.PRC;
      locale0.getDisplayCountry(locale1);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader.getSystemClassLoader();
      Locale locale2 = Locale.ITALY;
      Locale locale3 = Locale.JAPANESE;
      Locale locale4 = Locale.ITALY;
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode1);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      linkedList1.add(locale4);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode2);
      linkedList1.offerLast(locale0);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      locale3.getDisplayScript();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode4);
      locale3.getUnicodeLocaleKeys();
      Locale locale5 = Locale.JAPANESE;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale1);
      locale4.getDisplayScript(locale5);
      locale4.getUnicodeLocaleAttributes();
      Locale.getISOCountries();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("vI+'w{Q%FIv5p1tn", "vI+'w{Q%FIv5p1tn", "vI+'w{Q%FIv5p1tn", (-1));
      StackTraceElement[] stackTraceElementArray0 = MockThrowable.getDefaultStackTrace();
      List list0 = MessageFormatter.buildList(stackTraceElementArray0);
      assertEquals(3, list0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(10);
      linkedList0.add(integer0);
      Integer integer1 = new Integer((-39));
      linkedList0.offer(integer1);
      Integer integer2 = new Integer((-39));
      linkedList0.addFirst(integer2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }
}
