/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 18:53:10 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Vector;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".zip");
      ImprovedFile improvedFile0 = new ImprovedFile(")bk\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = ")bk\"";
      improvedFile0.deleteAll();
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsIncluded = vector0;
      Integer integer0 = new Integer(0);
      stringArray1[0] = "Mq";
      stringArray1[1] = "Mq";
      archiveScanner0.setIncludes(stringArray1);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Mq", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/)bk\"
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bk\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = ")bk\"";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsIncluded = vector0;
      stringArray1[0] = "Mq";
      stringArray1[1] = "Mq";
      archiveScanner0.setIncludes(stringArray1);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Mq", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/)bk\"
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bk\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      stringArray0[0] = ")bk\"";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Mq";
      stringArray1[1] = "Mq";
      archiveScanner0.setIncludes(stringArray1);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Mq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("h\">kr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "h\">kr";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "h\">kr";
      stringArray1[1] = "h\">kr";
      archiveScanner0.setIncludes(stringArray1);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector0;
      System.setCurrentTimeMillis((-1L));
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "h\">kr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bk\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")bk\"";
      archiveScanner0.setExcludes(stringArray0);
      archiveScanner0.myTempdir = improvedFile0;
      String[] stringArray1 = new String[1];
      stringArray1[0] = ")bk\"";
      archiveScanner0.setExcludes(stringArray1);
      String[] stringArray2 = new String[2];
      stringArray2[0] = "Mq";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray2[1] = "Mq";
      vector0.add((Object) null);
      System.setCurrentTimeMillis(0L);
      archiveScanner0.setIncludes(stringArray2);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Mq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bkr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPatternStart("<Separator>.jGar", "$BK6(PV:`j_t(2l.$n");
      String[] stringArray0 = new String[1];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      vector0.remove((Object) archiveScanner0.filesExcluded);
      stringArray0[0] = ")bkr";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")bkr";
      stringArray1[1] = ")bkr";
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ")bkr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bk\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")bk\"";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      stringArray1[0] = "Mq";
      stringArray1[1] = "Mq";
      archiveScanner0.isExcluded(")bk\"");
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Mq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bk\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")bk\"";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = "Mq";
      stringArray1[1] = "Mq";
      archiveScanner0.setIncludes(stringArray1);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Mq", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bkr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPatternStart("<Separator>.jGar", "$BK6(PV:`j_t(2l.$n");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")bkr";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")bkr";
      stringArray1[1] = ")bkr";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ")bkr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bkr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      DirectoryScanner.matchPatternStart("<Separator>.jGar", "!ViDV>;8..+0Could not create repository temp dir, .jar");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ")bkr";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")bkr";
      stringArray1[1] = ")bkr";
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ")bkr", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bkr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPatternStart("<Separator>.jGar", "$BK6(PV:`j_t(2l.$n");
      String[] stringArray0 = new String[1];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      vector0.remove((Object) archiveScanner0.filesExcluded);
      stringArray0[0] = ")bkr";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")bkr";
      stringArray1[1] = ")bkr";
      archiveScanner0.setIncludes(stringArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ")bkr", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bkr", ")bkr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      DirectoryScanner.matchPatternStart("<Separator>.jGar", "$BK6(PV:`j_t(2l.$n");
      String[] stringArray0 = new String[1];
      vector0.removeAllElements();
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector1;
      vector1.remove((Object) archiveScanner0.filesExcluded);
      stringArray0[0] = ")bkr";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      stringArray1[0] = ")bkr";
      stringArray1[1] = ")bkr";
      archiveScanner0.setIncludes(stringArray1);
      try { 
        archiveScanner0.processDirectory(improvedFile0, ")bkr", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/)bkr/)bkr
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("A(N+0K Izf'9~>'", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ju *3|#4");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      improvedFile0.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "A(N+0K Izf'9~>'");
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A(N+0K Izf'9~>'");
      String string0 = ".WAR";
      byte[] byteArray2 = new byte[3];
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "A(N+0K Izf'9~>'");
      byteArray2[1] = (byte)4;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      archiveScanner0.setExcludes(archiveScanner0.includes);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray2);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7399092688034101
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ImprovedFile improvedFile1 = new ImprovedFile("");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPath("", "");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      boolean boolean0 = DirectoryScanner.matchPatternStart("", "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      improvedFile1.createTempDir();
      archiveScanner0.processDirectory(improvedFile1, "", false);
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      vector0.add((InputStream) pushbackInputStream0);
      vector0.add((InputStream) pushbackInputStream0);
      archiveScanner0.processDirectory(improvedFile1, string0, boolean0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      pushbackInputStream1.skip(archiveScanner0.ARCHIVE);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(pushbackInputStream1, sequenceInputStream1);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(pushbackInputStream1, sequenceInputStream1);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(pushbackInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream1);
      PushbackInputStream pushbackInputStream3 = new PushbackInputStream(pushbackInputStream0);
      Vector<InputStream> vector2 = new Vector<InputStream>();
      String string1 = null;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("sA(N+0K I!zf'9~>'", "The application encountered a critical error and must now terminate.");
      ImprovedFile improvedFile1 = new ImprovedFile("The application encountered a critical error and must now terminate.", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "The application encountered a critical error and must now terminate.");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ju *3|#4");
      DirectoryScanner.match("ju *3|#4", "The application encountered a critical error and must now terminate.");
      byte[] byteArray0 = new byte[0];
      improvedFile0.copyTo(improvedFile1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The application encountered a critical error and must now terminate.");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "sA(N+0K I!zf'9~>'");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      byte[] byteArray1 = new byte[3];
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[1] = (byte)4;
      String[] stringArray0 = new String[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "x~y-piU");
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        archiveScanner0.processArchive(improvedFile0, ".WAR");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error creating temp directory for /home/ubuntu/termite/projects/78_caloriecount/sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("A(N+0K Izf'9~>'", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      improvedFile0.setExecutable(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ju *3|#4");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      improvedFile0.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "A(N+0K Izf'9~>'");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ".WAR";
      byte[] byteArray1 = new byte[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F^MEKO`CfBb[xu");
      byteArray1[1] = (byte)4;
      archiveScanner0.setExcludes(archiveScanner0.includes);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.0186515595961074
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("The application encountered a critical error and must now terminate.", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R$$k5dP?@");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      improvedFile0.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string0 = ".WAR";
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[1] = (byte)7;
      archiveScanner0.setExcludes(archiveScanner0.includes);
      Vector<ObjectInputStream> vector0 = new Vector<ObjectInputStream>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.processFile(string0);
      archiveScanner0.isArchive(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      String string1 = "Sk`}{!8i=w";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string1, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ImprovedFile improvedFile0 = new ImprovedFile("The application encountered a critical error and must now terminate.", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R$$k5dP?@");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      improvedFile0.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "sA(N+0K I!zf'9~>'");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      String string0 = ".WAR";
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[1] = (byte)7;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R$$k5dP?@");
      archiveScanner0.setExcludes(archiveScanner0.includes);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.569520201228614
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ImprovedFile improvedFile1 = new ImprovedFile("");
      ImprovedFile improvedFile2 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPath("", "");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      improvedFile1.copyFrom((File) improvedFile2, true);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      boolean boolean0 = improvedFile1.setReadable(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      improvedFile1.createTempDir();
      archiveScanner0.processDirectory(improvedFile1, "", false);
      archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
      System.setCurrentTimeMillis(archiveScanner0.ARCHIVE);
      long long0 = 3529L;
      System.setCurrentTimeMillis(long0);
      String string1 = "Kp@D#z,=Q";
      boolean boolean1 = false;
      // Undeclared exception!
      archiveScanner0.scandir(improvedFile0, string1, boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("sA(N+0K I!zf'9~>'", "The application encountered a critical error and must now terminate.");
      ImprovedFile improvedFile1 = new ImprovedFile("The application encountered a critical error and must now terminate.", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ju *3|#4");
      DirectoryScanner.match("ju *3|#4", "The application encountered a critical error and must now terminate.");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      improvedFile1.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "sA(N+0K I!zf'9~>'");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      byte[] byteArray1 = new byte[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray1[1] = (byte)4;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      String[] stringArray0 = new String[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, ".WAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("The application encountered a critical error and must now terminate.", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R$$k5dP?@");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)85;
      byteArray0[2] = (byte)15;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sA(N+0K I!zf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "sA(N+0K I!zf'9~>'");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      archiveScanner0.setBasedir("ate.");
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R$$k5dP?@");
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".WAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "sA(N+0K I!zf'9~>'";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/!ViDV>;8..+/sA(N+0K I!zf'9~>'0sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "!EiDV>\"8..?.jar");
      ImprovedFile improvedFile0 = new ImprovedFile("sA(N+0K I!zf'9~>'", "!ViDV>;8..+");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      File file0 = MockFile.createTempFile("sA(N+0K I!zf'9~>'", "sA(N+0K I!zf'9~>'", (File) improvedFile1);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/!ViDV>;8..+");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      ImprovedFile improvedFile2 = improvedFile1.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile2.setExecutable(true, true);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      byte byte0 = (byte)7;
      EvoSuiteFile evoSuiteFile2 = null;
      Vector<Object> vector0 = new Vector<Object>();
      String[] stringArray0 = null;
      archiveScanner0.setExcludes((String[]) null);
      archiveScanner0.filesNotIncluded = vector0;
      byte[] byteArray0 = new byte[4];
      file0.mkdirs();
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ImprovedFile.copyFromToDir(file0, file0);
      archiveScanner0.processFile("pG,D_Y&^O+C(`;A2E");
      int int0 = 8192;
      Integer integer0 = new Integer(int0);
      byteArray0[2] = byte0;
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile(evoSuiteFile2, string0);
      archiveScanner0.setExcludes(stringArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      String string1 = "Could not create repository tem dir, .jar";
      archiveScanner0.processFile(string1);
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Vector<Object> vector0 = new Vector<Object>(linkedList0);
      archiveScanner0.filesExcluded = vector0;
      Integer integer0 = new Integer(archiveScanner0.DIRECTORY);
      vector0.add((Object) integer0);
      String[] stringArray0 = new String[9];
      String string0 = "wXF\"";
      linkedList0.add(string0);
      String string1 = "(Upfe}Df`";
      stringArray0[0] = string1;
      vector0.add((Object) string1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(stringArray0[0]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7862097648384696
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("sA(N+0K I!zf'9~>'", "!ViDV>;8..+");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      File file0 = MockFile.createTempFile("sA(N+0K I!zf'9~>'", "sA(N+0K I!zf'9~>'", (File) improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/!ViDV>;8..+");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile2 = new ImprovedFile(file0, "sA(N+0K I!zf'9~>'");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile2.setExecutable(true, true);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      byte[] byteArray0 = new byte[4];
      file0.mkdirs();
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ImprovedFile.copyFromToDir(file0, file0);
      Integer integer0 = new Integer(8192);
      vector0.add((Object) integer0);
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      improvedFile0.makeDirectories();
      improvedFile2.setReadable(false, true);
      archiveScanner0.scandir(improvedFile1, "!ViDV>;8..+", false);
      assertEquals(0L, improvedFile1.getFreeSpace());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("sA(N+0K I!zf'9~>'", "!ViDV>;8..+");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      File file0 = MockFile.createTempFile("sA(N+0K I!zf'9~>'", "sA(N+0K I!zf'9~>'", (File) improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/!ViDV>;8..+");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile2 = new ImprovedFile(file0, "sA(N+0K I!zf'9~>'");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      improvedFile2.setExecutable(true, true);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      byte[] byteArray0 = new byte[4];
      file0.mkdirs();
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      ImprovedFile.copyFromToDir(file0, file0);
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile.buildName("!ViDV>;8.6|.+.jar", 1, "Fd=PiX7Bc|", improvedFile0);
      improvedFile2.getAbsoluteFile();
      File file1 = file0.getAbsoluteFile();
      file0.mkdir();
      ImprovedFile.createTempDirectory("sA(N+0K I!zf'9~>'", "!ViDV>;8..+", (File) improvedFile0);
      archiveScanner0.processArchive(file1, "!ViDV>;8..+");
      assertTrue(file1.canExecute());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5461078180068584
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "";
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ImprovedFile improvedFile1 = new ImprovedFile("");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPath("", "");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      boolean boolean0 = DirectoryScanner.matchPatternStart("", "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      improvedFile1.createTempDir();
      archiveScanner0.processDirectory(improvedFile1, "", false);
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      vector0.add((InputStream) pushbackInputStream0);
      vector0.add((InputStream) pushbackInputStream0);
      archiveScanner0.processDirectory(improvedFile1, string0, boolean0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      pushbackInputStream1.skip(archiveScanner0.ARCHIVE);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(pushbackInputStream1, sequenceInputStream1);
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(pushbackInputStream1, sequenceInputStream1);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(pushbackInputStream1);
      DataInputStream dataInputStream1 = new DataInputStream(pushbackInputStream1);
      PushbackInputStream pushbackInputStream3 = new PushbackInputStream(pushbackInputStream0);
      Vector<InputStream> vector2 = new Vector<InputStream>();
      assertTrue(vector2.equals((Object)vector1));
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Could not create repository temp dir, ", "Q+feDgPj+jS");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      improvedFile1.setExecutable(false);
      improvedFile0.getCanonicalFile();
      MockFile.createTempFile("!ViDV>;8..+", "Could not create repository temp dir, ", (File) improvedFile0);
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "Q+feDgPj+jS");
      ImprovedFile improvedFile3 = improvedFile1.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile3);
      improvedFile1.deleteOnExit();
      improvedFile3.setLastModified(0L);
      ImprovedFile.createTempDirectory("Could not create repository temp dir, ", "Could not create repository temp dir, ", (File) improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "eak", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("sA(N+0K I!zf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("A(N+0K Izf'9~>'", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ju *3|#4");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)7;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      improvedFile0.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("sA(N+0K I!zf'9~>'");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "A(N+0K Izf'9~>'");
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      byte[] byteArray2 = new byte[3];
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "A(N+0K Izf'9~>'");
      byteArray2[1] = (byte)4;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray2);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "A(N+0K Izf'9~>'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = "CrXkUeBu(.jar";
      String string1 = "uX5A,5";
      ImprovedFile improvedFile0 = new ImprovedFile("uX5A,5", "CrXkUeBu(.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setBasedir("CrXkUeBu(.jar");
      archiveScanner0.isArchive(improvedFile0);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      DirectoryScanner.matchPath(stringArray0[0], string1);
      archiveScanner2.setIncludes(stringArray0);
      archiveScanner2.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string2 = "NNB%-CP(F&dt2O+p";
      String string3 = ".ear";
      // Undeclared exception!
      try { 
        archiveScanner1.isIncluded(string3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Could not create repository temp dir, ", "Q+feDgPj+jS");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      improvedFile1.setExecutable(false);
      improvedFile0.getCanonicalFile();
      MockFile.createTempFile("!ViDV>;8..+", "Could not create repository temp dir, ", (File) improvedFile0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Could not create repository temp dir, /Q+feDgPj+jS/!ViDV>;8..+0Could not create repository temp dir, ");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, "Q+feDgPj+jS");
      ImprovedFile improvedFile3 = improvedFile1.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile3);
      improvedFile1.deleteOnExit();
      improvedFile3.setLastModified(0L);
      ImprovedFile.createTempDirectory("Could not create repository temp dir, ", "Could not create repository temp dir, ", (File) improvedFile1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "eak", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("sA(N?0K I!zf'9~>'", "swing.defaultlaf");
      MockFile.createTempFile("sA(N?0K I!zf'9~>'", "sA(N?0K I!zf'9~>'", (File) improvedFile0);
      ImprovedFile improvedFile1 = new ImprovedFile("sA(N?0K I!zf'9~>'", "swing.defaultlaf");
      improvedFile1.mkdirs();
      improvedFile0.toURI();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "sA(N?0K I!zf'9~>'", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      int int0 = 2257;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      archiveScanner0.toFileType(improvedFile0);
      System.setCurrentTimeMillis(2);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4780709313740181
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "Could not create repository temp dir, ";
      ImprovedFile improvedFile0 = new ImprovedFile("Could not create repository temp dir, ", "wT ggq\"h?4yr,Y3o*cn");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir("Kj<z4.O4:F|");
      boolean boolean0 = archiveScanner0.haveSlowResults;
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ImprovedFile improvedFile1 = null;
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile1);
      String string1 = "<7qeXND`00&#9bc<{$n";
      archiveScanner0.isIncluded(string1);
      ArchiveScanner archiveScanner3 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setIncludes(archiveScanner2.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner4 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = archiveScanner3.excludes;
      String[] stringArray1 = archiveScanner4.excludes;
      DirectoryScanner.matchPatternStart(string0, string1);
      int int0 = archiveScanner4.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("IO error scannig directory ", "IO error scannig directory ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir("Kj<z4.O4:F|");
      archiveScanner0.isArchive(improvedFile0);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-41);
      byteArray0[0] = byte0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = (-1777);
      PushbackInputStream pushbackInputStream1 = null;
      try {
        pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // size <= 0
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "CrXkUeBu(.jar";
      String string1 = "uX5A,5";
      ImprovedFile improvedFile0 = new ImprovedFile("uX5A,5", "CrXkUeBu(.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir("CrXkUeBu(.jar");
      archiveScanner0.isArchive(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      DirectoryScanner.matchPath(stringArray0[0], string1);
      archiveScanner1.setIncludes(stringArray0);
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string2 = ".ear";
      // Undeclared exception!
      try { 
        archiveScanner0.isIncluded(string2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("IOerror scanning diectory ", "Could not create repository temp dir, ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      Vector<ObjectInputStream> vector0 = new Vector<ObjectInputStream>();
      Enumeration<InputStream> enumeration0 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream(enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String string0 = "CrXkUeBu(.jar";
      String string1 = "uX5A,5";
      ImprovedFile improvedFile0 = new ImprovedFile("uX5A,5", "CrXkUeBu(.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner1.setBasedir("CrXkUeBu(.jar");
      archiveScanner0.isArchive(improvedFile0);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      DirectoryScanner.matchPath(stringArray0[0], string1);
      archiveScanner2.setIncludes(stringArray0);
      archiveScanner2.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string2 = "NNB%-CP(F&dt2O+p";
      String string3 = ".ear";
      // Undeclared exception!
      try { 
        archiveScanner1.isExcluded(string3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("IOerror cannEng diectory6", "I]");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.toFileType(improvedFile0);
      Enumeration<InputStream> enumeration0 = null;
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream(enumeration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("6L");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "6L", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/6L
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(")bkr");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      DirectoryScanner.matchPatternStart("<Separator>.jGar", "$BK6(PV:`j_t(2l.$n");
      String[] stringArray0 = new String[1];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      stringArray0[0] = "$BK6(PV:`j_t(2l.$n";
      archiveScanner0.setExcludes(stringArray0);
      String[] stringArray1 = new String[2];
      vector0.add((Object) archiveScanner0);
      stringArray1[0] = ")bkr";
      stringArray1[1] = "<Separator>.jGar";
      vector0.add((Object) "$BK6(PV:`j_t(2l.$n");
      archiveScanner0.setIncludes(stringArray1);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "<Separator>.jGar", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("A(N+0K Izf'9~>'/The application encountered a critical error and must now terminate.");
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)60;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)62;
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("A(N+0K Izf'9~>'/The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ImprovedFile improvedFile0 = new ImprovedFile("A(N+0K Izf'9~>'", "The application encountered a critical error and must now terminate.");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Y.ju *3|#4");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A(N+0K Izf'9~>'");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "ory ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/A(N+0K Izf'9~>'/The application encountered a critical error and must now terminate.
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-140166267));
      vector0.add(integer0);
      Integer integer1 = new Integer(3387);
      Vector vector1 = new Vector<Integer>();
      Integer integer2 = new Integer((-98250176));
      Integer integer3 = new Integer((-140166267));
      vector0.add(integer3);
      Integer integer4 = new Integer(3387);
      Integer integer5 = new Integer(3387);
      vector0.add(integer2);
      Integer integer6 = new Integer((-318935692));
      vector0.add(integer1);
      Integer integer7 = new Integer(266);
      Integer integer8 = new Integer(266);
      Vector<Integer> vector2 = new Vector<Integer>();
      vector2.add(integer7);
      vector2.retainAll(vector1);
      vector2.add((Integer) null);
      vector2.add(integer1);
      Integer integer9 = new Integer((-4));
      Integer integer10 = new Integer((-802));
      Integer integer11 = new Integer((-318935692));
      Integer integer12 = new Integer((-802));
      Integer integer13 = new Integer((-802));
      Integer integer14 = new Integer((-4));
      vector0.add(integer8);
      Integer integer15 = new Integer((-4));
      vector0.add(integer15);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "qMc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-140166246));
      vector0.add(integer0);
      Integer integer1 = new Integer(3387);
      Vector vector1 = (Vector)vector0.clone();
      Integer integer2 = new Integer((-98250203));
      Integer integer3 = new Integer(3387);
      Integer integer4 = new Integer((-8));
      vector0.add(integer2);
      Integer integer5 = new Integer((-318935692));
      vector0.add(integer1);
      Integer integer6 = new Integer(266);
      Integer integer7 = new Integer(266);
      Vector<Integer> vector2 = new Vector<Integer>();
      vector2.add(integer6);
      vector2.retainAll(vector1);
      vector2.add((Integer) null);
      vector2.add(integer1);
      Integer integer8 = new Integer((-8));
      Integer integer9 = new Integer((-802));
      Integer integer10 = new Integer((-318935692));
      Integer integer11 = new Integer((-802));
      Integer integer12 = new Integer(1416);
      Integer integer13 = new Integer((-98250203));
      Integer integer14 = new Integer((-8));
      vector0.add(integer14);
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
