/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 18:04:12 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7820577141665286
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier((-1865));
      User user0 = new User("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE", "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.codeBookNumber = "UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE";
      rawVariable0.setCoded(false);
      rawVariable0.setAvailability("");
      rawVariable0.createVariableSummary();
      rawVariable0.getColumnStart();
      System.setCurrentTimeMillis((-2544L));
      rawVariable0.setAlias("UNABLE_TO_UPDATE_ALTERNATIVE_VARIABLE");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.clone();
      ontologyTerm0.setOntologyName("aqCENVgS?)a$G/?cC9");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      rawVariable0.clone();
      rawVariable0.getSupportingDocuments();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getValueLabels();
      assertEquals("-1865", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9175426508896702
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = "gIV";
      User user0 = new User("gIV", "variable.availability.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      user0.setFirstName("gIV");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.form = "gIV";
      derivedVariable0.getDisplayName();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable1.setSupportingDocuments(arrayList0);
      derivedVariable0.getColumnStart();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getAlias();
      assertEquals("gIV", derivedVariable0.getForm());
      
      String string0 = derivedVariable1.getDisplayItemIdentifier();
      assertEquals("0", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.6954458748335854
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "z8F";
      derivedVariable0.getDisplayName();
      derivedVariable0.setColumnStart((String) null);
      derivedVariable0.clone();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.createVariableSummary();
      User user0 = new User("", "");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable1.getName();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.createVariableSummary();
      derivedVariable0.getCleaningDescription();
      assertEquals("z8F", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.740726608768868
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("i'#X", "i'#X");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("i'#X");
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Variable.validateFields(derivedVariable0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7279302101011713
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setIdentifier((-666));
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setDescription("Qi,l&~Wu+Z)/:");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ArrayList<String> arrayList2 = Variable.validateFields(derivedVariable0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(1, arrayList2.size());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0972232985333634
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setName("i'#X");
      User user0 = new User();
      user0.setFirstName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("i'#X");
      supportingDocument1.setDescription("UNABLE_TO_DELETE_CATEGORY");
      rawVariable0.setQuestionNumber("");
      supportingDocument1.setDocumentCode((String) null);
      supportingDocument1.setTitle("V2uHW.?Um5ATVNk");
      derivedVariable0.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument1.setDocumentCode("variable.notes.label");
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument8);
      rawVariable0.getName();
      assertEquals("i'#X", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user0 = new User("v~Lh?G]", "user.firstName.saveChanges");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setMissingValue(false);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.notes = "variable.notes.label";
      String string0 = "9";
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.703285672751753
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.trimToSize();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("gy5z");
      arrayList0.add(ontologyTerm0);
      rawVariable0.setForm("'`Vn7");
      rawVariable0.columnEnd = "csQB[_`";
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      User user0 = new User("csQB[_`", "gf\"F[s[T$rE\"+!");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.notes = "UNABLE_TO_COMMIT_CHANGES";
      derivedVariable0.clone();
      User user1 = new User();
      user1.setPassword("'`Vn7");
      try { 
        User.checkValidEmail("csQB[_`");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The email value \"csQB[_`\" is not valid.
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.001955351418317
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.setDocumentCode("I;\"G:hweU1'QvRi:");
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("Y'{JKB4GkP");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("MISSING_DISPLAY_LIST_DELTER");
      supportingDocument1.setDocumentCode("MISSING_DISPLAY_LIST_DELTER");
      derivedVariable0.setLabel("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      Variable.validateFields(rawVariable0);
      assertEquals("MISSING_DISPLAY_LIST_DELTER", rawVariable0.getQuestionNumber());
      
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument7.setDocumentCode("MISSING_DISPLAY_LIST_DELTER");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument4.setIdentifier((-3603));
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList3 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertFalse(arrayList3.equals((Object)arrayList2));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDescription("UNBLE_TO_DELETE_CATEGORY");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("UNBLE_TO_DELETE_CATEGORY");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument11.setIdentifier(1);
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument11);
      System.setCurrentTimeMillis(834L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.897034609452277
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setUserID("UNABLE_TO_GET_USER_IDENTIFIER");
      user0.setEmail("UNABLE_TO_GET_USER_IDENTIFIER");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("y!)8B9Z_Yy*`T");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      System.setCurrentTimeMillis(4367L);
      derivedVariable0.getLabel();
      assertEquals("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.883454229856515
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      derivedVariable0.columnEnd = null;
      derivedVariable0.setNotes((String) null);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setCategory("");
      derivedVariable0.setColumnEnd("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.getCategory();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.clone();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getValueLabels();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getForm();
      derivedVariable0.getAlias();
      rawVariable0.getLabel();
      derivedVariable0.getSupportingDocuments();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.885700150847151
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      linkedList0.addAll((Collection<? extends Locale.LanguageRange>) linkedList1);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "gf\"F[s[T$rE\"+!";
      LinkedList<RawVariable> linkedList2 = new LinkedList<RawVariable>();
      linkedList2.add(rawVariable0);
      linkedList2.stream();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("gf\"F[s[T$rE\"+!");
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.addValueLabel(valueLabel0);
      derivedVariable2.getOntologyTerms();
      derivedVariable0.setColumnEnd("variable.year.label");
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertEquals("gf\"F[s[T$rE\"+!", rawVariable1.getColumnEnd());
      
      System.setCurrentTimeMillis((-2906L));
      rawVariable3.getValueLabels();
      assertEquals("0", rawVariable3.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.0006565662343267
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i'#X");
      User user0 = new User();
      user0.setFirstName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("i'#X");
      supportingDocument1.setDescription("UNABLE_TO_DELETE_CATEGORY");
      rawVariable0.setQuestionNumber("");
      supportingDocument1.setDocumentCode((String) null);
      rawVariable0.setAvailability("nq");
      derivedVariable0.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument10);
      rawVariable0.getAlias();
      assertEquals("i'#X", rawVariable0.getName());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.602291166020889
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setEmail("UNABLE_TO_GET_USER_IDENTIFIER");
      user0.setCounty("5b");
      user0.setLastName("b9t");
      user0.setFirstName("5b");
      user0.setCity("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      rawVariable0.setAvailability((String) null);
      User user1 = new User("valueLabel.isMissingValue.saveChanges", "`td_R'6-mA$)");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user2 = new User("DUPLICATE_AVAILiBILITY_STA8E", (String) null);
      User.detectFieldChanges(user2, user0, user2);
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_DUPLICATE");
      User user3 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.085788413586281
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      derivedVariable0.setNotes("UNABLE_TO_GET_CHANGES_FOR_VALUE_LABEL");
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList2.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      derivedVariable0.setCleaningStatus("variable.columnStart.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd("UNABLE_TO_GET_CHANGES_FOR_VALUE_LABEL");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable1.addValueLabel(valueLabel0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setColumnEnd("gf\"F[s[T$rE\"+!");
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      System.setCurrentTimeMillis(1L);
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList3);
      rawVariable0.getName();
      boolean boolean0 = derivedVariable0.isCleaned();
      assertEquals("UNABLE_TO_GET_CHANGES_FOR_VALUE_LABEL", derivedVariable0.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      rawVariable0.codeBookNumber = "^mE,^";
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("i'#!X");
      rawVariable1.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      supportingDocument0.setFilePath("^mE,^");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDescription("UNABLE_TO_GET_ORIGINAL_USER");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("i'#!X");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument2);
      derivedVariable0.getOntologyTerms();
      rawVariable0.getCodeBookNumber();
      assertEquals("^mE,^", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6858586781616833
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName(">");
      User user0 = new User();
      rawVariable0.codeBookNumber = "~|wUw>D!*s";
      user0.setFirstName(">");
      user0.setEmail("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setCounty("UNABLE_TO_GET_USER_IDENTIFIER");
      user0.setLastName(">");
      User user1 = new User("q7Sl", "");
      user1.setCounty("9\"VA");
      user1.setFirstName("");
      user0.setCity(">");
      User user2 = new User("f", "UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.form = "UNABLE_TO_GET_USER_IDENTIFIER";
      User user3 = new User("UNABLE_TO_GET_USER_IDENTIFIER", "");
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_DUPLICATE");
      User user4 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertEquals("UNABLE_TO_GET_USER_IDENTIFIER", derivedVariable0.getForm());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1611588556740577
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      derivedVariable0.setNotes("NON_EXISTENT_SUPPORTING_DOCUMENT");
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList2.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      arrayList1.replaceAll(unaryOperator0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("^mE,^");
      User user0 = new User((String) null, "e");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable1, valueLabel0, valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable1, valueLabel0, valueLabel0);
      derivedVariable0.addValueLabel(valueLabel0);
      rawVariable1.setColumnEnd("");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getNotes();
      assertEquals("NON_EXISTENT_SUPPORTING_DOCUMENT", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.8533192283958186
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd("^mE,^");
      User user0 = new User((String) null, "e");
      rawVariable1.getOntologyTerms();
      rawVariable1.setColumnEnd((String) null);
      rawVariable1.clone();
      rawVariable1.getLabel();
      rawVariable1.getDisplayName();
      rawVariable0.getFilePath();
      assertEquals("i'#!X", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.73003875916501
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.clone();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setYear(")M0xGfTlLTa`S,");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      System.setCurrentTimeMillis(235L);
      rawVariable0.getLabel();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      derivedVariable0.getSourceVariables();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.009697439439378
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      rawVariable0.codeBookNumber = "9\"n5{TSFs%!vD";
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.removeAll(linkedList0);
      arrayList2.stream();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      ontologyTerm0.setDescription("variable.notes.label");
      rawVariable0.setOntologyTerms(arrayList2);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("9\"n5{TSFs%!vD");
      User user0 = new User((String) null, "e");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable1, valueLabel0, valueLabel0);
      rawVariable1.setCategory("e");
      ValueLabel.detectFieldChanges(user0, rawVariable1, valueLabel0, valueLabel0);
      rawVariable1.getOntologyTerms();
      rawVariable0.getDisplayName();
      rawVariable0.getColumnEnd();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm0);
      assertEquals("e", rawVariable1.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.970893728560912
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDocumentCode("J7R34Qd>a2Sv VS");
      supportingDocument0.setDescription("UNBLE_TO_DELETE_CATEGORY");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("UNBLE_TO_DELETE_CATEGORY");
      supportingDocument1.setDocumentCode("macaw.util.ValidationUtility");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User("UNBLE_TO_DELETE_CATEGORY", "UNBLE_TO_DELETE_CATEGORY");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument10);
      derivedVariable0.getLabel();
      derivedVariable0.getName();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList1);
      assertEquals("V", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.795294412433909
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      ontologyTerm1.setNewRecord(false);
      ontologyTerm0.setDescription((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertTrue(rawVariable0.isCleaned());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.360380995184394
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList0.retainAll(arrayList1);
      ontologyTerm1.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) list0);
      arrayList1.removeAll(list1);
      arrayList1.add(ontologyTerm0);
      arrayList0.iterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("zcCl|ZoFxA");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList4);
      rawVariable0.removeOntologyTerms(arrayList1);
      assertFalse(arrayList1.contains(ontologyTerm0));
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.644842979948917
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument13);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(derivedVariable1.isCleaned());
      
      boolean boolean1 = rawVariable0.containsSupportingDocument(supportingDocument2);
      assertFalse(boolean1 == boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setAddressLine2("D_2fH>N|FGi");
      user0.setPostCode("i'#!X");
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertFalse(rawVariable0.isCoded());
      assertNull(macawChangeEvent0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.774591796371438
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user0 = new User("macaw.businessLayer.RawVariable", "-I_:*HqHltr$1!");
      rawVariable1.questionNumber = "%S";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      User user1 = new User("macaw.businessLayer.RawVariable", (String) null);
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      
      User user2 = new User("macaw.system.MacawChangeEvent", "-I_:*HqHltr$1!");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable3 = new RawVariable();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable1);
      assertNotNull(macawChangeEvent2);
      assertEquals(0, (int)macawChangeEvent2.getVariableOwnerID());
      
      User user3 = new User("macaw.system.MacawChangeEvent", "8:bBY4");
      User user4 = new User();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.getName();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      rawVariable0.getAlternativeVariable();
      Variable variable0 = rawVariable1.getAlternativeVariable();
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
      assertFalse(variable0.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.747084611161251
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("K9E|X\"T");
      User user0 = new User();
      user0.setFirstName("b6\"XM&D7'/On&");
      user0.setLastName("K9E|X\"T");
      user0.setFirstName("i'#X");
      User user1 = new User("@.:Ci|cS", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlias("@.:Ci|cS");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user2 = new User((String) null, "@.:Ci|cS");
      user2.setFirstName("6.YYtZbq|d.qW?'");
      User user3 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      assertEquals("K9E|X\"T", rawVariable0.getName());
      
      derivedVariable0.getName();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.020672924933403
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDescription("UNBLE_TO_DELETE_CATEGORY");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("UNBLE_TO_DELETE_CATEGORY");
      supportingDocument1.setDocumentCode("macaw.util.ValidationUtility");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList1);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument7);
      System.setCurrentTimeMillis((-1309L));
      derivedVariable1.getLabel();
      assertEquals("V", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6497049730961217
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setCounty("5b");
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList2.forEach(consumer0);
      ontologyTerm0.setNewRecord(true);
      arrayList2.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier(1068);
      ontologyTerm1.setDescription("DM]qV.");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable1.removeOntologyTerms(arrayList3);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.getDisplayName();
      assertEquals("5b", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.728113041694239
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.setCoded(true);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      User user0 = new User();
      User.checkValidUserIDField("variable.name.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getAvailability();
      derivedVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) rawVariable0);
      arrayList1.removeAll(arrayList0);
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getName();
      User user1 = new User("+Awoa[vsB[*", "");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user1, rawVariable1, valueLabel0, valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable1.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setColumnEnd("");
      Variable.validateFields(rawVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable1.isCoded();
      assertTrue(rawVariable0.isCoded());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.049811457714134
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.setCoded(true);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      ValueLabel valueLabel0 = new ValueLabel();
      supportingDocument0.setFilePath("^4>]M3,Y(;oQQrv1g");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("^4>]M3,Y(;oQQrv1g");
      supportingDocument0.setDescription("5CAL");
      rawVariable0.setQuestionNumber("MISSING_DISPLAY_LIST_DELTER");
      supportingDocument0.setDocumentCode("ZKL4_`sN.p8@gy{");
      derivedVariable0.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      Variable.validateFields(rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument7.setDocumentCode("mU~/0BhY9LwUD}sI?");
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8331547833861124
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("@JBq)}tCHE>U9:");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("@JBq)}tCHE>U9:");
      ontologyTerm0.setTerm("@JBq)}tCHE>U9:");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.removeAll(linkedList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("");
      User user0 = new User("variable.year.label", (String) null);
      rawVariable0.getOntologyTerms();
      rawVariable0.setColumnEnd("variable.year.label");
      rawVariable0.getCleaningStatus();
      rawVariable0.getAlias();
      assertEquals("variable.year.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.46307548517626
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ontologyTerm2.setNewRecord(true);
      arrayList0.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      ontologyTerm1.setTerm((String) null);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setDescription("variable.saveChanges.valueChanged");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList2);
      // Undeclared exception!
      try { 
        rawVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7802980886663002
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("(~q Ue$", "(~q Ue$");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setLabel("LyZGk65cUqraYJ\"");
      rawVariable0.setFilePath("LyZGk65cUqraYJ\"");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      User user1 = new User((String) null, "LyZGk65cUqraYJ\"");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      rawVariable0.setLabel("LyZGk65cUqraYJ\"");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getAlias();
      rawVariable0.getFilePath();
      assertEquals("LyZGk65cUqraYJ\"", rawVariable0.getFilePath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.7251677742551164
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName(",");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setName(",");
      supportingDocument0.getDisplayName();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.setAlias(",");
      rawVariable0.getColumnStart();
      rawVariable0.clone();
      derivedVariable0.getYear();
      rawVariable0.clone();
      User user0 = new User();
      user0.setEmail(",");
      user0.setPassword("UNABLE_TO_CHECK_USER_DUPLICATE");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      arrayList0.add((Variable) rawVariable0);
      arrayList0.add((Variable) derivedVariable2);
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setCleaned(false);
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCodeBookNumber("NA2R1|F0PQ");
      derivedVariable0.setColumnStart("variable.columnEnd.label");
      derivedVariable0.setNotes("NA2R1|F0PQ");
      derivedVariable0.getColumnStart();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("NA2R1|F0PQ", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.708665825820528
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user0 = new User("variable.label.label", "");
      User user1 = new User((String) null, (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("blank");
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setCounty("5b");
      user0.setLastName("5b9t");
      user0.setFirstName("5b");
      user0.setCity("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      User user1 = new User("valueLabel.isMissingValue.saveChanges", "`td_R'6-mA$)");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user2 = new User("DUPLICATE_AVAILABILITY_STATE", (String) null);
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_DUPLICATE");
      User user3 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      assertEquals("blank", rawVariable0.getColumnEnd());
      
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.9095265814608817
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      ArrayList<String> arrayList1 = new ArrayList<String>();
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setFilePath("\"7s:2u:L*y;8");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      rawVariable1.setIdentifier(1495);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      rawVariable1.cloneAttributes(rawVariable0);
      arrayList2.add(ontologyTerm0);
      rawVariable1.setOntologyTerms(arrayList2);
      ontologyTerm0.setDescription("^mE,^");
      arrayList2.stream();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.getYear();
      rawVariable0.setColumnEnd(" ^dUrS");
      rawVariable1.clone();
      Variable.validateFields(derivedVariable0);
      rawVariable1.getIdentifier();
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(false);
      rawVariable2.getCleaningDescription();
      assertEquals("1495", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.012989156798198
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i'#!X");
      User user0 = new User("i'#!X", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      rawVariable0.setCleaningStatus("NON_EXISTENT_ONTOLOGY_TERM_ASSOCIATION");
      rawVariable0.setCoded(false);
      User user1 = new User("i'#!X", "");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      User user2 = new User("variable.columnStart.label", "");
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("z8F");
      derivedVariable2.getColumnStart();
      Variable.detectFieldChanges(user1, derivedVariable2, rawVariable0);
      assertEquals("i'#!X", rawVariable0.getDisplayName());
      
      Variable.validateFields(derivedVariable2);
      derivedVariable2.getLabel();
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.933700213347462
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      ontologyTerm1.setNewRecord(false);
      ontologyTerm0.setDescription((String) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.removeOntologyTerms(arrayList2);
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(rawVariable1.isCleaned());
      assertTrue(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.821694696832513
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("UNABLE_TO_DELETE_CATEGORY");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("}wKzYlU$Tk6");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      Variable.validateFields(rawVariable1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument10);
      System.setCurrentTimeMillis((-707L));
      derivedVariable0.getLabel();
      assertEquals("}wKzYlU$Tk6", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.688089340728754
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("KSijHn4#xf01");
      user0.setCounty("R*P(1Q'E");
      user0.setLastName("R*P(1Q'E");
      user0.setFirstName("5b");
      user0.setCity("KSijHn4#xf01");
      User user1 = new User("e)v|[B6_", "KSijHn4#xf01");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.codeBookNumber = "valueLabel.isMissingValue.saveChanges";
      User user2 = new User();
      User.checkValidUserIDField("V");
      User user3 = new User();
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      User user4 = new User("vHfi.O)F9", "KSijHn4#xf01");
      Variable.detectFieldChanges(user4, derivedVariable0, rawVariable0);
      assertEquals("valueLabel.isMissingValue.saveChanges", derivedVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setCounty("5b");
      user0.setLastName("5b9t");
      user0.setFirstName("5b");
      user0.setCity("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      User user1 = new User("valueLabel.isMissingValue.saveChanges", "`td_R'6-mA$)");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user2 = new User("DUPLICATE_AVAILABILITY_STATE", (String) null);
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_DUPLICATE");
      User user3 = new User();
      derivedVariable0.setCleaningDescription("UNABLE_TO_CHECK_USER_DUPLICATE");
      Variable.detectFieldChanges(user2, derivedVariable0, rawVariable0);
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertEquals("UNABLE_TO_CHECK_USER_DUPLICATE", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.7809234795355935
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("(~q Ue$", "(~q Ue$");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setLabel("LyZGk65cUqraYJ\"");
      rawVariable0.setFilePath("LyZGk65cUqraYJ\"");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      User user1 = new User((String) null, "LyZGk65cUqraYJ\"");
      user1.setUserID((String) null);
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      rawVariable0.setLabel("LyZGk65cUqraYJ\"");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getAlias();
      rawVariable0.getFilePath();
      rawVariable0.getFilePath();
      assertEquals("LyZGk65cUqraYJ\"", rawVariable0.getLabel());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.685395339808851
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("( _-x+$9LWh1^");
      User user0 = new User();
      user0.setFirstName("( _-x+$9LWh1^");
      User user1 = new User("G&1q8SwkZe<`3", "<Iz%");
      user1.setCounty("<Iz%");
      user0.setLastName("5b9t");
      user1.setFirstName("RiE|DI7Vjr<%l.");
      User user2 = new User("w0cQKjN7#=Fyzu", "p{]'Q");
      user2.setCity("");
      User user3 = new User("", "RiE|DI7Vjr<%l.");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user4 = new User("DUPLICATE_AVAILABILITY_STATE", "");
      User.checkValidUserIDField("5b9t");
      User user5 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("( _-x+$9LWh1^", rawVariable0.getDisplayName());
      
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList0.retainAll(arrayList1);
      ontologyTerm1.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) list0);
      arrayList1.removeAll(list1);
      arrayList1.add(ontologyTerm0);
      arrayList0.iterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("zcCl|ZoFxA");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm2, ontologyTerm1);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList4.contains(ontologyTerm0));
      
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList5);
      rawVariable0.getNotes();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.0514474029629954
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.form = "variable.label.label";
      ontologyTerm0.setTerm("m +H'{G");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleKeys();
      arrayList1.removeAll(arrayList0);
      rawVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.setAvailability("");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.removeSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlias();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.5806560020475704
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      ValueLabel[] valueLabelArray0 = new ValueLabel[9];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[1] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabelArray0[2] = valueLabel2;
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabelArray0[3] = valueLabel3;
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabelArray0[4] = valueLabel4;
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabelArray0[5] = valueLabel5;
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabelArray0[6] = valueLabel6;
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabelArray0[7] = valueLabel7;
      ValueLabel valueLabel8 = new ValueLabel();
      valueLabelArray0[8] = valueLabel8;
      arrayList0.toArray(valueLabelArray0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<ValueLabel> arrayList0 = rawVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.form = "tEWrTIa(x/x=^.Dz ";
      String string0 = rawVariable0.getFilePath();
      assertEquals("", string0);
      
      String string1 = rawVariable0.getYear();
      assertEquals("", string1);
      
      String string2 = rawVariable0.getColumnEnd();
      assertEquals("", string2);
      
      String string3 = rawVariable0.getName();
      assertEquals("", string3);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.5353865202004258
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      derivedVariable0.setCleaningDescription(">0i8{`ooi=DAR4x");
      derivedVariable0.clone();
      assertEquals(">0i8{`ooi=DAR4x", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setDescription("Qi,l&~Wu+Z)/:");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList3);
      assertFalse(arrayList3.contains(ontologyTerm3));
      
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User("1]&", (String) null);
      String string0 = derivedVariable1.getCleaningStatus();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.1256019392898504
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("i'#X");
      User user0 = new User();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      linkedList0.add(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("i'#X");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("b6\"XM&D7'/On&");
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList2);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      ArrayList<MacawChangeEvent> arrayList3 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("b6\"XM&D7'/On&", rawVariable0.getColumnEnd());
      assertEquals(2, arrayList3.size());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setAddressLine2("D_2fH>N|FGi");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      ontologyTerm0.setTerm("vSJ'rQ\"");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("vSJ'rQ\"");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.retainAll(arrayList1);
      ontologyTerm1.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) list0);
      arrayList1.removeAll(arrayList2);
      arrayList1.add(ontologyTerm0);
      arrayList1.iterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("zcCl|ZoFxA");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList4.contains(ontologyTerm0));
      
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList5);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.969607946218233
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.questionNumber.label";
      rawVariable0.setAlias("user.county.saveChanges");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setCoded(true);
      rawVariable0.isNewRecord();
      rawVariable0.setQuestionNumber("user.county.saveChanges");
      rawVariable0.setCleaningDescription((String) null);
      assertEquals("user.county.saveChanges", rawVariable0.getQuestionNumber());
      
      User user0 = new User("variable.questionNumber.label", "user.county.saveChanges");
      user0.setStatus((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("4'a/bH.qg!Ae");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.setAlias("user.userID.saveChanges");
      valueLabel0.setLabel("zVN=N~J$<M!LHuZ^:(");
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.setYear("");
      derivedVariable0.isNewRecord();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.setYear("");
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.9812630591938936
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("i'#X");
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList2);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      ArrayList<MacawChangeEvent> arrayList3 = RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals(0, arrayList3.size());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.6856369732509195
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("( _-x+$9LWh1^");
      User user0 = new User();
      user0.setFirstName("( _-x+$9LWh1^");
      User user1 = new User("G&1q8SwkZe<`3", "<Iz%");
      user1.setCounty("<Iz%");
      user0.setLastName("5b9t");
      user1.setFirstName("RiE|DI7Vjr<%l.");
      User user2 = new User("w0cQKjN7#=Fyzu", "p{]'Q");
      user2.setCity("");
      User user3 = new User("", "RiE|DI7Vjr<%l.");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.notes = "UNABLE_TO_DISASSOCIATE_DOCUMENT";
      User user4 = new User("DUPLICATE_AVAILABILITY_STATE", "");
      User.checkValidUserIDField("5b9t");
      User user5 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.getName();
      assertEquals("UNABLE_TO_DISASSOCIATE_DOCUMENT", derivedVariable0.getNotes());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getDisplayName();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.6856369732509195
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName(">");
      User user0 = new User();
      rawVariable0.codeBookNumber = "~|wUw>D!*s";
      user0.setFirstName(">");
      user0.setEmail("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setCounty("UNABLE_TO_GET_USER_IDENTIFIER");
      user0.setLastName(">");
      User user1 = new User("q7Sl", "");
      user1.setFirstName("");
      user0.setCity(">");
      User user2 = new User("f", "UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      User user3 = new User("UNABLE_TO_GET_USER_IDENTIFIER", "");
      User.checkValidUserIDField("UNABLE_TO_CHECK_USER_DUPLICATE");
      User user4 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("~|wUw>D!*s", rawVariable0.getCodeBookNumber());
      
      derivedVariable0.getName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.819853186285054
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.removeAll(linkedList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("^mE,^");
      rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertEquals("^mE,^", rawVariable0.getColumnEnd());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.9497385713557955
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRANCE;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      locale0.toLanguageTag();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("p{]'Q");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("i'#!X");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument11);
      System.setCurrentTimeMillis((-518L));
      derivedVariable0.getLabel();
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.097993660603536
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      User user0 = new User("w0cQKjN7#=Fyzu", "variable.name.label");
      user0.setFirstName("w0cQKjN7#=Fyzu");
      user0.setFirstName("w0cQKjN7#=Fyzu");
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("0^uQ Fh*G+Vd?");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getYear();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setColumnEnd("0^uQ Fh*G+Vd?");
      User user2 = new User("w0cQKjN7#=Fyzu", "variable.codeBookNumber.label");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user1, rawVariable0, valueLabel0, valueLabel0);
      rawVariable2.form = "variable.codeBookNumber.label";
      rawVariable0.setCategory("e");
      ValueLabel.detectFieldChanges(user0, rawVariable1, valueLabel0, valueLabel0);
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      rawVariable2.getDisplayName();
      rawVariable0.getColumnEnd();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable2.containsOntologyTerm(ontologyTerm1);
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      assertEquals("variable.codeBookNumber.label", rawVariable2.getForm());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.0207619324990462
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDescription("UNBLE_TO_DELETE_CATEGORY");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("UNBLE_TO_DELETE_CATEGORY");
      supportingDocument1.setDocumentCode("macaw.util.ValidationUtility");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.questionNumber = "V";
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument10);
      System.setCurrentTimeMillis((-518L));
      derivedVariable0.getLabel();
      assertEquals("V", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7894273460941865
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("NON_EXISTENT_USER");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable0.setValueLabels(arrayList1);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.retainAll(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm1.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3, locale_FilteringMode0);
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3);
      arrayList1.removeAll(list0);
      arrayList1.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("6[vE`8CwNWrgd>");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable1.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.048820325203473
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument((SupportingDocument) null);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setAlias("");
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.getSupportingDocuments();
      rawVariable0.isCoded();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.setAvailability((String) null);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("07,D)T|{*wSMol>1%m", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.5721691819135324
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user0 = new User("macaw.businessLayer.RawVariable", "-I_:*HqHltr$1!");
      rawVariable1.questionNumber = "%S";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      User user1 = new User("macaw.businessLayer.RawVariable", "%S");
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      User user2 = new User("macaw.system.MacawChangeEvent", "-I_:*HqHltr$1!");
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable3.getOntologyTerms();
      rawVariable2.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("%S");
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable4 = new RawVariable();
      derivedVariable1.getOntologyTerms();
      rawVariable3.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, rawVariable1);
      assertNotNull(macawChangeEvent1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      
      rawVariable4.getLabel();
      VariableSummary variableSummary0 = rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getLabel());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", variableSummary0.getYear());
      assertFalse(rawVariable1.isCoded());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.7321184591665695
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.listIterator();
      arrayList1.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnEnd("^mE,^");
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList2);
      rawVariable0.createVariableSummary();
      assertEquals("^mE,^", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("variable.label.label");
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCoded(false);
      rawVariable0.form = "variable.label.label";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      arrayList0.removeAll(linkedList0);
      rawVariable0.setOntologyTerms(arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.getOntologyTerms();
      rawVariable0.createVariableSummary();
      assertEquals("variable.label.label", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Locale.lookupTag(linkedList0, arrayList1);
      derivedVariable0.setNotes("NON_EXISTENT_SUPPORTING_DOCUMENT");
      rawVariable0.codeBookNumber = "gf\"F[s[T$rE\"+!";
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setDocumentCode("gf\"F[s[T$rE\"+!");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      assertEquals("NON_EXISTENT_SUPPORTING_DOCUMENT", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.setIdentifier((-299));
      rawVariable0.removeValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable1.setCleaningStatus(".d.c,1g$n");
      rawVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable1.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.591004153432309
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      rawVariable1.cloneAttributes(derivedVariable0);
      rawVariable0.setIdentifier((-2067947214));
      assertEquals((-2067947214), rawVariable0.getIdentifier());
      
      Variable.detectChangesInAlternativeVariable((User) null, rawVariable1, rawVariable1);
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.47267089834668
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.cloneAttributes(rawVariable0);
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user0 = new User("macaw.businessLayer.RawVariable", "variable.cleaningDescription.label");
      rawVariable1.questionNumber = "%S";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      User user1 = new User("macaw.businessLayer.RawVariable", (String) null);
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      
      User user2 = new User("macaw.system.MacawChangeEvent", "variable.cleaningDescription.label");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable1.setAlternativeVariable(derivedVariable0);
      User user3 = new User();
      RawVariable rawVariable4 = new RawVariable();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user3, rawVariable3, rawVariable4);
      assertFalse(rawVariable3.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent2.getChangeMessage());
      assertFalse(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      user0.setFirstName("UNABLE_TO_DISASSOCIATE_SOURCE_VARIABLE");
      user0.setCounty("5b");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setAvailability("-I_:*HqHltr$1!");
      ontologyTerm1.setDescription("Qi,l&~Wu+Z)/:");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertEquals("5b", rawVariable0.getDisplayName());
      
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.878137831542175
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("i'#!X", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable1);
      User user1 = new User("i'#!X", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertNotNull(macawChangeEvent0);
      
      User user2 = new User("variable.columnStart.label", "");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getColumnStart();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, derivedVariable2, derivedVariable0);
      assertTrue(arrayList0.isEmpty());
      
      ArrayList<String> arrayList1 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList1.size());
      
      boolean boolean0 = derivedVariable1.isCleaned();
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.4998149924929463
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ontologyTerm0.setNewRecord(true);
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm3.setDescription((String) null);
      ontologyTerm5.setDescription((String) null);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList2.contains(ontologyTerm0));
      
      rawVariable0.removeOntologyTerms(arrayList1);
      rawVariable1.getCleaningDescription();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDocumentCode("v2aY/Dznnic NvS.J\"");
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument10);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList0.retainAll(arrayList1);
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) list0);
      arrayList1.removeAll(list0);
      arrayList1.add(ontologyTerm0);
      arrayList1.iterator();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("zcCl|ZoFxA");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.912501618446295
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setCleaned(true);
      User user1 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("6Y/%hUwPc&19&4q");
      ontologyTerm0.setNewRecord(true);
      ontologyTerm0.setDescription((String) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ValueLabel[] valueLabelArray0 = new ValueLabel[3];
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabelArray0[0] = valueLabel0;
      ontologyTerm4.clone();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabelArray0[1] = valueLabel1;
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabelArray0[2] = valueLabel2;
      arrayList0.toArray(valueLabelArray0);
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      rawVariable2.containsOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      rawVariable1.getAvailability();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.6910688711446102
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ontologyTerm0.setNewRecord(true);
      arrayList1.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setDescription("Qi,l&~Wu+Z)/:");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList1);
      assertEquals(1, arrayList1.size());
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm4);
      rawVariable1.getColumnEnd();
      rawVariable1.getValueLabels();
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      User user0 = new User("w0cQKjN7#=Fyzu", "");
      user0.setFirstName("w0cQKjN7#=Fyzu");
      user0.setFirstName("");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.8242702006584666
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("07,D)T|{*wSMol>1%m");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setForm("07,D)T|{*wSMol>1%m");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      rawVariable0.removeSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("Unknown", "");
      User user1 = new User("07,D)T|{*wSMol>1%m", "Unknown");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.getCleaningStatus();
      assertEquals("07,D)T|{*wSMol>1%m", derivedVariable0.getForm());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertEquals("", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.797307377280536
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User user0 = new User("UNABLE_TO_DELETE_CATEGORY", "YK");
      valueLabel0.setMissingValue(false);
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.questionNumber = "UNABLE_TO_DELETE_CATEGORY";
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.ensureCapacity((-1722616128));
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setLabel("general.fieldValue.unknown");
      rawVariable0.getCodeBookNumber();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.6229231455238278
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setNotes("variable.availability.label");
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.setCodeBookNumber("K9E|X\"T");
      derivedVariable0.getAlias();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable1, derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.7225654854023653
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("i'#!X");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Locale locale0 = Locale.FRENCH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      rawVariable0.codeBookNumber = "^mE,^";
      locale0.getExtensionKeys();
      LinkedList<RawVariable> linkedList1 = new LinkedList<RawVariable>();
      linkedList1.stream();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.removeAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setColumnEnd("i'#!X");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      rawVariable2.removeOntologyTerms(arrayList1);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("i'#!X", derivedVariable0.getColumnStart());
      assertEquals("^mE,^", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.7786217155799795
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("y#d+;Q");
      ontologyTerm0.setTerm("!g2Z;am8WTCO35");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("variable.availability.label");
      arrayList0.stream();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER");
      rawVariable0.clone();
      assertEquals("UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER", rawVariable0.getColumnEnd());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.addOntologyTerms(arrayList1);
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.7643664384795317
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDescription("UNBLE_TO_DELETE_CATEGORY");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDocumentCode("UNBLE_TO_DELETE_CATEGORY");
      supportingDocument1.setDocumentCode("macaw.util.ValidationUtility");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("V");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument10);
      System.setCurrentTimeMillis((-518L));
      derivedVariable0.getLabel();
      derivedVariable1.clone();
      assertEquals("V", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.5914258180806007
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription((String) null);
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      arrayList1.add(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setNotes((String) null);
      rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList1);
      assertEquals(3, arrayList1.size());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.916875168411085
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(derivedVariable1);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      derivedVariable1.setForm("variable.cleaningStatus.label");
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument1);
      assertEquals("variable.cleaningStatus.label", derivedVariable1.getForm());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.6238173999392087
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Z3x /`^kX%+<N");
      User user0 = new User("Z3x /`^kX%+<N", (String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setFilePath((String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.getName();
      derivedVariable1.getDisplayName();
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Z3x /`^kX%+<N", derivedVariable1.getDisplayName());
      assertEquals("Z3x /`^kX%+<N", rawVariable0.getName());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.8234757337139067
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("@JBq)}tCHE>U9:");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("@JBq)}tCHE>U9:");
      ontologyTerm0.setTerm("@JBq)}tCHE>U9:");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      linkedList0.stream();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.removeAll(linkedList0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("[\":9c,<");
      arrayList0.stream();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.getYear();
      rawVariable0.setColumnEnd("y#d+;Q");
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      assertEquals(1, arrayList1.size());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setDescription("Qi,l&~Wu+Z)/:");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.setColumnStart("Qi,l&~Wu+Z)/:");
      ontologyTerm3.setNameSpace("}4Xfz(9\"--7jl+g|");
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      assertEquals("Qi,l&~Wu+Z)/:", rawVariable0.getColumnStart());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList1);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.6875440376031756
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      ontologyTerm0.setNewRecord(true);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setCleaningDescription("variable.columnStart.label");
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      rawVariable1.setCleaned(true);
      RawVariable rawVariable3 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      assertEquals(1, arrayList0.size());
      
      boolean boolean0 = rawVariable3.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      derivedVariable0.setYear("'<c$yz^GpsgDr");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      supportingDocument0.setFilePath("'<c$yz^GpsgDr");
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setDescription("UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.setLabel("UNABLE_TO_GET_ALL_SUPPORTING_DOCUMENTS");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      assertEquals("'<c$yz^GpsgDr", derivedVariable0.getYear());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User("D_2fH>N|FGi", "user.phone.saveChanges");
      user0.setAddressLine2("D_2fH>N|FGi");
      user0.setPostCode("i'#!X");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "D_2fH>N|FGi";
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("D_2fH>N|FGi", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.questionNumber = "variable.availability.label";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.6820748660026672
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      User user0 = new User("w0cQKjN7#=Fyzu", "");
      user0.setStatus("");
      user0.setFirstName("w0cQKjN7#=Fyzu");
      user0.setFirstName("AFABl#39!?+V");
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "w0cQKjN7#=Fyzu";
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.5692005239622273
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.codeBookNumber = null;
      derivedVariable1.removeSourceVariable(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.946009310834355
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("5b");
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList2.forEach(consumer0);
      ontologyTerm0.setNewRecord(true);
      arrayList1.add(ontologyTerm1);
      rawVariable0.getOntologyTerms();
      ontologyTerm0.setTerm("5b");
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("5b");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      Variable.validateFields(rawVariable0);
      assertEquals("5b", rawVariable0.getDisplayName());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=3.6984064074485046
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.retainAll(arrayList1);
      ontologyTerm1.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      arrayList1.removeAll(arrayList2);
      arrayList1.add(ontologyTerm0);
      arrayList1.iterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ontologyTerm2.setDescription("zcCl|ZoFxA");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList4.contains(ontologyTerm0));
      
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList5);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.6925503526260917
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      Comparator<OntologyTerm> comparator0 = (Comparator<OntologyTerm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      ontologyTerm0.setDescription((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus((String) null);
      rawVariable1.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList1);
      assertEquals(1, arrayList1.size());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDocumentCode("v2aY/Dznnic NvS.J\"");
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel1 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument10);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis((-518L));
      derivedVariable0.getColumnStart();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.6145235356985044
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList0.retainAll(arrayList1);
      ontologyTerm1.setNewRecord(true);
      ArrayList<Locale.LanguageRange> arrayList2 = new ArrayList<Locale.LanguageRange>();
      ArrayList<Locale> arrayList3 = new ArrayList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) arrayList3, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) arrayList2, (Collection<Locale>) list0);
      arrayList1.removeAll(list1);
      arrayList1.add(ontologyTerm0);
      arrayList0.iterator();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("mBj9");
      rawVariable0.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("zcCl|ZoFxA");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable0.getQuestionNumber();
      ArrayList<OntologyTerm> arrayList4 = rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList4);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDocumentCode("v2aY/Dznnic NvS.J\"");
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument9);
      assertTrue(boolean0);
      
      System.setCurrentTimeMillis((-518L));
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertNotNull(string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      supportingDocument0.setDocumentCode("v2aY/Dznnic NvS.J\"");
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.setCodeBookNumber("V2uHW.?Um5ATVNk");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument10);
      System.setCurrentTimeMillis((-518L));
      rawVariable0.getLabel();
      assertEquals("V2uHW.?Um5ATVNk", rawVariable0.getCodeBookNumber());
  }
}
