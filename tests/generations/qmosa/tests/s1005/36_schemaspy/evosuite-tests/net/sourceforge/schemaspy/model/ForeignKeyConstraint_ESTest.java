/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 19:14:44 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "0%j>O!;xRE/t", (-920), (byte)113);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " via ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " via ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ")", (-13), 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TRANSLATION");
      int int0 = new Integer((-13));
      String string0 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      assertEquals((-13), foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.419573930991232
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-997), 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      Integer integer0 = new Integer((-997));
      Config.getInstance();
      System.setCurrentTimeMillis(2);
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.isImplied();
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string1);
      
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint0.isCascadeOnDelete();
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string2);
      
      boolean boolean3 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals((-997), foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.295789001088607
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 2);
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer0 = new Integer(2);
      String[] stringArray0 = new String[1];
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      stringArray0[0] = "N";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Integer integer1 = new Integer(0);
      System.setCurrentTimeMillis((-5014L));
      System.setCurrentTimeMillis((-816L));
      foreignKeyConstraint0.getUpdateRule();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getParentTable();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(0);
      foreignKeyConstraint0.getChildTable();
      System.setCurrentTimeMillis((-816L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5137652346908954
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "|6({9P-bj68cb$[ZSx", (-734), 1);
      foreignKeyConstraint0.isImplied();
      System.setCurrentTimeMillis(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, (-734), 1);
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint0.isImplied();
      boolean boolean0 = foreignKeyConstraint1.isRestrictDelete();
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint1.getName();
      System.setCurrentTimeMillis((-144L));
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string1);
      
      foreignKeyConstraint1.getParentColumns();
      boolean boolean1 = foreignKeyConstraint1.isImplied();
      assertFalse(boolean1 == boolean0);
      
      foreignKeyConstraint1.getParentColumns();
      assertEquals((-734), foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3827288068907033
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 3, 3);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      Integer integer0 = new Integer((-1685));
      Config.getInstance();
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isImplied();
      String string1 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean2 = foreignKeyConstraint0.isImplied();
      assertTrue(boolean2 == boolean0);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string2);
      
      boolean boolean3 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean3 == boolean1);
      assertEquals(3, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean3);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.4352579815807553
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")'j", 3316, 1839);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "|6({9P-bj68cb$[ZSx", (-734), 1);
      foreignKeyConstraint1.addChildColumn(tableColumn0);
      boolean boolean0 = foreignKeyConstraint1.isImplied();
      System.setCurrentTimeMillis(1839);
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      foreignKeyConstraint1.addParentColumn(tableColumn1);
      boolean boolean1 = foreignKeyConstraint1.isRestrictDelete();
      assertFalse(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      foreignKeyConstraint0.addChildColumn(tableColumn1);
      assertFalse(foreignKeyConstraint0.isRestrictDelete());
      assertEquals(3316, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "W41<4lVpHu5l";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W41<4lVpHu5l", (-1), (-1));
      foreignKeyConstraint0.isReal();
      String string1 = "KJyXR=WP6+I\"3{?";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("KJyXR=WP6+I\"3{?", "KJyXR=WP6+I\"3{?", "KJyXR=WP6+I\"3{?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"KJyXR=WP6+I\"3{?\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "W41^4lVp6u5l";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "W41^4lVp6u5l", (-2827), (-2827));
      foreignKeyConstraint0.isReal();
      String string1 = "KJyXR=WP6+I\"3{?";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("KJyXR=WP6+I\"3{?", "KJyXR=WP6+I\"3{?", "KJyXR=WP6+I\"3{?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"KJyXR=WP6+I\"3{?\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null, (String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0, 0).when(tableColumnMeta0).getDigits();
      doReturn((String) null, (String) null).when(tableColumnMeta0).getId();
      doReturn((String) null, (String) null).when(tableColumnMeta0).getName();
      doReturn(0, 0).when(tableColumnMeta0).getSize();
      doReturn((String) null, (String) null).when(tableColumnMeta0).getType();
      doReturn(false, false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false, false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkParents();
      tableColumn0.unlinkParents();
      tableColumn0.unlinkChildren();
      tableColumn0.removeParent((TableColumn) null);
      tableColumn0.removeParent(tableColumn0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null, (String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0, 0).when(tableColumnMeta1).getDigits();
      doReturn((String) null, (String) null).when(tableColumnMeta1).getId();
      doReturn((String) null, (String) null).when(tableColumnMeta1).getName();
      doReturn(0, 0).when(tableColumnMeta1).getSize();
      doReturn((String) null, (String) null).when(tableColumnMeta1).getType();
      doReturn(false, false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false, false).when(tableColumnMeta1).isNullable();
      tableColumn0.unlinkParents();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.unlinkParents();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn1.removeChild(tableColumn2);
      tableColumn0.removeChild(tableColumn1);
      tableColumn1.removeParent((TableColumn) null);
      tableColumn1.removeParent((TableColumn) null);
      tableColumn0.removeChild(tableColumn1);
      tableColumn0.unlinkChildren();
      tableColumn1.unlinkParents();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn3.removeChild(tableColumn1);
      tableColumn3.removeChild(tableColumn1);
      tableColumn3.unlinkParents();
      tableColumn3.removeChild((TableColumn) null);
      tableColumn3.removeChild((TableColumn) null);
      tableColumn0.removeParent((TableColumn) null);
      tableColumn0.removeParent(tableColumn3);
      tableColumn1.unlinkChildren();
      tableColumn1.setType("qj|y-$}w");
      tableColumn0.removeParent((TableColumn) null);
      tableColumn3.unlinkChildren();
      tableColumn3.unlinkParents();
      tableColumn3.unlinkParents();
      tableColumn0.removeParent(tableColumn2);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cascade n deete:\n Deletion of paret deletes child");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "]P_E%qdZA}l{[BNT", (byte)0, (-20));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cascade n deete:\n Deletion of paret deletes child");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Cascade n deete:\n Deletion of paret deletes child", 21, (-715));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals((-20), foreignKeyConstraint0.getDeleteRule());
      assertEquals(6, int0);
      assertEquals(21, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 3316, 3316);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setShortType("");
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      foreignKeyConstraint0.isImplied();
      System.setCurrentTimeMillis((-1838L));
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(3316, int0);
      
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean0);
      
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      foreignKeyConstraint0.addParentColumn(tableColumn1);
      foreignKeyConstraint0.addChildColumn(tableColumn1);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      String string0 = ForeignKeyConstraint.toString(list0);
      assertNull(string0);
      
      List<TableColumn> list1 = foreignKeyConstraint0.getChildColumns();
      assertEquals(3316, foreignKeyConstraint0.getUpdateRule());
      assertTrue(list1.contains(tableColumn0));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.077057716007896
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-997), 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      
      Integer integer0 = new Integer((-997));
      Integer integer1 = new Integer((-997));
      Config.getInstance();
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string1);
      
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-997), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string2);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.156588721618648
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 2);
      foreignKeyConstraint0.isCascadeOnDelete();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      Integer integer0 = new Integer(2);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getName();
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      
      String string2 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string2);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5149488290293576
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}A}h1TZA}]_", 0, 3316);
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer0 = new Integer(3316);
      System.setCurrentTimeMillis(1L);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ">AeOa6I-qN`", 46, 3316);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N");
      foreignKeyConstraint1.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint1.isCascadeOnDelete();
      assertTrue(boolean2 == boolean1);
      
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.isImplied();
      System.setCurrentTimeMillis(1L);
      boolean boolean3 = foreignKeyConstraint1.isImplied();
      assertEquals(3316, foreignKeyConstraint1.getDeleteRule());
      assertEquals(46, foreignKeyConstraint1.getUpdateRule());
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setShortType("zJBN+8!FJ+1Yj|hpi3");
      tableColumn0.unlinkParents();
      tableColumn0.removeParent((TableColumn) null);
      tableColumn0.removeParent((TableColumn) null);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.removeChild(tableColumn0);
      tableColumn0.removeChild(tableColumn1);
      tableColumn0.setComments("Xb?@;0)UW`LB?Qi[F");
      tableColumn1.setComments("^>m-}s[oNIwZ-3D");
      tableColumn1.removeParent((TableColumn) null);
      tableColumn1.removeParent((TableColumn) null);
      tableColumn0.setType("zJBN+8!FJ+1Yj|hpi3");
      tableColumn1.setType("^>m-}s[oNIwZ-3D");
      tableColumn0.removeChild(tableColumn1);
      tableColumn0.unlinkChildren();
      tableColumn1.unlinkParents();
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn2.removeChild(tableColumn1);
      tableColumn2.removeChild(tableColumn1);
      Integer integer0 = new Integer(3076);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, (TableColumn) null, 3076, 3076);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")", 223, 223);
      foreignKeyConstraint0.isRestrictDelete();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      ResultSet resultSet1 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      Integer integer0 = new Integer(3023);
      assertEquals(3023, (int)integer0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.241188486593269
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, (-1230));
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer0 = new Integer(1);
      Config.getInstance();
      System.setCurrentTimeMillis(1820);
      foreignKeyConstraint0.getDeleteRuleDescription();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1820, 1);
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean1);
      
      foreignKeyConstraint1.getDeleteRuleDescription();
      boolean boolean2 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean2 == boolean0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      String string0 = foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      String string1 = foreignKeyConstraint1.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string1);
      assertTrue(foreignKeyConstraint1.isRestrictDelete());
      assertFalse(foreignKeyConstraint1.isCascadeOnDelete());
      assertEquals(1820, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Casc|de deete:\n Deletion of paet deletes child");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Casc|de deete:\n Deletion of paet deletes child");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t<TT2t~QDBUt)", 21, (-715));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-715), foreignKeyConstraint0.getDeleteRule());
      assertEquals(21, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Casc|de deete:\n Deletion of paet deletes child");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Casc|de deete:\n Deletion of paet deletes child");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t<TT2t~QDBUt)", 21, (-715));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-715), foreignKeyConstraint0.getDeleteRule());
      assertEquals(21, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Casc|de n deete:\n Deletion of paret deletes child");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cac|de < deete:\n 4eletion of paret deletes child");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<Tp2t~QDBUt)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t<Tp2t~QDBUt)", 21, (-727));
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1520909704942106
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "}A}h1TZA]_", 3316, 0);
      foreignKeyConstraint0.isImplied();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRule();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.isCascadeOnDelete();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("Null on delete:\n ForeignXkey to parent setto NULL w[en parent deleted", "Null on delete:\n ForeignXkey to parent setto NULL w[en parent deleted", "C");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"Null on delete:
         //  ForeignXkey to parent setto NULL w[en parent deleted\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3910032313883347
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "-g,conrops", 3316, (-721));
      Integer integer0 = new Integer(3076);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      List<TableColumn> list1 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRule();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString(list1);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3910032313883347
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "-g,conrops", 3316, 3316);
      Integer integer0 = new Integer(3076);
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      List<TableColumn> list1 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRule();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString(list1);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Casc|de n deete:\n Deletion of paret deletes child");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t<TT2t~QDBUt)", 21, (-715));
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N!T");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N!T");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N!T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N!T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 1787, 165);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      System.setCurrentTimeMillis(1787);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Kb/TP.q4");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Kb/TP.q4");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Kb/TP.q4", (byte)0, (-20));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cac|de < deete:\n 4eletion of paret deletes chil");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Kb/TP.q4");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, (String) null, 21, (-20));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Kb/TP.q4");
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cascade on delete");
      byte[] byteArray0 = new byte[18];
      byteArray0[2] = (byte)113;
      byteArray0[3] = (byte)113;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[4] = (byte)113;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cascade on delete");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t<TT2t~QDBUt)", 1839, 9);
      byte[] byteArray1 = new byte[20];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z#Ew!:#uDYMmyE2zuS,");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ": ma-(chs");
      byteArray1[2] = (byte)113;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      byteArray1[1] = (byte)113;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R6cpGVj4U[");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "t<TT2t~QDBUt)", 1, (-715));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R6cpGVj4U[");
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      byte[] byteArray0 = new byte[14];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Cascade n deete:\n Deletion of paret deletes child");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]P_E%qdZA}l{[BNT");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "t<TT2t~QDBUt)", (byte)0, (-20));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t<TT2t~QDBUt)");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rMO");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "YZmAm$yErVJI");
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals(0, int0);
      assertEquals((-20), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")", 1839, (-130));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 1839, (-689));
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(1839, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-689), foreignKeyConstraint1.getDeleteRule());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.832920911191322
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ")'j", 3316, 1839);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")'j");
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte) (-107);
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(3316, int0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(1839, foreignKeyConstraint0.getDeleteRule());
      
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.788458655589152
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Table table0 = null;
      String string0 = "";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-997), 2);
      foreignKeyConstraint0.getDeleteRuleAlias();
      Integer integer0 = new Integer((-997));
      Config config0 = Config.getInstance();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getUpdateRule();
      try { 
        config0.determineDbProperties("Restrict delete:\n Parent cannot be deleted if children exist");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      long long0 = 1522L;
      System.setCurrentTimeMillis(1522L);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = 2;
      Config.getInstance();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      tableColumn0.unlinkParents();
      tableColumn0.removeParent((TableColumn) null);
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.setIsAutoUpdated(true);
      tableColumn1.removeParent(tableColumn0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
