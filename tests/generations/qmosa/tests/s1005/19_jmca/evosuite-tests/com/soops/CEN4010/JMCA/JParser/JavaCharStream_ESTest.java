/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 10:58:29 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.790339033909496
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("v'");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      int int0 = 1922;
      int int1 = 1;
      javaCharStream0.adjustBeginLineColumn(1922, 1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9080300437102597
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-35);
      byteArray0[6] = (byte) (-51);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-51), 1, 1561);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-659), 1561, 1);
      String string0 = javaCharStream1.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 0, 338, 2);
      javaCharStream0.BeginToken();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream(97);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-3417), 80, 125);
      javaCharStream0.backup(2048);
      pipedInputStream0.skip(0L);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      char[] charArray0 = new char[1];
      charArray0[0] = 'Y';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8244965477591744
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte byte0 = (byte)13;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13, 2421);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.tokenBegin = (int) (byte)13;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[9];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      sequenceInputStream0.markSupported();
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte) (-84);
      byteArray1[2] = (byte) (-14);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      char[] charArray0 = null;
      javaCharStream0.getEndColumn();
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8662160235859526
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream(97);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 125, (-3417), 125);
      javaCharStream0.backup(1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      pipedInputStream0.skip((-3417));
      sequenceInputStream0.mark(72);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(79, 72);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.15461930986397
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, 6, 2421);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.ReInit((InputStream) byteArrayInputStream0, (int) (byte)76, 4097, 0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-3738), 96, 96);
      javaCharStream2.getBeginLine();
      char[] charArray0 = new char[8];
      charArray0[0] = '\u0000';
      charArray0[1] = '\u0000';
      charArray0[2] = '7';
      charArray0[3] = '\u0000';
      charArray0[4] = '\r';
      charArray0[5] = '\u0000';
      charArray0[6] = '\u0000';
      charArray0[7] = '\u0000';
      javaCharStream2.buffer = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream2.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]{*[+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 64, 1, 64);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getEndLine();
      javaCharStream0.getColumn();
      assertEquals(2176, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.6035681031705153
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13, 2036);
      javaCharStream0.readChar();
      javaCharStream0.nextCharInd = 5;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      char[] charArray0 = new char[1];
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O1Hxk`jcNF3qewC$y(");
      int int0 = (-1286);
      stringReader0.ready();
      int int1 = 31;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1286), 31, 31);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.prevCharIsLF = false;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-1286), (-1286));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      JavaCharStream.hexval('5');
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("I+e-fzbGxe<\"S.");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 162, (-24));
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = '9';
      charArray0[2] = '1';
      charArray0[3] = '.';
      charArray0[4] = '0';
      charArray0[5] = '{';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      char[] charArray0 = new char[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.107605527161868
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)76, 2421, 6);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(2048, (byte)117);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-183), 1307, 1242);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.GetImage();
      javaCharStream0.adjustBeginLineColumn((-1), 473);
      javaCharStream0.getEndLine();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3328815034973984
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 68, 117, 68);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 1, 68);
      javaCharStream1.backup((-274));
      javaCharStream1.BeginToken();
      javaCharStream1.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream1.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-2597), 0, 1);
      javaCharStream0.AdjustBuffSize();
      stringReader0.read();
      javaCharStream1.adjustBeginLineColumn((-49), 1095);
      assertEquals(0, javaCharStream1.bufpos);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char char0 = 'R';
      char char1 = 'I';
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      charArray0[0] = 'c';
      charArray0[1] = '6';
      charArray0[2] = 'c';
      charArray0[3] = 'K';
      charArray0[4] = 'U';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-101), (-101));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.getLine();
      javaCharStream0.getEndColumn();
      char[] charArray0 = new char[5];
      charArray0[0] = 'I';
      charArray0[1] = 'I';
      charArray0[2] = 'h';
      charArray0[3] = 'I';
      charArray0[4] = 'I';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-101), int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      char[] charArray0 = new char[1];
      StringReader stringReader0 = new StringReader("}LRaCtA0PAHMQ)=");
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 67, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.9210648813071531
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)98, (byte)98);
      javaCharStream0.ReInit((Reader) stringReader1, (-178), (int) (byte)34);
      stringReader0.skip((-178));
      javaCharStream0.backup(1217);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(1, (byte)34);
      stringReader0.ready();
      javaCharStream0.FillBuff();
      javaCharStream0.adjustBeginLineColumn(55, (-1));
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.getBeginColumn();
      javaCharStream1.ReInit((Reader) stringReader0, 2359, 1, 98);
      javaCharStream1.getBeginLine();
      javaCharStream0.adjustBeginLineColumn(1, (-2378));
      assertEquals((-2378), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2110688711446103
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      stringReader0.skip(1L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      CharBuffer.wrap(charArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      sequenceInputStream1.mark(0);
      javaCharStream0.bufpos = 93;
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9153331716776625
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13, 2421);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[9];
      charArray0[0] = '\r';
      charArray0[1] = '\u0000';
      charArray0[2] = 'I';
      charArray0[3] = '\r';
      charArray0[4] = '\u0000';
      charArray0[5] = '`';
      charArray0[6] = '\r';
      charArray0[7] = '\r';
      charArray0[8] = '-';
      CharBuffer.wrap(charArray0);
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream(97);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 132, (-3418), 132);
      javaCharStream0.backup(1492);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      pipedInputStream0.skip((-3418));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(14);
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-61);
      byteArray0[7] = (byte)62;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("dV0Q]mJiK :");
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte) (-14), 23, 23);
      javaCharStream0.backup((byte)62);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.bufsize = (int) (byte) (-53);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(4034, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, 1860, 690);
      javaCharStream0.backup(1860);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 0, 0);
      javaCharStream1.GetImage();
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      stringReader0.close();
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
      
      int int1 = JavaCharStream.hexval('9');
      assertEquals(9, int1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9z#E==F04:g]1~");
      char[] charArray1 = new char[5];
      charArray1[0] = '\\';
      charArray1[1] = '\\';
      charArray1[2] = '\\';
      charArray1[4] = 'G';
      charArray1[4] = '\\';
      CharBuffer.wrap(charArray1);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-60);
      byteArray0[7] = (byte)62;
      pipedInputStream0.close();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 12, 23);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hmg&N.1iy`sZ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('F');
      try { 
        JavaCharStream.hexval('n');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      char[] charArray0 = new char[8];
      charArray0[0] = 'm';
      CharBuffer.wrap(charArray0);
      char char0 = ']';
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0253262207700673
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(14);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-61);
      byteArray0[7] = (byte)62;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("dV0Q]mJiK :");
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte) (-14), 23, 23);
      javaCharStream0.backup((byte)62);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[3] = (byte)117;
      char char0 = 'T';
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7480673485460894
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      stringReader0.ready();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 56, 0, 0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(14);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      char[] charArray0 = new char[4];
      charArray0[0] = 'X';
      charArray0[1] = '';
      charArray0[2] = 'e';
      charArray0[3] = 'g';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.available();
      javaCharStream0.AdjustBuffSize();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)98;
      byteArray0[2] = (byte)98;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte)98;
      byteArray0[6] = (byte)98;
      byteArray0[7] = (byte)58;
      byteArray0[8] = (byte)58;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)98, 11);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)98, (byte)58);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte)98, (-2201), 471);
      // Undeclared exception!
      try { 
        javaCharStream2.GetSuffix(4843);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      char[] charArray0 = new char[8];
      charArray0[1] = '0';
      charArray0[6] = '\f';
      charArray0[3] = 'D';
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5;");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('D');
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      char[] charArray0 = new char[6];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(14);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte) (-114);
      char[] charArray0 = new char[5];
      charArray0[0] = 'n';
      charArray0[1] = 'F';
      charArray0[2] = 'D';
      charArray0[4] = 'T';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.8867895172690288
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.available();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.tokenBegin = 1242;
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = ' ';
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      javaCharStream0.ReInit((Reader) stringReader0, (-215), 0);
      stringReader0.ready();
      stringReader0.skip((-2313L));
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8392967479776605
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)13);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 125, 125, 162);
      javaCharStream0.backup(681);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 3414);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pushbackInputStream0);
      pipedInputStream0.skip((-3417));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(681, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(15);
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.ReInit((Reader) stringReader1, 4, 1, 4096);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("~");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3509, 3509, 0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)65;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = (-2261);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2261), 3509, 872);
      javaCharStream1.column = (int) (byte)65;
      char[] charArray0 = new char[1];
      charArray0[0] = 'i';
      javaCharStream1.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)125;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      charArray0[1] = '2';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[4];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      charArray0[2] = 'M';
      charArray0[3] = 'M';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte) (-29);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-125);
      byteArray0[6] = (byte)90;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      int int0 = 11;
      int int1 = 94;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 11, 94);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.385232964438991
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.available();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      StringReader stringReader0 = new StringReader("&b>y'#LYah$t~&P&'");
      javaCharStream0.ReInit((Reader) stringReader0, 3785, 0);
      StringReader stringReader1 = new StringReader("&b>y'#LYah$t~&P&'");
      stringReader1.skip(0L);
      javaCharStream0.backup(3785);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0, 0, 3785);
      javaCharStream0.BeginToken();
      javaCharStream0.ReInit((Reader) stringReader1, 0, 0);
      javaCharStream0.adjustBeginLineColumn(0, 301);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 301, 4075, 4075);
      javaCharStream1.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 1170, 133, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(14);
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byte byte0 = (byte) (-53);
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-14);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-61);
      byteArray0[7] = (byte)62;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("dV0Q]mJiK :");
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (byte) (-14), 23, 23);
      javaCharStream0.backup((byte)62);
      javaCharStream0.BeginToken();
      int[] intArray0 = new int[6];
      intArray0[0] = (int) (byte) (-61);
      intArray0[1] = (int) (byte)45;
      intArray0[2] = 23;
      intArray0[3] = (int) (byte)0;
      intArray0[4] = (int) (byte) (-53);
      intArray0[5] = 23;
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ed.A>]DcG4ok^5H");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('3');
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = 14;
      char char0 = '<';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ed.A>]DcG4ok^5H");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('3');
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      StringReader stringReader1 = new StringReader("V;GEH ^eq*O");
      StringReader stringReader2 = new StringReader(",2-");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6J");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("6J");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 650, (-2624));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.161648274580658
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)76, 6, 2421);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.readChar();
      javaCharStream0.backup((byte)76);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      sequenceInputStream0.mark(6);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.9770061729088613
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1522, (-1491), 75);
      javaCharStream0.backup(61);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 81, 9, 9);
      javaCharStream1.AdjustBuffSize();
      stringReader0.read();
      javaCharStream0.adjustBeginLineColumn(9, 9);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      boolean boolean0 = JavaCharStream.staticFlag;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)34;
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.019814992492946
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 436, 89, 2878);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.backup(0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      sequenceInputStream0.mark(0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6J");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]{*[+");
      char[] charArray0 = new char[9];
      charArray0[0] = 'f';
      charArray0[1] = '6';
      charArray0[2] = '6';
      charArray0[3] = 'f';
      charArray0[4] = 'f';
      charArray0[5] = '+';
      charArray0[6] = 'c';
      charArray0[7] = '6';
      charArray0[8] = '6';
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char char0 = 'V';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      char[] charArray0 = new char[7];
      charArray0[0] = 'J';
      charArray0[1] = '';
      charArray0[2] = 'R';
      charArray0[3] = 'v';
      charArray0[4] = '#';
      charArray0[5] = 'N';
      charArray0[6] = 'I';
      stringReader0.read(charArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval(',');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[1];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0910739968920322
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JavaCharStream.hexval('b');
      StringReader stringReader0 = new StringReader("WxiCyVE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.getBeginLine();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream1 = new JavaCharStream(mockFileInputStream0, 70, 1028, 2372);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.adjustBeginLineColumn((-2250), 1);
      javaCharStream1.maxNextCharInd = (-2250);
      JavaCharStream javaCharStream3 = new JavaCharStream(mockFileInputStream0, 0, 1, 5);
      try { 
        javaCharStream3.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      char[] charArray0 = new char[8];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[6] = '+';
      charArray0[3] = '+';
      charArray0[4] = 'f';
      charArray0[5] = '6';
      charArray0[6] = 'C';
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ed.A>]DcG4ok^5H");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.8866967846580784
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[9];
      pipedInputStream0.mark(15);
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte) (-84);
      byteArray1[2] = (byte) (-14);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup((-9));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hmg&N.1iy`sZ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char char0 = 'O';
      char char1 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.085766888817465
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13, 2036);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = '\r';
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.mark((-1437));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.3069114339915324
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      char[] charArray0 = new char[8];
      charArray0[0] = 'm';
      charArray0[1] = '0';
      charArray0[6] = '\u001B';
      charArray0[3] = 'D';
      StringReader stringReader0 = new StringReader("H%M*=g|0tGdRu?o#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.backup(81);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.BeginToken();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0);
      javaCharStream2.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream2.GetImage();
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 0, (-1), 924);
      javaCharStream2.getBeginColumn();
      JavaCharStream javaCharStream4 = new JavaCharStream(stringReader0);
      javaCharStream4.AdjustBuffSize();
      stringReader0.read();
      javaCharStream0.adjustBeginLineColumn(0, (-117));
      assertEquals(4014, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      stringReader0.skip(1L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 56, 0, 0);
      javaCharStream0.inBuf = 315;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[3];
      charArray0[0] = 'C';
      charArray0[1] = '6';
      charArray0[2] = 'C';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      char[] charArray0 = new char[1];
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.7833836094401962
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)76, 2421, 6);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((byte)117);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.readChar();
      StringReader stringReader1 = new StringReader("k");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)76, (-377));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream0, (byte)13, 2421);
      javaCharStream0.GetSuffix(2421);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(77, javaCharStream0.getLine());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.965237049380231
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream(97);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 125, (-3417), 125);
      javaCharStream0.backup(1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      pipedInputStream0.skip((-3417));
      sequenceInputStream0.mark(72);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetSuffix(90);
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8866967846580787
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[9];
      pipedInputStream0.mark(15);
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-4948), (byte) (-53), (-1));
      javaCharStream0.backup((byte) (-53));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      pipedInputStream0.skip((-1289L));
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      char[] charArray0 = new char[9];
      charArray0[0] = '6';
      charArray0[1] = '6';
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.close();
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      StringReader stringReader1 = new StringReader("1l'=d`Cxm%'HPd");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), (-1), 56);
      javaCharStream0.BeginToken();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]{*[+");
      StringReader stringReader1 = new StringReader("");
      int int0 = (-1358);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-1358), 64, (-1358));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8477658405484119
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      StringReader stringReader0 = new StringReader("Invalid escape caracter at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      javaCharStream0.getLine();
      javaCharStream0.adjustBeginLineColumn((-718), (-3195));
      StringReader stringReader1 = new StringReader("Invalid escape caracter at line ");
      stringReader1.ready();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.0857668888174645
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13, 2036);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = '`';
      charArray0[2] = 'W';
      charArray0[3] = '\r';
      charArray0[4] = '-';
      CharBuffer.wrap(charArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream1.getBeginColumn();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0585649370898675
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 98, 80, (byte)117);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0, 2, 6);
      javaCharStream1.GetImage();
      javaCharStream0.UpdateLineColumn('\uFFFD');
      javaCharStream0.getEndLine();
      javaCharStream0.getLine();
      javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      
      javaCharStream1.adjustBeginLineColumn((byte) (-95), 80);
      assertEquals((-94), javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("]{*[+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 117, 13);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(']', char0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.0265931526538448
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[2] = (byte)13;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)76, 2421, 6);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(2048, (byte)117);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-183), 1307, 1242);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.GetImage();
      javaCharStream0.adjustBeginLineColumn((-1), 473);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.6035681031705153
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("");
      boolean boolean0 = JavaCharStream.staticFlag;
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.6549591173758098
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(1, (byte)76);
      StringReader stringReader1 = new StringReader("");
      boolean boolean0 = JavaCharStream.staticFlag;
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("BTy:gAM");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.148365610638593
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[9];
      pipedInputStream0.mark(15);
      byteArray0[0] = (byte) (-53);
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-53), 15, 15);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginLine();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.reset();
      javaCharStream0.AdjustBuffSize();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte) (-53), (byte) (-53), 1445);
      javaCharStream1.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (byte) (-53), 0);
      javaCharStream0.ExpandBuff(false);
      assertEquals(0, javaCharStream0.bufpos);
      
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      javaCharStream1.getBeginColumn();
      int int1 = javaCharStream1.getBeginColumn();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.0880919427638154
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M");
      StringReader stringReader0 = new StringReader("M");
      StringReader stringReader1 = new StringReader("cb");
      StringReader stringReader2 = new StringReader("V;GEH ^eq*O");
      stringReader2.skip((-495L));
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      sequenceInputStream0.mark((-2346));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(1, javaCharStream0.getBeginColumn());
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.GetImage();
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-848));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.9960309859581935
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]{*[+");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 64, 1, 64);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = '\\';
      charArray0[0] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3509, 3509, 0);
      javaCharStream0.GetImage();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)10;
      byte byte0 = (byte) (-110);
      byteArray0[2] = (byte) (-40);
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)73;
      byteArray0[5] = (byte) (-18);
      int int0 = 117;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-2772), 73);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.available();
      sequenceInputStream0.markSupported();
      byte[] byteArray1 = new byte[7];
      byteArray1[1] = (byte) (-84);
      String string0 = "HE4,L_=B";
      StringReader stringReader0 = new StringReader("HE4,L_=B");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.adjustBeginLineColumn(14, 6);
      javaCharStream0.adjustBeginLineColumn(14, 14);
      assertEquals(15, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.close();
      StringReader stringReader1 = new StringReader("DO@PCo ]cNta`");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader(",2-");
      stringReader3.skip((-1818L));
      stringReader1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader4 = new StringReader("");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1), 68, (-15));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.8609685009034056
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn((-718), 2943);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader0.ready();
      StringReader stringReader2 = new StringReader("");
      stringReader0.skip((-1441L));
      stringReader0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      StringReader stringReader3 = new StringReader("b2j;");
      javaCharStream1.ReInit((Reader) stringReader3, 91, 362, 1441);
      int int0 = javaCharStream0.getColumn();
      assertEquals(2943, javaCharStream0.getBeginColumn());
      assertEquals(2943, int0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.8031407112125146
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = new PipedInputStream(97);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 125, (-3417), 125);
      javaCharStream0.backup(1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      pipedInputStream0.skip((-3417));
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('\u0000');
      assertEquals((-3417), javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("() rz3g_R~r?_j0w8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4085, 4085);
      char char0 = javaCharStream0.ReadByte();
      assertEquals('(', char0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.504762543929311
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader0 = new StringReader("-QJ<-!\"");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 86, 764);
      javaCharStream0.ReInit((Reader) stringReader0, 0, 1391);
      stringReader0.skip((-1));
      javaCharStream0.backup(764);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0, 764, (-590));
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.ReadByte();
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 1391, 1391);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReadByte();
      javaCharStream0.adjustBeginLineColumn('I', 'I');
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.2451715894115165
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(83);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.mark(64);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup(15);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("~K;xi,*s]");
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      javaCharStream1.AdjustBuffSize();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K[T|TT.`");
      StringReader stringReader0 = new StringReader("x3z");
      stringReader0.markSupported();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte) (-84);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('.');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)13;
      byteArray0[5] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2172), (-4879), (byte)13);
      javaCharStream0.readChar();
      char[] charArray0 = new char[7];
      charArray0[0] = '\r';
      charArray0[1] = '\r';
      charArray0[2] = '\r';
      charArray0[3] = '\r';
      charArray0[4] = '\r';
      charArray0[5] = 'W';
      charArray0[6] = '\r';
      CharBuffer.wrap(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)13);
      assertTrue(charBuffer0.hasArray());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.2429732264381466
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      CharBuffer.wrap(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.backup(1);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.backup(1);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      char char0 = 'W';
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-61);
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-9), 95);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)45, (byte)45);
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5410184476447624
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("]{*[+");
      stringReader0.markSupported();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2935, 791);
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsCR = true;
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('*', char0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("#YFX]#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 2447;
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.9512516037127832
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("^C^");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.ReInit((Reader) stringReader0);
      int int0 = 1;
      javaCharStream0.adjustBeginLineColumn(1, 1);
      StringReader stringReader1 = new StringReader("");
      boolean boolean0 = JavaCharStream.staticFlag;
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1015);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1015, (-1476));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ed.A>]DcG4ok^5H");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 2825);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1));
      javaCharStream0.line = (-1);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0, 4);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream1, 1686, 4, (-4539));
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.255265733556093
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13, 2421);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      byteArrayInputStream0.skip(0);
      javaCharStream0.Done();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)13, (byte)13);
      char[] charArray0 = new char[1];
      charArray0[0] = '\r';
      CharBuffer.wrap(charArray0);
      javaCharStream1.getBeginColumn();
      assertEquals(0, byteArrayInputStream0.available());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      boolean boolean0 = JavaCharStream.staticFlag;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)13;
      byteArray0[6] = (byte)34;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-2017), (byte)34);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      JavaCharStream.hexval('C');
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-109);
      byteArray0[1] = (byte)93;
      byteArray0[2] = (byte) (-35);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      char[] charArray0 = new char[8];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      charArray0[4] = 'C';
      charArray0[5] = 'C';
      charArray0[6] = 'C';
      charArray0[7] = 'C';
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('o');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.9675446070142595
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)50;
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte) (-62);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 117, 13, 72);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("");
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(bufferedInputStream1);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '\\';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      CharBuffer.wrap(charArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, (-1), (-834), (-834));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.9739048086188364
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)13, 6, 2421);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, (-3738), 96, 96);
      javaCharStream2.getBeginLine();
      javaCharStream2.AdjustBuffSize();
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      sequenceInputStream0.available();
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-178), 223);
      javaCharStream1.ReInit((Reader) stringReader0, (-178), (-1));
      stringReader1.skip(0L);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      assertEquals(7, charBuffer0.capacity());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7E'IDNN~");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("7E'IDNN~");
      stringReader2.ready();
      stringReader1.skip((-215));
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 137
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'K';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M2J+-u5D[HFh_5\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-534));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)18;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)18, (byte)18);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 1046, (-2747), (-1));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=0.3250829733914482
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte) (-61);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-44);
      stringReader0.ready();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 100, 2423, 15);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('*');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(14);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 311, 0, 15);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 14, 9);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.flush();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-912), (-912));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&go.l&Z>i");
      char[] charArray0 = new char[9];
      charArray0[0] = 'W';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[3] = ']';
      charArray0[4] = '.';
      charArray0[5] = ')';
      charArray0[6] = '^';
      charArray0[7] = 'l';
      charArray0[8] = 'f';
      CharBuffer.wrap(charArray0);
      CharBuffer.wrap(charArray0);
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, 71, 71);
      javaCharStream0.FillBuff();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      pipedInputStream0.mark(15);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-9);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)83;
      byteArray1[1] = (byte) (-84);
      byteArray1[2] = (byte) (-14);
      byteArray1[3] = (byte) (-53);
      byteArray1[4] = (byte) (-53);
      byteArray1[5] = (byte)45;
      byteArray1[6] = (byte) (-84);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte)45, (byte) (-14));
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 0, (byte) (-14));
      javaCharStream0.GetSuffix((byte)83);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)76;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-880), 3009);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 3009, (byte)76);
      javaCharStream0.adjustBeginLineColumn(0, 59);
      assertEquals(59, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[7];
      charArray0[0] = '@';
      charArray0[1] = ' ';
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 632, 92, 1404);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(14);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte)98;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)13, (-2201));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      char[] charArray0 = new char[9];
      charArray0[0] = '+';
      charArray0[1] = 'j';
      charArray0[2] = '8';
      charArray0[3] = 'g';
      charArray0[4] = '/';
      charArray0[5] = 'k';
      charArray0[6] = 'q';
      charArray0[7] = '`';
      charArray0[8] = 'p';
      CharBuffer.allocate('+');
      CharBuffer.wrap(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+m!Y2pOc");
      StringReader stringReader0 = new StringReader("+m!Y2pOc");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("V;GEH ^eq*O");
      stringReader2.skip((-495L));
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      StringReader stringReader3 = new StringReader("V;GEH ^eq*O");
      char[] charArray0 = new char[0];
      CharBuffer.wrap(charArray0);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('V', char0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.559581156259877
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 56, (-1212), 56);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.markSupported();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)45;
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte)45;
      byteArray0[6] = (byte) (-9);
      byteArray0[7] = (byte) (-9);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, (byte) (-9));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (byte) (-9), (byte) (-9));
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.8937882323911377
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e5SUC$,P2#PY8}");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e5SUC$,P2#PY8}");
      stringReader0.close();
      stringReader0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 56, 0, 0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 82);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.close();
      StringReader stringReader1 = new StringReader("DO@PCo ]cNta`");
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      stringReader3.skip(0L);
      StringReader stringReader4 = new StringReader("DO@PCo ]cNta`");
      stringReader4.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.BeginToken();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }
}
