/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 16:48:47 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.wsdl.OutputImpl;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Date;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.function.BiFunction;
import javax.xml.namespace.QName;
import javax.xml.soap.SOAPException;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.configuration.FileProvider;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration;
import org.apache.axis.encoding.DeserializerImpl;
import org.apache.axis.encoding.DeserializerTarget;
import org.apache.axis.message.Detail;
import org.apache.axis.message.NamedNodeMapImpl;
import org.apache.axis.message.SOAPBodyElement;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.commons.httpclient.ConnectMethod;
import org.apache.commons.httpclient.HostConfiguration;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLImageElementImpl;
import org.apache.html.dom.HTMLTableRowElementImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.wml.dom.WMLTrElementImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(",mLR^w1-=", (XBUSSystem) null, (String) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl0, (XBUSSystem) null);
      Object object0 = new Object();
      Object object1 = new Object();
      recordTypeMessage0.getResponseText();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl0, ",mLR^w1-=");
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseObject();
      HTMLImageElementImpl hTMLImageElementImpl0 = new HTMLImageElementImpl(hTMLDocumentImpl0, ",mLR^w1-=");
      hTMLImageElementImpl0.item((-6));
      hTMLImageElementImpl0.isSupported("", (String) null);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl0 = new HTMLTableRowElementImpl(hTMLDocumentImpl1, "axis.attachments.implementation");
      OutputImpl outputImpl0 = new OutputImpl();
      outputImpl0.toString();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      WMLTrElementImpl wMLTrElementImpl0 = new WMLTrElementImpl(wMLDocumentImpl0, "Output: name=null");
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      HTMLTableRowElementImpl hTMLTableRowElementImpl1 = new HTMLTableRowElementImpl(hTMLDocumentImpl1, "");
      outputImpl0.toString();
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      OutputImpl outputImpl1 = new OutputImpl();
      OutputImpl outputImpl2 = new OutputImpl();
      OutputImpl outputImpl3 = new OutputImpl();
      OutputImpl outputImpl4 = new OutputImpl();
      Detail detail0 = new Detail();
      try { 
        detail0.addChildElement((String) null, "006", (String) null);
        fail("Expecting exception: SOAPException");
      
      } catch(SOAPException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.apache.axis.message.MessageElement", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = ",mLR^w1-O=";
      String string1 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(",mLR^w1-O=", (XBUSSystem) null, (String) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      recordTypeMessage0.getResponseText();
      hTMLDocumentImpl0.getDoctype();
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.log4j.Level");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(",mLR^w1-=", (XBUSSystem) null, ",mLR^w1-=");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)88;
      byteArray0[3] = (byte)103;
      byteArray0[4] = (byte) (-99);
      byteArray0[5] = (byte)21;
      byteArrayList1.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("dd/2e;L=|cjDk&u", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Iterator iterator0 = new EventReaderDelegate();
      DeserializerImpl deserializerImpl0 = new DeserializerImpl();
      DeserializerImpl deserializerImpl1 = new DeserializerImpl();
      deserializerImpl0.moveValueTargets(deserializerImpl1);
      OutputImpl outputImpl0 = new OutputImpl();
      outputImpl0.toString();
      outputImpl0.toString();
      char[] charArray0 = new char[1];
      DeserializerTarget deserializerTarget0 = new DeserializerTarget(deserializerImpl1, iterator0);
      deserializerImpl0.registerValueTarget(deserializerTarget0);
      charArray0[0] = 'e';
      deserializerImpl0.ignorableWhitespace(charArray0, 260, 1985);
      outputImpl0.toString();
      outputImpl0.toString();
      outputImpl0.toString();
      OutputImpl outputImpl1 = new OutputImpl();
      outputImpl0.toString();
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      OutputImpl outputImpl2 = new OutputImpl();
      deserializerImpl1.unparsedEntityDecl("Output: name=null", "Output: name=null", "Output: name=null", "Output: name=null");
      outputImpl2.toString();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl2 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl3 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl4 = new NamedNodeMapImpl();
      outputImpl0.toString();
      NamedNodeMapImpl namedNodeMapImpl5 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl6 = new NamedNodeMapImpl();
      OutputImpl outputImpl3 = new OutputImpl();
      OutputImpl outputImpl4 = new OutputImpl();
      OutputImpl outputImpl5 = new OutputImpl();
      OutputImpl outputImpl6 = new OutputImpl();
      OutputImpl outputImpl7 = new OutputImpl();
      try { 
        recordTypeMessage0.setRequestObject("Output: name=null", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      Iterator iterator0 = byteArrayList0.iterator();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
      DeserializerImpl deserializerImpl0 = new DeserializerImpl();
      DeserializerImpl deserializerImpl1 = new DeserializerImpl();
      deserializerImpl0.moveValueTargets(deserializerImpl1);
      OutputImpl outputImpl0 = new OutputImpl();
      outputImpl0.toString();
      outputImpl0.toString();
      char[] charArray0 = new char[1];
      DeserializerTarget deserializerTarget0 = new DeserializerTarget(deserializerImpl1, iterator0);
      deserializerImpl0.registerValueTarget(deserializerTarget0);
      charArray0[0] = 'e';
      deserializerImpl0.ignorableWhitespace(charArray0, 260, 1985);
      outputImpl0.toString();
      outputImpl0.toString();
      outputImpl0.toString();
      OutputImpl outputImpl1 = new OutputImpl();
      outputImpl0.toString();
      NamedNodeMapImpl namedNodeMapImpl0 = new NamedNodeMapImpl();
      OutputImpl outputImpl2 = new OutputImpl();
      deserializerImpl1.unparsedEntityDecl("Output: name=null", "Output: name=null", "Output: name=null", "Output: name=null");
      outputImpl2.toString();
      NamedNodeMapImpl namedNodeMapImpl1 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl2 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl3 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl4 = new NamedNodeMapImpl();
      outputImpl0.toString();
      NamedNodeMapImpl namedNodeMapImpl5 = new NamedNodeMapImpl();
      NamedNodeMapImpl namedNodeMapImpl6 = new NamedNodeMapImpl();
      OutputImpl outputImpl3 = new OutputImpl();
      OutputImpl outputImpl4 = new OutputImpl();
      OutputImpl outputImpl5 = new OutputImpl();
      OutputImpl outputImpl6 = new OutputImpl();
      assertFalse(outputImpl6.equals((Object)outputImpl4));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, 2);
      byteArrayInputStream1.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.skip(2);
      bufferedInputStream0.markSupported();
      pushbackInputStream0.unread(884);
      pushbackInputStream0.markSupported();
      byteArrayInputStream0.reset();
      bufferedInputStream0.skip((-1169L));
      byteArrayInputStream1.mark((byte)0);
      byteArrayInputStream0.markSupported();
      bufferedInputStream0.markSupported();
      bufferedInputStream0.mark((byte)90);
      bufferedInputStream0.read(byteArray0);
      bufferedInputStream0.skip((-2300L));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byteArrayInputStream1.read();
      pipedInputStream0.skip(0L);
      pipedInputStream0.markSupported();
      pushbackInputStream0.mark((-1467));
      pipedOutputStream0.write(1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("2:3X!^)_V", (XBUSSystem) null, "2:3X!^)_V");
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.560923023161317
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.setResponseTimestamp((Date) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      Boolean boolean0 = new Boolean("");
      MockDate mockDate0 = new MockDate(299, 299, 299, 1, 1, 299);
      recordTypeMessage0.setShortname("~yB9^%BOZ+");
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      String string0 = recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertNull(string0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      Hashtable<Object, Integer> hashtable0 = new Hashtable<Object, Integer>();
      Integer integer0 = new Integer(291);
      Integer integer1 = new Integer(291);
      Integer integer2 = new Integer(291);
      System.setCurrentTimeMillis(291);
      Integer integer3 = new Integer(291);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer4 = new Integer(291);
      System.setCurrentTimeMillis(994L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      Hashtable<Object, Integer> hashtable0 = new Hashtable<Object, Integer>();
      Integer integer0 = new Integer(291);
      Integer integer1 = new Integer(291);
      Integer integer2 = new Integer(16);
      System.setCurrentTimeMillis(291);
      hashtable0.put(integer2, integer2);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        hashtable0.merge((Object) null, integer1, biFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Hashtable<Object, Integer> hashtable0 = new Hashtable<Object, Integer>();
      Integer integer0 = new Integer((-1452));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)85;
      byteArray0[0] = (byte)0;
      byteArray0[3] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.mark((byte)0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, 8);
      byteArrayInputStream1.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.markSupported();
      pushbackInputStream0.unread(868);
      byteArrayInputStream0.reset();
      byteArrayInputStream1.mark((byte)0);
      bufferedInputStream0.mark((byte)85);
      bufferedInputStream0.read(byteArray0);
      bufferedInputStream0.skip((-2273L));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.skip(0L);
      pipedInputStream0.markSupported();
      pipedInputStream0.mark((-1452));
      pipedOutputStream0.write(4);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, pushbackInputStream1);
      try { 
        recordTypeMessage0.setResponseObject(bufferedInputStream0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.io.BufferedInputStream cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)85;
      byteArray0[3] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)85, (byte)85);
      byteArrayInputStream1.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.markSupported();
      pushbackInputStream0.unread(868);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read();
      byteArrayInputStream1.mark((byte)0);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.mark((byte)85);
      bufferedInputStream0.read(byteArray0);
      bufferedInputStream0.skip((-2273L));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byteArrayInputStream1.close();
      pipedInputStream0.skip(0L);
      pipedInputStream0.markSupported();
      pushbackInputStream0.mark((-1017));
      pipedInputStream0.mark((-1467));
      pipedOutputStream0.write(1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, pushbackInputStream1);
      Object object0 = new Object();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[14];
      byteArray0[7] = (byte)85;
      byteArray0[3] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      byteArrayInputStream1.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byteArrayInputStream0.skip(1L);
      pushbackInputStream0.unread(868);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read();
      byteArrayInputStream1.mark((byte)85);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.mark((byte)85);
      bufferedInputStream0.read(byteArray0);
      bufferedInputStream0.skip((-2273L));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byteArrayInputStream1.close();
      pipedInputStream0.skip(0L);
      pipedInputStream0.markSupported();
      bufferedInputStream0.close();
      pushbackInputStream0.mark((-1017));
      pipedInputStream0.mark((-1467));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)85;
      byteArray0[3] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte)85, (byte)85);
      byteArrayInputStream1.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      bufferedInputStream0.markSupported();
      byteArrayInputStream0.skip(1L);
      pushbackInputStream0.unread(868);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read();
      byteArrayInputStream1.mark((byte)0);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.mark((byte)85);
      bufferedInputStream0.read(byteArray0);
      bufferedInputStream0.skip((-2273L));
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byteArrayInputStream1.close();
      pipedInputStream0.skip(0L);
      pipedInputStream0.markSupported();
      bufferedInputStream0.close();
      pushbackInputStream0.mark((-1017));
      pipedInputStream0.mark((-1467));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "0";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("0", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      Hashtable<Object, Integer> hashtable0 = new Hashtable<Object, Integer>();
      Integer integer0 = new Integer(345);
      Integer integer1 = new Integer(345);
      BiFunction<Integer, Integer, Integer> biFunction0 = (BiFunction<Integer, Integer, Integer>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      Integer integer2 = new Integer(345);
      assertEquals(345, (int)integer2);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Boolean boolean0 = new Boolean(";/J}h;\"jM ");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-63);
      Boolean boolean1 = new Boolean(";/J}h;\"jM ");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      QName qName0 = WSDDConstants.QNAME_GLOBAL;
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      WSDDDeployment wSDDDeployment1 = wSDDDeployment0.getDeployment();
      WSDDDeployment wSDDDeployment2 = new WSDDDeployment();
      WSDDDeployment wSDDDeployment3 = wSDDDeployment1.getDeployment();
      WSDDDeployment wSDDDeployment4 = wSDDDeployment3.getDeployment();
      Detail detail0 = new Detail();
      wSDDDeployment3.getGlobalConfiguration();
      wSDDDeployment1.getGlobalResponse();
      wSDDDeployment0.setGlobalConfiguration((WSDDGlobalConfiguration) null);
      wSDDDeployment4.getDeployment();
      Detail detail1 = new Detail();
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      FileProvider fileProvider0 = new FileProvider("returnItemQName");
      fileProvider0.getDeployment();
      WSDDDeployment wSDDDeployment5 = new WSDDDeployment();
      WSDDDeployment wSDDDeployment6 = wSDDDeployment5.getDeployment();
      wSDDDeployment6.getHandlers();
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement(wSDDDeployment6.QNAME_ARRAYMAPPING, (Object) null);
      assertNull(sOAPBodyElement0.getPrefix());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, (String) null);
      HostConfiguration hostConfiguration0 = mock(HostConfiguration.class, new ViolatedAssumptionAnswer());
      ConnectMethod connectMethod0 = new ConnectMethod(hostConfiguration0);
      connectMethod0.getResponseBodyAsStream();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      Hashtable<Object, Integer> hashtable0 = new Hashtable<Object, Integer>();
      Integer integer0 = new Integer(298);
      Object object0 = null;
      hashtable0.put(integer0, integer0);
      // Undeclared exception!
      try { 
        hashtable0.put((Object) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(":", (XBUSSystem) null, ":");
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)6;
      byteArray0[0] = (byte)6;
      byteArray0[2] = (byte)17;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.add(byteArray0);
      byteArrayList1.toString();
      byteArrayList0.addAll(byteArrayList1);
      byteArrayList1.addAll(byteArrayList0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("0", (XBUSSystem) null, "0");
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("5|[;GtDp|&9MHrIT", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }
}
