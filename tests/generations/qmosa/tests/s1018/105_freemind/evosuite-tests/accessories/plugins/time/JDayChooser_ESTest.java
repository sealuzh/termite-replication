/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 13:59:32 GMT 2020
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.modes.filemode.FileController;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.view.mindmapview.MapView;
import java.awt.AWTEventMulticaster;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridBagLayout;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.ImageCapabilities;
import java.awt.Point;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ComponentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyListener;
import java.awt.event.KeyEvent;
import java.awt.image.ImageObserver;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.io.OutputStream;
import java.sql.Timestamp;
import java.text.AttributedCharacterIterator;
import java.util.Date;
import java.util.Enumeration;
import java.util.Locale;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.InputVerifier;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTextPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.FieldView;
import javax.swing.text.GlyphView;
import javax.swing.text.JTextComponent;
import javax.swing.text.LabelView;
import javax.swing.text.PasswordView;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.text.TextAction;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.batik.svggen.ImageHandlerJPEGEncoder;
import org.apache.fop.fonts.FontInfo;
import org.apache.fop.pdf.PDFDocument;
import org.apache.fop.pdf.PDFICCStream;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.pdf.PDFPage;
import org.apache.fop.pdf.PDFResources;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.fop.svg.PDFGraphics2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.Coordinate;
import org.openstreetmap.gui.jmapviewer.tilesources.OsmTileSource;
import org.w3c.dom.Document;
import plugins.map.MapDialog;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7855319236978073
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.initDecorations();
      JYearChooser jYearChooser0 = new JYearChooser();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      jDayChooser0.setLocation(point0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      KeyEvent keyEvent0 = new KeyEvent(jYearChooser0, 0, (-669), (-240), 1361, '');
      KeyEvent.getExtendedKeyCodeForChar(778);
      keyEvent0.setKeyCode(38);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.initDecorations();
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setEnabled(false);
      assertFalse(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Object[] objectArray0 = new Object[0];
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      StyleContext.getDefaultStyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      AttributeSet attributeSet0 = styleContext1.removeAttributes((AttributeSet) styleContext_SmallAttributeSet0, (AttributeSet) styleContext_SmallAttributeSet0);
      attributeSet0.getAttributeCount();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(0);
      SystemColor systemColor0 = SystemColor.menu;
      assertEquals((-4144960), systemColor0.getRGB());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7524085660435422
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDecorationBordersVisible(true);
      StringContent stringContent0 = new StringContent();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setMaxDayCharacters(22);
      SystemColor systemColor0 = SystemColor.info;
      Color color0 = Color.getColor("day", (-187));
      Color.getColor("GIDM5FU:9pouh2j-Y=", 69);
      Color color1 = Color.MAGENTA;
      jDayChooser1.setDecorationBackgroundColor(color0);
      ActionMap actionMap0 = new ActionMap();
      actionMap0.size();
      jDayChooser1.setActionMap(actionMap0);
      jDayChooser1.setDay(22);
      jDayChooser1.getMinSelectableDate();
      jDayChooser1.addListeners(22);
      assertEquals(22, jDayChooser1.getDay());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.799517964535027
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      jDayChooser0.getInputVerifier();
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      jDayChooser0.init();
      Date date0 = jDayChooser0.minSelectableDate;
      Timestamp timestamp0 = new Timestamp(0L);
      Date date1 = jDayChooser0.setMaxSelectableDate(timestamp0);
      jDayChooser0.setSelectableDateRange(date0, date1);
      jDayChooser0.setFocus();
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.getDayPanel();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.792683039351795
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.initDecorations();
      JYearChooser jYearChooser0 = new JYearChooser();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      jDayChooser0.getInputVerifier();
      jDayChooser0.getInputVerifier();
      jDayChooser0.init();
      Date date0 = jDayChooser0.minSelectableDate;
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setSelectableDateRange(date0, date0);
      jDayChooser1.setFocus();
      assertTrue(jDayChooser1.isDayBordersVisible());
      
      jDayChooser0.setMinSelectableDate(date1);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7329045285804874
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      SystemColor systemColor0 = SystemColor.controlDkShadow;
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser0.setEnabled(true);
      jDayChooser1.setAlwaysFireDayProperty(false);
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      Action[] actionArray0 = new Action[4];
      actionArray0[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem(defaultEditorKit_DefaultKeyTypedAction0);
      MenuSelectionManager.defaultManager();
      Color color0 = Color.MAGENTA;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte) (-59);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1");
      ActionMap actionMap0 = new ActionMap();
      ActionMap actionMap1 = new ActionMap();
      jDayChooser1.setActionMap(actionMap1);
      jDayChooser1.setDay(1401);
      assertEquals(28, jDayChooser1.getDay());
      
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FontInfo fontInfo0 = new FontInfo();
      PDFDocument pDFDocument0 = new PDFDocument("-");
      PDFResources pDFResources0 = new PDFResources(858);
      PDFICCStream pDFICCStream0 = new PDFICCStream();
      PDFPage pDFPage0 = new PDFPage(pDFResources0, pDFICCStream0, 858, 858);
      PDFGraphics2D pDFGraphics2D0 = new PDFGraphics2D(true, fontInfo0, pDFDocument0, pDFPage0, "Windows", "ISO-8859-1", 858);
      Color color0 = jDayChooser0.getSundayForeground();
      // Undeclared exception!
      try { 
        pDFGraphics2D0.setBackground(color0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.batik.ext.awt.g2d.AbstractGraphics2D", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.8043490098333104
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.setDayBordersVisible(false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.getLayoutOrigin();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jDayChooser0, 2028, 0L, 2028, 228, 927, 2028, 2052, 307, false, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent0.getPoint();
      jDayChooser0.setLocation(point0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 49, 0L, 6, 228, '%');
      jDayChooser0.removeComponentListener((ComponentListener) null);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.isDayBordersVisible();
      Color color0 = MapView.standardNodeTextColor;
      Color color1 = Color.white;
      jDayChooser0.setDecorationBackgroundColor(color1);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.updateUI();
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.677371952581733
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Enumeration<AttributedCharacterIterator.Attribute> enumeration0 = (Enumeration<AttributedCharacterIterator.Attribute>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) enumeration0;
      objectArray0[1] = (Object) styleContext0;
      objectArray0[2] = (Object) styleContext0;
      objectArray0[3] = (Object) styleContext0;
      objectArray0[4] = (Object) enumeration0;
      objectArray0[5] = (Object) enumeration0;
      objectArray0[6] = (Object) styleContext0;
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle("4JF7HiT", (Style) null);
      styleContext0.getFont((AttributeSet) styleContext_NamedStyle0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      GridBagLayout gridBagLayout1 = new GridBagLayout();
      Point point0 = gridBagLayout1.location((-12), 15);
      jDayChooser0.setLocation(point0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-12), 0, (-2415), 911, 'z');
      keyEvent0.setKeyCode(911);
      jDayChooser0.keyPressed(keyEvent0);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setOpaque(false);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed((KeyEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "y";
      Locale locale0 = Locale.PRC;
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser();
      locale0.clone();
      jDayChooser0.setFocusTraversalPolicyProvider(false);
      jDayChooser0.setLocale(locale0);
      JButton jButton0 = new JButton("y");
      KeyEvent keyEvent0 = new KeyEvent(jButton0, 594, 594, 594, 594, 'h');
      jDayChooser0.keyTyped(keyEvent0);
      jDayChooser0.isDecorationBordersVisible();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 0);
      focusEvent0.paramString();
      jDayChooser0.focusGained(focusEvent0);
      jDayChooser0.getMinSelectableDate();
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      int int0 = 856;
      KeyEvent keyEvent0 = null;
      try {
        keyEvent0 = new KeyEvent(jDayChooser0, 261, (-1447L), 2830, 2830, '[', 856);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid keyLocation
         //
         verifyException("java.awt.event.KeyEvent", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.757626499051133
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.xml.serializer.ToXMLSAXHandler";
      stringArray0[1] = "b-u{EB~u*&Q&-2_:";
      stringArray0[2] = "";
      stringArray0[3] = "Q;ZC2XLk";
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(53);
      SystemColor systemColor0 = SystemColor.menu;
      Color.getColor("b-u{EB~u*&Q&-2_:", 53);
      Color.getColor((String) null, 53);
      Color color0 = Color.MAGENTA;
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      ActionMap actionMap0 = new ActionMap();
      actionMap0.getParent();
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      jDayChooser0.removeHierarchyListener((HierarchyListener) null);
      jDayChooser0.setActionMap(actionMap0);
      jDayChooser0.firePropertyChange("xi+P0!Fsx,J", 0L, 0L);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay((-1982));
      jDayChooser0.getSelectedDay();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = true;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setDay(10111);
      MapDialog mapDialog0 = new MapDialog();
      Coordinate coordinate0 = new Coordinate(600000L, 1);
      coordinate0.setLat(600000L);
      MindMapMode mindMapMode0 = new MindMapMode();
      FileController fileController0 = null;
      try {
        fileController0 = new FileController(mindMapMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.xml.serializer.ToXMLSAXHandler";
      stringArray0[1] = "b-u{EB~u*&Q&-2_:";
      stringArray0[1] = "";
      stringArray0[3] = "Q;ZC2XLk";
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      int int0 = (-19);
      AttributeSet attributeSet0 = styleContext0.getEmptySet();
      defaultStyledDocument0.setParagraphAttributes((-19), (-1830), attributeSet0, true);
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument();
      DefaultStyledDocument defaultStyledDocument2 = new DefaultStyledDocument();
      JTextPane jTextPane0 = new JTextPane();
      JTextComponent.AccessibleJTextComponent jTextComponent_AccessibleJTextComponent0 = jTextPane0.new AccessibleJTextComponent();
      jTextComponent_AccessibleJTextComponent0.getTextBounds((-1654), 2034);
      defaultStyledDocument2.removeDocumentListener(jTextComponent_AccessibleJTextComponent0);
      defaultStyledDocument1.getBidiRootElement();
      Element element0 = defaultStyledDocument2.getCharacterElement(61445);
      GlyphView glyphView0 = new GlyphView(element0);
      FieldView fieldView0 = new FieldView(element0);
      glyphView0.getTabbedSpan((-1743.033F), fieldView0);
      glyphView0.getForeground();
      JDayChooser jDayChooser0 = new JDayChooser();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.7419541084422874
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.transferFocusUpCycle();
      jDayChooser0.isWeekOfYearVisible();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.drawWeeks();
      jDayChooser0.getDayPanel();
      Color color0 = Color.YELLOW;
      jDayChooser0.drawWeeks();
      JButton[] jButtonArray0 = new JButton[0];
      jDayChooser0.weeks = jButtonArray0;
      jDayChooser0.getMinSelectableDate();
      int int0 = 0;
      // Undeclared exception!
      try { 
        jDayChooser0.setYear(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8949320281532285
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getDay();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 14, 14, 14, 14, '[');
      keyEvent0.getExtendedKeyCode();
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.init();
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      jDayChooser0.getDayPanel();
      jDayChooser0.setFocus();
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7885725698735073
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMonth(8201);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.setDayBordersVisible(true);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.getLayoutOrigin();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("X`7,K~t6", (Icon) null, false);
      menuElementArray0[0] = (MenuElement) jRadioButtonMenuItem0;
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem((Icon) null, false);
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem1;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jDayChooser0, 927, 0, 0, (-460), 0, 307, 571, 1666, true, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent0.getPoint();
      jDayChooser0.setLocation(point0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 228, 0, 0, '%');
      jDayChooser0.removeComponentListener((ComponentListener) null);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setDay(11);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6679015513127124
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(1304L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getWidth();
      jDayChooser0.repaint(2931L, 0, (-1035), (-1035), 7);
      jDayChooser0.createVolatileImage(45, 509, (ImageCapabilities) null);
      jDayChooser0.getDay();
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.setDay(1);
      jDayChooser0.setMaxDayCharacters(31);
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getBidiRootElement();
      PasswordView passwordView0 = new PasswordView(element0);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      ActionEvent actionEvent0 = new ActionEvent(defaultStyledDocument0, 13, "day");
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.text.DefaultStyledDocument cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BorderLayout borderLayout0 = new BorderLayout(566, 1638);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_AUTO;
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getMouseWheelListeners();
      defaultListCellRenderer0.getDisabledIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem((Icon) null, true);
      ComponentListener componentListener0 = null;
      JDayChooser jDayChooser0 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners(1638);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      jDayChooser0.addHierarchyListener((HierarchyListener) null);
      jDayChooser0.getActionMap();
      jDayChooser0.requestFocusInWindow();
      jDayChooser0.transferFocusDownCycle();
      jDayChooser0.drawDays();
      Color color0 = jDayChooser0.getDecorationBackgroundColor();
      assertEquals(228, color0.getGreen());
      
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = 1031;
      jDayChooser0.getAncestorListeners();
      jDayChooser0.transferFocus();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 1031, true);
      focusEvent0.getOppositeComponent();
      focusEvent0.paramString();
      focusEvent0.getOppositeComponent();
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser0.getDecorationBackgroundColor();
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners(1031);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Enumeration<AttributedCharacterIterator.Attribute> enumeration0 = (Enumeration<AttributedCharacterIterator.Attribute>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) enumeration0;
      objectArray0[2] = (Object) styleContext0;
      objectArray0[3] = (Object) styleContext0;
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      styleContext1.getEmptySet();
      AttributeSet attributeSet0 = styleContext_NamedStyle0.copyAttributes();
      styleContext1.removeAttributes(attributeSet0, attributeSet0);
      StyleContext styleContext2 = new StyleContext();
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.updateUI();
      jDayChooser0.updateUI();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8091943779309347
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Color color0 = jDayChooser0.getWeekdayForeground();
      jDayChooser0.getDay();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.getPressedIcon();
      jDayChooser_DecoratorButton0.isFocusable();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 14, 14, 14, 14, '[');
      keyEvent0.getExtendedKeyCode();
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.init();
      jDayChooser0.updateUI();
      jDayChooser0.setForeground(color0);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.getDayPanel();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[4];
      Locale locale0 = Locale.PRC;
      JYearChooser jYearChooser0 = new JYearChooser();
      SystemColor systemColor0 = SystemColor.menu;
      Color.getColor(stringArray0[0], (-187));
      Color.getColor("1", (-187));
      Color color0 = Color.MAGENTA;
      ActionMap actionMap0 = new ActionMap();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      int int0 = jDayChooser0.getDay();
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setAlwaysFireDayProperty(false);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = null;
      try {
        pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false, (OutputStream) null, 13, 687);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.fop.pdf.PDFDocument", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.669576756952125
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      
      jDayChooser0.setDecorationBordersVisible(true);
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getParagraphElement(2948);
      GlyphView glyphView0 = new GlyphView(element0);
      Color color0 = glyphView0.getForeground();
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.setEnabled(true);
      assertTrue(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.834815241946004
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMonth(8201);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.setDayBordersVisible(false);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.getLayoutOrigin();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("X`7,K~t6", (Icon) null, false);
      menuElementArray0[0] = (MenuElement) jRadioButtonMenuItem0;
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem("X`7,K~t6");
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem1;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jDayChooser0, 927, 0, 0, (-460), 0, 307, 591, 1666, false, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent0.getPoint();
      jDayChooser0.setLocation(point0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 228, 0, 0, '%');
      jDayChooser0.removeComponentListener((ComponentListener) null);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setDay(11);
      jDayChooser0.getDayPanel();
      jDayChooser0.getMaxDayCharacters();
      assertEquals(11, jDayChooser0.getDay());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6717601208463124
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Color color0 = Color.red;
      int int0 = ImageObserver.PROPERTIES;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) jDayChooser_DecoratorButton0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) color0;
      objectArray0[3] = (Object) "b-u{EB~u*&{&-R?:";
      objectArray0[4] = (Object) jDayChooser0;
      objectArray0[5] = (Object) jDayChooser0;
      objectArray0[6] = (Object) "b-u{EB~u*&{&-R?:";
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext1.getFont((AttributeSet) styleContext_SmallAttributeSet0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "b-u{EB~u*&{&-R?:";
      stringArray0[1] = "freemind.modes.common.plugins.MapNodePositionHolderBase";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Locale locale0 = Locale.PRC;
      JYearChooser jYearChooser0 = new JYearChooser();
      JDayChooser jDayChooser0 = new JDayChooser();
      locale0.clone();
      jDayChooser0.setFocusTraversalPolicyProvider(false);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setVisible(false);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getCharacterElement((-1081));
      LabelView labelView0 = new LabelView(element0);
      Font font0 = labelView0.getFont();
      jDayChooser0.setFont(font0);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      Object[] objectArray0 = new Object[0];
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      AttributeSet attributeSet0 = styleContext2.removeAttributes((AttributeSet) styleContext_SmallAttributeSet0, (AttributeSet) styleContext_SmallAttributeSet0);
      attributeSet0.getAttributeCount();
      styleContext1.getFont(attributeSet0);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext1);
      Enumeration<AttributedCharacterIterator.Attribute> enumeration0 = (Enumeration<AttributedCharacterIterator.Attribute>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      styleContext0.removeAttributes((AttributeSet) styleContext_SmallAttributeSet0, (Enumeration<?>) enumeration0);
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet1 = styleContext2.new SmallAttributeSet(objectArray0);
      StyleContext styleContext3 = new StyleContext();
      StyleContext.getDefaultStyleContext();
      JTextPane jTextPane0 = new JTextPane();
      jTextPane0.getLogicalStyle();
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Locale.forLanguageTag("Dialog Plain 11");
      jDayChooser0.getDaysInMonth();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.6527697871323417
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StyleContext styleContext0 = new StyleContext();
      Object[] objectArray0 = new Object[0];
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet0 = styleContext0.new SmallAttributeSet(objectArray0);
      StyleContext.getDefaultStyleContext();
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      styleContext1.removeAttributes((AttributeSet) styleContext_SmallAttributeSet0, (AttributeSet) styleContext_SmallAttributeSet0);
      StyleContext.SmallAttributeSet styleContext_SmallAttributeSet1 = styleContext0.new SmallAttributeSet(styleContext_SmallAttributeSet0);
      styleContext_SmallAttributeSet1.clone();
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.7576893305077577
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar)jDayChooser0.calendar;
      jDayChooser0.decorationBackgroundColor = null;
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getSelectedDay();
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      Parser parser0 = new Parser();
      parser0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.736270028811289
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDay(0);
      jDayChooser0.isDecorationBackgroundVisible();
      Locale locale0 = Locale.PRC;
      locale0.hasExtensions();
      Locale locale1 = Locale.CHINA;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale1);
      locale0.getDisplayName(locale1);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.getSelectedDay();
      jDayChooser0.getDay();
      Document document0 = null;
      ImageHandlerJPEGEncoder imageHandlerJPEGEncoder0 = null;
      try {
        imageHandlerJPEGEncoder0 = new ImageHandlerJPEGEncoder("\u4E2D\u6587 (\u4E2D\u56FD)", "user_defined_zoom_status_bar");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // imageDir does not exist
         //
         verifyException("org.apache.batik.svggen.AbstractImageHandlerEncoder", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8319682670485906
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.xml.serializer.ToXMLSAXHandler";
      JDayChooser jDayChooser0 = new JDayChooser();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      ContainerListener containerListener2 = AWTEventMulticaster.add((ContainerListener) null, containerListener1);
      AWTEventMulticaster.remove(containerListener2, containerListener1);
      ContainerListener containerListener3 = AWTEventMulticaster.add((ContainerListener) null, containerListener1);
      AWTEventMulticaster.remove(containerListener1, containerListener3);
      ContainerListener containerListener4 = AWTEventMulticaster.remove(containerListener2, (ContainerListener) null);
      ContainerListener containerListener5 = AWTEventMulticaster.add(containerListener1, containerListener4);
      AWTEventMulticaster.add(containerListener5, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      jDayChooser0.getInputVerifier();
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.init();
      Date date0 = jDayChooser0.minSelectableDate;
      Date date1 = jDayChooser1.setMaxSelectableDate(date0);
      jDayChooser1.setSelectableDateRange(date1, date0);
      jDayChooser1.setFocus();
      jDayChooser1.setMinSelectableDate(date0);
      Locale locale0 = jDayChooser0.getLocale();
      jDayChooser0.setLocale(locale0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.770581544706131
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = 8201;
      jDayChooser0.setMonth(8201);
      SystemColor systemColor0 = SystemColor.menu;
      Color.getColor("day", (Color) systemColor0);
      jDayChooser0.setWeekdayForeground(systemColor0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setEnabled(true);
      jDayChooser1.setAlwaysFireDayProperty(true);
      Color.getColor("pattern_node_font_bold", (Color) systemColor0);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = null;
      try {
        pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(false, (OutputStream) null, (-2398), 24);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.fop.pdf.PDFDocument", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.8736877210486456
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.transferFocusUpCycle();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.drawWeeks();
      jDayChooser0.getDayPanel();
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.setYear(0);
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.init();
      jDayChooser0.getLocale();
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      JPopupMenu jPopupMenu0 = new JPopupMenu("day");
      MapDialog mapDialog0 = new MapDialog();
      // Undeclared exception!
      try { 
        mapDialog0.getRegistration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.extensions.HookAdapter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.76639130174906
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "org.apache.xml.serializer.ToXMLSAXHandler";
      stringArray0[1] = "b-u{EB~u*&Q&-2_:";
      stringArray0[2] = "";
      stringArray0[3] = "Q;ZC2XLk";
      JDayChooser jDayChooser0 = new JDayChooser();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      jDayChooser0.removeContainerListener((ContainerListener) null);
      jDayChooser0.getInputVerifier();
      jDayChooser0.getInputVerifier();
      jDayChooser0.setInputVerifier((InputVerifier) null);
      jDayChooser0.drawDays();
      jDayChooser0.init();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Date date0 = jDayChooser0.minSelectableDate;
      Date date1 = jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.setSelectableDateRange(date1, date1);
      jDayChooser0.setFocus();
      jDayChooser0.setMinSelectableDate(date1);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8499578092585933
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JPanel jPanel0 = jDayChooser0.getDayPanel();
      jDayChooser0.day = 2235;
      jDayChooser0.setMaxDayCharacters((-4));
      jDayChooser0.removeAll();
      jDayChooser0.init();
      jDayChooser0.setMonth((-4));
      jDayChooser0.drawDays();
      jDayChooser0.setYear((-4));
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.setName("Dialog Plain 11");
      jDayChooser0.initDecorations();
      OsmTileSource.CycleMap osmTileSource_CycleMap0 = new OsmTileSource.CycleMap();
      osmTileSource_CycleMap0.getAttributionImage();
      jDayChooser0.checkImage((Image) null, 311, (-1798), (ImageObserver) jPanel0);
      FocusEvent focusEvent0 = new FocusEvent(jPanel0, 133, false);
      focusEvent0.paramString();
      jDayChooser0.focusGained(focusEvent0);
      boolean boolean0 = new Boolean("Dialog Plain 11");
      boolean boolean1 = jDayChooser0.isWeekOfYearVisible();
      assertEquals(30, jDayChooser0.getDay());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6885063804586076
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setAutoscrolls(false);
      jDayChooser0.getInputMap();
      JComponent.getDefaultLocale();
      jDayChooser0.init();
      jDayChooser0.createVolatileImage((-2039), (-1832));
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy((String) null, vetoableChangeListener0);
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy0);
      jDayChooser0.isPaintingForPrint();
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.setMaxDayCharacters((-2039));
      jDayChooser0.setMonth((-2039));
      assertEquals(14, jDayChooser0.getDay());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDayPanel();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.630470240160676
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMonth(8201);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("X`7,K~t6", (Icon) null, false);
      menuElementArray0[0] = (MenuElement) jRadioButtonMenuItem0;
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem((Icon) null, false);
      jDayChooser0.removeComponentListener((ComponentListener) null);
      jDayChooser0.setDay(307);
      assertEquals(30, jDayChooser0.getDay());
  }
}
