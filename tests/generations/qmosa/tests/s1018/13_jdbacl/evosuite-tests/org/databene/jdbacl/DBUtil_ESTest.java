/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 16:04:18 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.util.Hashtable;
import java.util.Map;
import java.util.Properties;
import java.util.function.Consumer;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.context.ContextManager;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.iapi.sql.compile.NodeFactory;
import org.apache.derby.iapi.sql.compile.Visitable;
import org.apache.derby.iapi.types.CDCDataValueFactory;
import org.apache.derby.iapi.types.DataValueDescriptor;
import org.apache.derby.iapi.types.NumberDataValue;
import org.apache.derby.iapi.types.SQLDate;
import org.apache.derby.iapi.types.SQLDouble;
import org.apache.derby.iapi.types.SQLLongint;
import org.apache.derby.iapi.types.SQLRef;
import org.apache.derby.iapi.types.SQLTinyint;
import org.apache.derby.impl.sql.compile.ConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.FKConstraintDefinitionNode;
import org.apache.derby.impl.sql.compile.FromList;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.compile.GroupByList;
import org.apache.derby.impl.sql.compile.InsertNode;
import org.apache.derby.impl.sql.compile.NodeFactoryImpl;
import org.apache.derby.impl.sql.compile.PredicateList;
import org.apache.derby.impl.sql.compile.QueryTreeNode;
import org.apache.derby.impl.sql.compile.RemapCRsVisitor;
import org.apache.derby.impl.sql.compile.RevokeNode;
import org.apache.derby.impl.sql.compile.SelectNode;
import org.apache.derby.impl.sql.compile.SubqueryList;
import org.apache.derby.impl.sql.compile.ValueNode;
import org.apache.derby.impl.sql.compile.VerifyAggregateExpressionsVisitor;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EventHandleImp;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBStatement;
import org.h2.engine.SessionRemote;
import org.h2.jdbc.JdbcCallableStatement;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.tools.SimpleRowSource;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;
import org.postgresql.Driver;
import org.postgresql.ds.PGConnectionPoolDataSource;
import org.postgresql.jdbc4.Jdbc4ResultSet;
import org.postgresql.util.PSQLException;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler errorHandler0 = new ErrorHandler("t", level0);
      Level level1 = Level.fatal;
      ErrorHandler.setDefaultLevel(level1);
      boolean boolean0 = true;
      Boolean.logicalAnd(true, true);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("t", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = new Integer(1075);
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.disablePrivilegeCollection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) proxy0, "1x&gL5??FOZ-d5]1*Ho", false, 3, (-2162), 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte) (-30), (byte)46);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/";
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "SYSTEM_TYPEINFO");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ORDER BY", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getSharedState("");
      Integer integer0 = new Integer(0);
      Level level0 = Level.debug;
      Level level1 = Level.warn;
      ErrorHandler.setDefaultLevel(level1);
      Level level2 = Level.error;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler errorHandler0 = new ErrorHandler("V{CY oolPmaUc3", level0);
      Level level3 = Level.error;
      ErrorHandler.setDefaultLevel(level3);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "V{CY oolPmaUc3", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte) (-30), (byte)46);
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "/";
      stringArray0[1] = "/";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("/", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("/", defaultDBTable0, (byte) (-30), "/");
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBColumn0.isEquivalent((DBObject) null);
      DBForeignKeyConstraint dBForeignKeyConstraint1 = defaultDBColumn0.getForeignKeyConstraint();
      boolean boolean0 = DBUtil.containsMandatoryColumn(dBForeignKeyConstraint1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/org.apache.derby.impl.store.raw.xact.EndXact.env.properties");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("org.apache.derby.impl.store.raw.xact.EndXact", false, true, true, false, "org.apache.derby.impl.store.raw.xact.EndXact", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for 'org.apache.derby.impl.store.raw.xact.EndXact'
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SQLException sQLException0 = new SQLException("/", ";U");
      StackTraceElement stackTraceElement0 = new StackTraceElement(";U", "F8r4", "/", 367);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[5];
      stringArray0[0] = ";U";
      stringArray0[1] = "F8r4";
      stringArray0[2] = "/";
      stringArray0[3] = "/";
      stringArray0[4] = "/";
      String[] stringArray1 = new String[1];
      stringArray1[0] = ";U";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("F8r4", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(";U", defaultDBTable0, 400, ";U");
      defaultDBTable0.getPrimaryKeyConstraint();
      defaultDBColumn0.isEquivalent(dBForeignKeyConstraint0);
      DBForeignKeyConstraint dBForeignKeyConstraint1 = defaultDBColumn0.getForeignKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBForeignKeyConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'F8r4' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6211272758470872
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte byte0 = (byte)29;
      DBUtil.assertAllDbResourcesClosed(true);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      NodeFactoryImpl nodeFactoryImpl0 = new NodeFactoryImpl();
      boolean boolean0 = DBUtil.available("org.apache.derby.iapi.sql.compile.NodeFactory", "org.apache.derby.iapi.sql.compile.NodeFactory", "org.apache.derby.iapi.sql.compile.NodeFactory", "org.apache.derby.iapi.sql.compile.NodeFactory");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      InsertNode insertNode0 = new InsertNode();
      Properties properties0 = insertNode0.targetProperties;
      boolean boolean0 = new Boolean(false);
      System.setCurrentTimeMillis(794L);
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/org.apache.derby.impl.store.raw.xact.EndXact.env.properties");
      String string0 = "Expected exactly one row, found more.";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Expected exactly one row, found more.");
      boolean boolean0 = false;
      try { 
        DBUtil.getMetaData("org.apache.derby.impl.store.raw.xact.EndXact", false, true, true, true, "org.apache.derby.impl.store.raw.xact.EndXact", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "org.apache.derby.impl.store.raw.xact.EndXact";
      boolean boolean0 = false;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/org.apache.derby.impl.store.raw.xact.EndXact.env.properties");
      String string1 = "Expected exactly one row, found more.";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Expected exactly one row, found more.");
      try { 
        DBUtil.getMetaData("org.apache.derby.impl.store.raw.xact.EndXact", false, true, true, false, "org.apache.derby.impl.store.raw.xact.EndXact", true, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/org.apache.derby.impl.store.raw.xact.EndXact.env.properties");
      String string0 = "Expected exactly one row, found more.";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Expected exactly one row, found more.");
      boolean boolean0 = true;
      try { 
        DBUtil.getMetaData("org.apache.derby.impl.store.raw.xact.EndXact", false, true, true, false, "org.apache.derby.impl.store.raw.xact.EndXact", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6880942771518648
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Byte byte0 = new Byte((byte)27);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getLobConnection();
      SelectNode selectNode0 = new SelectNode();
      selectNode0.getFromList();
      SubqueryList subqueryList0 = new SubqueryList();
      PredicateList predicateList0 = new PredicateList();
      GroupByList groupByList0 = new GroupByList();
      selectNode0.getSelectSubquerys();
      groupByList0.preprocess(3, (FromList) null, (SubqueryList) null, predicateList0);
      System.setCurrentTimeMillis((-964L));
      Random.setNextRandom((-109));
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      Integer integer0 = new Integer(6);
      NodeFactoryImpl nodeFactoryImpl0 = new NodeFactoryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      Boolean.logicalOr(true, true);
      Integer integer1 = new Integer(4);
      Boolean.valueOf(";U");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection(jdbcConnection0, false);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("org.apache.derby.iapi.sql.compile.NodeFactory", (Connection) proxy0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public java.sql.ResultSet org.databene.jdbacl.proxy.LoggingStatementHandler.executeQuery(java.lang.String) throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      SQLLongint sQLLongint0 = new SQLLongint();
      NumberDataValue numberDataValue0 = sQLLongint0.times(sQLTinyint0, sQLTinyint0, sQLTinyint0);
      numberDataValue0.absolute(sQLLongint0);
      Double double0 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double0);
      sQLDouble0.getByte();
      sQLDouble0.greaterThan(sQLLongint0, sQLLongint0);
      NumberDataValue numberDataValue1 = sQLDouble0.times(numberDataValue0, sQLTinyint0, numberDataValue0);
      sQLTinyint0.divide(numberDataValue0, (NumberDataValue) sQLLongint0, numberDataValue1);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getAutoGeneratedKeysResultsetMode();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((long) (byte)46, (int) (byte)46);
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Object[] objectArray0 = DBUtil.parseResultRow(simpleResultSet0);
      assertEquals(0, objectArray0.length);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SQLRef sQLRef0 = new SQLRef();
      Recover.execute("2Xt[`vF5'$Kj'Z}nP.", "2Xt[`vF5'$Kj'Z}nP.");
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "4", true, true, false, true, "42", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Long long0 = new Long((byte)46);
      SQLLongint sQLLongint0 = new SQLLongint(long0);
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      Double double0 = new Double(0.0);
      NumberDataValue numberDataValue0 = cDCDataValueFactory0.getDataValue(double0, (NumberDataValue) sQLLongint0);
      NumberDataValue numberDataValue1 = sQLLongint0.times(numberDataValue0, numberDataValue0, numberDataValue0);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      sQLTinyint0.absolute(numberDataValue1);
      Double double1 = new Double((byte)46);
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("xOpZOt5y]Lq", level0);
      errorHandler0.handleError("xOpZOt5y]Lq", (Throwable) null);
      errorHandler0.handleError("xOpZOt5y]Lq");
      errorHandler0.handleError("A!;vHk:e");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      Integer integer0 = new Integer(2);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      simpleResultSet0.getStatement();
      InsertNode insertNode0 = new InsertNode();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.queryString((PreparedStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      String string0 = DBUtil.format(simpleResultSet0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-83);
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte) (-86);
      fBArray0.getResultSet((-1664L), 46);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      int int0 = DBUtil.getOpenStatementCount();
      assertEquals(139, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      TableContainer tableContainer0 = new TableContainer("@=6>SPxg");
      tableContainer0.getSchema();
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte byte0 = (byte)84;
      Byte byte1 = new Byte((byte)84);
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      tableContainerSupport0.getTables(true);
      DBUtil.dependencyOrderedTables(tableContainerSupport0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        jdbcDataSource0.getConnection();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      try { 
        DBUtil.getMetaData((Connection) null, "4", "4", true, true, true, false, "4", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "----NNb[~g^V.0e3$Y", "2G", false, true, true, false, "2G", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";U", true);
      SQLException sQLException0 = new SQLException("/", ";U");
      sQLException0.getSuppressed();
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.getDefault();
      ErrorHandler.setDefaultLevel(level0);
      SQLException sQLException1 = new SQLException("~SaSGXW5hFNQ", "--!u");
      sQLException0.printStackTrace();
      MockFileOutputStream mockFileOutputStream1 = new MockFileOutputStream("iz[Mmx|@", true);
      mockFileOutputStream1.release();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, true);
      mockPrintWriter0.print('_');
      SQLException sQLException2 = new SQLException("--!u*#Wnpsb7748iZ", "QedMA,2g<IP3I}*G9~5", 12);
      sQLException2.printStackTrace((PrintWriter) mockPrintWriter0);
      sQLException2.printStackTrace();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "select count(*) from ", "iz[Mmx|@", true, false, false, true, "select count(*) from ", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '*' near index 13
         // select count(*) from 
         //              ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8113308577108624
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Csv.getInstance();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-42);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(1805L);
      DBUtil.assertAllDbResourcesClosed(false);
      System.setCurrentTimeMillis((byte) (-42));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("r)Uli*k`zI", (DBSchema) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, (String[]) null);
      dBPrimaryKeyConstraint0.setOwner((CompositeDBObject<?>) null);
      boolean boolean0 = dBPrimaryKeyConstraint0.equals((Object) null);
      boolean boolean1 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet((SimpleRowSource) null);
      Object[] objectArray0 = DBUtil.nextLine(simpleResultSet0);
      assertNull(objectArray0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FBArray fBArray0 = new FBArray();
      Hashtable<String, Driver> hashtable0 = new Hashtable<String, Driver>();
      fBArray0.getResultSet((Map) hashtable0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Long long0 = new Long((byte)46);
      SQLLongint sQLLongint0 = new SQLLongint(long0);
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      Double double0 = new Double((-38));
      NumberDataValue numberDataValue0 = cDCDataValueFactory0.getDataValue(double0, (NumberDataValue) sQLLongint0);
      NumberDataValue numberDataValue1 = sQLLongint0.times(numberDataValue0, numberDataValue0, numberDataValue0);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      sQLTinyint0.absolute(numberDataValue1);
      Double double1 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double1);
      sQLDouble0.getByte();
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";U", true);
      SQLWarning sQLWarning0 = new SQLWarning(";U", " failed: ");
      sQLWarning0.getSuppressed();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      mockFileOutputStream0.release();
      sQLWarning0.printStackTrace();
      sQLWarning0.getSuppressed();
      sQLWarning0.getLocalizedMessage();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)32;
      byteArray0[4] = (byte) (-15);
      mockFileOutputStream0.write(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" failed: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer1);
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      mockPrintWriter1.print(";U");
      mockPrintWriter1.println((long) (byte)0);
      mockPrintWriter1.print(charArray0);
      sQLWarning0.printStackTrace((PrintWriter) mockPrintWriter1);
      Random.setNextRandom((byte)32);
      ConstraintDefinitionNode constraintDefinitionNode0 = new ConstraintDefinitionNode();
      constraintDefinitionNode0.getProperties();
      jdbcDriver.getConnection(";U", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.query(" failed: ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte) (-88);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Csv.getInstance();
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler errorHandler0 = new ErrorHandler(" AUTHORIZATION ");
      Level level1 = Level.debug;
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler errorHandler1 = new ErrorHandler("--E062!FfaO+y4EH:Q:w", level0);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--Fq", (Connection) null, false, errorHandler1);
      // Undeclared exception!
      try { 
        DBUtil.runScript("--Fq", "k-S", '(', (Connection) null, (boolean) dBExecutionResult0.changedStructure, errorHandler1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: --Fq
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Byte.compare((byte)46, (byte)84);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      SQLLongint sQLLongint0 = new SQLLongint();
      NumberDataValue numberDataValue0 = sQLLongint0.times(sQLTinyint0, sQLTinyint0, sQLTinyint0);
      NumberDataValue numberDataValue1 = numberDataValue0.absolute(sQLLongint0);
      Double double0 = new Double((byte)46);
      numberDataValue1.checkHostVariable((byte)84);
      SQLDouble sQLDouble0 = new SQLDouble(double0);
      Double.isFinite((byte)84);
      sQLDouble0.greaterThan(sQLLongint0, numberDataValue1);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      String string0 = DBUtil.format(simpleResultSet0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      SQLRef sQLRef0 = new SQLRef();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "CAST (org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: CAST (org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":;,N'>1");
      FromVTI fromVTI0 = new FromVTI();
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      SimpleResultSet simpleResultSet1 = new SimpleResultSet(csv0);
      simpleResultSet1.getStatement();
      boolean boolean0 = false;
      boolean boolean1 = false;
      Proxy proxy0 = (Proxy)DBUtil.createLoggingStatementHandler((Statement) null, false);
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      Class<Jdbc4ResultSet> class1 = Jdbc4ResultSet.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class1);
      ErrorHandler errorHandler1 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.close((Statement) proxy0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Internal exception in method: public void org.databene.jdbacl.proxy.LoggingStatementHandler.close() throws java.sql.SQLException
         //
         verifyException("org.databene.commons.ExceptionMapper", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";U", true);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      mockFileOutputStream0.release();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)32;
      byteArray0[4] = (byte) (-15);
      mockFileOutputStream0.write(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" failed: ");
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      char[] charArray0 = new char[1];
      mockPrintWriter0.print(";U");
      mockPrintWriter0.println((long) (byte)0);
      mockPrintWriter0.println(charArray0);
      mockPrintWriter0.print(charArray0);
      DBUtil.close((Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.countRows(" failed: ", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("!U2|", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet((SimpleRowSource) null);
      DBUtil.currentLine(simpleResultSet0);
      System.setCurrentTimeMillis((-1732L));
      GDSType.getType("G t*0+D?rLp:n=:OP~)");
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      Properties properties0 = new Properties();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("There are unclosed database resources: ", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.getProperties();
      jdbcDriver.getConnection("", (Properties) null);
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      SimpleResultSet simpleResultSet1 = new SimpleResultSet(csv0);
      simpleResultSet1.getStatement();
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      DBUtil.existsEnvironment("");
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Integer integer0 = new Integer((-1107459500));
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.rejectParameters();
      fromVTI0.disablePrivilegeCollection();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery(")u", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DBUtil.existsEnvironment("");
      FromVTI fromVTI0 = new FromVTI();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(".env.properties");
      String string0 = "3j30WrwJ?";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "3j30WrwJ?");
      // Undeclared exception!
      try { 
        DBUtil.connect("", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/QTdgua/62.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "L1OW9}xN2qJca*");
      Byte byte0 = new Byte((byte)84);
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.fatal;
      ErrorHandler.setDefaultLevel(level1);
      boolean boolean0 = DBUtil.existsEnvironment("QTdgua/62");
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet();
      DBUtil.close((ResultSet) null);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      SQLLongint sQLLongint0 = new SQLLongint();
      NumberDataValue numberDataValue0 = sQLLongint0.times(sQLTinyint0, sQLTinyint0, sQLTinyint0);
      Double double0 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double0);
      sQLDouble0.greaterThan(sQLLongint0, sQLLongint0);
      NumberDataValue numberDataValue1 = sQLDouble0.times(numberDataValue0, sQLTinyint0, numberDataValue0);
      sQLTinyint0.divide(numberDataValue0, (NumberDataValue) sQLLongint0, numberDataValue1);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getAutoGeneratedKeysResultsetMode();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      constantActionActivation0.getDB2Length(sQLTinyint0, (byte)46, sQLTinyint0);
      DBUtil.parseResultSet(simpleResultSet0);
      // Undeclared exception!
      try { 
        constantActionActivation0.getCurrentConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      String string0 = " failed: ";
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.1332734375316855
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.getProperties();
      jdbcDriver.getConnection("", (Properties) null);
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      SimpleResultSet simpleResultSet1 = new SimpleResultSet(csv0);
      simpleResultSet1.getStatement();
      DBUtil.createLoggingStatementHandler((Statement) null, false);
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.assertAllDbResourcesClosed(false);
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false, 7, 0, (-1961));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.getStatement(simpleResultSet0);
      InsertNode insertNode0 = new InsertNode();
      Properties properties0 = insertNode0.targetProperties;
      jdbcDriver jdbcDriver0 = new jdbcDriver();
      // Undeclared exception!
      try { 
        jdbcDriver0.getPropertyInfo("", (Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbcDriver", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Recover recover0 = new Recover();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet1);
      System.setCurrentTimeMillis(3137L);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";U");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      mockFileOutputStream0.release();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)32;
      byteArray0[4] = (byte)32;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" failed: ");
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      char char0 = '6';
      mockPrintWriter0.println('6');
      char[] charArray0 = new char[1];
      mockPrintWriter0.print(";U");
      mockPrintWriter0.print((-1L));
      mockPrintWriter0.println((long) (byte)0);
      mockPrintWriter0.println(charArray0);
      mockPrintWriter0.print(charArray0);
      DBUtil.close((Statement) null);
      String string0 = "'/eF\\k7#'Ehknw;m6";
      System.setCurrentTimeMillis((-3547L));
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      try { 
        pGConnectionPoolDataSource0.getConnection();
        fail("Expecting exception: PSQLException");
      
      } catch(PSQLException e) {
         //
         // The connection attempt failed.
         //
         verifyException("org.postgresql.core.v3.ConnectionFactoryImpl", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      simpleResultSet1.getStatement();
      InsertNode insertNode0 = new InsertNode();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-130L));
      DBUtil.closeResultSetAndStatement(simpleResultSet1);
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      try { 
        DBUtil.connect("--LokQH(%uSvI9Sxg:s3", (String) null, (String) null, (String) null, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting --LokQH(%uSvI9Sxg:s3 failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      GroupByList groupByList0 = new GroupByList();
      VerifyAggregateExpressionsVisitor verifyAggregateExpressionsVisitor0 = new VerifyAggregateExpressionsVisitor(groupByList0);
      groupByList0.accept(verifyAggregateExpressionsVisitor0);
      verifyAggregateExpressionsVisitor0.visit(groupByList0);
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.accept(verifyAggregateExpressionsVisitor0);
      groupByList0.referencesSessionSchema();
      boolean boolean0 = DBUtil.available("epYw?0GotTNS<<SA-L<", (String) null, " connection(s)", "epYw?0GotTNS<<SA-L<");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Long long0 = new Long((byte)46);
      SQLLongint sQLLongint0 = new SQLLongint(long0);
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      Double double0 = new Double(0.0);
      NumberDataValue numberDataValue0 = cDCDataValueFactory0.getDataValue(double0, (NumberDataValue) sQLLongint0);
      NumberDataValue numberDataValue1 = sQLLongint0.times(numberDataValue0, numberDataValue0, numberDataValue0);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      sQLTinyint0.absolute(numberDataValue1);
      Double double1 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double1);
      sQLDouble0.getByte();
      Recover recover0 = new Recover();
      recover0.getTempFileDeleter();
      Recover recover1 = new Recover();
      Class<jdbcDriver> class0 = jdbcDriver.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("wDV[F", class0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5377182630837076
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Long long0 = new Long((byte)46);
      SQLLongint sQLLongint0 = new SQLLongint(long0);
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      Double double0 = new Double(0.0);
      NumberDataValue numberDataValue0 = cDCDataValueFactory0.getDataValue(double0, (NumberDataValue) sQLLongint0);
      NumberDataValue numberDataValue1 = sQLLongint0.times(numberDataValue0, numberDataValue0, numberDataValue0);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      sQLTinyint0.absolute(numberDataValue1);
      Double double1 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double1);
      sQLDouble0.getByte();
      Recover recover0 = new Recover();
      Level level0 = Level.fatal;
      ErrorHandler.setDefaultLevel(level0);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("SOg|O/M[j\"h/80c;>I", (Connection) jdbcConnection0, true, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Long long0 = new Long((byte)46);
      SQLLongint sQLLongint0 = new SQLLongint(long0);
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      Double double0 = new Double(0.0);
      NumberDataValue numberDataValue0 = cDCDataValueFactory0.getDataValue(double0, (NumberDataValue) sQLLongint0);
      NumberDataValue numberDataValue1 = sQLLongint0.times(numberDataValue0, numberDataValue0, numberDataValue0);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      sQLTinyint0.absolute(numberDataValue1);
      Double double1 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double1);
      sQLDouble0.getByte();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata((String) null, jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0812593659852086
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.getProperties();
      jdbcDriver.getConnection("", (Properties) null);
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      SimpleResultSet simpleResultSet1 = new SimpleResultSet(csv0);
      simpleResultSet1.getStatement();
      DBUtil.createLoggingStatementHandler((Statement) null, false);
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false, 7, 0, (-1961));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";U", true);
      SQLWarning sQLWarning0 = new SQLWarning(";U", " failed: ");
      sQLWarning0.getSuppressed();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      mockFileOutputStream0.release();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)32;
      byteArray0[4] = (byte) (-15);
      mockFileOutputStream0.write(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" failed: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer1);
      char[] charArray0 = new char[16];
      charArray0[0] = '~';
      mockPrintWriter1.print(";U");
      mockPrintWriter1.println((long) (byte)0);
      mockPrintWriter1.print(charArray0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "?HVeRPw8s=", true, 1838, (int) (byte) (-15), (int) (byte) (-15));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: ?HVeRPw8s=
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      Integer integer0 = new Integer(2);
      fromVTI0.disablePrivilegeCollection();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "derbytmp_", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      int[] intArray0 = new int[4];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 4;
      fKConstraintDefinitionNode0.setCheckColumnReferences(intArray0);
      Integer integer0 = new Integer(2);
      Integer integer1 = new Integer(6);
      NodeFactoryImpl nodeFactoryImpl0 = new NodeFactoryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      ErrorHandler errorHandler0 = new ErrorHandler(">IxNX1#>gbqnx`!xU");
      // Undeclared exception!
      try { 
        DBUtil.runScript(">IxNX1#>gbqnx`!xU", (Connection) null, false, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Boolean boolean0 = Boolean.valueOf("");
      Boolean.logicalAnd(false, false);
      boolean boolean1 = Boolean.logicalXor(false, false);
      Boolean.logicalOr(false, false);
      DBUtil.getOpenResultSetCount();
      Boolean boolean2 = new Boolean((boolean) boolean0);
      assertTrue(boolean2.equals((Object)boolean1));
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Proxy proxy0 = (Proxy)DBUtil.createLoggingResultSet((ResultSet) null, (Statement) null);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      Boolean boolean0 = new Boolean(true);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("/I@b7p", (String) null, (String) null, "/I@b7p");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = null;
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, "GRANTOR", "R", "W:UybLaQ-I");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Class<FBStatement> class0 = FBStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      ErrorHandler errorHandler1 = new ErrorHandler("");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("", '9', (Connection) null, false, errorHandler0);
      assertNotNull(dBExecutionResult0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      NodeFactoryImpl nodeFactoryImpl0 = new NodeFactoryImpl();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getContextManager();
      QueryTreeNode.makeTableName((NodeFactory) nodeFactoryImpl0, (ContextManager) null, "org.apache.derby.iapi.sql.compile.NodeFactory", "org.apache.derby.iapi.sql.compile.NodeFactory");
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("org.apache.derby.iapi.sql.compile.NodeFactory", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Byte.compare((byte)46, (byte)2);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      SQLLongint sQLLongint0 = new SQLLongint();
      NumberDataValue numberDataValue0 = sQLLongint0.times(sQLTinyint0, sQLTinyint0, sQLTinyint0);
      SQLTinyint sQLTinyint1 = new SQLTinyint((byte)46);
      NumberDataValue numberDataValue1 = sQLTinyint1.absolute(sQLLongint0);
      Double double0 = new Double(44);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)46;
      byteArray0[7] = (byte)84;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Double double1 = new Double(3092.0);
      SQLDouble sQLDouble0 = new SQLDouble(double1);
      Double.isFinite((byte)84);
      SQLDouble sQLDouble1 = new SQLDouble(double1);
      DataValueDescriptor[] dataValueDescriptorArray0 = new DataValueDescriptor[7];
      dataValueDescriptorArray0[0] = (DataValueDescriptor) sQLLongint0;
      dataValueDescriptorArray0[1] = (DataValueDescriptor) sQLTinyint1;
      dataValueDescriptorArray0[2] = (DataValueDescriptor) numberDataValue1;
      dataValueDescriptorArray0[3] = (DataValueDescriptor) sQLTinyint1;
      dataValueDescriptorArray0[4] = (DataValueDescriptor) sQLDouble1;
      SQLDate sQLDate0 = new SQLDate();
      NumberDataValue numberDataValue2 = sQLDate0.getYear(sQLLongint0);
      dataValueDescriptorArray0[5] = (DataValueDescriptor) numberDataValue2;
      dataValueDescriptorArray0[6] = (DataValueDescriptor) numberDataValue1;
      sQLDouble0.coalesce(dataValueDescriptorArray0, dataValueDescriptorArray0[1]);
      sQLDouble1.greaterThan(sQLTinyint1, sQLTinyint0);
      sQLDouble0.times(sQLLongint0, numberDataValue0, numberDataValue1);
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("9jN?R=Sv+>EYk_VN", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      GroupByList groupByList0 = new GroupByList();
      VerifyAggregateExpressionsVisitor verifyAggregateExpressionsVisitor0 = new VerifyAggregateExpressionsVisitor(groupByList0);
      GroupByList groupByList1 = new GroupByList();
      groupByList0.accept(verifyAggregateExpressionsVisitor0);
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("V{", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: V{
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      GroupByList groupByList0 = new GroupByList();
      VerifyAggregateExpressionsVisitor verifyAggregateExpressionsVisitor0 = new VerifyAggregateExpressionsVisitor(groupByList0);
      GroupByList groupByList1 = new GroupByList();
      Visitable visitable0 = groupByList0.accept(verifyAggregateExpressionsVisitor0);
      Visitable visitable1 = verifyAggregateExpressionsVisitor0.visit(visitable0);
      visitable1.accept(verifyAggregateExpressionsVisitor0);
      DBUtil.checkReadOnly("H`a683_['z]8;%", false);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection1 = new jdbcConnection(session1);
      try { 
        DBUtil.connect("SQLERRD3", "--", "31\"j/, cXvQxQ^Ju@V]", "%t+6pa", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting SQLERRD3 failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = "/";
      GroupByList groupByList0 = new GroupByList();
      VerifyAggregateExpressionsVisitor verifyAggregateExpressionsVisitor0 = new VerifyAggregateExpressionsVisitor(groupByList0);
      verifyAggregateExpressionsVisitor0.skipChildren(groupByList0);
      verifyAggregateExpressionsVisitor0.visit(groupByList0);
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.accept(verifyAggregateExpressionsVisitor0);
      groupByList0.referencesSessionSchema();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("x?-`p Fg]GaMD", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getSharedState("");
      Integer integer0 = new Integer(0);
      Level level0 = Level.debug;
      Level level1 = Level.warn;
      ErrorHandler.setDefaultLevel(level1);
      Level level2 = Level.error;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler errorHandler0 = new ErrorHandler("V{CY oolPmaUc3", level0);
      Level level3 = Level.error;
      ErrorHandler.setDefaultLevel(level3);
      try { 
        DBUtil.runScript("", "P*8nWaa'cM<\"woz'h", (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      SQLLongint sQLLongint0 = new SQLLongint();
      NumberDataValue numberDataValue0 = sQLLongint0.times(sQLTinyint0, sQLTinyint0, sQLTinyint0);
      numberDataValue0.absolute(sQLLongint0);
      Double double0 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double0);
      Level level0 = Level.debug;
      ErrorHandler errorHandler0 = new ErrorHandler("m1Q1\"l'\"O/Ke+7p", level0);
      Level level1 = Level.debug;
      ErrorHandler.setDefaultLevel(level1);
      // Undeclared exception!
      try { 
        DBUtil.runScript("No JDBC driver class name provided", "m1Q1\"l'\"O/Ke+7p", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: No JDBC driver class name provided
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Closing statement failed");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "/(`";
      stringArray0[1] = "/(`";
      stringArray0[2] = "/(`";
      stringArray0[3] = "/(`";
      stringArray0[4] = "Closing statement failed";
      stringArray0[5] = "/(`";
      stringArray0[6] = "MTrs?O3";
      stringArray0[7] = "MTrs?O3";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "/(`", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("MTrs?O3", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, "No JDBC driver class name specified", true, (String[]) null);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Recover recover0 = new Recover();
      Recover.execute("Z &^f@?k>J5o*.ZqjT", "8v");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("}D2'nG$33:6RuMa");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "}D2'nG$33:6RuMa";
      stringArray0[1] = "}D2'nG$33:6RuMa";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "43X75.U", false, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("}D2'nG$33:6RuMa", false, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("8v", false, dBTable0, stringArray0, dBTable0, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBForeignKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column '}D2'nG$33:6RuMa' not found in table '}D2'nG$33:6RuMa'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("password", "_J?+n]9?@zE%f", "<(GcRzdq^/sv\";", "<(GcRzdq^/sv\";");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting _J?+n]9?@zE%f failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SQLJ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      Boolean.valueOf("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Boolean.logicalAnd(false, false);
      Boolean.getBoolean("SQLJ");
      Boolean.logicalAnd(true, true);
      Boolean.logicalOr(true, true);
      Boolean.logicalXor(true, false);
      Boolean.logicalAnd(false, false);
      Boolean.compare(true, false);
      Boolean.logicalOr(false, true);
      Boolean.logicalAnd(false, true);
      DBUtil.executeUpdate("", (Connection) null);
      Boolean boolean1 = new Boolean(false);
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 result set(s), 2 statement(s)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" statement(s)");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DefaultDBTable defaultDBTable2 = new DefaultDBTable(" statement(s)");
      defaultDBTable2.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Byte byte0 = new Byte((byte)27);
      Byte byte1 = new Byte((byte)27);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      recover1.getLobConnection();
      Boolean boolean0 = new Boolean(true);
      int int0 = DBUtil.getOpenResultSetCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      boolean boolean0 = Boolean.logicalAnd(false, false);
      DBUtil.executeUpdate((String) null, (Connection) null);
      Boolean boolean1 = new Boolean(false);
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SQLJ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Boolean boolean0 = Boolean.valueOf("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")Aj9nhXt\"UCCDhCM#");
      Boolean.logicalAnd(false, false);
      Boolean.logicalAnd(false, false);
      Boolean.logicalOr(false, false);
      Boolean.logicalXor(false, false);
      Boolean.logicalAnd(false, false);
      Boolean.compare(false, false);
      Boolean.logicalOr(false, false);
      Boolean.getBoolean("XUKX^#Y;B");
      boolean boolean1 = Boolean.logicalAnd(false, false);
      DBUtil.executeUpdate("", (Connection) null);
      Boolean boolean2 = new Boolean((boolean) boolean0);
      assertTrue(boolean2.equals((Object)boolean1));
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      RemapCRsVisitor remapCRsVisitor0 = new RemapCRsVisitor(true);
      RevokeNode revokeNode0 = new RevokeNode();
      QueryTreeNode.bindOffsetFetch((ValueNode) null, (ValueNode) null);
      remapCRsVisitor0.visit(revokeNode0);
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.accept(remapCRsVisitor0);
      GDSType.getType("w0P8=QXCJCbl)a");
      GDSType.getType("--+*iEhEU*NoRZC8");
      EventHandleImp eventHandleImp0 = new EventHandleImp("@=ut,Z&)/0?m");
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      Random.setNextRandom(3287);
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ORDER BY", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("N0s9<{ih`6.[u(b?");
      mockPrintWriter0.print("N0s9<{ih`6.[u(b?");
      char[] charArray0 = new char[2];
      mockPrintWriter0.write((-1641));
      charArray0[1] = 'E';
      mockPrintWriter0.println(charArray0);
      mockPrintWriter0.print(charArray0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("N0s9<{ih`6.[u(b?", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = DBUtil.escape("");
      assertEquals("", string0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      GroupByList groupByList0 = new GroupByList();
      VerifyAggregateExpressionsVisitor verifyAggregateExpressionsVisitor0 = new VerifyAggregateExpressionsVisitor(groupByList0);
      GroupByList groupByList1 = new GroupByList();
      Visitable visitable0 = groupByList0.accept(verifyAggregateExpressionsVisitor0);
      verifyAggregateExpressionsVisitor0.visit(visitable0);
      FKConstraintDefinitionNode fKConstraintDefinitionNode0 = new FKConstraintDefinitionNode();
      fKConstraintDefinitionNode0.accept(verifyAggregateExpressionsVisitor0);
      groupByList0.referencesSessionSchema();
      boolean boolean0 = DBUtil.available("epYw?0GotTNS<<SA-L<", "epYw?0GotTNS<<SA-L<", "F+bFyj}!FTO_", "UrR45GdFZ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DBUtil.resetMonitors();
      GDSType gDSType0 = GDSType.getType("");
      assertNull(gDSType0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SQLRef sQLRef0 = new SQLRef();
      Recover.execute("2Xt[`vF5'$Kj'Z}nP.", "--?*@':}ENX+4Y{%y1");
      boolean boolean0 = DBUtil.available("--ecmZsGPzT=@p$6oM", "epYw?0GotTNS<<SA-L<", ")?4Z2RjEK", "--ecmZsGPzT=@p$6oM");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Long long0 = new Long((byte)46);
      SQLLongint sQLLongint0 = new SQLLongint(long0);
      CDCDataValueFactory cDCDataValueFactory0 = new CDCDataValueFactory();
      Double double0 = new Double(0.0);
      NumberDataValue numberDataValue0 = cDCDataValueFactory0.getDataValue(double0, (NumberDataValue) sQLLongint0);
      NumberDataValue numberDataValue1 = sQLLongint0.times(numberDataValue0, numberDataValue0, numberDataValue0);
      ((SQLLongint) numberDataValue0).getShort();
      SQLTinyint sQLTinyint0 = new SQLTinyint();
      sQLTinyint0.absolute(numberDataValue1);
      Double double1 = new Double((byte)46);
      SQLDouble sQLDouble0 = new SQLDouble(double1);
      sQLDouble0.getByte();
      Recover recover0 = new Recover();
      recover0.getTempFileDeleter();
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--preparing statement:", 95);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SQLException sQLException0 = new SQLException("/", ";U");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement(";U", "F8r4", "/", 367);
      stackTraceElementArray0[0] = stackTraceElement0;
      Boolean.logicalXor(true, true);
      StackTraceElement stackTraceElement1 = new StackTraceElement("PARAMS", "PARAMS", "9i", 46);
      StackTraceElement stackTraceElement2 = new StackTraceElement("org.apache.derby.impl.sql.compile.StaticClassFieldReferenceNode", "F8r4", "XiY|e0E)5T6mt", 46);
      sQLException0.getSuppressed();
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session1).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection1 = new jdbcConnection(session1);
      Properties properties0 = new Properties();
      Class<DefaultDBTable> class0 = DefaultDBTable.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("/o_8'*M0+ofV=f=", '<', (Connection) jdbcConnection1, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection1 = new jdbcConnection(session1);
      Properties properties0 = new Properties();
      Class<JdbcCallableStatement> class0 = JdbcCallableStatement.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, '<', (Connection) jdbcConnection1, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";U", true);
      SQLWarning sQLWarning0 = new SQLWarning(";U", " failed: ");
      sQLWarning0.getSuppressed();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      mockFileOutputStream0.release();
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)32;
      byteArray0[4] = (byte)32;
      mockFileOutputStream0.write(byteArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" failed: ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer1);
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      mockPrintWriter1.print(";U");
      mockPrintWriter1.println((long) (byte)0);
      mockPrintWriter1.print(charArray0);
      Class<SimpleResultSet> class0 = SimpleResultSet.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("G Y*)G", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      GroupByList groupByList0 = new GroupByList();
      VerifyAggregateExpressionsVisitor verifyAggregateExpressionsVisitor0 = new VerifyAggregateExpressionsVisitor(groupByList0);
      verifyAggregateExpressionsVisitor0.skipChildren(groupByList0);
      verifyAggregateExpressionsVisitor0.visit(groupByList0);
      groupByList0.accept(verifyAggregateExpressionsVisitor0);
      verifyAggregateExpressionsVisitor0.visit(groupByList0);
      groupByList0.referencesSessionSchema();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("T", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Byte byte0 = new Byte((byte)84);
      Byte.compare((byte)46, (byte)84);
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.debug;
      ErrorHandler.setDefaultLevel(level1);
      Level level2 = Level.ignore;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler errorHandler0 = new ErrorHandler("t", level2);
      // Undeclared exception!
      try { 
        DBUtil.runScript("preparing statement: ", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6/J");
      DBUtil.getOpenStatementCount();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Statement statement0 = jdbcConnection0.createStatement();
      statement0.getMaxRows();
      Proxy proxy0 = (Proxy)DBUtil.createLoggingStatementHandler(statement0, false);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.countRows("#CN!Q]K;u5w5]<L", (Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FromVTI fromVTI0 = new FromVTI();
      String string0 = DBUtil.escape(")Q3W+<wg-pJDm:@D|");
      assertEquals(")Q3W+<wg-pJDm:@D|", string0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      Recover recover0 = new Recover();
      Recover recover1 = new Recover();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData(")y", true, true, true, true, (String) null, true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition ')y.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      Csv.getInstance();
      csv0.setFieldDelimiter('*');
      Csv csv1 = Csv.getInstance();
      csv1.setRowSeparatorWrite("+7q({L%EszI:rqJm ");
      // Undeclared exception!
      try { 
        DBUtil.getConnectData(" \"z0<?");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition ' \"z0<?.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
