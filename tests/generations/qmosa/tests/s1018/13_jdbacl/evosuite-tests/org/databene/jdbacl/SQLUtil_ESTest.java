/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 17:08:43 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.sql.execute.NoPutResultSet;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.apache.derby.impl.db.BasicDatabase;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.FromVTI;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBNonUniqueIndex;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.FKChangeRule;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBConnection;
import org.h2.engine.SessionRemote;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.value.ValueLob;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.commentChar(840);
      streamTokenizer0.ordinaryChar(840);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.whitespaceChars(840, (-2047));
      streamTokenizer0.nval = (double) (-2047);
      streamTokenizer0.whitespaceChars((-4), (-2047));
      SQLUtil.renderNumber(streamTokenizer0);
      TableContainer tableContainer0 = new TableContainer("CHECK ");
      tableContainer0.getTable((String) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("- 2047", (DBTable) null, (-2047), "select");
      // Undeclared exception!
      try { 
        defaultDBColumn0.setNullable(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBColumn", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.commentChar(840);
      streamTokenizer0.nval = (-425.3412089);
      streamTokenizer0.ordinaryChar(840);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)83;
      streamTokenizer0.resetSyntax();
      streamTokenizer0.whitespaceChars(13, (-2047));
      streamTokenizer0.whitespaceChars(13, (-2047));
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 425.3412089", string0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6702708847029886
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[14];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "into table=[");
      stringArray0[11] = "s]leDt";
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "7Ft7M[qm");
      DBCatalog dBCatalog0 = new DBCatalog((String) null);
      dBCatalog0.getComponents();
      SQLUtil.typeAndName(dBCatalog0);
      SQLUtil.leftJoin((String) null, stringArray0, "2h(", "monitor", stringArray0);
      SQLUtil.mutatesDataOrStructure("select into");
      String string0 = "iaJ D%;vx3";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("s]leDt");
      DBNotNullConstraint dBNotNullConstraint0 = null;
      try {
        dBNotNullConstraint0 = new DBNotNullConstraint(defaultDBTable0, "7Ft7M[qm", false, "s]leDt");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 's]leDt' not found in table 's]leDt'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = "/*";
      // Undeclared exception!
      SQLUtil.isProcedureCall("/*");
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[4] = "NIxbjjxdu`2";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Z'/3f~v#PA.,/UO[g%", false, defaultDBTable0, "select");
      dBCheckConstraint0.setDoc(stringArray0[1]);
      defaultDBTable0.getIndex(stringArray0[2]);
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      PipedWriter pipedWriter1 = new PipedWriter();
      pipedReader0.markSupported();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "delete", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.0521946515399847
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(" join ", stringBuilder0);
      stringBuilder1.append("");
      char[] charArray0 = new char[3];
      charArray0[0] = 'w';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      SQLUtil.mutatesDataOrStructure("greaterOrEquals");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("greaterOrEquals", defaultDBTable0, 2587, "deletecreate materialized vie~crpate materialized view;8ig,=\"?|^z)d-yq");
      defaultDBColumn0.toString();
      defaultDBColumn0.setOwner(defaultDBTable0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.ensureCapacity(4);
      Vector<DBColumn> vector1 = new Vector<DBColumn>();
      vector1.listIterator();
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      Boolean.valueOf(true);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "deletecreate materialized vie~crpate materialized view;8ig,=\"?|^z)d-yq", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder2 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder2);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      DBSchema dBSchema0 = new DBSchema("org.hsqldb.jdbc.jdbcCallableStatement");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.hsqldb.jdbc.jdbcCallableStatement", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger(" join ", dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter terialized viewbo", defaultDBTable0, 6, "alter t");
      defaultDBColumn0.toString();
      defaultDBColumn0.setOwner(dBSchema0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.ensureCapacity((-1180));
      Vector<DBColumn> vector1 = new Vector<DBColumn>();
      vector1.listIterator();
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      assertEquals("[alter terialized viewbo : ALTER T, alter terialized viewbo : ALTER T]", vector0.toString());
      
      Boolean.valueOf(true);
      String[] stringArray0 = new String[2];
      stringArray0[0] = null;
      stringArray0[1] = "alter terialized viewbo, alter terialized viewbo";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1);
      assertEquals("", stringBuilder1.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = " ADD ";
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      defaultDBTable0.countProviders();
      String string1 = null;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "N2PGX&Z";
      stringArray0[1] = " ADD ";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, false, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append(0L);
      // Undeclared exception!
      try { 
        stringBuilder0.append((char[]) null, 30, 30);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = "?fA{eeH";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "?fA{eeH";
      stringArray0[1] = "?fA{eeH";
      stringArray0[2] = "?fA{eeH";
      stringArray0[3] = null;
      stringArray0[4] = "?fA{eeH";
      stringArray0[5] = null;
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint((String) null, true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "?fA{eeH");
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec1);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      int int0 = 1342;
      int int1 = (-3770);
      // Undeclared exception!
      try { 
        DBDataType.getInstance(1342, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = ">ADD ";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES ", defaultDBTable0, (DBDataType) null, (Integer) null);
      Integer.divideUnsigned(47, (-3));
      Integer integer0 = new Integer(134);
      Integer integer1 = new Integer((-2888));
      Integer integer2 = RawTransaction.ABORT;
      Character character0 = new Character('Y');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("callalter terialized viewbo,jl\"v##ky+3itk");
      mockPrintWriter0.print(0L);
      mockPrintWriter0.println((float) (-2888));
      mockPrintWriter0.println();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("k", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger("1*2cP]*pn!", dBSchema0);
      dBTrigger0.setTriggerBody("k");
      dBSchema0.addTrigger(dBTrigger0);
      DBCatalog dBCatalog0 = new DBCatalog("1*2cP]*pn!");
      VersionNumber versionNumber0 = VersionNumber.valueOf("NULL");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("42Z40.U", "call", versionNumber0);
      dBCatalog0.setDatabase(defaultDatabase0);
      dBCatalog0.getTable((String) null, false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("renamealter terialized viewbo,jl\"v##ky+3itk", defaultDBTable0, (-789), "X}1Db~N!z");
      defaultDBColumn0.setNullable(true);
      defaultDBColumn0.setNullable(false);
      SQLUtil.renderColumn(defaultDBColumn0);
      System.setCurrentTimeMillis(274);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.9417429777213617
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "*vU,Q>cMaSTl+wq(";
      stringArray0[2] = "select";
      stringArray0[3] = "V7-Ic";
      stringArray0[4] = "ALTER TABLE ";
      SQLUtil.join("V7-Ic", "", stringArray0, "V7-Ic", stringArray0[5], stringArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ERROR ", 455);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockFile mockFile0 = new MockFile("ALTER TABLE ", "V7-Ic join V7-Ic as null on .null = null.null and .*vU,Q>cMaSTl+wq( = null.*vU,Q>cMaSTl+wq( and .select = null.select and .V7-Ic = null.V7-Ic and .ALTER TABLE  = null.ALTER TABLE  and .null = null.null");
      mockFile0.setReadable(true, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.printf("ALTER TABLE ", (Object[]) stringArray0);
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter1);
      assertEquals(FKChangeRule.NO_ACTION, dBForeignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      stringArray0[1] = "v|0Hfse}[,O!/T}s";
      stringArray0[2] = "v|0Hfse}[,O!/T}s";
      stringArray0[3] = "v|0Hfse}[,O!/T}s";
      String string0 = SQLUtil.normalize("*/", true);
      assertEquals("*/", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.removeComments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7407159177707836
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SQLUtil.isDDL("inner");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "inner";
      stringArray0[1] = "inner";
      stringArray0[2] = "inner";
      stringArray0[3] = "inner";
      stringArray0[4] = "inner";
      stringArray0[5] = "inner";
      stringArray0[6] = "inner";
      String string0 = SQLUtil.innerJoin("inner", stringArray0, "insert1*2cp]*pn!", "i'&2FaG`", stringArray0);
      assertEquals("insert1*2cp]*pn! as i'&2FaG` on inner.inner = i'&2FaG`.inner and inner.inner = i'&2FaG`.inner and inner.inner = i'&2FaG`.inner and inner.inner = i'&2FaG`.inner and inner.inner = i'&2FaG`.inner and inner.inner = i'&2FaG`.inner and inner.inner = i'&2FaG`.inner", string0);
      
      String string1 = SQLUtil.normalize("inner", false);
      assertEquals("inner", string1);
      
      String string2 = SQLUtil.join("inner", "inner", stringArray0, "&", "-LV", stringArray0);
      assertEquals("& as -LV on inner.inner = -LV.inner and inner.inner = -LV.inner and inner.inner = -LV.inner and inner.inner = -LV.inner and inner.inner = -LV.inner and inner.inner = -LV.inner and inner.inner = -LV.inner", string2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("k", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger("k", dBSchema0);
      dBTrigger0.setTableOwner("k");
      dBTrigger0.setTriggerBody("k");
      dBSchema0.addTrigger(dBTrigger0);
      DBCatalog dBCatalog0 = new DBCatalog("k");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("k", defaultDBTable0, (DBDataType) null, (Integer) null);
      defaultDBColumn0.getNotNullConstraint();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn((String) null, defaultDBTable0, (DBDataType) null, (Integer) null);
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn0;
      SQLUtil.renderColumnNames(dBColumnArray0);
      SQLUtil.isDDL("0oN3_v%F)|`G+yxr");
      StringBuilder stringBuilder0 = new StringBuilder(1002);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "create materialized view");
      String[] stringArray0 = new String[14];
      stringArray0[0] = "deletegreaterorequals";
      stringArray0[1] = "deletegreaterorequals";
      VersionNumber versionNumber0 = VersionNumber.valueOf("deletegreaterorequals");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase(" <=BE ReadyForQuery", "deletegreaterorequals", versionNumber0);
      DBCatalog dBCatalog0 = new DBCatalog("deletegreaterorequals", defaultDatabase0);
      dBCatalog0.setDatabase(defaultDatabase0);
      VersionNumber.valueOf(" ADD ");
      defaultDatabase0.toString();
      defaultDatabase0.setImportedUKs(false);
      dBCatalog0.getTable("deletegreaterorequals", false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("deletegreaterorequals", (DBTable) null, (-789), "deletegreaterorequals");
      defaultDBColumn0.setNullable(true);
      defaultDBColumn0.setName(" <=BE ReadyForQuery");
      defaultDBColumn0.setNullable(true);
      SQLUtil.renderColumn(defaultDBColumn0);
      System.setCurrentTimeMillis(272);
      defaultDBColumn0.setVersionColumn(true);
      Random.setNextRandom(2041);
      StringBuilder stringBuilder0 = new StringBuilder("create materialized view");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder0);
      assertEquals("create materialized viewDELETEGREATEROREQUALS", stringBuilder0.toString());
      
      boolean boolean0 = SQLUtil.isProcedureCall(" <=BE ReadyForQuery");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      Integer integer0 = RawTransaction.COMMIT;
      SQLUtil.renderValue(defaultDBTable0);
      Random.setNextRandom(166);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = ">ADD ";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(" REFERENCES ", defaultDBTable0, (DBDataType) null, (Integer) null);
      Integer integer0 = RawTransaction.ABORT;
      Integer.divideUnsigned(47, (-3));
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("", defaultDBTable0, (DBDataType) null, integer0);
      Integer integer1 = new Integer((-2888));
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn1);
      vector0.listIterator();
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        errorMessages0.updateLong("FOREIGN KEY ", 1L);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // updateLong
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.2519175163260234
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      defaultDBTable0.countProviders();
      stringArray0[1] = "?fA{eeH";
      stringArray0[2] = "?fA{eeH";
      stringArray0[4] = "create tablev|0hfse}[,o!/t}s";
      stringArray0[5] = "?fA{eeH";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("?fA{eeH", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT ?fA{eeH ", string0);
      
      defaultDBTable0.getIndex("7default JVM encodi5g>");
      StringBuilder stringBuilder0 = new StringBuilder("?fA{eeH");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("?fA{eeH");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string1 = SQLUtil.constraintSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("CONSTRAINT ?fA{eeH FOREIGN KEY (, ?fA{eeH, ?fA{eeH, , create tablev|0hfse}[,o!/t}s, ?fA{eeH, ) REFERENCES null(, ?fA{eeH, ?fA{eeH, , create tablev|0hfse}[,o!/t}s, ?fA{eeH, )", string1);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6079277863994084
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      String[] stringArray0 = new String[14];
      stringArray0[0] = "?fA{eeH";
      stringArray0[3] = stringArray0[1];
      stringArray0[4] = "?fA{eeH";
      stringArray0[5] = "?fA{eeH";
      stringArray0[6] = "?fA{eeH";
      SQLUtil.join("?fA{eeH", "?fA{eeH", stringArray0, "create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq", "?fA{eeH", stringArray0);
      SQLUtil.mutatesDataOrStructure("create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq");
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      columnDescriptorList0.add((Object) "?fA{eeH");
      columnDescriptorList0.iterator();
      SQLUtil.renderColumnListWithTableName("?fA{eeH", stringArray0);
      columnDescriptorList0.parallelStream();
      String string0 = "";
      SQLUtil.mutatesDataOrStructure("");
      columnDescriptorList0.add((Object) "?fA{eeH join create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq as ?fA{eeH on ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null and ?fA{eeH.null = ?fA{eeH.null");
      SQLUtil.normalize("!S\"n<jm", true);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) columnDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1316311157317536
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = ">ADD ";
      stringArray0[2] = ">ADD ";
      stringArray0[3] = ">ADD ";
      stringArray0[4] = "NIxbjjxdu`2";
      stringArray0[5] = ">ADD ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ">ADD ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      dBPrimaryKeyConstraint0.toString();
      dBPrimaryKeyConstraint0.setDoc("altetab'ek");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Z'/3f~v#PA.,/UO[g%", false, defaultDBTable0, "select");
      dBCheckConstraint0.setDoc(">ADD ");
      dBPrimaryKeyConstraint0.equals(dBCheckConstraint0);
      defaultDBTable0.getIndex(">ADD ");
      PipedWriter pipedWriter0 = new PipedWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("CONSTRAINT \">ADD \" PRIMARY KEY (y^y, >ADD , >ADD , >ADD , NIxbjjxdu`2, >ADD , )");
      mockPrintWriter0.print(0L);
      mockPrintWriter0.println(0.0F);
      mockPrintWriter0.println();
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec1, mockPrintWriter0);
      assertNull(defaultDBTable0.getName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8212565066006587
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = " ADD ";
      stringArray0[2] = "";
      stringArray0[3] = " ADD ";
      defaultDBTable0.getCheckConstraints();
      stringArray0[4] = "NIxbjjxdu`2";
      stringArray0[5] = " ADD ";
      stringArray0[6] = " ADD ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " ADD ", false, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "E0)#", false, stringArray0);
      StringBuilder stringBuilder0 = new StringBuilder(";bfpA?");
      StringBuilder stringBuilder1 = new StringBuilder("uX");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("NIxbjjxdu`2");
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertNull(defaultDBTable0.getDoc());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(" as ", 47);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("&U&hE hF:c]otc9Q]", (String[]) null, "&U&hE hF:c]otc9Q]", "'6FK6z0YrCCoCHwo#", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Random.setNextRandom((-132));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(273, jdbcDataSource0.getTraceId());
      
      String string0 = SQLUtil.normalize("1*2cP]*pn!", true);
      assertEquals("1 * 2cP ] * pn !", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.548753909993042
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("@SpOT7*A", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("@SpOT7*A");
      String[] stringArray1 = new String[9];
      stringArray1[0] = "@SpOT7*A";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray1);
      Integer integer0 = RawTransaction.COMMIT;
      Integer.compare((-561197932), (-561197932));
      DBDataType dBDataType0 = DBDataType.getInstance((-561197932), "-lv");
      dBDataType0.isAlpha();
      dBForeignKeyConstraint0.setName("@SpOT7*A");
      dBDataType0.isAlpha();
      StringBuilder stringBuilder0 = new StringBuilder("-lv");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "-g7WBaD<*", true, stringArray0);
      defaultDBTable0.setPrimaryKey(dBPrimaryKeyConstraint0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, dBDataType0, integer0);
      stringBuilder0.append((Object) defaultDBColumn0);
      char[] charArray0 = new char[2];
      charArray0[1] = '%';
      GDSType.getType("@SpOT7*A");
      SQLUtil.isDML("truncate-<tee6*41tw");
      SQLUtil.join("ORDER", "derby.serviceLocale", stringArray1, "@SpOT7*A", "derby.serviceLocale", stringArray1);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.322122307526584
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      stringArray0[1] = "v|0Hfse}[,O!/T}s";
      stringArray0[2] = "v|0Hfse}[,O!/T}s";
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("delete>}vo[");
      assertNotNull(boolean0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "V7-Ic";
      stringArray0[2] = "select";
      stringArray0[3] = "select";
      SQLUtil.join("V7-Ic", "V7-Ic", stringArray0, "delete", "create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq", stringArray0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-32);
      byte byte0 = (byte) (-26);
      byteArray0[2] = (byte) (-26);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("`", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.7441006984130913
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      SQLUtil.addRequiredCondition("H53-$uV", stringBuilder0);
      SQLUtil.mutatesDataOrStructure("selectselect");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "updatealter terialized viewbo,jl\"v##ky+3itk";
      stringArray0[1] = "greaterOrEquals";
      stringArray0[2] = "greaterOrEquals";
      stringArray0[3] = "selectselect";
      stringArray0[4] = " join ";
      SQLUtil.renderColumnListWithTableName("selectselect", stringArray0);
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.join("?", "deletedelete8&<>a@#51u;^qw\"", stringArray0, " join ", "beginNestedTransaction", stringArray0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation2 = new ConstantActionActivation();
      constantActionActivation2.getContextManager();
      ConstantActionActivation constantActionActivation3 = new ConstantActionActivation();
      NoPutResultSet noPutResultSet0 = null;
      ConstantActionActivation constantActionActivation4 = new ConstantActionActivation();
      // Undeclared exception!
      try { 
        constantActionActivation4.getMethod((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7911998103932194
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[1] = "?fA{eeH";
      stringArray0[2] = "?fA{eeH";
      stringArray0[4] = "create tablev|0hfse}[,o!/t}s";
      stringArray0[5] = "?fA{eeH";
      String[] stringArray1 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("WkOijZY>(~V", true, defaultDBTable0, stringArray1, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec1);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource1.getLogWriter();
      NameSpec nameSpec2 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec2, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("k", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger("1*2cP]*pn!", dBSchema0);
      String string0 = SQLUtil.normalize("setPasswordChars(new char[0]);", false);
      assertEquals("setPasswordChars (new char [ 0 ]) ;", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.016496301416993
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = ">ADD ";
      stringArray0[1] = ">ADD ";
      stringArray0[2] = ">ADD ";
      stringArray0[3] = ">ADD ";
      stringArray0[4] = ">ADD ";
      stringArray0[5] = ">ADD ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ">ADD ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec1);
      GDSType.getType(">ADD ");
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = new ErrorMessages();
      // Undeclared exception!
      try { 
        errorMessages1.getNClob(8000);
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.getNClob(I)Ljava/sql/NClob; is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      int int0 = 840;
      streamTokenizer0.pushBack();
      streamTokenizer0.ordinaryChar(840);
      streamTokenizer0.resetSyntax();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9547027108447823
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String[] stringArray0 = new String[9];
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v|0Hfse}[,O!/T}s");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("v|0Hfse}[,O!/T}s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = new StringBuilder("rx/B~GT:@");
      StringBuilder stringBuilder1 = new StringBuilder("org.postgresql.jdbc4.Jdbc4Array");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Best cost = ");
      Locale locale0 = Locale.ENGLISH;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "$UUv-k`?SxjEw2y", (Object[]) stringArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, printWriter0);
      assertEquals("v|0Hfse}[,O!/T}s", defaultDBTable0.getName());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Character.isIdeographic((-2));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBSchema dBSchema0 = new DBSchema("drop indexx~vi8!`3px3iavllz");
      DBPackage dBPackage0 = new DBPackage((String) null, dBSchema0);
      dBSchema0.addPackage(dBPackage0);
      defaultDBTable0.setSchema(dBSchema0);
      defaultDBTable0.getUniqueConstraints(true);
      defaultDBTable0.getIndex("kcL+SI");
      String string0 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("drop indexx~vi8!`3px3iavllz.null", string0);
      
      String string1 = SQLUtil.typeAndName(defaultDBTable0);
      assertNotNull(string1);
      assertEquals("table null", string1);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      StringBuilder stringBuilder0 = new StringBuilder();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      String string0 = "e@P0wo@)}ss{G";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("H9H&^BijJaXBK{c.8");
      int int0 = 2924;
      defaultDBTable0.equals((Object) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("e@P0wo@)}ss{G", defaultDBTable0, 2924, "<NULL ROW>");
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8672900914093027
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("deletegreaterorequals", true, (String) null, "greaterore");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      GDSType.getType("&CP4AoU:0+_W.oh,Pq|");
      GDSType.getType("CONSTRAINT deletegreaterorequals CHECK greaterore");
      ErrorMessages errorMessages0 = new ErrorMessages();
      int int0 = 1042;
      // Undeclared exception!
      try { 
        errorMessages0.getNClob(1042);
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.getNClob(I)Ljava/sql/NClob; is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.615726363637287
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("create tablev|0hfse}[,o!/t}s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      SQLUtil.constraintName(dBForeignKeyConstraint0);
      defaultDBTable0.getIndex("C");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec1);
      assertEquals("CONSTRAINT \"create tablev|0hfse}[,o!/t}s\" CONSTRAINT \"create tablev|0hfse}[,o!/t}s\" ", stringBuilder0.toString());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6243301779952075
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress(" as ", 47);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)78;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)78;
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getIndex("TtL");
      String[] stringArray1 = new String[8];
      stringArray1[0] = "rename";
      stringArray1[1] = "rename";
      stringArray1[2] = "delete8&<>a@#51u;^qw\"";
      stringArray1[3] = "rename";
      stringArray1[4] = "TtL";
      stringArray1[5] = "delete8&<>a@#51u;^qw\"";
      stringArray1[6] = "rename";
      stringArray1[7] = "rename";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("rename", false, defaultDBTable0, stringArray1, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      assertEquals(216, jdbcDataSource0.getTraceId());
      
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (rename, rename, delete8&<>a@#51u;^qw\", rename, TtL, delete8&<>a@#51u;^qw\", rename, rename) REFERENCES null(, , , )", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema(" ADD ");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint((String) null, false, "greaterore", "greaterore");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      GDSType.getType("'JfEelPGLmk}_`");
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        errorMessages0.getNClob(1570);
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.getNClob(I)Ljava/sql/NClob; is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      String string0 = SQLUtil.normalize("", false);
      assertEquals("", string0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.460619072446698
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("");
      assertNull(boolean0);
      
      SQLUtil.mutatesStructure("");
      boolean boolean1 = SQLUtil.isDDL("alter tablegetcurrentschemaname");
      assertTrue(boolean1);
      
      SQLUtil.isDML("P");
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = null;
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "alter tablegetcurrentschemaname";
      String string0 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.null, null.null, null., null., null.alter tablegetcurrentschemaname", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.568155382556487
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String string0 = "alter terialized viewbo,jl\"v##ky+3itk";
      SQLUtil.mutatesDataOrStructure("alter terialized viewbo,jl\"v##ky+3itk");
      String string1 = ">}vO[";
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin(">}vO[", (String[]) null, ">}vO[", "alter terialized viewbo,jl\"v##ky+3itk", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "crea$e materializd view");
      VersionNumber.valueOf("deletegreaterorequals");
      VersionNumber.valueOf("insert\u0107\u0003\uFFFF\u0001\u0105");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("into", 34);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DBCatalog dBCatalog0 = new DBCatalog(" ADD ");
      dBCatalog0.getSchema((String) null);
      dBCatalog0.getComponents();
      SQLUtil.typeAndName(dBCatalog0);
      System.setCurrentTimeMillis(2054L);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.4689241470847967
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("Bo,J6l\"V##Ky+3iTK");
      SQLUtil.mutatesStructure("drop materialized view8&<>a@#51u;^qw\"");
      SQLUtil.isDDL("}]Gg(V");
      SQLUtil.isDML("Bo,J6l\"V##Ky+3iTK");
      SQLUtil.typeAndName((DBObject) null);
      SQLUtil.isProcedureCall("drop materialized view8&<>a@#51u;^qw\"");
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = new ErrorMessages();
      // Undeclared exception!
      SQLUtil.isQuery("vxJ;Gm`YuL{c-e/*.");
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Character.isIdeographic((-2));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      PipedWriter pipedWriter0 = new PipedWriter();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "create tablev|0hfse}[,o!/t}s";
      stringArray0[1] = "create tablev|0hfse}[,o!/t}s";
      stringArray0[2] = "create tablev|0hfse}[,o!/t}s";
      stringArray0[3] = "create tablev|0hfse}[,o!/t}s";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("8&<>a", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      String string0 = SQLUtil.constraintName(dBForeignKeyConstraint0);
      assertEquals("CONSTRAINT 8&<>a ", string0);
      
      defaultDBTable0.getIndex("into");
      StringBuilder stringBuilder0 = new StringBuilder("into");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec0);
      assertEquals("into", stringBuilder1.toString());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4102453456579889
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String[] stringArray0 = new String[9];
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("v|0Hfse}[,O!/T}s");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("v|0Hfse}[,O!/T}s", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.appendConstraintName((DBConstraint) dBForeignKeyConstraint0, stringBuilder0, nameSpec1);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = new ErrorMessages();
      // Undeclared exception!
      try { 
        errorMessages0.isClosed();
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.isClosed()Z is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.061961311398573
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = ">ADD ";
      stringArray0[2] = ">ADD ";
      stringArray0[3] = ">ADD ";
      stringArray0[4] = "NIxbjjxdu`2";
      stringArray0[5] = ">ADD ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, ">ADD ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      dBPrimaryKeyConstraint0.toString();
      dBPrimaryKeyConstraint0.setDoc("altetablek");
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Z'/3f~v#PA.,/UO[g%", false, defaultDBTable0, "select");
      dBCheckConstraint0.setDoc(">ADD ");
      dBPrimaryKeyConstraint0.equals(dBCheckConstraint0);
      defaultDBTable0.getIndex(">ADD ");
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      PipedWriter pipedWriter1 = new PipedWriter();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("", defaultDBTable0, (-4), "PRIMARY KEY (y^y, >ADD , >ADD , >ADD , NIxbjjxdu`2, >ADD , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"y^y\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      stringArray0[1] = "v|0Hfse}[,O!/T}s";
      stringArray0[2] = "v|0Hfse}[,O!/T}s";
      stringArray0[3] = "v|0Hfse}[,O!/T}s";
      String string0 = SQLUtil.normalize("create materialized viewv|0hfse}[,o!/t}s", false);
      assertEquals("create materialized viewv | 0hfse } [, o ! / t } s", string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(98, jdbcDataSource0.getTraceId());
      
      String string0 = SQLUtil.normalize("updatealter terialized viewbo,jl\"v##ky+3itk", false);
      assertEquals("updatealter terialized viewbo, jl \"v##ky+3itk\"", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.840718182146488
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = " ADD ";
      stringArray0[2] = "";
      stringArray0[3] = " ADD ";
      stringArray0[4] = "NIxbjjxdu`2";
      stringArray0[5] = " ADD ";
      stringArray0[6] = " ADD ";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, " ADD ", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      dBPrimaryKeyConstraint0.toString();
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("Z'/3f~v#PA.,/UO[g%", false, defaultDBTable0, "select");
      dBPrimaryKeyConstraint0.equals(dBCheckConstraint0);
      defaultDBTable0.getIndex("");
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.460579305866033
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getReferrers();
      defaultDBTable0.removeForeignKeyConstraint((DBForeignKeyConstraint) null);
      String[] stringArray0 = new String[7];
      defaultDBTable0.countProviders();
      stringArray0[0] = "?fA{eeH";
      stringArray0[1] = "?fA{eeH";
      stringArray0[2] = "?fA{eeH";
      stringArray0[3] = "?fA{eeH";
      stringArray0[4] = "create tablev|0fse}[do!/t}s";
      stringArray0[5] = "?fA{eeH";
      stringArray0[6] = "?fA{eeH";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq", false, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("5I|]t(QE}");
      dBPrimaryKeyConstraint0.setDoc("?fA{eeH");
      SQLUtil.join("?fA{eeH", "?fA{eeH", stringArray0, "create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq", "?fA{eeH", stringArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("ERROR ", 455);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      SQLUtil.renderColumnListWithTableName("create tablev|0fse}[do!/t}s", stringArray0);
      DBDataType dBDataType0 = DBDataType.getInstance(0, "5I|]t(QE}");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer0, integer0);
      SQLUtil.renderColumn(defaultDBColumn0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (CharSequence) "create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq");
      SQLUtil.addRequiredCondition("?fA{eeH join create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq as ?fA{eeH on ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.create tablev|0fse}[do!/t}s = ?fA{eeH.create tablev|0fse}[do!/t}s and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH", stringBuilder1);
      assertEquals("create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq and ?fA{eeH join create materialized vie~crPate materialized view;8ig,=\"?|^z)d-yq as ?fA{eeH on ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.create tablev|0fse}[do!/t}s = ?fA{eeH.create tablev|0fse}[do!/t}s and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH and ?fA{eeH.?fA{eeH = ?fA{eeH.?fA{eeH", stringBuilder1.toString());
      
      String string0 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (?fA{eeH, ?fA{eeH, ?fA{eeH, ?fA{eeH, create tablev|0fse}[do!/t}s, ?fA{eeH, ?fA{eeH)", string0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6066699893655365
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("deletegreaterorequals", false, (String) null, "greaterore");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      GDSType.getType("1w=CNO3%(% ?]");
      ErrorMessages errorMessages0 = new ErrorMessages();
      int int0 = (-3421);
      // Undeclared exception!
      try { 
        errorMessages0.getNClob((-3421));
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.getNClob(I)Ljava/sql/NClob; is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.612726894621007
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("deletegreaterorequals", false, (String) null, "greaterore");
      dBCheckConstraint0.toString();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      ErrorMessages errorMessages0 = new ErrorMessages();
      ErrorMessages errorMessages1 = new ErrorMessages();
      ErrorMessages errorMessages2 = new ErrorMessages();
      ErrorMessages errorMessages3 = new ErrorMessages();
      ErrorMessages errorMessages4 = new ErrorMessages();
      // Undeclared exception!
      try { 
        errorMessages3.updateNString((String) null, "into");
        fail("Expecting exception: AbstractMethodError");
      
      } catch(AbstractMethodError e) {
         //
         // Method org/apache/derby/diag/ErrorMessages.updateNString(Ljava/lang/String;Ljava/lang/String;)V is abstract
         //
         verifyException("org.apache.derby.diag.ErrorMessages", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName((String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      VersionNumber.valueOf("insert\u0107\u0003\uFFFF\u0001\u0105");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("into", 34);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      int int0 = (-789);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "alter terialized viewbo,jl\"v##ky+3itk");
      int int1 = (-1520914417);
      DefaultDBColumn defaultDBColumn0 = null;
      try {
        defaultDBColumn0 = new DefaultDBColumn("create m", (DBTable) null, (-789), "(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: (
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.3251892804900773
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("ptZMxq]XN<,$U");
      SQLUtil.mutatesStructure("execute");
      DBSchema dBSchema0 = new DBSchema("execute");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      // Undeclared exception!
      try { 
        defaultDBTable0.getCatalog();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Random.setNextRandom(4087);
      String[] stringArray0 = new String[18];
      stringArray0[0] = "pKF";
      stringArray0[1] = "\"f:";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.pushBack();
      streamTokenizer0.commentChar(840);
      streamTokenizer0.ordinaryChar(840);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.whitespaceChars(13, 1324);
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("create unique indexgreaterorequals");
      SessionRemote sessionRemote0 = new SessionRemote();
      ValueLob valueLob0 = ValueLob.createClob(stringReader0, 0L, sessionRemote0);
      Reader reader0 = valueLob0.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.commentChar(2);
      streamTokenizer0.ordinaryChar(20);
      streamTokenizer0.wordChars(10, 2801);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.whitespaceChars(65, 22);
      streamTokenizer0.whitespaceChars((-187147696), (-14482067));
      String string0 = SQLUtil.renderNumber(streamTokenizer0);
      assertEquals("- 0", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = ">}vO[";
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">}vO[";
      stringArray0[1] = ">}vO[";
      String string1 = "FmXd4eu'";
      stringArray0[2] = "FmXd4eu'";
      String string2 = "drop materialized viewselect";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "drop materialized viewselect";
      stringArray1[1] = "FmXd4eu'";
      stringArray1[2] = "FmXd4eu'";
      stringArray1[3] = "drop materialized viewselect";
      SQLUtil.innerJoin(">}vO[", stringArray0, "drop materialized viewselect", "hC^O.IQ9", stringArray1);
      SQLUtil.isQuery("5?B!*p6Qw#8#");
      String string3 = null;
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("5?B!*p6Qw#8#", stringArray1, "CLOB", (String) null, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[7];
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9471865956069645
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      DBSchema dBSchema0 = new DBSchema("k");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("k", dBSchema0);
      DBTrigger dBTrigger0 = new DBTrigger("1*2cP]*pn!", dBSchema0);
      dBTrigger0.toString();
      dBSchema0.addTrigger(dBTrigger0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("1*2cP]*pn!", defaultDBTable0, (-196687746), "k");
      vector0.add((DBColumn) defaultDBColumn0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("k", defaultDBTable0, 15, "k");
      CompositeDBObject<DBForeignKeyConstraint> compositeDBObject0 = (CompositeDBObject<DBForeignKeyConstraint>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      defaultDBColumn1.toString();
      defaultDBColumn1.setOwner(compositeDBObject0);
      vector0.add((DBColumn) defaultDBColumn1);
      SQLUtil.renderColumnNames((List<DBColumn>) vector0);
      Boolean boolean0 = new Boolean(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\"1}";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = null;
      stringArray0[4] = "k";
      stringArray0[5] = null;
      stringArray0[6] = "1*2cP]*pn!";
      SQLUtil.innerJoin((String) null, stringArray0, "k", "m4;O={V&", stringArray0);
      String[] stringArray1 = new String[4];
      stringArray1[0] = "1*2cP]*pn!";
      stringArray1[1] = null;
      stringArray1[2] = "#X8VW):;5|2'+A&T0_";
      SQLUtil.innerJoin(stringArray0[5], stringArray1, "vc$P lydS'K", stringArray0[1], stringArray0);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition(stringArray0[2], (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = ")@M";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLUtil.join(",^|hkhR", "xH", stringArray0, ")@M", "oaIzN{j~z.k>i#Q^", stringArray0);
      String[] stringArray1 = new String[7];
      stringArray1[0] = ",^|hkhR join )@M as oaIzN{j~z.k>i#Q^ on xH.)@M = oaIzN{j~z.k>i#Q^.)@M and xH.null = oaIzN{j~z.k>i#Q^.null and xH.null = oaIzN{j~z.k>i#Q^.null and xH.null = oaIzN{j~z.k>i#Q^.null and xH.null = oaIzN{j~z.k>i#Q^.null and xH.null = oaIzN{j~z.k>i#Q^.null and xH.null = oaIzN{j~z.k>i#Q^.null and xH.null = oaIzN{j~z.k>i#Q^.null";
      stringArray1[1] = ")@M";
      stringArray1[2] = "deleteuk{$6qv\"";
      stringArray1[3] = "deleteuk{$6qv\"";
      stringArray1[4] = "oaIzN{j~z.k>i#Q^";
      stringArray1[5] = "deleteuk{$6qv\"";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(".8`Rt,6", stringArray0, "", "deleteuk{$6qv\"", stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      assertEquals(0, jdbcDataSource0.getTraceId());
      
      String string0 = SQLUtil.normalize("'", false);
      assertEquals("''", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Integer integer0 = RawTransaction.ABORT;
      Integer integer1 = new Integer((-20680772));
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = new Integer((-20680772));
      Integer.compare((-20680772), (-1885726371));
      Integer integer4 = new Integer((-311));
      Integer.max(3091, 3055);
      Integer.compareUnsigned((-1623), 1);
      Integer.divideUnsigned(3091, 90031);
      Integer.remainderUnsigned(608, 164);
      Integer integer5 = RawTransaction.LOCK_ESCALATE;
      DBColumn[] dBColumnArray0 = new DBColumn[3];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(" join ");
      SQLUtil.addOptionalCondition(" join ", stringBuilder0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      // Undeclared exception!
      try { 
        xSQLVAR1.decodeTimestamp((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.gds.XSQLVAR", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = false;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getIndex("2/bMT2]Vcb");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize(">.&H*pAqx(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: >.&H*pAqx(
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8669932428978546
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "executealter terialized viewbo,jl\"v##ky+3itk";
      stringArray0[1] = ", ";
      stringArray0[2] = "executealter terialized viewbo,jl\"v##ky+3itk";
      stringArray0[3] = "^1\"5~Y[o#cP}j_F^";
      stringArray0[4] = "executealter terialized viewbo,jl\"v##ky+3itk";
      String string0 = SQLUtil.leftJoin("executealter terialized viewbo,jl\"v##ky+3itk", stringArray0, "executealter terialized viewbo,jl\"v##ky+3itk", "callalter terialized viewbo,jl\"v##ky+3itk", stringArray0);
      assertEquals("left join executealter terialized viewbo,jl\"v##ky+3itk as callalter terialized viewbo,jl\"v##ky+3itk on executealter terialized viewbo,jl\"v##ky+3itk.executealter terialized viewbo,jl\"v##ky+3itk = callalter terialized viewbo,jl\"v##ky+3itk.executealter terialized viewbo,jl\"v##ky+3itk and executealter terialized viewbo,jl\"v##ky+3itk.,  = callalter terialized viewbo,jl\"v##ky+3itk.,  and executealter terialized viewbo,jl\"v##ky+3itk.executealter terialized viewbo,jl\"v##ky+3itk = callalter terialized viewbo,jl\"v##ky+3itk.executealter terialized viewbo,jl\"v##ky+3itk and executealter terialized viewbo,jl\"v##ky+3itk.^1\"5~Y[o#cP}j_F^ = callalter terialized viewbo,jl\"v##ky+3itk.^1\"5~Y[o#cP}j_F^ and executealter terialized viewbo,jl\"v##ky+3itk.executealter terialized viewbo,jl\"v##ky+3itk = callalter terialized viewbo,jl\"v##ky+3itk.executealter terialized viewbo,jl\"v##ky+3itk", string0);
      
      boolean boolean0 = SQLUtil.isProcedureCall("executealter terialized viewbo,jl\"v##ky+3itk");
      String string1 = SQLUtil.join("na{!", ", ", stringArray0, "EQ", "CONSTRAINT ", stringArray0);
      assertEquals("na{! join EQ as CONSTRAINT  on , .executealter terialized viewbo,jl\"v##ky+3itk = CONSTRAINT .executealter terialized viewbo,jl\"v##ky+3itk and , .,  = CONSTRAINT .,  and , .executealter terialized viewbo,jl\"v##ky+3itk = CONSTRAINT .executealter terialized viewbo,jl\"v##ky+3itk and , .^1\"5~Y[o#cP}j_F^ = CONSTRAINT .^1\"5~Y[o#cP}j_F^ and , .executealter terialized viewbo,jl\"v##ky+3itk = CONSTRAINT .executealter terialized viewbo,jl\"v##ky+3itk", string1);
      
      boolean boolean1 = SQLUtil.isDML("na{!");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.322122307526584
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("executeselect");
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join("", "x<f,", (String[]) null, "x<f,", "org.hsqldb.store.BaseHashMap", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.9417429777213613
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SQLUtil.isQuery("$[");
      SQLUtil.mutatesStructure("create materialized view;8ig,=\"?|^z)d-yq");
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SQLUtil.mutatesDataOrStructure("create tablegreaterorequals");
      GDSType.getType(" join ");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[2];
      String string0 = "|/";
      stringArray0[0] = "|/";
      stringArray0[1] = "YJX^4]8";
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) "YJX^4]8";
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("", stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append("");
      stringBuilder2.appendCodePoint(3);
      stringBuilder1.append(true);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt(130);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 130
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)39;
      byteArray0[2] = (byte)32;
      byteArray0[3] = (byte)72;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(": data node ", (DBTable) null, 672, "select into");
      String string0 = SQLUtil.ownerDotComponent(defaultDBColumn0);
      assertEquals(": data node ", string0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[14];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      StringBuilder stringBuilder0 = new StringBuilder(97);
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      charArray0[1] = '.';
      stringBuilder0.append(97);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Integer integer0 = RawTransaction.COMMIT;
      Integer.compareUnsigned((-1673), (-1673));
      Integer.toUnsignedLong((-269));
      Integer.getInteger("org.antlG.runtime.tree.CommonTree");
      Integer.min((-269), 44);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "Xv_");
      SQLUtil.renderValue("W3'z*1t{tXQZU<");
      Random.setNextRandom(127);
      Random.setNextRandom((-1673));
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      String string0 = SQLUtil.renderValue((Object) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.7653291326451686
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Boolean boolean0 = SQLUtil.mutatesStructure("0Kd3PP\"ZYW,|r8;");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getPrimaryKeyConstraint();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (Object) defaultDBTable0);
      StringBuffer stringBuffer0 = new StringBuffer(stringBuilder1);
      StringBuilder stringBuilder2 = stringBuilder1.append(stringBuffer0);
      StringBuilder stringBuilder3 = stringBuilder2.append(true);
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("#0^7UyH", true, (String) null, "SYSCS_BULK_INSERT");
      StringBuilder stringBuilder4 = stringBuilder3.append((Object) dBCheckConstraint0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder4, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("create unique indexgreaterorequals");
      stringReader0.read();
      stringReader0.read();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String[] stringArray0 = new String[14];
      stringArray0[0] = "?fA{eeH";
      stringArray0[1] = "?fA{eeH";
      stringArray0[3] = "?fA{eeH";
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.395709426084936
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("?fA{eeH");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("?fA{eeH", dBSchema0);
      dBSchema0.getTables(false);
      DBTrigger dBTrigger0 = new DBTrigger("?fA{eeH", dBSchema0);
      dBSchema0.addTrigger(dBTrigger0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dBSchema0.getSequences(true);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("?fA{eeH", defaultDBTable0, (-1180), "alter materialized view");
      defaultDBColumn0.toString();
      defaultDBColumn0.setOwner(defaultDBTable0);
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      vector0.add((DBColumn) defaultDBColumn0);
      vector0.listIterator();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "alter materialized view";
      stringArray0[1] = "dk~QL6*";
      stringArray0[2] = "alter materialized view";
      stringArray0[3] = "!UgeJP{#J4?UBv2M>KG";
      stringArray0[4] = "?fA{eeH";
      stringArray0[5] = "?fA{eeH : ALTER MATERIALIZED VIEW";
      stringArray0[6] = "?fA{eeH : ALTER MATERIALIZED VIEW";
      stringArray0[7] = "!UgeJP{#J4?UBv2M>KG";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "!UgeJP{#J4?UBv2M>KG", true, stringArray0);
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec0);
      GDSType.getType("&CP4AoU:0+_W.oh,Pq|");
      GDSType.getType("dk~QL6*");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SQLUtil.renderColumnListWithTableName("@SpOT7*A", stringArray0);
      String[] stringArray1 = new String[5];
      stringArray1[0] = "-lv";
      stringArray1[1] = "@SpOT7*A";
      stringArray1[2] = "select";
      stringArray1[3] = "@SpOT7*A";
      stringArray1[4] = "@SpOT7*A";
      // Undeclared exception!
      try { 
        SQLUtil.join("", "select", stringArray1, "org.apache.derby.catalog.types.ReferencedColumnsDescriptorImpl", "", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = SQLUtil.removeComments("\u0001\u0106\u0003\uFFFF\u0001\u0105");
      assertEquals("\u0001\u0106\u0003\uFFFF\u0001\u0105", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      String string0 = "select";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "select";
      stringArray0[1] = "`";
      String[] stringArray1 = new String[3];
      stringArray1[0] = "delete";
      stringArray1[1] = "V7-Ic";
      stringArray1[2] = "7N4!";
      SQLUtil.join("7N4!", "", stringArray0, "delete", " NOT", stringArray1);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      jdbcCallableStatement jdbcCallableStatement0 = null;
      try {
        jdbcCallableStatement0 = new jdbcCallableStatement(jdbcConnection0, "select", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcPreparedStatement", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "deletegreaterorequals";
      stringArray0[1] = "9(WY-RwZ~'&xZ\"D?";
      stringArray0[2] = "|o^";
      stringArray0[3] = "delete";
      // Undeclared exception!
      try { 
        SQLUtil.join("Ua=C*j", "XooH1i6PW", (String[]) null, "delete", "9(WY-RwZ~'&xZ\"D?", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      SQLUtil.removeComments("");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "delete";
      stringArray0[2] = "DIx<G,? SB7>|V^{~.V";
      stringArray0[3] = "delete";
      stringArray0[4] = "delete";
      stringArray0[5] = "";
      stringArray0[6] = "selectzxxecute as >}vo[ on zxxecute.zxxecute = >}vo[.zxxecute and zxxecute.zxxecute = >}vo[.zxxecute and zxxecute.zxxecute = >}vo[.zxxecute and zxxecute.zxxecute = >}vo[.zxxecute and zxxecute.zxxecute = >}vo[.zxxecute and zxxecute.zxxecute = >}vo[.zxxecute and zxxecute.>}vo[ = >}vo[.>}vo[";
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "execute";
      stringArray0[1] = "gnVgY{B.D|6^QW%Xx~M";
      stringArray0[2] = "s`\"hZ";
      stringArray0[3] = "H&J";
      stringArray0[4] = "L)yu qxj] mES";
      stringArray0[5] = "create tablecreate materialized vie~crpate materialized view;8ig,=\"?|^z)d-yq";
      String string0 = SQLUtil.renderColumnNames(stringArray0);
      assertEquals("(execute, gnVgY{B.D|6^QW%Xx~M, s`\"hZ, H&J, L)yu qxj] mES, create tablecreate materialized vie~crpate materialized view;8ig,=\"?|^z)d-yq)", string0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = SQLUtil.normalize("org.apache.derby.impl.store.raw.data.EncryptContainerUndoOperation", false);
      assertEquals("org.apache.derby.impl.store.raw.data.EncryptContainerUndoOperation", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "y^y";
      stringArray0[1] = ">ADD ";
      Integer integer0 = RawTransaction.ABORT;
      Integer.compareUnsigned(750, (-1790089566));
      Integer.divideUnsigned((-1), (-457808449));
      Integer.divideUnsigned(47, (-3));
      Integer integer1 = new Integer(134);
      Integer integer2 = new Integer((-1560));
      Character character0 = new Character('\'');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("3/");
      PrintWriter printWriter0 = mockPrintWriter0.printf("y^y", (Object[]) stringArray0);
      mockPrintWriter0.print(0L);
      mockPrintWriter0.write("Y!H]!02:4[)}", (-3), 0);
      mockPrintWriter0.println(1078.703F);
      mockPrintWriter0.println();
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      assertSame(mockPrintWriter0, printWriter0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.050869917938585
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "nRnCjNl9}q#";
      String string0 = "p4YOV[KZ\\";
      SQLUtil.join("nRnCjNl9}q#", "", stringArray0, "", "p4YOV[KZ", stringArray0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil sQLUtil0 = new SQLUtil();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "$:iFPA4i!9";
      SQLUtil.innerJoin("Unknown constraint type: ", stringArray1, "org.apache.derby.impl.store.raw.log.FileLogger", "only local connections", stringArray1);
      int int0 = 6;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("SELECT * FROM null WHERE  = '' AND  = '' AND nRnCjNl9}q# = 'nRnCjNl9}q#'", defaultDBTable0, 6, "");
      String string1 = "CONSTRAINT ";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "");
      // Undeclared exception!
      try { 
        stringBuilder0.append((char[]) null, 345, 14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "alter teri";
      stringArray0[1] = "mMXC1d0.}kvr8!TA";
      stringArray0[0] = "VeVq";
      stringArray0[3] = "alter teri";
      stringArray0[4] = "alter teri";
      stringArray0[5] = "alter teri";
      stringArray0[6] = "alter teri";
      stringArray0[7] = "alter teri";
      stringArray0[8] = "alter teri";
      DBNonUniqueIndex dBNonUniqueIndex0 = new DBNonUniqueIndex("alter teri", true, defaultDBTable0, stringArray0);
      defaultDBTable0.addIndex(dBNonUniqueIndex0);
      defaultDBTable0.getColumnNames();
      defaultDBTable0.getIndex("v/FMT2]ncb");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "create materialized view");
      String[] stringArray0 = new String[14];
      stringArray0[0] = "deletegreaterorequals";
      stringArray0[1] = "deletegreaterorequals";
      VersionNumber versionNumber0 = VersionNumber.valueOf("deletegreaterorequals");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase(" <=BE ReadyForQuery", "deletegreaterorequals", versionNumber0);
      DBCatalog dBCatalog0 = new DBCatalog("deletegreaterorequals", defaultDatabase0);
      dBCatalog0.setDatabase(defaultDatabase0);
      VersionNumber.valueOf(" ADD ");
      versionNumber0.toString();
      defaultDatabase0.setImportedUKs(false);
      dBCatalog0.getTable("deletegreaterorequals", false);
      Random.setNextRandom(2041);
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Character character0 = new Character('%');
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = SQLUtil.normalize("%JH<YwhT3%6FEwlnF", true);
      assertEquals("% JH < YwhT3 % 6FEwlnF", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = SQLUtil.normalize("nlGV-9JWBg`9I$", false);
      assertEquals("nlGV - 9JWBg ` 9I $", string0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.commentChar(840);
      streamTokenizer0.ordinaryChar(840);
      streamTokenizer0.resetSyntax();
      streamTokenizer0.whitespaceChars((-2047), 1610);
      streamTokenizer0.whitespaceChars((-2047), 987);
      // Undeclared exception!
      try { 
        SQLUtil.normalize((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      StringBuilder stringBuilder0 = new StringBuilder(97);
      stringBuilder0.append("BLOB");
      SQLUtil.normalize(".PN&Y0Ec-+I/FR2X", true);
      boolean boolean0 = new Boolean(true);
      BasicDatabase basicDatabase0 = new BasicDatabase();
      basicDatabase0.getDataDictionary();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FromVTI fromVTI0 = new FromVTI();
      fromVTI0.getProperties();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      ThreadPoolExecutor.DiscardPolicy threadPoolExecutor_DiscardPolicy0 = new ThreadPoolExecutor.DiscardPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = null;
      try {
        scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((-421), threadFactory0, threadPoolExecutor_DiscardPolicy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Random.setNextRandom(4087);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "pKF";
      stringArray0[1] = "pKF";
      stringArray0[2] = "rename";
      stringArray0[3] = "*/";
      stringArray0[4] = "drop tableorg.h2.value.valuelong";
      stringArray0[5] = "j#cJA@o. L";
      stringArray0[6] = "org.apache.derby.impl.services.jce.JCECipherProvider";
      stringArray0[7] = "w;";
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v|0Hfse}[,O!/T}s";
      stringArray0[1] = "v|0Hfse}[,O!/T}s";
      DBSchema dBSchema0 = new DBSchema("nKy@y");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.firebirdsql.gds.impl.wire.XdrOutputStream", dBSchema0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("UJm(Xy :z9Y:qs`_{", dBSchema0);
      defaultDBTable1.getCatalog();
      DBCatalog dBCatalog0 = new DBCatalog("drop table");
      dBCatalog0.getTable("Invalid character data was found.  This is most likely caused by stored data containing characters that are invalid for the character set the database was created in.  The most common example of this is storing 8bit data in a SQL_ASCII database.", false);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.pushBack();
      streamTokenizer0.commentChar(840);
      streamTokenizer0.ordinaryChar(840);
      streamTokenizer0.resetSyntax();
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      SQLUtil.join((String) null, (String) null, stringArray0, stringArray0[0], (String) null, stringArray0);
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ConstantActionActivation constantActionActivation1 = new ConstantActionActivation();
      constantActionActivation1.getContextManager();
      // Undeclared exception!
      try { 
        constantActionActivation1.getTransactionController();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.BaseActivation", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-115);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Integer integer0 = RawTransaction.COMMIT;
      Integer.compareUnsigned(467, (byte) (-115));
      Integer.toUnsignedLong(38);
      Integer.getInteger("uC!qYr^!uq,");
      Integer.min(307, 1073);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "uC!qYr^!uq,");
      Character character0 = new Character('/');
      SQLUtil.renderValue(character0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0235102564045175
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      DefaultDBTable defaultDBTable1 = new DefaultDBTable("-lv");
      String[] stringArray0 = new String[1];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("HH3o|,", true, defaultDBTable1, stringArray0, defaultDBTable1, stringArray0);
      dBForeignKeyConstraint0.toString();
      dBForeignKeyConstraint0.setTable(defaultDBTable1);
      Integer integer0 = RawTransaction.COMMIT;
      DBForeignKeyConstraint dBForeignKeyConstraint1 = defaultDBTable1.getForeignKeyConstraint(stringArray0);
      dBForeignKeyConstraint1.setName("?fA{eeH");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.330347924447853
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = "x~vi8!`3px3IAvlLz";
      String string1 = "8&<>\\a@#51U;^qW\"";
      SQLUtil.mutatesDataOrStructure("8&<>a@#51U;^qW\"");
      SQLUtil.mutatesStructure("x~vi8!`3px3IAvlLz");
      String string2 = "getCurrentSchemaName";
      String string3 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Random.setNextRandom(4087);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "pKF";
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("pKF", false);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      Character character0 = Character.valueOf('=');
      columnDescriptorList0.add((Object) character0);
      ArrayList<DBColumn> arrayList0 = new ArrayList<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) arrayList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Vector<DBSequence> vector0 = new Vector<DBSequence>();
      Vector<DBColumn> vector1 = new Vector<DBColumn>();
      vector1.listIterator();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("'");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition(" join ", stringBuilder0);
      stringBuilder1.append("'");
      StringBuilder stringBuilder2 = new StringBuilder();
      stringBuilder1.append(true);
      // Undeclared exception!
      try { 
        stringBuilder1.deleteCharAt(130);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 130
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.6931505235143378
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("tZIN0\"AO{Yb9a[P");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[1] = "tZIN0\"AO{Yb9a[P";
      stringArray0[2] = "";
      String string0 = SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      assertEquals("SELECT * FROM null WHERE null = null AND tZIN0\"AO{Yb9a[P = 'tZIN0\"AO{Yb9a[P' AND  = ''", string0);
      
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) dBSchema0;
      objectArray0[1] = (Object) defaultDBTable0;
      objectArray0[2] = (Object) defaultDBTable0;
      objectArray0[3] = (Object) defaultDBTable0;
      objectArray0[4] = (Object) dBSchema0;
      objectArray0[5] = (Object) "tZIN0\"AO{Yb9a[P";
      objectArray0[6] = (Object) "tZIN0\"AO{Yb9a[P";
      String string1 = SQLUtil.renderWhereClause(stringArray0, objectArray0);
      Object object0 = new Object();
      String string2 = SQLUtil.substituteMarkers("", "tZIN0\"AO{Yb9a[P", object0);
      assertFalse(string2.equals((Object)string1));
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = SQLUtil.substituteMarkers(" (", "drop tablecreate materialized vie~crpate materialized view;8ig,=\"?|^z)d-yq", " (");
      assertEquals(" (", string0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      int int0 = 840;
      streamTokenizer0.pushBack();
      streamTokenizer0.commentChar(840);
      streamTokenizer0.ordinaryChar(840);
      streamTokenizer0.resetSyntax();
      Random.setNextRandom((-219279897));
      System.setCurrentTimeMillis(840);
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("create unique indexgreaterorequals");
      SessionRemote sessionRemote0 = new SessionRemote();
      ValueLob valueLob0 = ValueLob.createClob(stringReader0, 0L, sessionRemote0);
      Reader reader0 = valueLob0.getReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.commentChar(2);
      streamTokenizer0.ordinaryChar(20);
      streamTokenizer0.wordChars(10, 2801);
      streamTokenizer0.resetSyntax();
      Object[] objectArray0 = SQLUtil.parseColumnTypeAndSize("executegreaterorequals");
      assertEquals(1, objectArray0.length);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(769);
      char[] charArray0 = new char[6];
      charArray0[0] = 'O';
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("drop index");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec0 = NameSpec.NEVER;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
