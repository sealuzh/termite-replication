/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 17:47:43 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";.]hjI?Qk\";FPiR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[3];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory(1);
      connectionFactories0.addQueueConnectionFactory(1, (QueueConnectionFactory) null);
      try { 
        connectionFactories0.getXAQueueConnectionFactory((int) (byte)95);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[7] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[8] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray1 = new XATopicConnectionFactory[2];
      connectionFactories0.getXATopicConnectionFactory(0);
      xATopicConnectionFactoryArray1[0] = null;
      xATopicConnectionFactoryArray1[1] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray1);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-90);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)125;
      byteArray0[5] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ignoring ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b<w<");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[3];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactoryArray0[1] = connectionFactory0;
      connectionFactoryArray0[2] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      assertNull(queueConnectionFactory0.getName());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_0.internalEntityDecl("", "");
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      defaultHandler2_3.internalEntityDecl("for[m%", (String) null);
      defaultHandler2_3.startElement("", "", "", attributesImpl0);
      defaultHandler2_1.elementDecl("for[m%", "");
      defaultHandler2_0.startDocument();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[8];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory(1);
      assertEquals(8, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("RC3l8mk");
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      StringReader stringReader0 = new StringReader("RC3l8mk");
      connectionFactories0.setXATopicConnectionFactory(4, xATopicConnectionFactory0);
      assertEquals(7, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("%bh*gG");
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory1;
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory2;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[8] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      boolean boolean0 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory1);
      assertEquals(8, connectionFactories0.getXATopicConnectionFactoryCount());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.println(6637);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6637);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      PrintWriter printWriter0 = mockPrintWriter1.append('9');
      mockPrintWriter1.print('9');
      printWriter0.println();
      mockPrintWriter1.println((long) '9');
      mockPrintWriter0.print('9');
      mockPrintWriter0.write(6637);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      printWriter0.println((Object) printWriter0);
      mockPrintWriter0.print(6637);
      byteArrayOutputStream0.write(6637);
      char[] charArray0 = new char[16];
      pipedOutputStream0.flush();
      charArray0[15] = '\u0000';
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '\u0000');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.println((float) 6637);
      mockPrintWriter3.print((double) 6637);
      mockPrintWriter3.print(false);
      mockPrintWriter3.write(6637);
      mockPrintWriter3.print((double) '\u0000');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      XAConnectionFactory xAConnectionFactory1 = connectionFactories0.getXAConnectionFactory(0);
      assertSame(xAConnectionFactory1, xAConnectionFactory0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.println(6642);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6642);
      mockPrintWriter1.checkError();
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.println();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      mockPrintWriter0.println((Object) null);
      mockPrintWriter0.print(6642);
      byteArrayOutputStream0.write(6642);
      char[] charArray0 = new char[21];
      charArray0[16] = '\u0000';
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '\u0000');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[13];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory(1);
      assertEquals(13, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.println(6637);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6637);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      PrintWriter printWriter0 = mockPrintWriter1.append('9');
      mockPrintWriter1.print('9');
      mockPrintWriter1.println((long) '9');
      printWriter0.print('9');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      printWriter0.println((Object) printWriter0);
      mockPrintWriter0.print(6637);
      byteArrayOutputStream0.write(6637);
      char[] charArray0 = new char[16];
      pipedOutputStream0.flush();
      charArray0[1] = '9';
      charArray0[15] = '9';
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '9');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.println((float) 6637);
      mockPrintWriter3.print((double) 6637);
      mockPrintWriter3.println("~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3");
      mockPrintWriter3.print(false);
      mockPrintWriter3.write(6637);
      mockPrintWriter3.print((double) '9');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      assertEquals(7, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[2];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      connectionFactories0.enumerateXATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[1] = topicConnectionFactory1;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      try { 
        connectionFactories0.marshal((Writer) stringWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.getTopicConnectionFactoryCount();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        connectionFactories0.getTopicConnectionFactory(9);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 9, Size: 9
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      defaultHandler2_3.internalEntityDecl("for[m%", (String) null);
      defaultHandler2_3.startElement("", "", "", attributesImpl0);
      defaultHandler2_1.elementDecl("for[m%", "");
      defaultHandler2_0.startDocument();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[8];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(8, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^3{T1Rt0`L}'!.:jjk");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<w");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "h0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[9];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      assertEquals(9, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactory0.setName(")h");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray1 = new XATopicConnectionFactory[8];
      xATopicConnectionFactoryArray1[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[2] = xATopicConnectionFactory0;
      xATopicConnectionFactory0.setName(")h");
      xATopicConnectionFactoryArray1[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[6] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray1[7] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray1);
      connectionFactories0.getXATopicConnectionFactoryCount();
      try { 
        connectionFactories0.getXATopicConnectionFactory(2328);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      PipedInputStream pipedInputStream0 = new PipedInputStream(6594);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(6594);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      mockPrintWriter1.close();
      mockPrintWriter1.write("Do.6iLx");
      mockPrintWriter0.println("Do.6iLx");
      mockPrintWriter1.print("Do.6iLx");
      PrintWriter printWriter0 = mockPrintWriter1.append('>');
      pipedOutputStream0.flush();
      printWriter0.println((long) 6594);
      mockPrintWriter1.print('0');
      mockPrintWriter0.println((Object) mockPrintWriter1);
      mockPrintWriter0.print(196);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("Do.6iLx");
      byteArrayOutputStream0.write(6594);
      mockPrintWriter1.print(0.0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.write(196);
      mockPrintWriter3.println((float) 6594);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[1];
      stringWriter0.write(charArray0);
      stringWriter1.close();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[2];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[7] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[8] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray1 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory1 = connectionFactories0.getXATopicConnectionFactory(0);
      xATopicConnectionFactoryArray1[0] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray1);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer0.codePoints();
      charBuffer0.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = CharBuffer.allocate(0);
      CharBuffer charBuffer5 = charBuffer3.put(charBuffer0);
      charBuffer2.clear();
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      CharBuffer charBuffer7 = CharBuffer.allocate(0);
      charBuffer7.clear();
      CharBuffer charBuffer8 = CharBuffer.allocate(0);
      CharBuffer charBuffer9 = CharBuffer.allocate(15);
      char[] charArray0 = new char[7];
      charArray0[5] = '`';
      charArray0[5] = '\u0000';
      CharBuffer.allocate('`');
      CharBuffer charBuffer10 = charBuffer9.append((CharSequence) charBuffer8);
      charBuffer4.codePoints();
      charBuffer6.order();
      charBuffer8.duplicate();
      charBuffer4.codePoints();
      charBuffer6.chars();
      CharBuffer charBuffer11 = CharBuffer.allocate('\u0000');
      charBuffer10.codePoints();
      charBuffer5.mark();
      charBuffer11.asReadOnlyBuffer();
      charBuffer4.codePoints();
      CharBuffer.allocate(4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_1.processingInstruction("un2ble to4dd \"", ">8#>'J~yNzbEn)ugK");
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.internalEntityDecl("text/plai%", (String) null);
      defaultHandler2_3.processingInstruction("text/plai%", "Es36}}Kb~");
      defaultHandler2_3.getExternalSubset("@9?3Gmugrq\"&i=cn|P", (String) null);
      char[] charArray0 = new char[15];
      defaultHandler2_3.endDTD();
      defaultHandler2_0.endDocument();
      defaultHandler2_1.characters(charArray0, 24, '\u0000');
      defaultHandler2_0.endPrefixMapping((String) null);
      defaultHandler2_1.endCDATA();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_1.getExternalSubset("text/plai%", "text/plai%");
      defaultHandler2_1.endDocument();
      defaultHandler2_4.endPrefixMapping("un2ble to4dd \"");
      defaultHandler2_4.getExternalSubset((String) null, "text/plai%");
      defaultHandler2_0.getExternalSubset("Es36}}Kb~", "text/plai%");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_1.endCDATA();
      defaultHandler2_2.getExternalSubset("un2ble to4dd \"", (String) null);
      defaultHandler2_5.processingInstruction(">8#>'J~yNzbEn)ugK", ">8#>'J~yNzbEn)ugK");
      defaultHandler2_5.attributeDecl("text/plai%", ">8#>'J~yNzbEn)ugK", "Es36}}Kb~", ")#avNK!emSy!:[sUCBL", "text/plai%");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactoriesDescriptor$6");
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 6603;
      CharBuffer.allocate(4);
      try { 
        connectionFactories0.addXATopicConnectionFactory(4, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 4, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)95);
      charBuffer0.append((CharSequence) "m{!w&[RNBrxV'P");
      CharBuffer charBuffer1 = CharBuffer.allocate(2523);
      charBuffer0.chars();
      charBuffer1.flip();
      charBuffer1.chars();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((-1570), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("NW\"2W.)e5y&{)E*e:", "ZRoSEO", "ZRoSEO", 0);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("NW\"2W.)e5y&{)E*e:", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "HoB+ yvBg!<Z^", 0);
      stackTraceElementArray0[1] = stackTraceElement0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StackTraceElement stackTraceElement2 = new StackTraceElement("ZRoSEO", "ZRoSEO", (String) null, 0);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("NW\"2W.)e5y&{)E*e:", "ZRoSEO", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", 6601);
      stackTraceElementArray0[3] = stackTraceElement3;
      connectionFactories0.getConnectionFactoryCount();
      StackTraceElement stackTraceElement4 = null;
      try {
        stackTraceElement4 = new StackTraceElement((String) null, "NW\"2W.)e5y&{)E*e:", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.rewind();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.rewind();
      charBuffer0.flip();
      charBuffer1.rewind();
      CharBuffer.allocate(0);
      char[] charArray0 = new char[18];
      charArray0[3] = '\u0000';
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charBuffer3.clear();
      charBuffer1.clear();
      CharBuffer charBuffer4 = CharBuffer.allocate(15);
      charBuffer4.put(charBuffer0);
      CharBuffer charBuffer5 = CharBuffer.allocate(0);
      charBuffer5.clear();
      CharBuffer charBuffer6 = charBuffer4.put(0, '$');
      charBuffer6.codePoints();
      charBuffer0.chars();
      CharBuffer charBuffer7 = CharBuffer.allocate(15);
      CharBuffer charBuffer8 = charBuffer7.put(0, '&');
      charBuffer2.codePoints();
      char[] charArray1 = new char[1];
      CharBuffer.wrap(charArray1);
      charBuffer4.rewind();
      charBuffer7.asReadOnlyBuffer();
      charBuffer8.codePoints();
      CharBuffer.allocate('&');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      CharBuffer.allocate(4);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      assertFalse(xATopicConnectionFactory1.equals((Object)xATopicConnectionFactory0));
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ignoring ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b<w<");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ignoring ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      connectionFactories0.getConnectionFactory();
      connectionFactories0.getConnectionFactory(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "5");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}t>Sn");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      String string0 = "F;.<{W}Zp%w.s\"slv";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y5%g8ZrZ<");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(11, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      CharBuffer charBuffer0 = CharBuffer.allocate(6603);
      PipedInputStream pipedInputStream0 = new PipedInputStream(6603);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(6603);
      charBuffer0.clear();
      byteArrayOutputStream0.reset();
      byteArrayOutputStream0.close();
      StackTraceElement stackTraceElement0 = new StackTraceElement("4kISqlpKCsp\"DR3s:C ", "4kISqlpKCsp\"DR3s:C ", "}uGtHj!Y@EmCKF", 1);
      StackTraceElement stackTraceElement1 = new StackTraceElement("V(uly7@*2OjOI>l", "V(uly7@*2OjOI>l", "seOv5(n{", 1);
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "4kISqlpKCsp\"DR3s:C ", (-1345));
      StackTraceElement stackTraceElement3 = new StackTraceElement("u6a", "4kISqlpKCsp\"DR3s:C ", "u6a", 159);
      assertFalse(stackTraceElement3.equals((Object)stackTraceElement0));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(6594);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(6594);
      CharBuffer charBuffer0 = CharBuffer.allocate(6594);
      PipedInputStream pipedInputStream1 = new PipedInputStream(6594);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream1 = new ByteArrayOutputStream(6594);
      charBuffer0.clear();
      byteArrayOutputStream1.reset();
      byteArrayOutputStream0.close();
      charBuffer0.chars();
      CharBuffer.allocate(6594);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(6594, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      mockPrintWriter1.close();
      mockPrintWriter1.write("~cUW^9BI\"!ufNM5sr");
      mockPrintWriter0.println((String) null);
      mockPrintWriter1.print("~cUW^9BI\"!ufNM5sr");
      char[] charArray0 = new char[9];
      charArray0[3] = '\u0000';
      charArray0[2] = '\u0000';
      charArray0[2] = '\u0000';
      pipedOutputStream0.flush();
      mockPrintWriter1.println((float) 6594);
      mockPrintWriter1.print('\u0000');
      mockPrintWriter0.println((Object) mockPrintWriter1);
      mockPrintWriter0.print((int) '\u0000');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("~cUW^9BI\"!ufNM5sr");
      byteArrayOutputStream0.write(6594);
      mockPrintWriter1.print((-4438.7021877068));
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.write((int) '\u0000');
      mockPrintWriter3.println((float) 6594);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray1 = new char[1];
      stringWriter1.flush();
      stringWriter0.write(charArray1);
      stringWriter1.close();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[6];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactoryCount();
      connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(6, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
      assertEquals(2, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      queueConnectionFactoryArray0[0] = queueConnectionFactory1;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory1;
      queueConnectionFactoryArray0[3] = queueConnectionFactory1;
      queueConnectionFactoryArray0[1] = queueConnectionFactory1;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      queueConnectionFactoryArray0[6] = queueConnectionFactory1;
      queueConnectionFactoryArray0[7] = queueConnectionFactory1;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(1, (QueueConnectionFactory) null);
      assertEquals(8, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("/E(a<#w$%gv4{LQ_,T");
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      StringReader stringReader0 = new StringReader("preserve");
      connectionFactories0.getQueueConnectionFactoryCount();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      assertNull(xAQueueConnectionFactory0.getName());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer charBuffer0 = CharBuffer.allocate(6603);
      StringWriter stringWriter0 = new StringWriter();
      charBuffer0.subSequence(6603, 6603);
      PipedInputStream pipedInputStream0 = new PipedInputStream(6603);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(6603);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter0.println((-30L));
      mockPrintWriter0.print(164);
      byteArrayOutputStream0.write(6603);
      mockPrintWriter1.print(0.0);
      byteArrayOutputStream0.reset();
      mockPrintWriter1.print(0.0);
      stringWriter0.close();
      mockPrintWriter0.write((-1));
      StringReader stringReader0 = new StringReader("<:%(+']s");
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      assertEquals(3, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.read(charBuffer0);
      charBuffer1.clear();
      CharBuffer charBuffer2 = CharBuffer.allocate(15);
      charBuffer2.clear();
      charBuffer0.codePoints();
      charBuffer0.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = CharBuffer.allocate(15);
      CharBuffer charBuffer5 = charBuffer3.put(charBuffer0);
      CharBuffer charBuffer6 = charBuffer4.duplicate();
      charBuffer2.clear();
      CharBuffer.allocate(15);
      CharBuffer charBuffer7 = CharBuffer.allocate(15);
      charBuffer7.clear();
      charBuffer7.clear();
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      CharBuffer charBuffer9 = CharBuffer.allocate(15);
      char[] charArray0 = new char[7];
      charArray0[0] = 'r';
      CharBuffer.allocate('r');
      charBuffer5.asReadOnlyBuffer();
      charBuffer8.codePoints();
      CharBuffer.allocate(15);
      CharBuffer charBuffer10 = CharBuffer.allocate(15);
      charBuffer6.flip();
      CharBuffer charBuffer11 = charBuffer9.append((CharSequence) charBuffer10);
      charBuffer0.clear();
      charBuffer5.asReadOnlyBuffer();
      charBuffer11.chars();
      CharBuffer.allocate(84);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(15, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer0.limit(15);
      charBuffer1.limit(15);
      charBuffer1.rewind();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer1.limit(0);
      charBuffer2.chars();
      charBuffer1.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer.allocate(0);
      CharBuffer charBuffer4 = charBuffer3.put(charBuffer0);
      charBuffer1.limit(0);
      CharBuffer charBuffer5 = CharBuffer.allocate(0);
      CharBuffer.allocate(0);
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      charBuffer6.clear();
      CharBuffer charBuffer7 = CharBuffer.allocate(0);
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      char[] charArray0 = new char[10];
      charArray0[0] = 'L';
      charArray0[1] = '_';
      charArray0[2] = '_';
      charArray0[4] = '/';
      charArray0[5] = '6';
      charArray0[6] = '@';
      charBuffer8.put(charArray0);
      CharBuffer charBuffer9 = CharBuffer.allocate('/');
      charBuffer5.chars();
      charBuffer7.chars();
      CharBuffer charBuffer10 = CharBuffer.allocate(15);
      charBuffer9.chars();
      charBuffer0.flip();
      charBuffer10.asReadOnlyBuffer();
      charBuffer4.chars();
      CharBuffer.allocate(74);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-3130), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_2.startDocument();
      defaultHandler2_4.internalEntityDecl("fb7maW", "fb7maW");
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      defaultHandler2_4.startElement("fb7maW", "fb7maW", "", attributes2Impl0);
      defaultHandler2_2.elementDecl("fb7maW", "fb7maW");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_5.resolveEntity("+KkY", "d?)=/G\rADNT[xEB");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_4.skippedEntity("fb7maW");
      defaultHandler2_6.processingInstruction((String) null, "fb7maW");
      defaultHandler2_6.internalEntityDecl((String) null, "");
      defaultHandler2_6.attributeDecl((String) null, "d?)=/G\rADNT[xEB", "dL1X\"Cm$DoP\"|Dq", "U|j:c#2b(q", "fb7maW");
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setSystemId("+KkY");
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      defaultHandler2_5.elementDecl("", "irZOd)j7Tm%LM");
      defaultHandler2_1.startDocument();
      DefaultHandler defaultHandler1 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement(";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "O", (-9));
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("zTX~rCe=Z0ui", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "O", (-9));
      stackTraceElementArray0[1] = stackTraceElement1;
      stackTraceElementArray0[0] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("zTX~rCe=Z0ui", "cOX~#Hz%a3XH3wR9", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", (-9));
      stackTraceElementArray0[4] = stackTraceElement1;
      StackTraceElement stackTraceElement3 = new StackTraceElement("Q5h3", "QA5!WS059YhFnR{F3", "", (-3849));
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer.allocate(6594);
      PipedInputStream pipedInputStream0 = new PipedInputStream(6594);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(6594);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, true);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      mockPrintWriter1.append('>');
      pipedOutputStream0.flush();
      mockPrintWriter0.println((-30L));
      mockPrintWriter1.print('0');
      mockPrintWriter0.println((Object) mockPrintWriter1);
      mockPrintWriter0.print(164);
      byteArrayOutputStream0.write(6594);
      mockPrintWriter1.print(0.0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter2.print((-1.0));
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "<:%(+']s");
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) "<:%(+']s");
      stringWriter2.close();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory(164, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 164, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(32);
      StringWriter stringWriter1 = stringWriter0.append('~');
      StringWriter stringWriter2 = stringWriter0.append('~');
      stringWriter2.close();
      stringWriter2.append((CharSequence) "");
      StringWriter stringWriter3 = stringWriter0.append('~');
      StringWriter stringWriter4 = stringWriter1.append((CharSequence) "");
      stringWriter4.append('a');
      char[] charArray0 = new char[1];
      charArray0[0] = '~';
      stringWriter1.write(charArray0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter3);
      mockPrintWriter0.write(32);
      mockPrintWriter0.write("TR}Z");
      mockPrintWriter0.print((int) '~');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CharBuffer.allocate(0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "lower");
      try { 
        connectionFactories0.setXATopicConnectionFactory((-25), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharBuffer.allocate(0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)111;
      byteArray0[3] = (byte) (-60);
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "F;.<{W}Zp%w.s\"slv");
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      Marshaller.enableDebug = false;
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      String string0 = ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3";
      Marshaller.enableDebug = true;
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[22];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = (-5);
      String string1 = "HJr=tEbW%3geibR.";
      String string2 = "/:<M+";
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement((String) null, "q+y", "O_V$elete", (-5));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.internalEntityDecl("text/plain", (String) null);
      defaultHandler2_3.processingInstruction("text/plain", "");
      defaultHandler2_3.getExternalSubset("@9?3Gmugrq\"&i=cn|P", (String) null);
      char[] charArray0 = new char[15];
      defaultHandler2_3.endDTD();
      defaultHandler2_0.endDocument();
      defaultHandler2_1.characters(charArray0, 24, '\u0000');
      defaultHandler2_0.endPrefixMapping((String) null);
      defaultHandler2_1.endCDATA();
      defaultHandler2_1.elementDecl("text/plain", "text/plain");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_1.getExternalSubset("text/plain", "text/plain");
      defaultHandler2_1.endDocument();
      defaultHandler2_4.startCDATA();
      defaultHandler2_4.getExternalSubset((String) null, "text/plain");
      defaultHandler2_0.getExternalSubset("", "text/plain");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_1.endCDATA();
      defaultHandler2_5.processingInstruction(">8#>'J~yNzbEn)ugK", ">8#>'J~yNzbEn)ugK");
      defaultHandler2_5.attributeDecl("text/plain", ">8#>'J~yNzbEn)ugK", "", ")#avN4K!emS5!:[sUCBL", "text/plain");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory((-514), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -514, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer0.codePoints();
      charBuffer0.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = CharBuffer.allocate(0);
      CharBuffer charBuffer5 = charBuffer3.put(charBuffer0);
      charBuffer2.clear();
      CharBuffer.allocate(0);
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      charBuffer6.clear();
      charBuffer6.clear();
      CharBuffer.allocate(0);
      CharBuffer charBuffer7 = CharBuffer.allocate(15);
      char[] charArray0 = new char[7];
      charArray0[0] = 'r';
      charBuffer7.put("");
      CharBuffer charBuffer8 = charBuffer5.asReadOnlyBuffer();
      charBuffer4.chars();
      CharBuffer.allocate(0);
      CharBuffer charBuffer9 = CharBuffer.wrap(charArray0);
      charBuffer9.clear();
      charBuffer7.append((CharSequence) charBuffer9);
      charBuffer3.clear();
      CharBuffer.allocate(15);
      CharBuffer charBuffer10 = CharBuffer.wrap((CharSequence) charBuffer8);
      charBuffer10.chars();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory((-1), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer0.codePoints();
      charBuffer0.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = CharBuffer.allocate(0);
      CharBuffer charBuffer5 = charBuffer3.put(charBuffer0);
      charBuffer2.clear();
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      CharBuffer charBuffer7 = CharBuffer.allocate(0);
      charBuffer7.clear();
      CharBuffer charBuffer8 = CharBuffer.allocate(0);
      CharBuffer charBuffer9 = CharBuffer.allocate(15);
      char[] charArray0 = new char[7];
      charArray0[5] = '`';
      charArray0[5] = '\u0000';
      CharBuffer.allocate('`');
      CharBuffer charBuffer10 = charBuffer9.append((CharSequence) charBuffer8);
      charBuffer4.codePoints();
      charBuffer6.order();
      charBuffer8.duplicate();
      charBuffer4.codePoints();
      charBuffer6.chars();
      CharBuffer charBuffer11 = CharBuffer.allocate('\u0000');
      charBuffer10.codePoints();
      charBuffer5.mark();
      charBuffer11.asReadOnlyBuffer();
      charBuffer4.codePoints();
      CharBuffer.allocate(4);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = "\\~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3";
      Marshaller.enableDebug = false;
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = 0;
      String string1 = "ZR0oSEO";
      connectionFactories0.isValid();
      String string2 = "M";
      connectionFactories0.addTopicConnectionFactory(0, (TopicConnectionFactory) null);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = null;
      try {
        stackTraceElement0 = new StackTraceElement((String) null, "\"RoiE", "dVelete", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactory0.setName(")h");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray1 = new XATopicConnectionFactory[8];
      xATopicConnectionFactoryArray1[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[4] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[5] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray1[6] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeConnectionFactory((ConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      try { 
        connectionFactories0.getQueueConnectionFactory(216);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      queueConnectionFactoryArray0[0] = queueConnectionFactory1;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactoryArray0[3] = queueConnectionFactory1;
      queueConnectionFactoryArray0[1] = queueConnectionFactory1;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      queueConnectionFactoryArray0[6] = queueConnectionFactory1;
      queueConnectionFactoryArray0[7] = queueConnectionFactory1;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      try { 
        connectionFactories0.setQueueConnectionFactory((-1), queueConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer2.chars();
      charBuffer1.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer.allocate(0);
      CharBuffer charBuffer4 = charBuffer3.put(charBuffer0);
      charBuffer2.mark();
      CharBuffer.allocate(0);
      CharBuffer charBuffer5 = CharBuffer.allocate(0);
      charBuffer5.clear();
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      CharBuffer charBuffer7 = CharBuffer.allocate(15);
      charBuffer7.append((CharSequence) charBuffer6);
      charBuffer7.chars();
      charBuffer0.chars();
      CharBuffer.allocate(15);
      charBuffer0.chars();
      charBuffer4.chars();
      charBuffer3.flip();
      charBuffer1.asReadOnlyBuffer();
      charBuffer5.chars();
      CharBuffer.allocate(74);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-1479));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("true", "", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", 0, 0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("delete", "true", "true", 0);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "HoB+ yvBg!<Z^", 0);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("true", "true", (String) null, 0);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement(",+V#=$b[F+(NK", ")x$y", "-+}$(3", 0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(4096, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer2.chars();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = CharBuffer.allocate(0);
      CharBuffer charBuffer5 = charBuffer3.put(charBuffer0);
      charBuffer2.flip();
      CharBuffer.allocate(0);
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      charBuffer6.clear();
      CharBuffer charBuffer7 = CharBuffer.allocate(15);
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      charBuffer8.chars();
      charBuffer0.chars();
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = 'g';
      charArray0[2] = 'u';
      charArray0[3] = 'j';
      charArray0[4] = '.';
      CharBuffer.wrap(charArray0);
      CharBuffer.allocate(15);
      charBuffer4.chars();
      charBuffer5.flip();
      charBuffer7.chars();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer.allocate(7);
      CharBuffer.allocate(6603);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      StringReader stringReader0 = new StringReader("~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.setConnectionFactory((-635), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-90);
      byteArray0[2] = (byte)61;
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)125;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[5] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ignoring ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b<w<");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/rtH}0T{*'?V6M#6GT");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";.]hjI?Qk\";FPiR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((int) (byte)95, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";.]hjI?Qk\";FPiR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(2, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addConnectionFactory(47, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 47, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(6579);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.println(6579);
      mockPrintWriter0.close();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println(false);
      mockPrintWriter0.print(false);
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6579);
      byteArrayOutputStream0.flush();
      mockPrintWriter1.println((long) '9');
      mockPrintWriter0.write("fEVxm<(/gCMF#[;v#5W");
      mockPrintWriter0.print('9');
      mockPrintWriter2.append('=');
      byteArrayOutputStream0.flush();
      mockPrintWriter0.print("<:%(+']s");
      mockPrintWriter0.write("<:%(+']s");
      mockPrintWriter2.println((Object) mockPrintWriter2);
      mockPrintWriter0.print(164);
      byteArrayOutputStream0.write(6579);
      char[] charArray0 = new char[4];
      charArray0[1] = '9';
      charArray0[1] = '9';
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '9');
      StringWriter stringWriter0 = new StringWriter('\u0000');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_2.startDTD("", "o", "qTue If[yE");
      MockException mockException0 = new MockException("t", (Throwable) null);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[0];
      mockException0.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException0 = new SAXParseException("", ":AHn5?mbJ", ":AHn5?mbJ", 105, 64);
      defaultHandler2_2.warning(sAXParseException0);
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      char[] charArray0 = new char[1];
      charArray0[0] = 'Y';
      StackTraceElement stackTraceElement0 = new StackTraceElement("qTue If[yE", "ccF*hM0RtF", "+(?aOI37b}}{#g];", 1380);
      StackTraceElement stackTraceElement1 = new StackTraceElement("conf.noDefaultConfigurationFile", "ccF*hM0RtF", "-[?65cg", 6601);
      StackTraceElement stackTraceElement2 = new StackTraceElement("+(?aOI37b}}{#g];", "KD", "org.exolab.castor.xml.util.ContainerElement", 416);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(1012, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1012, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("Ad[)=SwD/!Jf3");
      stringReader0.ready();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(1878, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";.]hjI?Qk\";FPiR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxV'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";.]hjI?Qk\";FPiR");
      CharBuffer.wrap((CharSequence) ";.]hjI?Qk\";FPiR");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer2.chars();
      charBuffer1.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = charBuffer3.put(charBuffer0);
      charBuffer2.mark();
      CharBuffer.allocate(0);
      CharBuffer charBuffer5 = CharBuffer.allocate(0);
      charBuffer5.clear();
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      CharBuffer charBuffer7 = CharBuffer.allocate(15);
      charBuffer7.append((CharSequence) charBuffer6);
      charBuffer7.chars();
      charBuffer0.chars();
      charBuffer0.chars();
      charBuffer4.mark();
      charBuffer4.asReadOnlyBuffer();
      charBuffer2.chars();
      CharBuffer.allocate(74);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[22];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement(";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "", (-9));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("/7*AMR", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "", (-9));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("cOX~xHz%a3XH3(R9", "cOX~xHz%a3XH3(R9", (String) null, (-9));
      stackTraceElementArray0[0] = stackTraceElement1;
      StackTraceElement stackTraceElement3 = new StackTraceElement("/7*AMR", "cOX~xHz%a3XH3(R9", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", 6601);
      stackTraceElementArray0[4] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = null;
      try {
        stackTraceElement4 = new StackTraceElement((String) null, "/7*AMR", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", (-9));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException(mockThrowable0);
      SAXParseException sAXParseException0 = new SAXParseException("OY=)#G.8", "[not available]", "[not available]", 1, (-369), mockException0);
      SAXParseException sAXParseException1 = new SAXParseException("OY=)#G.8", (Locator) null, sAXParseException0);
      defaultHandler2_4.warning(sAXParseException1);
      defaultHandler2_4.endCDATA();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      attributesImpl0.setAttributes(attributesImpl1);
      defaultHandler2_4.internalEntityDecl("format", (String) null);
      defaultHandler2_4.startElement("", "", "", attributesImpl0);
      defaultHandler2_2.elementDecl("format", "");
      defaultHandler2_0.startDocument();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_5.resolveEntity("", "d?)=/G\rADNT/xEc");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_3.endCDATA();
      defaultHandler2_5.elementDecl("", "d?)=/G\rADNT/xEc");
      SAXParseException sAXParseException2 = new SAXParseException((String) null, (String) null, "", 3421, (-1596), (Exception) null);
      DefaultHandler defaultHandler1 = new DefaultHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      assertEquals(0, queueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer.allocate(6603);
      SAXParseException sAXParseException0 = new SAXParseException("", "WJfa ^yd;13@D^e>#eO", "", 6603, 1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("true", "\"", "WJfa ^yd;13@D^e>#eO", 6603);
      StackTraceElement stackTraceElement1 = new StackTraceElement(":", "", "", 1);
      StackTraceElement stackTraceElement2 = new StackTraceElement("WJfa ^yd;13@D^e>#eO", "", "WJfa ^yd;13@D^e>#eO", (-1));
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "", (String) null, 0);
      StackTraceElement stackTraceElement4 = new StackTraceElement("", ":", "", (-1));
      try { 
        connectionFactories0.getXAQueueConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer.allocate(6603);
      SAXParseException sAXParseException0 = new SAXParseException("", "WJfa ^yd;13@D^e>#eO", "", 6603, 1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("true", "=+", "WJfa ^yd;13@D^e>#eO", 6603);
      StackTraceElement stackTraceElement1 = new StackTraceElement(":", "", "", 1);
      StackTraceElement stackTraceElement2 = new StackTraceElement("WJfa ^yd;13@D^e>#eO", "", "WJfa ^yd;13@D^e>#eO", (-1));
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "", (String) null, 0);
      StackTraceElement stackTraceElement4 = new StackTraceElement("", ":", "", (-1));
      try { 
        connectionFactories0.getXAQueueConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_1.processingInstruction("", ">8w>'JyTzbEn)fgK");
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.internalEntityDecl("text/plain", (String) null);
      defaultHandler2_3.processingInstruction("text/plain", "Es3%M}}hb~");
      char[] charArray0 = new char[15];
      defaultHandler2_3.endDTD();
      defaultHandler2_1.characters(charArray0, 24, '\u0000');
      defaultHandler2_0.endPrefixMapping((String) null);
      defaultHandler2_1.elementDecl("text/plain", "text/plain");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_1.getExternalSubset("text/plain", "text/plain");
      defaultHandler2_4.endDocument();
      defaultHandler2_4.startCDATA();
      defaultHandler2_4.endPrefixMapping("d?)=/Y/rADQT/x}nc");
      defaultHandler2_4.getExternalSubset((String) null, "d?)=/Y/rADQT/x}nc");
      defaultHandler2_0.getExternalSubset("Es3%M}}hb~", "text/plain");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_1.endCDATA();
      defaultHandler2_3.resolveEntity("d?)=/Y/rADQT/x}nc", "Es3%M}}hb~");
      defaultHandler2_5.unparsedEntityDecl("d?)=/Y/rADQT/x}nc", (String) null, "d?)=/Y/rADQT/x}nc", (String) null);
      defaultHandler2_5.processingInstruction((String) null, ">8w>'JyTzbEn)fgK");
      defaultHandler2_5.attributeDecl("text/plain", "d?)=/Y/rADQT/x}nc", "Es3%M}}hb~", ")#avN4K!emS5!:[sUCBL", "text/plain");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(18);
      CharBuffer charBuffer1 = CharBuffer.allocate(18);
      charBuffer0.mark();
      charBuffer0.rewind();
      charBuffer1.flip();
      CharBuffer charBuffer2 = CharBuffer.allocate(18);
      charBuffer0.flip();
      charBuffer0.chars();
      charBuffer2.flip();
      CharBuffer charBuffer3 = CharBuffer.allocate(18);
      CharBuffer.allocate(0);
      charBuffer0.asReadOnlyBuffer();
      CharBuffer charBuffer4 = charBuffer3.put(charBuffer0);
      charBuffer1.flip();
      CharBuffer charBuffer5 = CharBuffer.allocate(0);
      CharBuffer.allocate(0);
      CharBuffer.allocate(0);
      charBuffer5.position(0);
      CharBuffer charBuffer6 = CharBuffer.allocate(18);
      CharBuffer charBuffer7 = CharBuffer.allocate(18);
      charBuffer7.put(charBuffer3);
      charBuffer7.chars();
      charBuffer0.chars();
      char[] charArray0 = new char[19];
      charBuffer6.slice();
      charArray0[4] = '.';
      CharBuffer.allocate(18);
      CharBuffer charBuffer8 = charBuffer6.append((CharSequence) charBuffer5);
      CharBuffer.allocate(18);
      charBuffer4.flip();
      charBuffer8.chars();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("delete", "true", "true", 0);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "HoB+ yvBg!<Z^", 0);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("true", "true", (String) null, 0);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement(",+V#=$b[F+(NK", ")x$y", "-+}$(3", 0);
      StackTraceElement stackTraceElement4 = new StackTraceElement("-+}$(3", "", ",+V#=$b[F+(NK", 6601);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      StringReader stringReader0 = new StringReader("");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.clearXATopicConnectionFactory();
      connectionFactories1.clearXAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      assertNull(queueConnectionFactory1.getName());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.rewind();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.rewind();
      charBuffer0.flip();
      charBuffer1.rewind();
      CharBuffer.allocate(0);
      char[] charArray0 = new char[18];
      charArray0[3] = '\u0000';
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charBuffer3.clear();
      charBuffer1.clear();
      CharBuffer charBuffer4 = CharBuffer.allocate(15);
      CharBuffer charBuffer5 = charBuffer4.put(charBuffer0);
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      charBuffer6.clear();
      CharBuffer charBuffer7 = charBuffer4.put(0, '$');
      charBuffer7.codePoints();
      charBuffer0.chars();
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      CharBuffer charBuffer9 = charBuffer8.put(0, '&');
      charBuffer2.codePoints();
      char[] charArray1 = new char[1];
      CharBuffer.wrap(charArray1);
      charBuffer4.rewind();
      charBuffer8.asReadOnlyBuffer();
      charBuffer9.codePoints();
      CharBuffer.allocate('&');
      charBuffer5.asReadOnlyBuffer();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.elementDecl("^n|ZTS;r`\"Y6K;/x", (String) null);
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_2.startEntity("LDm$>");
      defaultHandler2_4.endElement((String) null, "unable to add '", "");
      defaultHandler2_4.startDocument();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_2.resolveEntity((String) null, "");
      defaultHandler2_2.resolveEntity("^n|ZTS;r`\"Y6K;/x", "S oNlki6X*");
      defaultHandler2_5.attributeDecl("", "", "+VO'\"^", (String) null, "$|l0ab}sq^\u0002=hGw]2&");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      StringWriter stringWriter0 = new StringWriter(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      charBuffer2.mark();
      CharBuffer.allocate(1087);
      charBuffer1.rewind();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer2);
      StringWriter stringWriter2 = new StringWriter();
      CharBuffer charBuffer4 = charBuffer3.put(0, '$');
      charBuffer0.codePoints();
      charBuffer4.chars();
      charBuffer0.chars();
      CharBuffer charBuffer5 = CharBuffer.allocate(15);
      CharBuffer charBuffer6 = charBuffer5.append((CharSequence) charBuffer3);
      charBuffer5.chars();
      charBuffer6.flip();
      charBuffer5.asReadOnlyBuffer();
      stringWriter0.append((CharSequence) charBuffer5);
      stringWriter1.append((CharSequence) charBuffer6);
      CharBuffer.allocate(74);
      stringWriter1.append((CharSequence) charBuffer1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.getTopicConnectionFactory((-2385));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.println(6642);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6642);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      PrintWriter printWriter0 = mockPrintWriter1.append(';');
      mockPrintWriter1.print(';');
      printWriter0.println();
      mockPrintWriter1.println((long) ';');
      mockPrintWriter0.print(';');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      mockPrintWriter0.println((Object) null);
      mockPrintWriter0.print(6642);
      byteArrayOutputStream0.write(6642);
      char[] charArray0 = new char[28];
      pipedOutputStream0.flush();
      charArray0[3] = ';';
      charArray0[15] = '\u0000';
      pipedOutputStream0.write(6642);
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '\u0000');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.println((float) 6642);
      mockPrintWriter3.print((double) 6642);
      mockPrintWriter3.println("<:%(+']s");
      mockPrintWriter3.print(true);
      mockPrintWriter3.write(6642);
      mockPrintWriter3.print((double) '\u0000');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(6642);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_4.internalEntityDecl("fb7maW", "fb7maW");
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributesImpl0.getURI((-500));
      defaultHandler2_4.startElement("fb7maW", "fb7maW", "", attributesImpl0);
      defaultHandler2_2.elementDecl("fb7maW", "fb7maW");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_5.resolveEntity("+KkY", "d?)=/G\rADNT[xEB");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_4.skippedEntity("fb7maW");
      defaultHandler2_6.processingInstruction((String) null, "fb7maW");
      defaultHandler2_6.internalEntityDecl((String) null, "");
      defaultHandler2_6.attributeDecl((String) null, "d?)=/G\rADNT[xEB", "dL1X\"Cm$DoP\"|Dq", "U|j:c#2b(q", "fb7maW");
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setSystemId("+KkY");
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      defaultHandler2_5.elementDecl("", "irZOd)j7Tm%LM");
      defaultHandler2_1.startDocument();
      DefaultHandler defaultHandler1 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-5002));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-14));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("ZRoSEO", "ZRoSEO", "' in ClassDescriptor of ", 510);
      StackTraceElement stackTraceElement1 = new StackTraceElement("ZRoSEO", "", "ZRoSEO", 0);
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "A", "delete", 78);
      StackTraceElement stackTraceElement3 = new StackTraceElement("ZRoSEO", "ZRoSEO", "=u>N=qu`@iQkMmaJr_T", 510);
      StackTraceElement stackTraceElement4 = null;
      try {
        stackTraceElement4 = new StackTraceElement((String) null, "org.exolab.castor.sax.features", "N3Hyp(", (-2484));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Declaring class is null
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer1.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      charBuffer2.mark();
      CharBuffer.allocate(0);
      charBuffer1.rewind();
      CharBuffer charBuffer4 = charBuffer3.put(0, '$');
      charBuffer0.codePoints();
      charBuffer4.chars();
      charBuffer0.chars();
      CharBuffer charBuffer5 = CharBuffer.allocate(15);
      charBuffer0.chars();
      charBuffer5.asReadOnlyBuffer();
      charBuffer0.chars();
      CharBuffer.allocate(74);
      charBuffer0.asReadOnlyBuffer();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.println(6642);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6642);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      PrintWriter printWriter0 = mockPrintWriter1.append(';');
      mockPrintWriter1.print(';');
      printWriter0.println();
      mockPrintWriter1.println((long) ';');
      mockPrintWriter0.print(';');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      mockPrintWriter0.println((Object) null);
      mockPrintWriter0.print(6642);
      byteArrayOutputStream0.write(6642);
      char[] charArray0 = new char[21];
      pipedOutputStream0.flush();
      charArray0[3] = ';';
      charArray0[16] = '\u0000';
      pipedOutputStream0.write(6642);
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '\u0000');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.println((float) 6642);
      mockPrintWriter3.print((double) 6642);
      mockPrintWriter3.println("<:%(+']s");
      mockPrintWriter3.print(false);
      mockPrintWriter3.write(6642);
      mockPrintWriter3.print((double) '\u0000');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      mockPrintWriter0.println(6642);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("<:%(+']s");
      mockPrintWriter0.print(6642);
      mockPrintWriter1.write("<:%(+']s");
      mockPrintWriter1.println("<:%(+']s");
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter("<:%(+']s");
      PrintWriter printWriter0 = mockPrintWriter1.append('9');
      mockPrintWriter1.print('9');
      printWriter0.println();
      mockPrintWriter1.println((long) '9');
      mockPrintWriter0.print('9');
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedOutputStream0.connect(pipedInputStream0);
      printWriter0.println((Object) printWriter0);
      mockPrintWriter0.print(6642);
      byteArrayOutputStream0.write(6642);
      char[] charArray0 = new char[28];
      pipedOutputStream0.flush();
      charArray0[1] = '9';
      charArray0[15] = '9';
      mockPrintWriter1.print(charArray0);
      mockPrintWriter1.print((double) '9');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(pipedOutputStream0);
      mockPrintWriter3.println((float) 6642);
      mockPrintWriter3.print((double) 6642);
      mockPrintWriter3.println("~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3");
      mockPrintWriter3.print(true);
      mockPrintWriter3.write(6642);
      mockPrintWriter3.print((double) '9');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      assertEquals(0, xAConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_1.processingInstruction("", ">8>'JyTzbE^n)fgK");
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.internalEntityDecl("Jo<C", (String) null);
      defaultHandler2_3.processingInstruction("Jo<C", "java.lang.Long");
      char[] charArray0 = new char[15];
      defaultHandler2_3.endDTD();
      defaultHandler2_1.characters(charArray0, 9, '\u0000');
      defaultHandler2_1.elementDecl("Jo<C", "Jo<C");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_1.getExternalSubset("Jo<C", "Jo<C");
      defaultHandler2_4.endDocument();
      defaultHandler2_4.endPrefixMapping(">8>'JyTzbE^n)fgK");
      defaultHandler2_4.getExternalSubset((String) null, "java.lang.Long");
      defaultHandler2_0.getExternalSubset("java.lang.Long", "Jo<C");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_1.endCDATA();
      defaultHandler2_5.resolveEntity("V91O}u>e8~<,6:DY;", "", "", "Jo<C");
      defaultHandler2_5.unparsedEntityDecl("Jo<C", (String) null, "Jo<C", (String) null);
      defaultHandler2_5.attributeDecl("Jo<C", ">8>'JyTzbE^n)fgK", "}K`eAQW8V#z", ")#a4K!emS5!:[sUCBL", "Jo<C");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_0.startDocument();
      DefaultHandler defaultHandler1 = new DefaultHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Marshaller.enableDebug = false;
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("delete", "ZRoSEO", "ZRoSEO", 0);
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "HoB+ yvBg!<Z^", 0);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("ZRoSEO", "ZRoSEO", (String) null, 0);
      stackTraceElementArray0[2] = stackTraceElement1;
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      assertEquals(0, connectionFactories1.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "5";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b<w<");
      String string1 = "?>";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)95;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNBrxj'P");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>>--- Begin Except`on ---<<< \n");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G P/Do]H^ebQ3#TZR`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";.]hjI?Qk\";FPiR");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ig}Rdm\"qJ.1FOU&#O");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      defaultHandler2_1.processingInstruction("", ">8#>'JyNzbEn)ugK");
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.internalEntityDecl("text/plain", (String) null);
      defaultHandler2_3.processingInstruction("text/plain", "Es3%M}}hb~");
      char[] charArray0 = new char[15];
      defaultHandler2_3.endDTD();
      defaultHandler2_3.endDocument();
      defaultHandler2_1.characters(charArray0, 24, '\u0000');
      defaultHandler2_0.endPrefixMapping((String) null);
      defaultHandler2_1.endCDATA();
      defaultHandler2_1.elementDecl("text/plain", "text/plain");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_1.getExternalSubset("text/plain", "text/plain");
      defaultHandler2_4.endDocument();
      defaultHandler2_4.startCDATA();
      defaultHandler2_4.endPrefixMapping("");
      defaultHandler2_4.getExternalSubset((String) null, "text/plain");
      defaultHandler2_0.getExternalSubset("Es3%M}}hb~", "text/plain");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_1.endCDATA();
      defaultHandler2_3.resolveEntity("Es3%M}}hb~", "Es3%M}}hb~");
      defaultHandler2_5.processingInstruction((String) null, ">8#>'JyNzbEn)ugK");
      defaultHandler2_5.attributeDecl("text/plain", ">8#>'JyNzbEn)ugK", "Es3%M}}hb~", ")#avN4K!emS5!:[sUCBL", "text/plain");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler2_5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_4.internalEntityDecl("oat", (String) null);
      defaultHandler2_4.processingInstruction("oat", "Uh");
      char[] charArray0 = new char[15];
      defaultHandler2_2.characters(charArray0, 1, '\u0000');
      defaultHandler2_2.elementDecl("oat", "oat");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_6.endDocument();
      defaultHandler2_6.endPrefixMapping(")");
      defaultHandler2_6.getExternalSubset((String) null, "d?)=/Y\rADNT/xnc");
      defaultHandler2_6.resolveEntity("d?)=/Y\rADNT/xnc", "d?)=/Y\rADNT/xnc");
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      defaultHandler2_2.endCDATA();
      defaultHandler2_7.resolveEntity("V91O}u>e8~<,6:DY;", "", "", "oat");
      defaultHandler2_7.unparsedEntityDecl("d?)=/Y\rADNT/xnc", ")", "d?)=/Y\rADNT/xnc", (String) null);
      defaultHandler2_7.attributeDecl("oat", "d?)=/Y\rADNT/xnc", "}K`eAQW8V#z", ")#a4K!emS5!:[sUCBL", "oat");
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      char[] charArray1 = new char[30];
      defaultHandler2_2.skippedEntity((String) null);
      defaultHandler2_4.characters(charArray1, (-3554), 277);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m{!w&[RNxj'P");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "org.exolab.castor.xml.XMLFieldHandler";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.xml.XMLFieldHandler");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kgv$ood8P,");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      String string1 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.loader.MappingLoader");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory((-782));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.internalEntityDecl("Jo<C", "Jo<C");
      defaultHandler2_3.processingInstruction("Jo<C", "java.lang.Long");
      char[] charArray0 = new char[15];
      defaultHandler2_1.characters(charArray0, 9, '\u0000');
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      defaultHandler2_5.setDocumentLocator(locatorImpl1);
      defaultHandler2_1.getExternalSubset("Jo<C", "Jo<C");
      defaultHandler2_5.endDocument();
      defaultHandler2_5.endPrefixMapping("d?)=/Y/rADNT/x}nc");
      defaultHandler2_5.getExternalSubset("Jo<C", "d?)=/Y/rADNT/x}nc");
      defaultHandler2_0.getExternalSubset("java.lang.Long", "Jo<C");
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_1.endCDATA();
      defaultHandler2_6.unparsedEntityDecl("2879y(", "2879y(", "entiti$s", "");
      defaultHandler2_6.resolveEntity("V91O}u>e8~<,6:DY;", "org.exolab.castor.mapping.loader.J1CollectionHandlers$1", "", "Jo<C");
      defaultHandler2_6.unparsedEntityDecl("d?)=/Y/rADNT/x}nc", "Jo<C", "d?)=/Y/rADNT/x}nc", "Jo<C");
      defaultHandler2_6.attributeDecl("Jo<C", "d?)=/Y/rADNT/x}nc", "}K`eAQW8V#z", ")#a4K!elmS5!:[sUCBL", "Jo<C");
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      defaultHandler2_0.startDocument();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      assertEquals(0, connectionFactoryArray0.length);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      StackTraceElement stackTraceElement0 = new StackTraceElement("aD<8ohPvU", "; ", "*j", (-1055));
      StackTraceElement stackTraceElement1 = new StackTraceElement("qS!yiPUFHl/mVD", "", "Argument 'out' is null.", (-1055));
      StackTraceElement stackTraceElement2 = new StackTraceElement("'A@%;@*^QFK^:3", "{WH", "aD<8ohPvU", 83);
      StackTraceElement stackTraceElement3 = new StackTraceElement("]jqCoU", "; ", "", 0);
      StackTraceElement stackTraceElement4 = new StackTraceElement("cOX~xHz%a3XH3(R9", "", "qS!yiPUFHl/mVD", (-508));
      assertEquals("", stackTraceElement4.getMethodName());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.rewind();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.flip();
      charBuffer1.rewind();
      char[] charArray0 = new char[4];
      charArray0[0] = 'k';
      charArray0[2] = 'v';
      charArray0[3] = 'k';
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charBuffer3.clear();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charBuffer2.codePoints();
      charBuffer1.clear();
      CharBuffer charBuffer4 = CharBuffer.allocate(15);
      CharBuffer charBuffer5 = charBuffer4.put(charBuffer0);
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      charBuffer6.clear();
      CharBuffer charBuffer7 = charBuffer4.put(0, '$');
      charBuffer7.chars();
      charBuffer0.chars();
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      charBuffer0.chars();
      charBuffer4.rewind();
      charBuffer8.asReadOnlyBuffer();
      charBuffer1.codePoints();
      CharBuffer.allocate(74);
      charBuffer5.asReadOnlyBuffer();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[15];
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement(";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "", (-9));
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("zTX~rEe=Z0ui", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "", (-9));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("cOX~#Hz%a3XH3wR9", "cOX~#Hz%a3XH3wR9", "zTX~rEe=Z0ui", (-9));
      stackTraceElementArray0[0] = stackTraceElement1;
      StackTraceElement stackTraceElement3 = new StackTraceElement("zTX~rEe=Z0ui", "cOX~#Hz%a3XH3wR9", ";~k\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", 6593);
      stackTraceElementArray0[4] = stackTraceElement1;
      StackTraceElement stackTraceElement4 = new StackTraceElement("Q5h3", "QA5WSr59YhFnR{vF3", "", (-3849));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(6593);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      defaultHandler2_3.elementDecl("^n|ZTS;r`\"Y6K;/x", (String) null);
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_2.startEntity("LD>");
      defaultHandler2_4.endElement((String) null, "unable to add '", "unable to add '");
      defaultHandler2_4.startDocument();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      defaultHandler2_2.resolveEntity((String) null, "p");
      char[] charArray0 = new char[8];
      charArray0[3] = 'X';
      charArray0[4] = '\u0000';
      charArray0[5] = '\\';
      charArray0[6] = 'X';
      charArray0[7] = ' ';
      defaultHandler2_5.ignorableWhitespace(charArray0, 1, '\u0000');
      defaultHandler2_2.resolveEntity("^n|ZTS;r`\"Y6K;/x", "S oNlki6X*");
      defaultHandler2_5.attributeDecl("", "p", "+VO'\"^", (String) null, "$|l0ab}sq^\u0002=hGw]2&");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.mark();
      charBuffer1.position(15);
      charBuffer1.flip();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer2.chars();
      charBuffer1.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      charBuffer3.chars();
      CharBuffer.allocate(0);
      CharBuffer.allocate(0);
      CharBuffer charBuffer4 = CharBuffer.allocate(0);
      charBuffer2.mark();
      CharBuffer.allocate(0);
      CharBuffer.allocate(0);
      charBuffer3.rewind();
      CharBuffer charBuffer5 = CharBuffer.allocate(15);
      charBuffer0.get();
      CharBuffer.allocate(15);
      charBuffer5.chars();
      charBuffer4.chars();
      charBuffer5.chars();
      CharBuffer charBuffer6 = CharBuffer.allocate(15);
      charBuffer0.chars();
      charBuffer0.flip();
      charBuffer6.chars();
      charBuffer6.asReadOnlyBuffer();
      charBuffer6.chars();
      CharBuffer.allocate(79);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = connectionFactories0.getXATopicConnectionFactory();
      assertEquals(0, xATopicConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_3 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_4 = new DefaultHandler2();
      defaultHandler2_4.internalEntityDecl("oat", (String) null);
      defaultHandler2_4.processingInstruction("oat", "oat");
      char[] charArray0 = new char[15];
      defaultHandler2_2.characters(charArray0, 1, '\u0000');
      defaultHandler2_2.elementDecl("oat", "oat");
      DefaultHandler2 defaultHandler2_5 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_6 = new DefaultHandler2();
      defaultHandler2_6.endDocument();
      defaultHandler2_6.endPrefixMapping(")");
      defaultHandler2_6.getExternalSubset((String) null, "d?)=/Y\rADNT/xnc");
      defaultHandler2_6.resolveEntity("d?)=/Y\rADNT/xnc", "d?)=/Y\rADNT/xnc");
      DefaultHandler2 defaultHandler2_7 = new DefaultHandler2();
      defaultHandler2_2.endCDATA();
      defaultHandler2_7.resolveEntity("V91O}u>e8~<,6:DY;", "", "", "oat");
      defaultHandler2_7.attributeDecl("oat", "d?)=/Y\rADNT/xnc", "}K`eAQW8V#z", ")#a4K!emS5!:[sUCBL", "oat");
      DefaultHandler2 defaultHandler2_8 = new DefaultHandler2();
      char[] charArray1 = new char[30];
      defaultHandler2_2.skippedEntity((String) null);
      defaultHandler2_4.characters(charArray1, (-3554), 277);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer2.chars();
      charBuffer1.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer charBuffer4 = CharBuffer.allocate(0);
      CharBuffer charBuffer5 = charBuffer3.put(charBuffer0);
      charBuffer2.mark();
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      CharBuffer.allocate(0);
      charBuffer5.clear();
      CharBuffer charBuffer7 = charBuffer5.put(0, 'E');
      charBuffer4.chars();
      charBuffer3.chars();
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      CharBuffer charBuffer9 = charBuffer0.put(0, '$');
      CharBuffer charBuffer10 = CharBuffer.allocate(29);
      charBuffer10.chars();
      charBuffer6.flip();
      charBuffer7.asReadOnlyBuffer();
      charBuffer9.codePoints();
      CharBuffer.allocate(74);
      charBuffer8.asReadOnlyBuffer();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.position(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.clear();
      charBuffer0.codePoints();
      charBuffer0.clear();
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      CharBuffer.allocate(0);
      CharBuffer charBuffer4 = charBuffer3.put(charBuffer0);
      charBuffer2.clear();
      CharBuffer.allocate(0);
      charBuffer3.flip();
      CharBuffer charBuffer5 = CharBuffer.allocate(0);
      charBuffer5.clear();
      charBuffer5.clear();
      CharBuffer.allocate(0);
      CharBuffer charBuffer6 = CharBuffer.allocate(15);
      char[] charArray0 = new char[2];
      charArray0[0] = 'r';
      charBuffer6.put("");
      CharBuffer charBuffer7 = charBuffer4.asReadOnlyBuffer();
      charBuffer2.codePoints();
      CharBuffer.allocate(0);
      CharBuffer charBuffer8 = CharBuffer.wrap(charArray0);
      charBuffer8.clear();
      charBuffer6.append((CharSequence) charBuffer8);
      charBuffer3.clear();
      CharBuffer.allocate(15);
      CharBuffer charBuffer9 = CharBuffer.wrap((CharSequence) charBuffer7);
      charBuffer9.chars();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(18);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QBSh");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QBSh");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      connectionFactories0.validate();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.683711063822706
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^3{T1Rt0`L}'!.:jjk");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(@grH2VO");
      connectionFactories0.isValid();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(@grH2VO");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ASCII");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~ 0");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = connectionFactories0.isValid();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("true", "", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", 0, 0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("delete", "true", "true", 0);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "~\u00A2\u00A3\u00A5\u00AC\u2014\u2015\u2016\u2026\u203E\u203E\u2225\u222F\u301C\uFF3C\uFF5E\uFFE0\uFFE1\uFFE2\uFFE3", "HoB+ yvBg!<Z^", 0);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("true", "true", (String) null, 0);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement(",+V#=$b[F+(NK", ")x$y", "-+}$(3", 0);
      StackTraceElement stackTraceElement4 = new StackTraceElement("8_qm4L t.R[ol3fLNsb", "", ",+V#=$b[F+(NK", 6601);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      assertEquals(0, topicConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      StringWriter stringWriter0 = new StringWriter(15);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      CharBuffer charBuffer3 = CharBuffer.allocate(15);
      charBuffer0.duplicate();
      CharBuffer.allocate(1087);
      charBuffer1.rewind();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer2);
      StringWriter stringWriter2 = new StringWriter();
      CharBuffer charBuffer4 = charBuffer3.put(0, '$');
      charBuffer0.codePoints();
      charBuffer4.chars();
      charBuffer0.chars();
      CharBuffer charBuffer5 = CharBuffer.allocate(15);
      CharBuffer charBuffer6 = charBuffer5.append((CharSequence) charBuffer3);
      charBuffer5.chars();
      charBuffer6.flip();
      charBuffer5.asReadOnlyBuffer();
      stringWriter0.append((CharSequence) charBuffer5);
      charBuffer5.codePoints();
      stringWriter1.append((CharSequence) charBuffer6);
      CharBuffer.allocate(74);
      stringWriter1.append((CharSequence) charBuffer1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer.allocate(6603);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      stringWriter0.append((CharSequence) charBuffer0);
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      mockPrintWriter0.write(1);
      charBuffer0.put('N');
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) stringWriter0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) mockPrintWriter0;
      objectArray0[3] = (Object) stringWriter0;
      objectArray0[4] = (Object) charBuffer0;
      objectArray0[5] = (Object) stringWriter1;
      objectArray0[6] = (Object) stringWriter1;
      objectArray0[7] = (Object) connectionFactories0;
      mockPrintWriter0.printf("org.exolab.castor.mapping.loader.J1CollectionHandlers$4", objectArray0);
      CharBuffer.allocate(1);
      mockPrintWriter0.append('\'');
      connectionFactories0.marshal((Writer) stringWriter2);
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N)");
      stringReader0.ready();
      stringReader0.ready();
      stringReader0.markSupported();
      char[] charArray0 = new char[3];
      stringReader0.read(charArray0);
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("org.exolab.castor.util.NestedIOException");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      assertNull(xATopicConnectionFactory2.getName());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer1.clear();
      charBuffer1.rewind();
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      charBuffer2.rewind();
      charBuffer1.rewind();
      CharBuffer.allocate(0);
      char[] charArray0 = new char[18];
      charArray0[3] = '\u0000';
      CharBuffer charBuffer3 = CharBuffer.wrap(charArray0);
      charBuffer3.clear();
      charBuffer1.clear();
      CharBuffer charBuffer4 = CharBuffer.allocate(15);
      CharBuffer charBuffer5 = charBuffer4.put(charBuffer0);
      CharBuffer charBuffer6 = CharBuffer.allocate(0);
      charBuffer6.clear();
      CharBuffer charBuffer7 = charBuffer4.put(0, '$');
      charBuffer7.codePoints();
      charBuffer0.chars();
      CharBuffer charBuffer8 = CharBuffer.allocate(15);
      charBuffer8.read(charBuffer6);
      CharBuffer charBuffer9 = charBuffer8.put(0, '&');
      charBuffer2.codePoints();
      CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[18];
      CharBuffer.wrap(charArray1);
      charBuffer4.rewind();
      charBuffer8.asReadOnlyBuffer();
      charBuffer9.codePoints();
      CharBuffer.allocate('&');
      charBuffer5.asReadOnlyBuffer();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(48);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharBuffer charBuffer1 = charBuffer0.asReadOnlyBuffer();
      charBuffer0.rewind();
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer charBuffer2 = CharBuffer.allocate(15);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) charBuffer2);
      StringWriter stringWriter2 = new StringWriter();
      charBuffer2.codePoints();
      charBuffer0.codePoints();
      charBuffer0.chars();
      charBuffer1.order();
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      charArray0[1] = '~';
      charArray0[2] = '&';
      charArray0[3] = 'x';
      charArray0[4] = '/';
      charArray0[5] = '6';
      charArray0[6] = 'u';
      stringWriter1.write(charArray0);
      stringWriter1.append((CharSequence) charBuffer2);
      stringWriter1.append((CharSequence) charBuffer1);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      assertNull(xATopicConnectionFactory0.getName());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y5%g8ZrZ<");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F;.<{W}Zp%w.s\"slv");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory((-1142), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1142, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
