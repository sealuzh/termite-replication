/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 18:29:33 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.net.URI;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player();
      player0.setJoinOK(player0, true);
      System.setCurrentTimeMillis(15000L);
      Player player1 = new Player((short)4919, "", (-1557));
      player0.prev = (Party) player1;
      player0.isJoinOK(player0, false);
      byte[] byteArray0 = player0.pack();
      player1.gangStrength();
      int int0 = Packable.TEXT_MESSAGE;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.readLong();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((String) null, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.930485158288402
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(2147353284, "M]QqSrGZEL7", "M]QqSrGZEL7", (-23551));
      player0.setMoney(3219.0F);
      Player player1 = new Player((short)4919);
      player0.setConnected(true);
      player1.reset(true);
      player0.setJoinOK(player1, false);
      player1.prev = (Party) player0;
      player0.setDead((long) (-23551));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setMoney((-2646.764F));
      player1.next = (Party) player0;
      player0.boss = player1.prev;
      player1.setX(0.0F);
      player0.isJoinOK(player1, true);
      player1.setY(0.1F);
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      player0.getX();
      System.setCurrentTimeMillis(2147353284);
      player1.getX();
      System.setCurrentTimeMillis(15000L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      File file0 = MockFile.createTempFile(">Ypvh@kq%qV.|,G", "!d'I<`4{fmAE:");
      file0.toPath();
      MockFile mockFile0 = new MockFile(file0, "?%a,)-(3=AzNP)4r_z");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "?%a,)-(3=AzNP)4r_z");
      MockFile mockFile1 = new MockFile("1");
      MockFile mockFile2 = new MockFile(">Ypvh@kq%qV.|,G");
      mockFile1.toURI();
      mockFile1.getCanonicalPath();
      MockFile mockFile3 = new MockFile("1");
      URI uRI0 = mockFile3.toURI();
      mockFile2.getAbsolutePath();
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/27_gangup/1");
      MockFile mockFile5 = new MockFile(uRI0);
      mockFile5.mkdir();
      mockFile3.toURL();
      MockFile mockFile6 = new MockFile(file0, " Ex&^r) >x\"");
      MockFile mockFile7 = new MockFile("1", "S%Oi!8m!dg.sv>%P");
      Player player0 = new Player((-1695), "f", 2147340491);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1695), 2147246906);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis((-13L));
      Player player0 = new Player(3707, ")4X[`py", (String) null, 3707);
      player0.prev = null;
      player0.setJoinOK(player0, false);
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player0, false);
      Party party0 = new Party((-1557));
      Party party1 = new Party((-1557));
      System.setCurrentTimeMillis((-13L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(8L);
      Player player0 = new Player(3707, ")4X[`py", (String) null, 3707);
      player0.setJoinOK(player0, true);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(1232L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%/ss{.7a1v}\"-sI");
      System.setCurrentTimeMillis(15000L);
      player0.setMoney(1.0F);
      Player player1 = new Player((short)4919, "", (-1557));
      player0.prev = (Party) player1;
      player1.pack();
      player0.getMoney();
      assertEquals(1.0F, player0.getMoney(), 0.01F);
      
      int int0 = player1.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-2874), "i|M[|3xW3%{PA-", 844);
      Player player1 = new Player(844, "a\"", 844);
      player1.gangStrength();
      player1.pack();
      player1.id = 1;
      player0.add(player1);
      player0.setZ((short)4919);
      player1.prev = (Party) player0;
      player0.add(player1);
      player0.setZ((-1117.4904F));
      System.setCurrentTimeMillis((-472L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      player0.gangStrength();
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player((-4246), (String) null, (-4246));
      player0.setDead((long) (-4246), true);
      player0.getTimeOfDeath();
      Player player1 = new Player(2541, "=nD=OAK", (String) null, (-4246));
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((short)4919);
      // Undeclared exception!
      try { 
        player1.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(1181, "Player.pack(): *** ERROR c** [IO] pack failed! current state is inconsistent: ", "UF!9#,", (-743));
      player0.setMoney((-2518.2754F));
      player0.pack();
      player0.pack();
      float float0 = player0.getMoney();
      assertEquals((-2518.2754F), float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.792904926173455
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player(3709, ")4X[`py", (String) null, 3709);
      Player player1 = new Player(3709, "", 257);
      player0.setJoinOK(player1, true);
      player1.prev = (Party) player0;
      player0.isJoinOK(player1, false);
      player1.setConnected(false);
      System.setCurrentTimeMillis(0L);
      player1.isConnected();
      player0.getStrength();
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1040026700508068
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-752), "", (-752));
      player0.setZ((-752));
      player0.setY((-752));
      player0.getMoney();
      player0.getMoney();
      player0.pack();
      player0.getStrength();
      player0.isConnected();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      player0.getTimeOfDeath();
      player0.isConnected();
      player0.getY();
      player0.getMoney();
      player0.getMoney();
      player0.getTimeOfDeath();
      player0.gangStrength();
      Player player1 = new Player((-717), "", "", 14297);
      player0.isJoinOK(player1, true);
      assertEquals((-752.0F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(3715);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      System.setCurrentTimeMillis(3715);
      player0.isJoinOK(player1, false);
      Party party0 = new Party(3715);
      Party party1 = new Party(856);
      System.setCurrentTimeMillis(14999L);
      System.setCurrentTimeMillis(3715);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(3715);
      player0.boss = null;
      player0.setJoinOK(player0, true);
      player0.next = null;
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player0, false);
      Party party0 = new Party(1);
      Party party1 = new Party(1);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(3707, ")4X[`py", (String) null, 3707);
      player0.prev = null;
      player0.setJoinOK(player0, false);
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player0, false);
      Party party0 = new Party((-1557));
      Party party1 = new Party((-1557));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(5, "lpq)HodzanN-0L", "fCn", 1427, 5);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fCn");
      player0.getX();
      player0.setY(10.0F);
      player0.setConnected(false);
      Player player1 = new Player();
      player1.add(player0);
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis(1135L);
      player1.isConnected();
      player0.getY();
      assertEquals(10.0F, player0.getY(), 0.01F);
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      File file0 = MockFile.createTempFile(">Yph@kqC%qV|,G", "!d'I<`4{fmAE:");
      file0.toPath();
      MockFile mockFile0 = new MockFile("!d'I<`4{fmAE:");
      MockFile mockFile1 = new MockFile("1");
      MockFile mockFile2 = new MockFile("");
      URI uRI0 = mockFile2.toURI();
      mockFile2.deleteOnExit();
      file0.getCanonicalPath();
      MockFile mockFile3 = new MockFile(">Yph@kqC%qV|,G");
      URI uRI1 = mockFile3.toURI();
      MockURI.toURL(uRI1);
      MockFile mockFile4 = new MockFile("mU;;");
      file0.renameTo(mockFile3);
      MockFile mockFile5 = new MockFile("mU;;", "/tmp/>Yph@kqC%qV|,G0!d'I<`4{fmAE:");
      mockFile4.getCanonicalPath();
      MockFile mockFile6 = new MockFile(uRI0);
      file0.getAbsolutePath();
      MockFile mockFile7 = new MockFile(">Yph@kqC%qV|,G");
      mockFile3.mkdirs();
      MockFile mockFile8 = new MockFile(uRI0);
      mockFile2.delete();
      MockFile mockFile9 = new MockFile(":{mRc]Dfg4", ">Yph@kqC%qV|,G");
      mockFile4.toURL();
      mockFile3.mkdirs();
      mockFile5.mkdir();
      MockURI.toURL(uRI0);
      MockFile mockFile10 = new MockFile(mockFile0, "mU;;");
      MockFile mockFile11 = new MockFile("");
      Player player0 = new Player(1908874353, "", 14080);
      byte[] byteArray0 = player0.pack();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 5);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(1, (String) null, (String) null, (-1633));
      player0.setZ(2652.1365F);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)4;
      player0.unpack(byteArray0);
      float float0 = player0.getZ();
      assertEquals(2652.1365F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ona4");
      Player player0 = new Player(951, "Ona4", (String) null, 0);
      player0.getName();
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Party party0 = new Party((-748));
      Player player0 = new Player(2365, (String) null, "", 2365);
      player0.head = party0;
      System.setCurrentTimeMillis(1392409296320L);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertFalse(boolean0);
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Party party0 = new Party((-748));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_V");
      File file0 = MockFile.createTempFile("state.Party", "");
      MockFile mockFile0 = new MockFile(file0, "1");
      MockFile mockFile1 = new MockFile("1", "");
      file0.toURI();
      File file1 = mockFile1.getCanonicalFile();
      file1.setReadable(false, false);
      file1.createNewFile();
      file1.getCanonicalFile();
      MockFile mockFile2 = new MockFile("{h.", "{h.");
      file1.toURL();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile2, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player0 = new Player(2410, "state.Party", "Uy=,l{As7^UB[", 0, 0);
      int int0 = player0.gangStrength();
      assertEquals("state.Party", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      player0.next = null;
      player0.gangStrength();
      player0.id = 1193;
      player0.setDead();
      int int0 = Packable.GAME_STATE;
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-22780), "", "", 433);
      Party party0 = new Party();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(3, "y3!{JJN<`]0?WZ&fo", " aL/}:", (-723), (-723));
      player0.getStrength();
      player0.gangStrength();
      Player player1 = new Player(1, " aL/}:", (-723));
      assertEquals(0L, player1.getTimeOfDeath());
      
      player1.setDead(2188L, true);
      player1.setJoinOK(player0, true);
      int int0 = player1.getPictureId();
      assertEquals((-723), int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      File file0 = MockFile.createTempFile(">Yph@kqC%qV|,G", "!d'I<`4{fmAE:");
      file0.toPath();
      MockFile mockFile0 = new MockFile("!d'I<`4{fmAE:");
      MockFile mockFile1 = new MockFile("1");
      MockFile mockFile2 = new MockFile("");
      URI uRI0 = mockFile2.toURI();
      file0.getCanonicalPath();
      MockFile mockFile3 = new MockFile(">Yph@kqC%qV|,G");
      URI uRI1 = mockFile3.toURI();
      MockURI.toURL(uRI1);
      MockFile mockFile4 = new MockFile("mU;;");
      file0.renameTo(mockFile3);
      MockFile mockFile5 = new MockFile("mU;;", "/tmp/>Yph@kqC%qV|,G0!d'I<`4{fmAE:");
      MockFile mockFile6 = new MockFile(uRI0);
      URI uRI2 = mockFile0.toURI();
      MockFile mockFile7 = new MockFile(">Yph@kqC%qV|,G");
      mockFile3.mkdirs();
      MockFile mockFile8 = new MockFile(uRI2);
      mockFile2.delete();
      MockFile mockFile9 = new MockFile("EwM~", "");
      mockFile9.mkdirs();
      mockFile9.mkdir();
      MockURI.toURL(uRI1);
      MockFile mockFile10 = new MockFile(mockFile8, "mU;;");
      MockFile mockFile11 = new MockFile("");
      Player player0 = new Player(1908874353, "EwM~", 1908874353);
      int int0 = Packable.GAME_STATE;
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = Packable.GAME_STATE;
      int int1 = Packable.GAME_STATE;
      System.setCurrentTimeMillis(30000L);
      Player player0 = new Player(3668, "kU", "", (-1564), 4);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(2983, "", "", (-3232), (-735));
      player0.setDead((long) (-735), false);
      player0.getSubparty();
      player0.getMoney();
      player0.getIP();
      float float0 = player0.getX();
      assertEquals((-735L), player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/{h.0");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Party party0 = new Party((-748));
      File file0 = MockFile.createTempFile("{h.", "");
      MockFile mockFile0 = new MockFile(file0, "{h.");
      mockFile0.getCanonicalFile();
      MockFile mockFile1 = new MockFile(mockFile0, "{h.");
      file0.mkdir();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      Player player0 = new Player(333);
      float float0 = player0.getY();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player333", player0.getName());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player((-5677), "", ")4X[`py", 4);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(2983);
      player0.setDead();
      player0.getZ();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[2] = (byte)1;
      Player player0 = new Player();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.isDead();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      assertFalse(dataInputStream1.equals((Object)dataInputStream0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(15000L);
      Party party0 = new Party(1);
      Party party1 = new Party(1);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      Player player0 = new Player((-2259), "m(J;qi?=;oi<uM=Wm", "m(J;qi?=;oi<uM=Wm", 1, (-2259));
      int int0 = player0.gangStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getPictureId());
      assertEquals((-2259), int0);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(3, "y3!{JJN<`]0?WZ&fo", " aL/}:", (-723), (-723));
      int int0 = player0.getStrength();
      player0.gangBoss();
      int int1 = player0.gangStrength();
      assertEquals((-723), player0.getPictureId());
      assertEquals((-723), int1);
      assertTrue(int1 == int0);
      
      Player player1 = new Player(1);
      int int2 = player1.getPictureId();
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player1", player1.toString());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, int2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(4390, "", (-164));
      MockFile mockFile0 = new MockFile("uH)$[66", "");
      mockFile0.getCanonicalPath();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0D7lT1");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      player0.prev = (Party) player0;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-68);
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte) (-68);
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      System.setCurrentTimeMillis(15000L);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      File file0 = MockFile.createTempFile(">Yph@kqC%qV|,G", "!d'I<`4{fmAE:");
      file0.toPath();
      MockFile mockFile0 = new MockFile("!d'I<`4{fmAE:");
      MockFile mockFile1 = new MockFile("1");
      MockFile mockFile2 = new MockFile("");
      URI uRI0 = mockFile2.toURI();
      mockFile2.deleteOnExit();
      file0.getCanonicalPath();
      MockFile mockFile3 = new MockFile("/tmp/>Yph@kqC%qV|,G0!d'I<`4{fmAE:", "!d'I<`4{fmAE:");
      URI uRI1 = MockURI.parseServerAuthority(uRI0);
      MockURI.toURL(uRI1);
      MockFile mockFile4 = new MockFile("mU;;");
      file0.renameTo(mockFile3);
      MockFile mockFile5 = new MockFile("mU;;", "/tmp/>Yph@kqC%qV|,G0!d'I<`4{fmAE:");
      mockFile4.getCanonicalPath();
      MockFile mockFile6 = new MockFile(uRI0);
      URI uRI2 = mockFile0.toURI();
      file0.getAbsolutePath();
      MockFile mockFile7 = new MockFile(">Yph@kqC%qV|,G");
      mockFile3.mkdirs();
      MockFile mockFile8 = new MockFile(uRI2);
      mockFile2.delete();
      MockURI.toURL(uRI1);
      mockFile3.mkdirs();
      mockFile5.mkdir();
      MockURI.toURL(uRI0);
      MockFile mockFile9 = new MockFile(mockFile0, "mU;;");
      MockFile mockFile10 = new MockFile("");
      Player player0 = new Player(1908874353, "", 14080);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Party party0 = new Party((-748));
      Player player0 = new Player(2456, "", 5);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2456);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player0.pack(dataOutputStream0);
      assertEquals("\u00137\uFFFD\u0000\u0001\u0000\u0005A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      
      int int0 = player0.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player(10, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 3707);
      Player player1 = new Player((short)4919, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 4);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Party party0 = new Party((-748));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_V");
      File file0 = MockFile.createTempFile("state.Party", "");
      MockFile mockFile0 = new MockFile(file0, "1");
      MockFile mockFile1 = new MockFile("1", "");
      URI uRI0 = file0.toURI();
      mockFile1.getCanonicalFile();
      mockFile1.getCanonicalFile();
      MockFile mockFile2 = new MockFile(mockFile1, "1");
      file0.setReadable(false, false);
      file0.mkdir();
      MockFile mockFile3 = new MockFile(uRI0);
      mockFile3.setWritable(true);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile3, false);
      Player player0 = new Player(333);
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = Packable.GAME_STATE;
      int int1 = Packable.GAME_STATE;
      Player player0 = new Player((-2503), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 2309, 1394);
      int int2 = player0.type();
      assertEquals(1394, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2309, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(5, int2);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(1, "", "", 0, (-2387));
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals((-2387), int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player((-700), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-700), (-700));
      player0.pack();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-700), player0.getStrength());
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
      assertEquals((-700), player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = Packable.GAME_STATE;
      int int1 = Packable.GAME_STATE;
      Player player0 = new Player((-1160), "", "", (-1160), 4);
      int int2 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-1160), player0.getPictureId());
      assertEquals(4, int2);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      File file0 = MockFile.createTempFile(">Yph@kqC%qV|,G", "!d'I<`4{fmAE:");
      file0.toPath();
      MockFile mockFile0 = new MockFile("!d'I<`4{fmAE:");
      MockFile mockFile1 = new MockFile("1");
      MockFile mockFile2 = new MockFile("");
      URI uRI0 = mockFile2.toURI();
      mockFile2.deleteOnExit();
      file0.getCanonicalPath();
      MockFile mockFile3 = new MockFile("/tmp/>Yph@kqC%qV|,G0!d'I<`4{fmAE:", "!d'I<`4{fmAE:");
      URI uRI1 = MockURI.parseServerAuthority(uRI0);
      MockURI.toURL(uRI1);
      MockFile mockFile4 = new MockFile("mU;;");
      file0.renameTo(mockFile3);
      MockFile mockFile5 = new MockFile("mU;;", "/tmp/>Yph@kqC%qV|,G0!d'I<`4{fmAE:");
      mockFile4.getCanonicalPath();
      MockFile mockFile6 = new MockFile(uRI0);
      URI uRI2 = mockFile0.toURI();
      file0.getAbsolutePath();
      MockFile mockFile7 = new MockFile(">Yph@kqC%qV|,G");
      mockFile3.mkdirs();
      MockFile mockFile8 = new MockFile(uRI2);
      mockFile2.delete();
      MockURI.toURL(uRI1);
      mockFile3.mkdirs();
      mockFile5.mkdir();
      MockURI.toURL(uRI0);
      MockFile mockFile9 = new MockFile(mockFile0, "mU;;");
      MockFile mockFile10 = new MockFile("");
      Player player0 = new Player();
      Player player1 = new Player((short)4919, "", "", 636, 2);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(636, player1.getPictureId());
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(2, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertTrue(player1.isConnected());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(3715);
      player0.boss = null;
      player0.id = (-1307);
      player0.setJoinOK(player0, true);
      player0.reset(true);
      player0.next = null;
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player0, false);
      Party party0 = new Party(1);
      Party party1 = new Party(1);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Party party0 = new Party((-748));
      File file0 = MockFile.createTempFile("{h.", "");
      MockFile mockFile0 = new MockFile(file0, ".QUagYa");
      mockFile0.getCanonicalFile();
      file0.setExecutable(false);
      MockFile mockFile1 = new MockFile(mockFile0, "{h.");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player0 = new Player(28, "", "{h.", (-578), 4);
      player0.setDead((-1L));
      System.setCurrentTimeMillis(4);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Player player0 = new Player((-1067), "i?q", "i?q", (-1));
      byte[] byteArray0 = new byte[5];
      Party party0 = new Party();
      player0.next = party0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)0;
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-1), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Party party0 = new Party((-748));
      Player player0 = new Player((-748), "", "", (-171), 5);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)106;
      player0.unpack(byteArray0);
      player0.getName();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("gui.ModuleBrowserDialog$ModuleFilter");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = (-3358);
      Player player0 = new Player((-3358), "", 0);
      player0.toString();
      player0.reset(false);
      player0.setZ((-3358));
      player0.getName();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-1067), "i?q", "i?q", (-1067));
      byte[] byteArray0 = new byte[5];
      Party party0 = new Party();
      Party party1 = new Party();
      player0.unpack(byteArray0);
      assertEquals((-1067), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Party party0 = new Party((-748));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_V");
      MockFile mockFile0 = new MockFile("ft^BpEHH-Jj", "ft^BpEHH-Jj");
      MockFile mockFile1 = new MockFile(mockFile0, "ft^BpEHH-Jj");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      Player player0 = new Player(3, "Fb)3ZI2[t^S]", "", 3, (byte) (-79));
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte) (-79);
      player0.unpack(byteArray0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-79), player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("Fb)3ZI2[t^S]", player0.getIP());
      assertEquals(3, player0.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(3, "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-723), 1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)93;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      System.setCurrentTimeMillis((byte)1);
      System.setCurrentTimeMillis((byte) (-118));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 1079);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, player0.getPictureId());
      assertEquals("Player-1", player0.toString());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(977, (String) null, (String) null, 977, 977);
      player0.setMoney(991.122F);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.setX((-359.8389F));
      player0.getPictureId();
      player0.isConnected();
      player0.setMoney((-359.8389F));
      player0.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      dataInputStream0.available();
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        dataInputStream0.read(byteArray0, 5, 977);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(3, "y3!{JJN<`]0?WZ&fo", (-723));
      player0.gangStrength();
      int int0 = player0.getStrength();
      Player player1 = (Player)player0.gangBoss();
      byte[] byteArray0 = new byte[0];
      player1.unpack(byteArray0);
      int int1 = player0.gangStrength();
      assertTrue(int1 == int0);
      assertEquals((-723), player0.getPictureId());
      
      Player player2 = new Player(1);
      int int2 = player2.getPictureId();
      assertFalse(player2.isDead());
      assertEquals(0.0F, player2.getY(), 0.01F);
      assertEquals(10.0F, player2.getX(), 0.01F);
      assertEquals(0L, player2.getTimeOfDeath());
      assertEquals("Player1", player2.toString());
      assertTrue(player2.isConnected());
      assertEquals("0.0.0.0", player2.getIP());
      assertFalse(int2 == int1);
      assertEquals(0, int2);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead(0L, true);
      player0.getTimeOfDeath();
      player0.getTimeOfDeath();
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      File file0 = MockFile.createTempFile(">Ypvh@kq%qv.|,G", "");
      file0.toPath();
      MockFile mockFile0 = new MockFile(file0, "?%a,)-(3=AzNP)4r_z");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "?%a,)-(3=AzNP)4r_z");
      MockFile mockFile1 = new MockFile("1");
      MockFile mockFile2 = new MockFile(">Ypvh@kq%qv.|,G");
      mockFile1.toURI();
      MockFile mockFile3 = new MockFile("1");
      mockFile1.toURI();
      mockFile3.getCanonicalFile();
      mockFile1.getAbsolutePath();
      mockFile3.getAbsolutePath();
      MockFile mockFile4 = new MockFile(">Ypvh@kq%qv.|,G", "");
      MockFile mockFile5 = new MockFile(file0, "?%a,)-(3=AzNP)4r_z");
      MockFile mockFile6 = new MockFile("q:e4uAZU-@qb iH_E'");
      Player player0 = new Player((-520), "", (-520));
      player0.setDead();
      Party party0 = new Party((-1812));
      assertEquals((-1812), party0.getId());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.3017274975238715
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(4);
      Player player1 = new Player((short)4919);
      player0.boss = (Party) player1;
      player0.setX(1.0F);
      player0.getMoney();
      player0.setX((-1609.1971F));
      player0.setMoney(0.0F);
      player0.getX();
      player1.setJoinOK(player0, false);
      player0.setZ((-1662.7F));
      player0.reset(false);
      player0.getIP();
      player0.getStrength();
      player0.getName();
      player1.getTimeOfDeath();
      player1.getSubparty();
      player0.toString();
      player1.getIP();
      player1.setMoney(1.0F);
      player0.gangStrength();
      player0.setY(0.1F);
      boolean boolean0 = player1.isConnected();
      assertEquals(1.0F, player1.getMoney(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Party party0 = new Party((-748));
      Player player0 = new Player((-748), "n}pk?^ZiIxl0", "n}pk?^ZiIxl0", (-748), (-748));
      player0.getIP();
      assertEquals((-748), player0.getStrength());
      assertEquals((-748), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      System.setCurrentTimeMillis(8L);
      Player player0 = new Player(3707, ")4X[`py", (String) null, 3707);
      player0.setJoinOK(player0, true);
      player0.reset(true);
      player0.isJoinOK(player0, false);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis(1193L);
      Player player1 = new Player(3707, ")4X[`py", (String) null, (short)4919, (short)4919);
      player1.head = (Party) player0;
      player0.isJoinOK(player1, false);
      player1.setX((-645.048F));
      int int0 = Packable.ACTION;
      float float0 = player1.getX();
      assertEquals((-645.048F), float0, 0.01F);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_V");
      File file0 = MockFile.createTempFile("state.Party", "");
      MockFile mockFile0 = new MockFile(file0, "1");
      MockFile mockFile1 = new MockFile("1", "");
      URI uRI0 = file0.toURI();
      mockFile1.setReadable(false);
      mockFile1.getCanonicalFile();
      mockFile1.getCanonicalFile();
      MockFile mockFile2 = new MockFile(mockFile1, "");
      file0.mkdir();
      MockFile mockFile3 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile3, false);
      Player player0 = new Player(333);
      Player player1 = new Player((short)4919, "2LQze", "state.Party", 0);
      player0.setJoinOK(player1, true);
      assertEquals(0, player0.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals("Player333", player0.getName());
      assertEquals("2LQze", player1.getIP());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player1.getPictureId());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(3715);
      player0.boss = null;
      player0.setX(0.0F);
      player0.setJoinOK(player0, false);
      player0.next = null;
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player0, false);
      Party party0 = new Party(1);
      Party party1 = new Party(1);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player(977, (String) null, (String) null, 977, 977);
      player0.setMoney(991.122F);
      Party party0 = player0.next;
      player0.add((Party) null);
      player0.setX((-359.8389F));
      player0.getPictureId();
      player0.isConnected();
      player0.setMoney((-359.8389F));
      player0.toString();
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      int int0 = Packable.ACTION;
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        dataInputStream0.read(byteArray0, 5, 977);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Player player0 = new Player((-1067), "i?q", "i?q", (-1));
      byte[] byteArray0 = new byte[5];
      player0.setZ((-1067));
      player0.next = (Party) player0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      player0.setY((-1));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "i?q");
      Player player1 = new Player(506, "bzdaMSWP/", ">*i^", 937, (byte) (-34));
      player0.getZ();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Player player0 = new Player((-748), "zGa#x27W'&]h%{g2", (-748));
      Player player1 = new Player((-748));
      player1.setX(0.2F);
      player1.setY(0.2F);
      player0.isJoinOK(player1, false);
      Party party0 = new Party((-157));
      assertEquals("", party0.toString());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = Packable.GAME_STATE;
      int int1 = Packable.GAME_STATE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-600), "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", 4);
      Player player1 = new Player(5, "gui.ModuleBrowserDialog$ModuleFilter", "gui.ModuleBrowserDialog$ModuleFilter", (-600), 10);
      player1.setY((-600));
      player0.next = (Party) player1;
      assertEquals((-600.0F), player1.getY(), 0.01F);
      
      Player player2 = new Player((-600), "gui.ModuleBrowserDialog$ModuleFilter", 3);
      assertEquals(3, player2.getPictureId());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Party party0 = new Party((-748));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_V");
      File file0 = MockFile.createTempFile("state.Party", "");
      MockFile mockFile0 = new MockFile(file0, "1");
      MockFile mockFile1 = new MockFile("1", "");
      file0.toURI();
      File file1 = mockFile1.getCanonicalFile();
      file0.toURI();
      file1.createNewFile();
      file1.deleteOnExit();
      MockFile mockFile2 = new MockFile(file1, "");
      mockFile0.mkdir();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player0 = new Player((-2295), "{h.", "module.ModuleBrowserDialog$ModuleFilter", 28, 449);
      System.setCurrentTimeMillis(4);
      float float0 = player0.getX();
      assertEquals(28, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("{h.", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(449, player0.getStrength());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = Packable.GAME_STATE;
      Player player0 = new Player();
      player0.id = 3668;
      player0.getName();
      int int1 = Packable.GAME_STATE;
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ona4");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(10, (String) null, (String) null, 10, 1);
      player0.getIP();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      Player player0 = new Player(3715);
      player0.boss = null;
      player0.setMoney(0.0F);
      player0.setJoinOK(player0, false);
      System.setCurrentTimeMillis(15000L);
      player0.isJoinOK(player0, false);
      Party party0 = new Party(1);
      Party party1 = new Party(1);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.0831221229604164
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Player player0 = new Player((-18719), "", " ", (-518), 3356);
      System.setCurrentTimeMillis(15000L);
      Player player1 = new Player((short)4919, "", (-1557));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      player0.reset(false);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(4919);
      pipedInputStream1.mark((-1557));
      Player player2 = new Player((-1), "", 3356);
      Party party0 = player1.prev;
      assertNull(party0);
  }
}
