/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 17:28:59 GMT 2019
 */

package org.jsecurity.authc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.net.InetAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.jsecurity.authc.UsernamePasswordToken;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsernamePasswordToken_ESTest extends UsernamePasswordToken_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object object0 = new Object();
      char[] charArray0 = new char[1];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte) (-26);
      InetAddress inetAddress0 = MockInetAddress.getByAddress("1", byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("g$$!aBw", charArray0, false, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[3];
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      InetAddress inetAddress0 = MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName((String) null);
      MockInetAddress.getByName(")");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("");
      MockInetAddress.getByName("I0[Oj6<qYPE{");
      MockInetAddress.getByName("HW/dx");
      MockInetAddress.getByName((String) null);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, (String) null, inetAddress0);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(",gJhYW0PBD+$Du", (String) null, true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByAddress(", rememberMe=", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", rememberMe=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("#^'OSv%{ZYOoO", byteArray0);
      MockInetAddress.getByName("8+x?$W-D");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", "", inetAddress0);
      usernamePasswordToken0.clear();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", rememberMe=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("?M'{L66w*8z;DG|2", charArray0, true, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'y';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.setUsername("");
      usernamePasswordToken0.getUsername();
      usernamePasswordToken0.getPrincipal();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", remembere=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("}teCrbh");
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("}teCrbh");
      InetAddress inetAddress0 = MockInetAddress.getByName("}teCrbh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("b}u}d_r4qJ)Kd(", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("#^'OSv%{ZYOoO", charArray0, true, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertTrue(usernamePasswordToken0.isRememberMe());
      
      InetAddress inetAddress1 = MockInetAddress.getLocalHost();
      assertFalse(inetAddress1.isLoopbackAddress());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByAddress("", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName(",(nve$_rU");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.getByName("i(8=Tj");
      MockInetAddress.getByName("#2i2");
      MockInetAddress.getByName("#^OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("#^OSv%{ZYOoO");
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress(",(nve$_rU", byteArray0);
      MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("i(8=Tj", charArray0, true, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[11];
      charArray0[0] = '^';
      charArray0[1] = 'G';
      charArray0[2] = 'a';
      charArray0[3] = 'G';
      charArray0[4] = '^';
      charArray0[5] = '5';
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("B0#QP7U~I&s", charArray0);
      usernamePasswordToken0.clear();
      usernamePasswordToken0.clear();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.setUsername("Ab4GHOF~%");
      usernamePasswordToken0.getUsername();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.3802747188776245
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(" - ", " - ");
      usernamePasswordToken0.clear();
      UsernamePasswordToken usernamePasswordToken1 = new UsernamePasswordToken("pLP$", "", true);
      assertTrue(usernamePasswordToken1.isRememberMe());
      
      usernamePasswordToken0.toString();
      char[] charArray0 = new char[1];
      usernamePasswordToken1.clear();
      charArray0[0] = 'g';
      usernamePasswordToken0.setPassword(charArray0);
      usernamePasswordToken0.toString();
      usernamePasswordToken1.clear();
      usernamePasswordToken0.getUsername();
      String string0 = usernamePasswordToken1.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - null, rememberMe=false", string0);
      
      usernamePasswordToken1.clear();
      usernamePasswordToken0.getPassword();
      usernamePasswordToken1.clear();
      usernamePasswordToken1.clear();
      usernamePasswordToken0.clear();
      usernamePasswordToken1.clear();
      assertFalse(usernamePasswordToken1.isRememberMe());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("0bPqt+Dig");
      MockInetAddress.getByAddress("I!+2+nH54.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName((String) null);
      MockInetAddress.getByName("0bPqt+Dig");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("");
      MockInetAddress.getByName("I0[Oj6<qYPE{");
      MockInetAddress.getByName("HW/dx");
      MockInetAddress.getByName("0bPqt+Dig");
      MockInetAddress.getByName("");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getByAddress((String) null, byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("HW/dx", charArray0, false, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByAddress(", rememberMe=", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", rememberMe=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("b}u}d_r4qJ)Kd(", byteArray0);
      MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("[V}{+erL_=hokBq_p", "", false);
      usernamePasswordToken0.getInetAddress();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      InetAddress inetAddress0 = MockInetAddress.getByAddress(", remembere=", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", remembere=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("b}u}d_r4qJ)Kd(", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", charArray0, inetAddress0);
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("RG!K[ZgAewz7VxJD>g", "LjfFgSQjY(_jjox", true);
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.getPassword();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("RG\"K[ZgAewz7VxJD>g", "LjfFgSQjYK_jox", false);
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.getCredentials();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken();
      usernamePasswordToken0.clear();
      Object object9 = new Object();
      assertFalse(object9.equals((Object)object2));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("MEW4I?yU", "MEW4I?yU");
      assertFalse(usernamePasswordToken0.isRememberMe());
      
      usernamePasswordToken0.setRememberMe(true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      char[] charArray0 = new char[5];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("7BWkm|q,0nq<%nB8R#N", "LjfFgSQjY(_jjox", true);
      boolean boolean0 = usernamePasswordToken0.isRememberMe();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByAddress("", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JA`C7rh");
      MockInetAddress.getByName("e7Zb3CSW");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JA`C7rh");
      MockInetAddress.getByName("JA`C7rh");
      MockInetAddress.getByName(")");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getByAddress("", byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", charArray0, false, inetAddress0);
      InetAddress inetAddress1 = MockInetAddress.getByAddress("$FTRnB", byteArray0);
      usernamePasswordToken0.setInetAddress(inetAddress1);
      Object object0 = new Object();
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L669*xz;DG|2");
      MockInetAddress.getByAddress(", remembere=", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", remembere=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L669*xz;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("?M'{L669*xz;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("b}u}d_r4qJ)Kd(", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getByAddress((String) null, byteArray0);
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("[qj%S3o+'wASvOVx=", (String) null, true, inetAddress0);
      usernamePasswordToken0.getInetAddress();
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("`u@*[jURn!", "$", false);
      usernamePasswordToken0.setUsername("");
      Object object8 = new Object();
      assertFalse(object8.equals((Object)object7));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByAddress(", remembere=", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", remembere=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("b}u}d_r4qJ)Kd(", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("m@-W-%Xz.0)ifi('1", ")O", true, inetAddress0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - m@-W-%Xz.0)ifi('1, rememberMe=true (/127.0.0.1)", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(",gJhY[0PBD+$Du", "R:*SX$jUr073Lb");
      usernamePasswordToken0.getPrincipal();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken((String) null, (String) null);
      usernamePasswordToken0.getPrincipal();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("", (char[]) null, true);
      assertTrue(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[3];
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("uYWc>Fg}1", "", false);
      usernamePasswordToken0.getPassword();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L669*xz;DG|2");
      MockInetAddress.getByAddress(", remembere=", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName(", remembere=");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("?M'{L669*xz;DG|2");
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("JAeC7bh");
      MockInetAddress.getByName("#^'OSv%{ZYOoO");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      InetAddress inetAddress0 = MockInetAddress.getByName("");
      MockInetAddress.anyLocalAddress();
      MockInetAddress.getByName("?M'{L669*xz;DG|2");
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      MockInetAddress.getByAddress("b}u}d_r4qJ)Kd(", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getLocalHost();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("aYMq9alH]tbac8aa=0d", charArray0, true, inetAddress0);
      usernamePasswordToken0.clear();
      assertArrayEquals(new char[] {'\u0000', '\u0000'}, charArray0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("ZCKXpG3,c[Nt6D=", "ZCKXpG3,c[Nt6D=");
      usernamePasswordToken0.getCredentials();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("ZbCKXpG3,Kc[Nt6D=", "ZbCKXpG3,Kc[Nt6D=");
      usernamePasswordToken0.getCredentials();
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken(",gJhYW0PBD+$Du", (String) null, false);
      assertFalse(usernamePasswordToken0.isRememberMe());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = '&';
      byte[] byteArray0 = new byte[4];
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLoopbackAddress();
      MockInetAddress.getByName("?M'{L66w*8z;DG|2");
      MockInetAddress.getByAddress("", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.getByName("I!+2+nHR4.*5~e`U;oZ");
      MockInetAddress.anyLocalAddress();
      InetAddress inetAddress0 = MockInetAddress.getByName("JA`C7rh");
      MockInetAddress.getByAddress("I!+2+nHR4.*5~e`U;oZ", byteArray0);
      MockInetAddress.getLocalHost();
      MockInetAddress.getByName("");
      MockInetAddress.getByName("JA`C7rh");
      MockInetAddress.anyLocalAddress();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("NLa7 v%d", "V", false, inetAddress0);
      String string0 = usernamePasswordToken0.toString();
      assertEquals("org.jsecurity.authc.UsernamePasswordToken - NLa7 v%d, rememberMe=false (JA`C7rh/200.42.42.2)", string0);
  }
}
