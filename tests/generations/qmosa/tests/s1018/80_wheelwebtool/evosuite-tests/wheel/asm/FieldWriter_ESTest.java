/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 18:14:28 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 131058;
      ClassWriter classWriter0 = new ClassWriter(131058);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131058, "6.Now9QZ87!m<", "GUI", "", "GUI");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.882577565177012
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(131058);
      classWriter0.index = 131058;
      int int0 = 50;
      classWriter0.version = 1;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-361), "", "6.Now9QZ87!m<", "", "6.Now9QZ87!m<");
      classWriter0.firstField = fieldWriter0;
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      classWriter0.firstField.put(byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0615632381579823
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131096);
      classWriter0.index = 131096;
      classWriter0.version = 8;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-361), "", "6.Now9QZ87!m<", "", "6.Now9QZ87!m<");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131058);
      classWriter0.index = 2;
      classWriter0.version = 50;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-361), "", "6.Now9QZ87!m<", "", "6.Now9QZ87!m<");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(2824);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream2.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 2824);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      pipedOutputStream0.flush();
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.index = 131072;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.CanWriteFileFiltei");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-915), "org.apache.commons.io.filefilter.CanWriteFileFiltei", "org.apache.commons.io.filefilter.CanWriteFileFiltei", "org.apache.commons.io.filefilter.CanWriteFileFiltei", (Object) null);
      String string0 = "RuntimeInvisibleAnnotations";
      String string1 = "";
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 131078, "org.apache.commons.io.filefilter.CanWriteFileFiltei", "RuntimeInvisibleAnnotations", "", "fpt");
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = 131058;
      ClassWriter classWriter0 = new ClassWriter(131058);
      classWriter0.version = 50;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131058, "6.Now9QZ87!m<", "GUI", "", "GUI");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5757361336243871
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131049);
      classWriter0.index = 2;
      classWriter0.version = 56;
      classWriter0.index = (-2444);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-361), "", "6.Now9QZ87!m<", "", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 590, "", "", "", "");
      fieldWriter1.getSize();
      ByteVector byteVector1 = new ByteVector();
      fieldWriter1.visitAnnotation("org.apache.commons.io.IOCase", true);
      Object object0 = new Object();
      FieldWriter fieldWriter2 = null;
      try {
        fieldWriter2 = new FieldWriter(classWriter0, 1, "", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5c6987ea
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5360832172563663
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-8));
      classWriter0.index = (-8);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "org.apache.commons.io.filefilter.CanWriteFileFiltei", "org.apache.commons.io.filefilter.CanWriteFileFiltei", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 0, "org.apache.commons.io.filefilter.CanWriteFileFiltei", "RuntimeInvisibleAnnotations", "", "fpt");
      FieldWriter fieldWriter2 = classWriter0.lastField;
      fieldWriter1.visitAnnotation("RuntimeInvisibleAnnotations", false);
      ByteVector byteVector1 = classWriter0.pool;
      byteVector1.putByte(65535);
      fieldWriter1.put(byteVector1);
      ByteVector byteVector2 = classWriter0.pool;
      fieldWriter1.put(byteVector1);
      fieldWriter2.put(byteVector1);
      fieldWriter2.getSize();
      fieldWriter0.getSize();
      classWriter0.visitAnnotation("", false);
      fieldWriter1.put(byteVector1);
      FieldWriter fieldWriter3 = classWriter0.firstField;
      fieldWriter3.getSize();
      fieldWriter0.put(byteVector0);
      assertSame(fieldWriter0, fieldWriter3);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.cYmmons.io.filefilter.CanWriteFileF\"ltei");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jQ8Pm$|z|vX%B73AV_");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Label offset position has not been resolved yet");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 191, "lebKRuS`e~Gin<-3", "Label offset position has not been resolved yet", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 169, "H7}aJ^", "H7}aJ^", (String) null, "org.apache.commons.io.filefilter.CanWrteFileFiltei");
      ByteVector byteVector0 = classWriter0.pool;
      int int0 = 69;
      byteVector0.length = 69;
      ByteVector byteVector1 = byteVector0.putByte(169);
      fieldWriter0.put(byteVector1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.apache.cYmmons.io.filefilter.CanWriteFileF\"ltei");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "phkR4d' oSp)F?%(T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-35);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)65;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-7), "org.apache.cYmmons.io.filefilter.CanWriteFileF\"ltei", "2MO'*=ZWj/RSKX", "org.apache.cYmmons.io.filefilter.CanWriteFileF\"ltei", (Object) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = new Attribute("");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4636024796585498
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131058);
      classWriter0.index = 2;
      classWriter0.version = 50;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131058, "6.Now9QZ87!m<", "GUI", "", (Object) null);
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector(104);
      ByteVector byteVector1 = byteVector0.put12(0, 25);
      ByteVector byteVector2 = byteVector1.putShort(16);
      ByteVector byteVector3 = byteVector2.putLong(1L);
      Attribute attribute0 = new Attribute("6.Now9QZ87!m<");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector4 = byteVector3.putInt(2);
      ByteVector byteVector5 = byteVector4.putByte(104);
      byteVector4.put12((-2492), 2);
      byteVector5.put12(65175, 57);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 752, "rPR/\"<'?W%", "rPR/\"<'?W%", "k? 2,vNe?ZbX('Up(0g", "rPR/\"<'?W%");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      attribute0.next = attribute0;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte)60;
      byteArray0[5] = (byte)124;
      attribute0.value = byteArray0;
      attribute0.next.value = attribute0.value;
      byteArray0[6] = (byte)11;
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 752, "rPR/\"<'?W%", "rPR/\"<'?W%", "k? 2,vNe?ZbX('Up(0g", "rPR/\"<'?W%");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      fieldWriter0.visitAnnotation(",>DlX:3;l", false);
      attribute0.next = attribute0;
      attribute0.next.value = null;
      attribute0.next.value = null;
      Attribute attribute2 = new Attribute((String) null);
      attribute0.next = attribute2;
      attribute0.next.next = attribute2;
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute3 = attribute0.next.next;
      Attribute attribute4 = attribute3.next;
      attribute3.next = attribute4;
      attribute0.next = attribute3;
      Label label0 = new Label();
      Label label1 = label0.next;
      Attribute attribute5 = attribute3.next.next;
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      classWriter0.version = 11;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-361), "", "6.Now9QZ87!m<", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5149189896175943
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)5;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)5, "S+", "RuntimeInvisibleAnnotations", "The prefix must not be null", (Object) null);
      ByteVector byteVector0 = new ByteVector((byte)5);
      fieldWriter0.put(byteVector0);
      Attribute attribute0 = new Attribute("The prefix must not be null");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.117456111453701
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      String string0 = "? 2ve?ZbX<0'U(0g";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 752, "java/lang/Throwable", "java/lang/Throwable", "? 2ve?ZbX<0'U(0g", "java/lang/Throwable");
      Attribute attribute0 = new Attribute("java/lang/Throwable");
      Attribute attribute1 = attribute0.next;
      attribute0.next = attribute0;
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte) (-109);
      attribute0.next.value = byteArray0;
      attribute0.value = attribute0.next.value;
      attribute0.next.value = attribute0.value;
      boolean boolean0 = true;
      fieldWriter0.visitAnnotation("java/lang/Throwable", true);
      attribute0.value = attribute0.next.value;
      attribute0.next.value = attribute0.value;
      Attribute attribute2 = new Attribute("java/lang/Throwable");
      fieldWriter0.visitAnnotation("ConstantValue", false);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5258538654464564
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item[] itemArray0 = new Item[9];
      ClassWriter classWriter1 = new ClassWriter(0);
      Item item0 = classWriter1.key3;
      itemArray0[0] = item0;
      item0.strVal3 = "aW:;sY:";
      Item item1 = new Item();
      itemArray0[1] = item1;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(2);
      ByteVector byteVector2 = classWriter0.pool;
      fieldWriter0.put(byteVector1);
      ClassWriter classWriter2 = new ClassWriter(1);
      classWriter2.newNameType("", "");
      Object object0 = new Object();
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)5;
      byteArray0[7] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)5, "S+", "RuntimeInvisibleAnnotations", "The prefix must not be null", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 752, "java/lang/Throwabl", "java/lang/Throwabl", "? 2ve?Z$X<0'U5(0g", "java/lang/Throwabl");
      Attribute attribute0 = new Attribute("java/lang/Throwabl");
      Attribute attribute1 = attribute0.next;
      attribute0.next = attribute0;
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)58;
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte) (-107);
      attribute0.next.value = byteArray0;
      attribute0.value = attribute0.next.value;
      attribute0.next.value = attribute0.value;
      byteArray0[1] = (byte)21;
      attribute0.value = attribute0.next.value;
      attribute0.next.value = attribute0.value;
      Attribute attribute2 = new Attribute("java/lang/Throwabl");
      attribute0.next = attribute2;
      attribute2.next = attribute0;
      attribute0.next.next = attribute0.next;
      attribute0.next.value = attribute0.value;
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute3 = attribute0.next.next.next;
      Attribute attribute4 = new Attribute("java/lang/Throwabl");
      attribute2.next = attribute0;
      attribute3.next = attribute4;
      attribute4.next = attribute0.next.next;
      attribute0.next = attribute3;
      attribute4.value = attribute0.next.value;
      Attribute attribute5 = attribute0.next.next.next;
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8647337539567728
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt(1719);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-125);
      byteVector1.put11(16777219, 16777219);
      byteVector0.putInt(254);
      byteArray0[1] = (byte)9;
      byteVector1.data = byteArray0;
      ClassWriter classWriter0 = new ClassWriter(253);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-125), "", "X+Tx.(d{nw}`", "1wvLeM1<yj%3Ln", "e)z8");
      ByteVector byteVector2 = new ByteVector();
      ByteVector byteVector3 = byteVector2.putInt((-1));
      byteVector2.put11(253, 1701);
      byteVector3.putInt(1);
      fieldWriter0.put(byteVector3);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 732, "", "", "", "");
      Attribute attribute0 = new Attribute((String) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(732);
      fieldWriter0.put(byteVector1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1132);
      PipedInputStream pipedInputStream1 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 732, "", "StackMap", "", "StackMap");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("vhqC. ^F");
      Attribute attribute2 = attribute1.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(369);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 732, "", "", "", "");
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = new Attribute("");
      Attribute attribute2 = attribute1.next;
      Attribute attribute3 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute3);
      assertNotSame(attribute3, attribute0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClass("");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-879), "", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131058);
      String string0 = "? 2ve?Z$X<0'U5(0g";
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 16777228, "", (String) null, "1,9dj=b{mgl\"'", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
